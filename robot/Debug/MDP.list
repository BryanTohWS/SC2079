
MDP.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000111a0  08000190  08000190  00010190  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001160  08011330  08011330  00021330  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08012490  08012490  000301e8  2**0
                  CONTENTS
  4 .ARM          00000008  08012490  08012490  00022490  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08012498  08012498  000301e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08012498  08012498  00022498  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0801249c  0801249c  0002249c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001e8  20000000  080124a0  00030000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000301e8  2**0
                  CONTENTS
 10 .bss          00000948  200001e8  200001e8  000301e8  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000b30  20000b30  000301e8  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000301e8  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  00030218  2**0
                  CONTENTS, READONLY
 14 .debug_info   00018066  00000000  00000000  0003025b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 00003bc5  00000000  00000000  000482c1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00001598  00000000  00000000  0004be88  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 000010cd  00000000  00000000  0004d420  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00026420  00000000  00000000  0004e4ed  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   0001c35c  00000000  00000000  0007490d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    000dff10  00000000  00000000  00090c69  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  000074a8  00000000  00000000  00170b7c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000054  00000000  00000000  00178024  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	200001e8 	.word	0x200001e8
 80001ac:	00000000 	.word	0x00000000
 80001b0:	08011318 	.word	0x08011318

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	.word	0x00000000
 80001c8:	200001ec 	.word	0x200001ec
 80001cc:	08011318 	.word	0x08011318

080001d0 <memchr>:
 80001d0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001d4:	2a10      	cmp	r2, #16
 80001d6:	db2b      	blt.n	8000230 <memchr+0x60>
 80001d8:	f010 0f07 	tst.w	r0, #7
 80001dc:	d008      	beq.n	80001f0 <memchr+0x20>
 80001de:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001e2:	3a01      	subs	r2, #1
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d02d      	beq.n	8000244 <memchr+0x74>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	b342      	cbz	r2, 8000240 <memchr+0x70>
 80001ee:	d1f6      	bne.n	80001de <memchr+0xe>
 80001f0:	b4f0      	push	{r4, r5, r6, r7}
 80001f2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 80001f6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 80001fa:	f022 0407 	bic.w	r4, r2, #7
 80001fe:	f07f 0700 	mvns.w	r7, #0
 8000202:	2300      	movs	r3, #0
 8000204:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000208:	3c08      	subs	r4, #8
 800020a:	ea85 0501 	eor.w	r5, r5, r1
 800020e:	ea86 0601 	eor.w	r6, r6, r1
 8000212:	fa85 f547 	uadd8	r5, r5, r7
 8000216:	faa3 f587 	sel	r5, r3, r7
 800021a:	fa86 f647 	uadd8	r6, r6, r7
 800021e:	faa5 f687 	sel	r6, r5, r7
 8000222:	b98e      	cbnz	r6, 8000248 <memchr+0x78>
 8000224:	d1ee      	bne.n	8000204 <memchr+0x34>
 8000226:	bcf0      	pop	{r4, r5, r6, r7}
 8000228:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800022c:	f002 0207 	and.w	r2, r2, #7
 8000230:	b132      	cbz	r2, 8000240 <memchr+0x70>
 8000232:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000236:	3a01      	subs	r2, #1
 8000238:	ea83 0301 	eor.w	r3, r3, r1
 800023c:	b113      	cbz	r3, 8000244 <memchr+0x74>
 800023e:	d1f8      	bne.n	8000232 <memchr+0x62>
 8000240:	2000      	movs	r0, #0
 8000242:	4770      	bx	lr
 8000244:	3801      	subs	r0, #1
 8000246:	4770      	bx	lr
 8000248:	2d00      	cmp	r5, #0
 800024a:	bf06      	itte	eq
 800024c:	4635      	moveq	r5, r6
 800024e:	3803      	subeq	r0, #3
 8000250:	3807      	subne	r0, #7
 8000252:	f015 0f01 	tst.w	r5, #1
 8000256:	d107      	bne.n	8000268 <memchr+0x98>
 8000258:	3001      	adds	r0, #1
 800025a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800025e:	bf02      	ittt	eq
 8000260:	3001      	addeq	r0, #1
 8000262:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000266:	3001      	addeq	r0, #1
 8000268:	bcf0      	pop	{r4, r5, r6, r7}
 800026a:	3801      	subs	r0, #1
 800026c:	4770      	bx	lr
 800026e:	bf00      	nop

08000270 <strlen>:
 8000270:	4603      	mov	r3, r0
 8000272:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000276:	2a00      	cmp	r2, #0
 8000278:	d1fb      	bne.n	8000272 <strlen+0x2>
 800027a:	1a18      	subs	r0, r3, r0
 800027c:	3801      	subs	r0, #1
 800027e:	4770      	bx	lr

08000280 <__aeabi_drsub>:
 8000280:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000284:	e002      	b.n	800028c <__adddf3>
 8000286:	bf00      	nop

08000288 <__aeabi_dsub>:
 8000288:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800028c <__adddf3>:
 800028c:	b530      	push	{r4, r5, lr}
 800028e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000292:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000296:	ea94 0f05 	teq	r4, r5
 800029a:	bf08      	it	eq
 800029c:	ea90 0f02 	teqeq	r0, r2
 80002a0:	bf1f      	itttt	ne
 80002a2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002a6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002aa:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ae:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002b2:	f000 80e2 	beq.w	800047a <__adddf3+0x1ee>
 80002b6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ba:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002be:	bfb8      	it	lt
 80002c0:	426d      	neglt	r5, r5
 80002c2:	dd0c      	ble.n	80002de <__adddf3+0x52>
 80002c4:	442c      	add	r4, r5
 80002c6:	ea80 0202 	eor.w	r2, r0, r2
 80002ca:	ea81 0303 	eor.w	r3, r1, r3
 80002ce:	ea82 0000 	eor.w	r0, r2, r0
 80002d2:	ea83 0101 	eor.w	r1, r3, r1
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	2d36      	cmp	r5, #54	; 0x36
 80002e0:	bf88      	it	hi
 80002e2:	bd30      	pophi	{r4, r5, pc}
 80002e4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002ec:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002f0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002f4:	d002      	beq.n	80002fc <__adddf3+0x70>
 80002f6:	4240      	negs	r0, r0
 80002f8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002fc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000300:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000304:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000308:	d002      	beq.n	8000310 <__adddf3+0x84>
 800030a:	4252      	negs	r2, r2
 800030c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000310:	ea94 0f05 	teq	r4, r5
 8000314:	f000 80a7 	beq.w	8000466 <__adddf3+0x1da>
 8000318:	f1a4 0401 	sub.w	r4, r4, #1
 800031c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000320:	db0d      	blt.n	800033e <__adddf3+0xb2>
 8000322:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000326:	fa22 f205 	lsr.w	r2, r2, r5
 800032a:	1880      	adds	r0, r0, r2
 800032c:	f141 0100 	adc.w	r1, r1, #0
 8000330:	fa03 f20e 	lsl.w	r2, r3, lr
 8000334:	1880      	adds	r0, r0, r2
 8000336:	fa43 f305 	asr.w	r3, r3, r5
 800033a:	4159      	adcs	r1, r3
 800033c:	e00e      	b.n	800035c <__adddf3+0xd0>
 800033e:	f1a5 0520 	sub.w	r5, r5, #32
 8000342:	f10e 0e20 	add.w	lr, lr, #32
 8000346:	2a01      	cmp	r2, #1
 8000348:	fa03 fc0e 	lsl.w	ip, r3, lr
 800034c:	bf28      	it	cs
 800034e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000352:	fa43 f305 	asr.w	r3, r3, r5
 8000356:	18c0      	adds	r0, r0, r3
 8000358:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800035c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000360:	d507      	bpl.n	8000372 <__adddf3+0xe6>
 8000362:	f04f 0e00 	mov.w	lr, #0
 8000366:	f1dc 0c00 	rsbs	ip, ip, #0
 800036a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800036e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000372:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000376:	d31b      	bcc.n	80003b0 <__adddf3+0x124>
 8000378:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800037c:	d30c      	bcc.n	8000398 <__adddf3+0x10c>
 800037e:	0849      	lsrs	r1, r1, #1
 8000380:	ea5f 0030 	movs.w	r0, r0, rrx
 8000384:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000388:	f104 0401 	add.w	r4, r4, #1
 800038c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000390:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000394:	f080 809a 	bcs.w	80004cc <__adddf3+0x240>
 8000398:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800039c:	bf08      	it	eq
 800039e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003a2:	f150 0000 	adcs.w	r0, r0, #0
 80003a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003aa:	ea41 0105 	orr.w	r1, r1, r5
 80003ae:	bd30      	pop	{r4, r5, pc}
 80003b0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003b4:	4140      	adcs	r0, r0
 80003b6:	eb41 0101 	adc.w	r1, r1, r1
 80003ba:	3c01      	subs	r4, #1
 80003bc:	bf28      	it	cs
 80003be:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003c2:	d2e9      	bcs.n	8000398 <__adddf3+0x10c>
 80003c4:	f091 0f00 	teq	r1, #0
 80003c8:	bf04      	itt	eq
 80003ca:	4601      	moveq	r1, r0
 80003cc:	2000      	moveq	r0, #0
 80003ce:	fab1 f381 	clz	r3, r1
 80003d2:	bf08      	it	eq
 80003d4:	3320      	addeq	r3, #32
 80003d6:	f1a3 030b 	sub.w	r3, r3, #11
 80003da:	f1b3 0220 	subs.w	r2, r3, #32
 80003de:	da0c      	bge.n	80003fa <__adddf3+0x16e>
 80003e0:	320c      	adds	r2, #12
 80003e2:	dd08      	ble.n	80003f6 <__adddf3+0x16a>
 80003e4:	f102 0c14 	add.w	ip, r2, #20
 80003e8:	f1c2 020c 	rsb	r2, r2, #12
 80003ec:	fa01 f00c 	lsl.w	r0, r1, ip
 80003f0:	fa21 f102 	lsr.w	r1, r1, r2
 80003f4:	e00c      	b.n	8000410 <__adddf3+0x184>
 80003f6:	f102 0214 	add.w	r2, r2, #20
 80003fa:	bfd8      	it	le
 80003fc:	f1c2 0c20 	rsble	ip, r2, #32
 8000400:	fa01 f102 	lsl.w	r1, r1, r2
 8000404:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000408:	bfdc      	itt	le
 800040a:	ea41 010c 	orrle.w	r1, r1, ip
 800040e:	4090      	lslle	r0, r2
 8000410:	1ae4      	subs	r4, r4, r3
 8000412:	bfa2      	ittt	ge
 8000414:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000418:	4329      	orrge	r1, r5
 800041a:	bd30      	popge	{r4, r5, pc}
 800041c:	ea6f 0404 	mvn.w	r4, r4
 8000420:	3c1f      	subs	r4, #31
 8000422:	da1c      	bge.n	800045e <__adddf3+0x1d2>
 8000424:	340c      	adds	r4, #12
 8000426:	dc0e      	bgt.n	8000446 <__adddf3+0x1ba>
 8000428:	f104 0414 	add.w	r4, r4, #20
 800042c:	f1c4 0220 	rsb	r2, r4, #32
 8000430:	fa20 f004 	lsr.w	r0, r0, r4
 8000434:	fa01 f302 	lsl.w	r3, r1, r2
 8000438:	ea40 0003 	orr.w	r0, r0, r3
 800043c:	fa21 f304 	lsr.w	r3, r1, r4
 8000440:	ea45 0103 	orr.w	r1, r5, r3
 8000444:	bd30      	pop	{r4, r5, pc}
 8000446:	f1c4 040c 	rsb	r4, r4, #12
 800044a:	f1c4 0220 	rsb	r2, r4, #32
 800044e:	fa20 f002 	lsr.w	r0, r0, r2
 8000452:	fa01 f304 	lsl.w	r3, r1, r4
 8000456:	ea40 0003 	orr.w	r0, r0, r3
 800045a:	4629      	mov	r1, r5
 800045c:	bd30      	pop	{r4, r5, pc}
 800045e:	fa21 f004 	lsr.w	r0, r1, r4
 8000462:	4629      	mov	r1, r5
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f094 0f00 	teq	r4, #0
 800046a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800046e:	bf06      	itte	eq
 8000470:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000474:	3401      	addeq	r4, #1
 8000476:	3d01      	subne	r5, #1
 8000478:	e74e      	b.n	8000318 <__adddf3+0x8c>
 800047a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800047e:	bf18      	it	ne
 8000480:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000484:	d029      	beq.n	80004da <__adddf3+0x24e>
 8000486:	ea94 0f05 	teq	r4, r5
 800048a:	bf08      	it	eq
 800048c:	ea90 0f02 	teqeq	r0, r2
 8000490:	d005      	beq.n	800049e <__adddf3+0x212>
 8000492:	ea54 0c00 	orrs.w	ip, r4, r0
 8000496:	bf04      	itt	eq
 8000498:	4619      	moveq	r1, r3
 800049a:	4610      	moveq	r0, r2
 800049c:	bd30      	pop	{r4, r5, pc}
 800049e:	ea91 0f03 	teq	r1, r3
 80004a2:	bf1e      	ittt	ne
 80004a4:	2100      	movne	r1, #0
 80004a6:	2000      	movne	r0, #0
 80004a8:	bd30      	popne	{r4, r5, pc}
 80004aa:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ae:	d105      	bne.n	80004bc <__adddf3+0x230>
 80004b0:	0040      	lsls	r0, r0, #1
 80004b2:	4149      	adcs	r1, r1
 80004b4:	bf28      	it	cs
 80004b6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ba:	bd30      	pop	{r4, r5, pc}
 80004bc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004c0:	bf3c      	itt	cc
 80004c2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004c6:	bd30      	popcc	{r4, r5, pc}
 80004c8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004cc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004d0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004d4:	f04f 0000 	mov.w	r0, #0
 80004d8:	bd30      	pop	{r4, r5, pc}
 80004da:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004de:	bf1a      	itte	ne
 80004e0:	4619      	movne	r1, r3
 80004e2:	4610      	movne	r0, r2
 80004e4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004e8:	bf1c      	itt	ne
 80004ea:	460b      	movne	r3, r1
 80004ec:	4602      	movne	r2, r0
 80004ee:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004f2:	bf06      	itte	eq
 80004f4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004f8:	ea91 0f03 	teqeq	r1, r3
 80004fc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000500:	bd30      	pop	{r4, r5, pc}
 8000502:	bf00      	nop

08000504 <__aeabi_ui2d>:
 8000504:	f090 0f00 	teq	r0, #0
 8000508:	bf04      	itt	eq
 800050a:	2100      	moveq	r1, #0
 800050c:	4770      	bxeq	lr
 800050e:	b530      	push	{r4, r5, lr}
 8000510:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000514:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000518:	f04f 0500 	mov.w	r5, #0
 800051c:	f04f 0100 	mov.w	r1, #0
 8000520:	e750      	b.n	80003c4 <__adddf3+0x138>
 8000522:	bf00      	nop

08000524 <__aeabi_i2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800053c:	bf48      	it	mi
 800053e:	4240      	negmi	r0, r0
 8000540:	f04f 0100 	mov.w	r1, #0
 8000544:	e73e      	b.n	80003c4 <__adddf3+0x138>
 8000546:	bf00      	nop

08000548 <__aeabi_f2d>:
 8000548:	0042      	lsls	r2, r0, #1
 800054a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800054e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000552:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000556:	bf1f      	itttt	ne
 8000558:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800055c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000560:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000564:	4770      	bxne	lr
 8000566:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800056a:	bf08      	it	eq
 800056c:	4770      	bxeq	lr
 800056e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000572:	bf04      	itt	eq
 8000574:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000578:	4770      	bxeq	lr
 800057a:	b530      	push	{r4, r5, lr}
 800057c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000580:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000584:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000588:	e71c      	b.n	80003c4 <__adddf3+0x138>
 800058a:	bf00      	nop

0800058c <__aeabi_ul2d>:
 800058c:	ea50 0201 	orrs.w	r2, r0, r1
 8000590:	bf08      	it	eq
 8000592:	4770      	bxeq	lr
 8000594:	b530      	push	{r4, r5, lr}
 8000596:	f04f 0500 	mov.w	r5, #0
 800059a:	e00a      	b.n	80005b2 <__aeabi_l2d+0x16>

0800059c <__aeabi_l2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005aa:	d502      	bpl.n	80005b2 <__aeabi_l2d+0x16>
 80005ac:	4240      	negs	r0, r0
 80005ae:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005b2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005b6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ba:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005be:	f43f aed8 	beq.w	8000372 <__adddf3+0xe6>
 80005c2:	f04f 0203 	mov.w	r2, #3
 80005c6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ca:	bf18      	it	ne
 80005cc:	3203      	addne	r2, #3
 80005ce:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005d2:	bf18      	it	ne
 80005d4:	3203      	addne	r2, #3
 80005d6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005da:	f1c2 0320 	rsb	r3, r2, #32
 80005de:	fa00 fc03 	lsl.w	ip, r0, r3
 80005e2:	fa20 f002 	lsr.w	r0, r0, r2
 80005e6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005ea:	ea40 000e 	orr.w	r0, r0, lr
 80005ee:	fa21 f102 	lsr.w	r1, r1, r2
 80005f2:	4414      	add	r4, r2
 80005f4:	e6bd      	b.n	8000372 <__adddf3+0xe6>
 80005f6:	bf00      	nop

080005f8 <__aeabi_dmul>:
 80005f8:	b570      	push	{r4, r5, r6, lr}
 80005fa:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005fe:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000602:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000606:	bf1d      	ittte	ne
 8000608:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800060c:	ea94 0f0c 	teqne	r4, ip
 8000610:	ea95 0f0c 	teqne	r5, ip
 8000614:	f000 f8de 	bleq	80007d4 <__aeabi_dmul+0x1dc>
 8000618:	442c      	add	r4, r5
 800061a:	ea81 0603 	eor.w	r6, r1, r3
 800061e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000622:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000626:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800062a:	bf18      	it	ne
 800062c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000630:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000634:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000638:	d038      	beq.n	80006ac <__aeabi_dmul+0xb4>
 800063a:	fba0 ce02 	umull	ip, lr, r0, r2
 800063e:	f04f 0500 	mov.w	r5, #0
 8000642:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000646:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800064a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800064e:	f04f 0600 	mov.w	r6, #0
 8000652:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000656:	f09c 0f00 	teq	ip, #0
 800065a:	bf18      	it	ne
 800065c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000660:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000664:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000668:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800066c:	d204      	bcs.n	8000678 <__aeabi_dmul+0x80>
 800066e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000672:	416d      	adcs	r5, r5
 8000674:	eb46 0606 	adc.w	r6, r6, r6
 8000678:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800067c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000680:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000684:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000688:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800068c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000690:	bf88      	it	hi
 8000692:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000696:	d81e      	bhi.n	80006d6 <__aeabi_dmul+0xde>
 8000698:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800069c:	bf08      	it	eq
 800069e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006a2:	f150 0000 	adcs.w	r0, r0, #0
 80006a6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006aa:	bd70      	pop	{r4, r5, r6, pc}
 80006ac:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006b0:	ea46 0101 	orr.w	r1, r6, r1
 80006b4:	ea40 0002 	orr.w	r0, r0, r2
 80006b8:	ea81 0103 	eor.w	r1, r1, r3
 80006bc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006c0:	bfc2      	ittt	gt
 80006c2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006c6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	popgt	{r4, r5, r6, pc}
 80006cc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006d0:	f04f 0e00 	mov.w	lr, #0
 80006d4:	3c01      	subs	r4, #1
 80006d6:	f300 80ab 	bgt.w	8000830 <__aeabi_dmul+0x238>
 80006da:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006de:	bfde      	ittt	le
 80006e0:	2000      	movle	r0, #0
 80006e2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006e6:	bd70      	pople	{r4, r5, r6, pc}
 80006e8:	f1c4 0400 	rsb	r4, r4, #0
 80006ec:	3c20      	subs	r4, #32
 80006ee:	da35      	bge.n	800075c <__aeabi_dmul+0x164>
 80006f0:	340c      	adds	r4, #12
 80006f2:	dc1b      	bgt.n	800072c <__aeabi_dmul+0x134>
 80006f4:	f104 0414 	add.w	r4, r4, #20
 80006f8:	f1c4 0520 	rsb	r5, r4, #32
 80006fc:	fa00 f305 	lsl.w	r3, r0, r5
 8000700:	fa20 f004 	lsr.w	r0, r0, r4
 8000704:	fa01 f205 	lsl.w	r2, r1, r5
 8000708:	ea40 0002 	orr.w	r0, r0, r2
 800070c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000710:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000714:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000718:	fa21 f604 	lsr.w	r6, r1, r4
 800071c:	eb42 0106 	adc.w	r1, r2, r6
 8000720:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000724:	bf08      	it	eq
 8000726:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800072a:	bd70      	pop	{r4, r5, r6, pc}
 800072c:	f1c4 040c 	rsb	r4, r4, #12
 8000730:	f1c4 0520 	rsb	r5, r4, #32
 8000734:	fa00 f304 	lsl.w	r3, r0, r4
 8000738:	fa20 f005 	lsr.w	r0, r0, r5
 800073c:	fa01 f204 	lsl.w	r2, r1, r4
 8000740:	ea40 0002 	orr.w	r0, r0, r2
 8000744:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000748:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800074c:	f141 0100 	adc.w	r1, r1, #0
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 0520 	rsb	r5, r4, #32
 8000760:	fa00 f205 	lsl.w	r2, r0, r5
 8000764:	ea4e 0e02 	orr.w	lr, lr, r2
 8000768:	fa20 f304 	lsr.w	r3, r0, r4
 800076c:	fa01 f205 	lsl.w	r2, r1, r5
 8000770:	ea43 0302 	orr.w	r3, r3, r2
 8000774:	fa21 f004 	lsr.w	r0, r1, r4
 8000778:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800077c:	fa21 f204 	lsr.w	r2, r1, r4
 8000780:	ea20 0002 	bic.w	r0, r0, r2
 8000784:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000788:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800078c:	bf08      	it	eq
 800078e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000792:	bd70      	pop	{r4, r5, r6, pc}
 8000794:	f094 0f00 	teq	r4, #0
 8000798:	d10f      	bne.n	80007ba <__aeabi_dmul+0x1c2>
 800079a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800079e:	0040      	lsls	r0, r0, #1
 80007a0:	eb41 0101 	adc.w	r1, r1, r1
 80007a4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007a8:	bf08      	it	eq
 80007aa:	3c01      	subeq	r4, #1
 80007ac:	d0f7      	beq.n	800079e <__aeabi_dmul+0x1a6>
 80007ae:	ea41 0106 	orr.w	r1, r1, r6
 80007b2:	f095 0f00 	teq	r5, #0
 80007b6:	bf18      	it	ne
 80007b8:	4770      	bxne	lr
 80007ba:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007be:	0052      	lsls	r2, r2, #1
 80007c0:	eb43 0303 	adc.w	r3, r3, r3
 80007c4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3d01      	subeq	r5, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1c6>
 80007ce:	ea43 0306 	orr.w	r3, r3, r6
 80007d2:	4770      	bx	lr
 80007d4:	ea94 0f0c 	teq	r4, ip
 80007d8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007dc:	bf18      	it	ne
 80007de:	ea95 0f0c 	teqne	r5, ip
 80007e2:	d00c      	beq.n	80007fe <__aeabi_dmul+0x206>
 80007e4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007e8:	bf18      	it	ne
 80007ea:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007ee:	d1d1      	bne.n	8000794 <__aeabi_dmul+0x19c>
 80007f0:	ea81 0103 	eor.w	r1, r1, r3
 80007f4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007f8:	f04f 0000 	mov.w	r0, #0
 80007fc:	bd70      	pop	{r4, r5, r6, pc}
 80007fe:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000802:	bf06      	itte	eq
 8000804:	4610      	moveq	r0, r2
 8000806:	4619      	moveq	r1, r3
 8000808:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080c:	d019      	beq.n	8000842 <__aeabi_dmul+0x24a>
 800080e:	ea94 0f0c 	teq	r4, ip
 8000812:	d102      	bne.n	800081a <__aeabi_dmul+0x222>
 8000814:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000818:	d113      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800081a:	ea95 0f0c 	teq	r5, ip
 800081e:	d105      	bne.n	800082c <__aeabi_dmul+0x234>
 8000820:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000824:	bf1c      	itt	ne
 8000826:	4610      	movne	r0, r2
 8000828:	4619      	movne	r1, r3
 800082a:	d10a      	bne.n	8000842 <__aeabi_dmul+0x24a>
 800082c:	ea81 0103 	eor.w	r1, r1, r3
 8000830:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000834:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000838:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800083c:	f04f 0000 	mov.w	r0, #0
 8000840:	bd70      	pop	{r4, r5, r6, pc}
 8000842:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000846:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800084a:	bd70      	pop	{r4, r5, r6, pc}

0800084c <__aeabi_ddiv>:
 800084c:	b570      	push	{r4, r5, r6, lr}
 800084e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000852:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000856:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800085a:	bf1d      	ittte	ne
 800085c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000860:	ea94 0f0c 	teqne	r4, ip
 8000864:	ea95 0f0c 	teqne	r5, ip
 8000868:	f000 f8a7 	bleq	80009ba <__aeabi_ddiv+0x16e>
 800086c:	eba4 0405 	sub.w	r4, r4, r5
 8000870:	ea81 0e03 	eor.w	lr, r1, r3
 8000874:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000878:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800087c:	f000 8088 	beq.w	8000990 <__aeabi_ddiv+0x144>
 8000880:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000884:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000888:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800088c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000890:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000894:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000898:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800089c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008a0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008a4:	429d      	cmp	r5, r3
 80008a6:	bf08      	it	eq
 80008a8:	4296      	cmpeq	r6, r2
 80008aa:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ae:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008b2:	d202      	bcs.n	80008ba <__aeabi_ddiv+0x6e>
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	1ab6      	subs	r6, r6, r2
 80008bc:	eb65 0503 	sbc.w	r5, r5, r3
 80008c0:	085b      	lsrs	r3, r3, #1
 80008c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008c6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ca:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 000c 	orrcs.w	r0, r0, ip
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ea:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008ee:	bf22      	ittt	cs
 80008f0:	1ab6      	subcs	r6, r6, r2
 80008f2:	4675      	movcs	r5, lr
 80008f4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008f8:	085b      	lsrs	r3, r3, #1
 80008fa:	ea4f 0232 	mov.w	r2, r2, rrx
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000928:	ea55 0e06 	orrs.w	lr, r5, r6
 800092c:	d018      	beq.n	8000960 <__aeabi_ddiv+0x114>
 800092e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000932:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000936:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800093a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800093e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000942:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000946:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800094a:	d1c0      	bne.n	80008ce <__aeabi_ddiv+0x82>
 800094c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000950:	d10b      	bne.n	800096a <__aeabi_ddiv+0x11e>
 8000952:	ea41 0100 	orr.w	r1, r1, r0
 8000956:	f04f 0000 	mov.w	r0, #0
 800095a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800095e:	e7b6      	b.n	80008ce <__aeabi_ddiv+0x82>
 8000960:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000964:	bf04      	itt	eq
 8000966:	4301      	orreq	r1, r0
 8000968:	2000      	moveq	r0, #0
 800096a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800096e:	bf88      	it	hi
 8000970:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000974:	f63f aeaf 	bhi.w	80006d6 <__aeabi_dmul+0xde>
 8000978:	ebb5 0c03 	subs.w	ip, r5, r3
 800097c:	bf04      	itt	eq
 800097e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000982:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000986:	f150 0000 	adcs.w	r0, r0, #0
 800098a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800098e:	bd70      	pop	{r4, r5, r6, pc}
 8000990:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000994:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000998:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800099c:	bfc2      	ittt	gt
 800099e:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009a2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009a6:	bd70      	popgt	{r4, r5, r6, pc}
 80009a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009ac:	f04f 0e00 	mov.w	lr, #0
 80009b0:	3c01      	subs	r4, #1
 80009b2:	e690      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009b4:	ea45 0e06 	orr.w	lr, r5, r6
 80009b8:	e68d      	b.n	80006d6 <__aeabi_dmul+0xde>
 80009ba:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009be:	ea94 0f0c 	teq	r4, ip
 80009c2:	bf08      	it	eq
 80009c4:	ea95 0f0c 	teqeq	r5, ip
 80009c8:	f43f af3b 	beq.w	8000842 <__aeabi_dmul+0x24a>
 80009cc:	ea94 0f0c 	teq	r4, ip
 80009d0:	d10a      	bne.n	80009e8 <__aeabi_ddiv+0x19c>
 80009d2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009d6:	f47f af34 	bne.w	8000842 <__aeabi_dmul+0x24a>
 80009da:	ea95 0f0c 	teq	r5, ip
 80009de:	f47f af25 	bne.w	800082c <__aeabi_dmul+0x234>
 80009e2:	4610      	mov	r0, r2
 80009e4:	4619      	mov	r1, r3
 80009e6:	e72c      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009e8:	ea95 0f0c 	teq	r5, ip
 80009ec:	d106      	bne.n	80009fc <__aeabi_ddiv+0x1b0>
 80009ee:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009f2:	f43f aefd 	beq.w	80007f0 <__aeabi_dmul+0x1f8>
 80009f6:	4610      	mov	r0, r2
 80009f8:	4619      	mov	r1, r3
 80009fa:	e722      	b.n	8000842 <__aeabi_dmul+0x24a>
 80009fc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a00:	bf18      	it	ne
 8000a02:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a06:	f47f aec5 	bne.w	8000794 <__aeabi_dmul+0x19c>
 8000a0a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a0e:	f47f af0d 	bne.w	800082c <__aeabi_dmul+0x234>
 8000a12:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a16:	f47f aeeb 	bne.w	80007f0 <__aeabi_dmul+0x1f8>
 8000a1a:	e712      	b.n	8000842 <__aeabi_dmul+0x24a>

08000a1c <__gedf2>:
 8000a1c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a20:	e006      	b.n	8000a30 <__cmpdf2+0x4>
 8000a22:	bf00      	nop

08000a24 <__ledf2>:
 8000a24:	f04f 0c01 	mov.w	ip, #1
 8000a28:	e002      	b.n	8000a30 <__cmpdf2+0x4>
 8000a2a:	bf00      	nop

08000a2c <__cmpdf2>:
 8000a2c:	f04f 0c01 	mov.w	ip, #1
 8000a30:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a34:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a40:	bf18      	it	ne
 8000a42:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a46:	d01b      	beq.n	8000a80 <__cmpdf2+0x54>
 8000a48:	b001      	add	sp, #4
 8000a4a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a4e:	bf0c      	ite	eq
 8000a50:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a54:	ea91 0f03 	teqne	r1, r3
 8000a58:	bf02      	ittt	eq
 8000a5a:	ea90 0f02 	teqeq	r0, r2
 8000a5e:	2000      	moveq	r0, #0
 8000a60:	4770      	bxeq	lr
 8000a62:	f110 0f00 	cmn.w	r0, #0
 8000a66:	ea91 0f03 	teq	r1, r3
 8000a6a:	bf58      	it	pl
 8000a6c:	4299      	cmppl	r1, r3
 8000a6e:	bf08      	it	eq
 8000a70:	4290      	cmpeq	r0, r2
 8000a72:	bf2c      	ite	cs
 8000a74:	17d8      	asrcs	r0, r3, #31
 8000a76:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a7a:	f040 0001 	orr.w	r0, r0, #1
 8000a7e:	4770      	bx	lr
 8000a80:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a84:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a88:	d102      	bne.n	8000a90 <__cmpdf2+0x64>
 8000a8a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a8e:	d107      	bne.n	8000aa0 <__cmpdf2+0x74>
 8000a90:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d1d6      	bne.n	8000a48 <__cmpdf2+0x1c>
 8000a9a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a9e:	d0d3      	beq.n	8000a48 <__cmpdf2+0x1c>
 8000aa0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000aa4:	4770      	bx	lr
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_cdrcmple>:
 8000aa8:	4684      	mov	ip, r0
 8000aaa:	4610      	mov	r0, r2
 8000aac:	4662      	mov	r2, ip
 8000aae:	468c      	mov	ip, r1
 8000ab0:	4619      	mov	r1, r3
 8000ab2:	4663      	mov	r3, ip
 8000ab4:	e000      	b.n	8000ab8 <__aeabi_cdcmpeq>
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdcmpeq>:
 8000ab8:	b501      	push	{r0, lr}
 8000aba:	f7ff ffb7 	bl	8000a2c <__cmpdf2>
 8000abe:	2800      	cmp	r0, #0
 8000ac0:	bf48      	it	mi
 8000ac2:	f110 0f00 	cmnmi.w	r0, #0
 8000ac6:	bd01      	pop	{r0, pc}

08000ac8 <__aeabi_dcmpeq>:
 8000ac8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000acc:	f7ff fff4 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ad0:	bf0c      	ite	eq
 8000ad2:	2001      	moveq	r0, #1
 8000ad4:	2000      	movne	r0, #0
 8000ad6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ada:	bf00      	nop

08000adc <__aeabi_dcmplt>:
 8000adc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ae0:	f7ff ffea 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000ae4:	bf34      	ite	cc
 8000ae6:	2001      	movcc	r0, #1
 8000ae8:	2000      	movcs	r0, #0
 8000aea:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aee:	bf00      	nop

08000af0 <__aeabi_dcmple>:
 8000af0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af4:	f7ff ffe0 	bl	8000ab8 <__aeabi_cdcmpeq>
 8000af8:	bf94      	ite	ls
 8000afa:	2001      	movls	r0, #1
 8000afc:	2000      	movhi	r0, #0
 8000afe:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b02:	bf00      	nop

08000b04 <__aeabi_dcmpge>:
 8000b04:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b08:	f7ff ffce 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b0c:	bf94      	ite	ls
 8000b0e:	2001      	movls	r0, #1
 8000b10:	2000      	movhi	r0, #0
 8000b12:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b16:	bf00      	nop

08000b18 <__aeabi_dcmpgt>:
 8000b18:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b1c:	f7ff ffc4 	bl	8000aa8 <__aeabi_cdrcmple>
 8000b20:	bf34      	ite	cc
 8000b22:	2001      	movcc	r0, #1
 8000b24:	2000      	movcs	r0, #0
 8000b26:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b2a:	bf00      	nop

08000b2c <__aeabi_dcmpun>:
 8000b2c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b30:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b34:	d102      	bne.n	8000b3c <__aeabi_dcmpun+0x10>
 8000b36:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b3a:	d10a      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b3c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x20>
 8000b46:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b4a:	d102      	bne.n	8000b52 <__aeabi_dcmpun+0x26>
 8000b4c:	f04f 0000 	mov.w	r0, #0
 8000b50:	4770      	bx	lr
 8000b52:	f04f 0001 	mov.w	r0, #1
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_d2iz>:
 8000b58:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b5c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b60:	d215      	bcs.n	8000b8e <__aeabi_d2iz+0x36>
 8000b62:	d511      	bpl.n	8000b88 <__aeabi_d2iz+0x30>
 8000b64:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b68:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b6c:	d912      	bls.n	8000b94 <__aeabi_d2iz+0x3c>
 8000b6e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b72:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b76:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b7a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b7e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b82:	bf18      	it	ne
 8000b84:	4240      	negne	r0, r0
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d105      	bne.n	8000ba0 <__aeabi_d2iz+0x48>
 8000b94:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000b98:	bf08      	it	eq
 8000b9a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000b9e:	4770      	bx	lr
 8000ba0:	f04f 0000 	mov.w	r0, #0
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop

08000ba8 <__aeabi_d2uiz>:
 8000ba8:	004a      	lsls	r2, r1, #1
 8000baa:	d211      	bcs.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bac:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bb0:	d211      	bcs.n	8000bd6 <__aeabi_d2uiz+0x2e>
 8000bb2:	d50d      	bpl.n	8000bd0 <__aeabi_d2uiz+0x28>
 8000bb4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bb8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bbc:	d40e      	bmi.n	8000bdc <__aeabi_d2uiz+0x34>
 8000bbe:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bc2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bc6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bca:	fa23 f002 	lsr.w	r0, r3, r2
 8000bce:	4770      	bx	lr
 8000bd0:	f04f 0000 	mov.w	r0, #0
 8000bd4:	4770      	bx	lr
 8000bd6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bda:	d102      	bne.n	8000be2 <__aeabi_d2uiz+0x3a>
 8000bdc:	f04f 30ff 	mov.w	r0, #4294967295
 8000be0:	4770      	bx	lr
 8000be2:	f04f 0000 	mov.w	r0, #0
 8000be6:	4770      	bx	lr

08000be8 <__aeabi_d2f>:
 8000be8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bec:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000bf0:	bf24      	itt	cs
 8000bf2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000bf6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000bfa:	d90d      	bls.n	8000c18 <__aeabi_d2f+0x30>
 8000bfc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c00:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c04:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c08:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c0c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c10:	bf08      	it	eq
 8000c12:	f020 0001 	biceq.w	r0, r0, #1
 8000c16:	4770      	bx	lr
 8000c18:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c1c:	d121      	bne.n	8000c62 <__aeabi_d2f+0x7a>
 8000c1e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c22:	bfbc      	itt	lt
 8000c24:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c28:	4770      	bxlt	lr
 8000c2a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c2e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c32:	f1c2 0218 	rsb	r2, r2, #24
 8000c36:	f1c2 0c20 	rsb	ip, r2, #32
 8000c3a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c3e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c42:	bf18      	it	ne
 8000c44:	f040 0001 	orrne.w	r0, r0, #1
 8000c48:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c4c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c50:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c54:	ea40 000c 	orr.w	r0, r0, ip
 8000c58:	fa23 f302 	lsr.w	r3, r3, r2
 8000c5c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c60:	e7cc      	b.n	8000bfc <__aeabi_d2f+0x14>
 8000c62:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c66:	d107      	bne.n	8000c78 <__aeabi_d2f+0x90>
 8000c68:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c6c:	bf1e      	ittt	ne
 8000c6e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c72:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c76:	4770      	bxne	lr
 8000c78:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c7c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c80:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c84:	4770      	bx	lr
 8000c86:	bf00      	nop

08000c88 <__aeabi_uldivmod>:
 8000c88:	b953      	cbnz	r3, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8a:	b94a      	cbnz	r2, 8000ca0 <__aeabi_uldivmod+0x18>
 8000c8c:	2900      	cmp	r1, #0
 8000c8e:	bf08      	it	eq
 8000c90:	2800      	cmpeq	r0, #0
 8000c92:	bf1c      	itt	ne
 8000c94:	f04f 31ff 	movne.w	r1, #4294967295
 8000c98:	f04f 30ff 	movne.w	r0, #4294967295
 8000c9c:	f000 b9a6 	b.w	8000fec <__aeabi_idiv0>
 8000ca0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ca4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000ca8:	f000 f83c 	bl	8000d24 <__udivmoddi4>
 8000cac:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cb0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cb4:	b004      	add	sp, #16
 8000cb6:	4770      	bx	lr

08000cb8 <__aeabi_d2lz>:
 8000cb8:	b538      	push	{r3, r4, r5, lr}
 8000cba:	2200      	movs	r2, #0
 8000cbc:	2300      	movs	r3, #0
 8000cbe:	4604      	mov	r4, r0
 8000cc0:	460d      	mov	r5, r1
 8000cc2:	f7ff ff0b 	bl	8000adc <__aeabi_dcmplt>
 8000cc6:	b928      	cbnz	r0, 8000cd4 <__aeabi_d2lz+0x1c>
 8000cc8:	4620      	mov	r0, r4
 8000cca:	4629      	mov	r1, r5
 8000ccc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000cd0:	f000 b80a 	b.w	8000ce8 <__aeabi_d2ulz>
 8000cd4:	4620      	mov	r0, r4
 8000cd6:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
 8000cda:	f000 f805 	bl	8000ce8 <__aeabi_d2ulz>
 8000cde:	4240      	negs	r0, r0
 8000ce0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000ce4:	bd38      	pop	{r3, r4, r5, pc}
 8000ce6:	bf00      	nop

08000ce8 <__aeabi_d2ulz>:
 8000ce8:	b5d0      	push	{r4, r6, r7, lr}
 8000cea:	4b0c      	ldr	r3, [pc, #48]	; (8000d1c <__aeabi_d2ulz+0x34>)
 8000cec:	2200      	movs	r2, #0
 8000cee:	4606      	mov	r6, r0
 8000cf0:	460f      	mov	r7, r1
 8000cf2:	f7ff fc81 	bl	80005f8 <__aeabi_dmul>
 8000cf6:	f7ff ff57 	bl	8000ba8 <__aeabi_d2uiz>
 8000cfa:	4604      	mov	r4, r0
 8000cfc:	f7ff fc02 	bl	8000504 <__aeabi_ui2d>
 8000d00:	4b07      	ldr	r3, [pc, #28]	; (8000d20 <__aeabi_d2ulz+0x38>)
 8000d02:	2200      	movs	r2, #0
 8000d04:	f7ff fc78 	bl	80005f8 <__aeabi_dmul>
 8000d08:	4602      	mov	r2, r0
 8000d0a:	460b      	mov	r3, r1
 8000d0c:	4630      	mov	r0, r6
 8000d0e:	4639      	mov	r1, r7
 8000d10:	f7ff faba 	bl	8000288 <__aeabi_dsub>
 8000d14:	f7ff ff48 	bl	8000ba8 <__aeabi_d2uiz>
 8000d18:	4621      	mov	r1, r4
 8000d1a:	bdd0      	pop	{r4, r6, r7, pc}
 8000d1c:	3df00000 	.word	0x3df00000
 8000d20:	41f00000 	.word	0x41f00000

08000d24 <__udivmoddi4>:
 8000d24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d28:	9e08      	ldr	r6, [sp, #32]
 8000d2a:	460d      	mov	r5, r1
 8000d2c:	4604      	mov	r4, r0
 8000d2e:	460f      	mov	r7, r1
 8000d30:	2b00      	cmp	r3, #0
 8000d32:	d14a      	bne.n	8000dca <__udivmoddi4+0xa6>
 8000d34:	428a      	cmp	r2, r1
 8000d36:	4694      	mov	ip, r2
 8000d38:	d965      	bls.n	8000e06 <__udivmoddi4+0xe2>
 8000d3a:	fab2 f382 	clz	r3, r2
 8000d3e:	b143      	cbz	r3, 8000d52 <__udivmoddi4+0x2e>
 8000d40:	fa02 fc03 	lsl.w	ip, r2, r3
 8000d44:	f1c3 0220 	rsb	r2, r3, #32
 8000d48:	409f      	lsls	r7, r3
 8000d4a:	fa20 f202 	lsr.w	r2, r0, r2
 8000d4e:	4317      	orrs	r7, r2
 8000d50:	409c      	lsls	r4, r3
 8000d52:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000d56:	fa1f f58c 	uxth.w	r5, ip
 8000d5a:	fbb7 f1fe 	udiv	r1, r7, lr
 8000d5e:	0c22      	lsrs	r2, r4, #16
 8000d60:	fb0e 7711 	mls	r7, lr, r1, r7
 8000d64:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000d68:	fb01 f005 	mul.w	r0, r1, r5
 8000d6c:	4290      	cmp	r0, r2
 8000d6e:	d90a      	bls.n	8000d86 <__udivmoddi4+0x62>
 8000d70:	eb1c 0202 	adds.w	r2, ip, r2
 8000d74:	f101 37ff 	add.w	r7, r1, #4294967295
 8000d78:	f080 811c 	bcs.w	8000fb4 <__udivmoddi4+0x290>
 8000d7c:	4290      	cmp	r0, r2
 8000d7e:	f240 8119 	bls.w	8000fb4 <__udivmoddi4+0x290>
 8000d82:	3902      	subs	r1, #2
 8000d84:	4462      	add	r2, ip
 8000d86:	1a12      	subs	r2, r2, r0
 8000d88:	b2a4      	uxth	r4, r4
 8000d8a:	fbb2 f0fe 	udiv	r0, r2, lr
 8000d8e:	fb0e 2210 	mls	r2, lr, r0, r2
 8000d92:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000d96:	fb00 f505 	mul.w	r5, r0, r5
 8000d9a:	42a5      	cmp	r5, r4
 8000d9c:	d90a      	bls.n	8000db4 <__udivmoddi4+0x90>
 8000d9e:	eb1c 0404 	adds.w	r4, ip, r4
 8000da2:	f100 32ff 	add.w	r2, r0, #4294967295
 8000da6:	f080 8107 	bcs.w	8000fb8 <__udivmoddi4+0x294>
 8000daa:	42a5      	cmp	r5, r4
 8000dac:	f240 8104 	bls.w	8000fb8 <__udivmoddi4+0x294>
 8000db0:	4464      	add	r4, ip
 8000db2:	3802      	subs	r0, #2
 8000db4:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000db8:	1b64      	subs	r4, r4, r5
 8000dba:	2100      	movs	r1, #0
 8000dbc:	b11e      	cbz	r6, 8000dc6 <__udivmoddi4+0xa2>
 8000dbe:	40dc      	lsrs	r4, r3
 8000dc0:	2300      	movs	r3, #0
 8000dc2:	e9c6 4300 	strd	r4, r3, [r6]
 8000dc6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dca:	428b      	cmp	r3, r1
 8000dcc:	d908      	bls.n	8000de0 <__udivmoddi4+0xbc>
 8000dce:	2e00      	cmp	r6, #0
 8000dd0:	f000 80ed 	beq.w	8000fae <__udivmoddi4+0x28a>
 8000dd4:	2100      	movs	r1, #0
 8000dd6:	e9c6 0500 	strd	r0, r5, [r6]
 8000dda:	4608      	mov	r0, r1
 8000ddc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000de0:	fab3 f183 	clz	r1, r3
 8000de4:	2900      	cmp	r1, #0
 8000de6:	d149      	bne.n	8000e7c <__udivmoddi4+0x158>
 8000de8:	42ab      	cmp	r3, r5
 8000dea:	d302      	bcc.n	8000df2 <__udivmoddi4+0xce>
 8000dec:	4282      	cmp	r2, r0
 8000dee:	f200 80f8 	bhi.w	8000fe2 <__udivmoddi4+0x2be>
 8000df2:	1a84      	subs	r4, r0, r2
 8000df4:	eb65 0203 	sbc.w	r2, r5, r3
 8000df8:	2001      	movs	r0, #1
 8000dfa:	4617      	mov	r7, r2
 8000dfc:	2e00      	cmp	r6, #0
 8000dfe:	d0e2      	beq.n	8000dc6 <__udivmoddi4+0xa2>
 8000e00:	e9c6 4700 	strd	r4, r7, [r6]
 8000e04:	e7df      	b.n	8000dc6 <__udivmoddi4+0xa2>
 8000e06:	b902      	cbnz	r2, 8000e0a <__udivmoddi4+0xe6>
 8000e08:	deff      	udf	#255	; 0xff
 8000e0a:	fab2 f382 	clz	r3, r2
 8000e0e:	2b00      	cmp	r3, #0
 8000e10:	f040 8090 	bne.w	8000f34 <__udivmoddi4+0x210>
 8000e14:	1a8a      	subs	r2, r1, r2
 8000e16:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000e1a:	fa1f fe8c 	uxth.w	lr, ip
 8000e1e:	2101      	movs	r1, #1
 8000e20:	fbb2 f5f7 	udiv	r5, r2, r7
 8000e24:	fb07 2015 	mls	r0, r7, r5, r2
 8000e28:	0c22      	lsrs	r2, r4, #16
 8000e2a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000e2e:	fb0e f005 	mul.w	r0, lr, r5
 8000e32:	4290      	cmp	r0, r2
 8000e34:	d908      	bls.n	8000e48 <__udivmoddi4+0x124>
 8000e36:	eb1c 0202 	adds.w	r2, ip, r2
 8000e3a:	f105 38ff 	add.w	r8, r5, #4294967295
 8000e3e:	d202      	bcs.n	8000e46 <__udivmoddi4+0x122>
 8000e40:	4290      	cmp	r0, r2
 8000e42:	f200 80cb 	bhi.w	8000fdc <__udivmoddi4+0x2b8>
 8000e46:	4645      	mov	r5, r8
 8000e48:	1a12      	subs	r2, r2, r0
 8000e4a:	b2a4      	uxth	r4, r4
 8000e4c:	fbb2 f0f7 	udiv	r0, r2, r7
 8000e50:	fb07 2210 	mls	r2, r7, r0, r2
 8000e54:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000e58:	fb0e fe00 	mul.w	lr, lr, r0
 8000e5c:	45a6      	cmp	lr, r4
 8000e5e:	d908      	bls.n	8000e72 <__udivmoddi4+0x14e>
 8000e60:	eb1c 0404 	adds.w	r4, ip, r4
 8000e64:	f100 32ff 	add.w	r2, r0, #4294967295
 8000e68:	d202      	bcs.n	8000e70 <__udivmoddi4+0x14c>
 8000e6a:	45a6      	cmp	lr, r4
 8000e6c:	f200 80bb 	bhi.w	8000fe6 <__udivmoddi4+0x2c2>
 8000e70:	4610      	mov	r0, r2
 8000e72:	eba4 040e 	sub.w	r4, r4, lr
 8000e76:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000e7a:	e79f      	b.n	8000dbc <__udivmoddi4+0x98>
 8000e7c:	f1c1 0720 	rsb	r7, r1, #32
 8000e80:	408b      	lsls	r3, r1
 8000e82:	fa22 fc07 	lsr.w	ip, r2, r7
 8000e86:	ea4c 0c03 	orr.w	ip, ip, r3
 8000e8a:	fa05 f401 	lsl.w	r4, r5, r1
 8000e8e:	fa20 f307 	lsr.w	r3, r0, r7
 8000e92:	40fd      	lsrs	r5, r7
 8000e94:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000e98:	4323      	orrs	r3, r4
 8000e9a:	fbb5 f8f9 	udiv	r8, r5, r9
 8000e9e:	fa1f fe8c 	uxth.w	lr, ip
 8000ea2:	fb09 5518 	mls	r5, r9, r8, r5
 8000ea6:	0c1c      	lsrs	r4, r3, #16
 8000ea8:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000eac:	fb08 f50e 	mul.w	r5, r8, lr
 8000eb0:	42a5      	cmp	r5, r4
 8000eb2:	fa02 f201 	lsl.w	r2, r2, r1
 8000eb6:	fa00 f001 	lsl.w	r0, r0, r1
 8000eba:	d90b      	bls.n	8000ed4 <__udivmoddi4+0x1b0>
 8000ebc:	eb1c 0404 	adds.w	r4, ip, r4
 8000ec0:	f108 3aff 	add.w	sl, r8, #4294967295
 8000ec4:	f080 8088 	bcs.w	8000fd8 <__udivmoddi4+0x2b4>
 8000ec8:	42a5      	cmp	r5, r4
 8000eca:	f240 8085 	bls.w	8000fd8 <__udivmoddi4+0x2b4>
 8000ece:	f1a8 0802 	sub.w	r8, r8, #2
 8000ed2:	4464      	add	r4, ip
 8000ed4:	1b64      	subs	r4, r4, r5
 8000ed6:	b29d      	uxth	r5, r3
 8000ed8:	fbb4 f3f9 	udiv	r3, r4, r9
 8000edc:	fb09 4413 	mls	r4, r9, r3, r4
 8000ee0:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000ee4:	fb03 fe0e 	mul.w	lr, r3, lr
 8000ee8:	45a6      	cmp	lr, r4
 8000eea:	d908      	bls.n	8000efe <__udivmoddi4+0x1da>
 8000eec:	eb1c 0404 	adds.w	r4, ip, r4
 8000ef0:	f103 35ff 	add.w	r5, r3, #4294967295
 8000ef4:	d26c      	bcs.n	8000fd0 <__udivmoddi4+0x2ac>
 8000ef6:	45a6      	cmp	lr, r4
 8000ef8:	d96a      	bls.n	8000fd0 <__udivmoddi4+0x2ac>
 8000efa:	3b02      	subs	r3, #2
 8000efc:	4464      	add	r4, ip
 8000efe:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000f02:	fba3 9502 	umull	r9, r5, r3, r2
 8000f06:	eba4 040e 	sub.w	r4, r4, lr
 8000f0a:	42ac      	cmp	r4, r5
 8000f0c:	46c8      	mov	r8, r9
 8000f0e:	46ae      	mov	lr, r5
 8000f10:	d356      	bcc.n	8000fc0 <__udivmoddi4+0x29c>
 8000f12:	d053      	beq.n	8000fbc <__udivmoddi4+0x298>
 8000f14:	b156      	cbz	r6, 8000f2c <__udivmoddi4+0x208>
 8000f16:	ebb0 0208 	subs.w	r2, r0, r8
 8000f1a:	eb64 040e 	sbc.w	r4, r4, lr
 8000f1e:	fa04 f707 	lsl.w	r7, r4, r7
 8000f22:	40ca      	lsrs	r2, r1
 8000f24:	40cc      	lsrs	r4, r1
 8000f26:	4317      	orrs	r7, r2
 8000f28:	e9c6 7400 	strd	r7, r4, [r6]
 8000f2c:	4618      	mov	r0, r3
 8000f2e:	2100      	movs	r1, #0
 8000f30:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f34:	f1c3 0120 	rsb	r1, r3, #32
 8000f38:	fa02 fc03 	lsl.w	ip, r2, r3
 8000f3c:	fa20 f201 	lsr.w	r2, r0, r1
 8000f40:	fa25 f101 	lsr.w	r1, r5, r1
 8000f44:	409d      	lsls	r5, r3
 8000f46:	432a      	orrs	r2, r5
 8000f48:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000f4c:	fa1f fe8c 	uxth.w	lr, ip
 8000f50:	fbb1 f0f7 	udiv	r0, r1, r7
 8000f54:	fb07 1510 	mls	r5, r7, r0, r1
 8000f58:	0c11      	lsrs	r1, r2, #16
 8000f5a:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000f5e:	fb00 f50e 	mul.w	r5, r0, lr
 8000f62:	428d      	cmp	r5, r1
 8000f64:	fa04 f403 	lsl.w	r4, r4, r3
 8000f68:	d908      	bls.n	8000f7c <__udivmoddi4+0x258>
 8000f6a:	eb1c 0101 	adds.w	r1, ip, r1
 8000f6e:	f100 38ff 	add.w	r8, r0, #4294967295
 8000f72:	d22f      	bcs.n	8000fd4 <__udivmoddi4+0x2b0>
 8000f74:	428d      	cmp	r5, r1
 8000f76:	d92d      	bls.n	8000fd4 <__udivmoddi4+0x2b0>
 8000f78:	3802      	subs	r0, #2
 8000f7a:	4461      	add	r1, ip
 8000f7c:	1b49      	subs	r1, r1, r5
 8000f7e:	b292      	uxth	r2, r2
 8000f80:	fbb1 f5f7 	udiv	r5, r1, r7
 8000f84:	fb07 1115 	mls	r1, r7, r5, r1
 8000f88:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000f8c:	fb05 f10e 	mul.w	r1, r5, lr
 8000f90:	4291      	cmp	r1, r2
 8000f92:	d908      	bls.n	8000fa6 <__udivmoddi4+0x282>
 8000f94:	eb1c 0202 	adds.w	r2, ip, r2
 8000f98:	f105 38ff 	add.w	r8, r5, #4294967295
 8000f9c:	d216      	bcs.n	8000fcc <__udivmoddi4+0x2a8>
 8000f9e:	4291      	cmp	r1, r2
 8000fa0:	d914      	bls.n	8000fcc <__udivmoddi4+0x2a8>
 8000fa2:	3d02      	subs	r5, #2
 8000fa4:	4462      	add	r2, ip
 8000fa6:	1a52      	subs	r2, r2, r1
 8000fa8:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000fac:	e738      	b.n	8000e20 <__udivmoddi4+0xfc>
 8000fae:	4631      	mov	r1, r6
 8000fb0:	4630      	mov	r0, r6
 8000fb2:	e708      	b.n	8000dc6 <__udivmoddi4+0xa2>
 8000fb4:	4639      	mov	r1, r7
 8000fb6:	e6e6      	b.n	8000d86 <__udivmoddi4+0x62>
 8000fb8:	4610      	mov	r0, r2
 8000fba:	e6fb      	b.n	8000db4 <__udivmoddi4+0x90>
 8000fbc:	4548      	cmp	r0, r9
 8000fbe:	d2a9      	bcs.n	8000f14 <__udivmoddi4+0x1f0>
 8000fc0:	ebb9 0802 	subs.w	r8, r9, r2
 8000fc4:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000fc8:	3b01      	subs	r3, #1
 8000fca:	e7a3      	b.n	8000f14 <__udivmoddi4+0x1f0>
 8000fcc:	4645      	mov	r5, r8
 8000fce:	e7ea      	b.n	8000fa6 <__udivmoddi4+0x282>
 8000fd0:	462b      	mov	r3, r5
 8000fd2:	e794      	b.n	8000efe <__udivmoddi4+0x1da>
 8000fd4:	4640      	mov	r0, r8
 8000fd6:	e7d1      	b.n	8000f7c <__udivmoddi4+0x258>
 8000fd8:	46d0      	mov	r8, sl
 8000fda:	e77b      	b.n	8000ed4 <__udivmoddi4+0x1b0>
 8000fdc:	3d02      	subs	r5, #2
 8000fde:	4462      	add	r2, ip
 8000fe0:	e732      	b.n	8000e48 <__udivmoddi4+0x124>
 8000fe2:	4608      	mov	r0, r1
 8000fe4:	e70a      	b.n	8000dfc <__udivmoddi4+0xd8>
 8000fe6:	4464      	add	r4, ip
 8000fe8:	3802      	subs	r0, #2
 8000fea:	e742      	b.n	8000e72 <__udivmoddi4+0x14e>

08000fec <__aeabi_idiv0>:
 8000fec:	4770      	bx	lr
 8000fee:	bf00      	nop

08000ff0 <_ICM20948_SelectUserBank>:

#include "ICM20948.h"

HAL_StatusTypeDef _ICM20948_SelectUserBank(I2C_HandleTypeDef * hi2c, uint8_t const selectI2cAddress, int userBankNum) {
 8000ff0:	b580      	push	{r7, lr}
 8000ff2:	b08a      	sub	sp, #40	; 0x28
 8000ff4:	af04      	add	r7, sp, #16
 8000ff6:	60f8      	str	r0, [r7, #12]
 8000ff8:	460b      	mov	r3, r1
 8000ffa:	607a      	str	r2, [r7, #4]
 8000ffc:	72fb      	strb	r3, [r7, #11]
	HAL_StatusTypeDef status = HAL_OK;
 8000ffe:	2300      	movs	r3, #0
 8001000:	75fb      	strb	r3, [r7, #23]
	uint8_t writeData = userBankNum << BIT_4;
 8001002:	687b      	ldr	r3, [r7, #4]
 8001004:	b2db      	uxtb	r3, r3
 8001006:	011b      	lsls	r3, r3, #4
 8001008:	b2db      	uxtb	r3, r3
 800100a:	757b      	strb	r3, [r7, #21]
	uint8_t deviceI2CAddress = (selectI2cAddress == 0)? ICM20948__I2C_SLAVE_ADDRESS_1: ICM20948__I2C_SLAVE_ADDRESS_2;
 800100c:	7afb      	ldrb	r3, [r7, #11]
 800100e:	2b00      	cmp	r3, #0
 8001010:	d101      	bne.n	8001016 <_ICM20948_SelectUserBank+0x26>
 8001012:	2368      	movs	r3, #104	; 0x68
 8001014:	e000      	b.n	8001018 <_ICM20948_SelectUserBank+0x28>
 8001016:	2369      	movs	r3, #105	; 0x69
 8001018:	75bb      	strb	r3, [r7, #22]

	status = HAL_I2C_Mem_Write(
 800101a:	7dbb      	ldrb	r3, [r7, #22]
 800101c:	b29b      	uxth	r3, r3
 800101e:	005b      	lsls	r3, r3, #1
 8001020:	b299      	uxth	r1, r3
 8001022:	230a      	movs	r3, #10
 8001024:	9302      	str	r3, [sp, #8]
 8001026:	2301      	movs	r3, #1
 8001028:	9301      	str	r3, [sp, #4]
 800102a:	f107 0315 	add.w	r3, r7, #21
 800102e:	9300      	str	r3, [sp, #0]
 8001030:	2301      	movs	r3, #1
 8001032:	227f      	movs	r2, #127	; 0x7f
 8001034:	68f8      	ldr	r0, [r7, #12]
 8001036:	f005 f817 	bl	8006068 <HAL_I2C_Mem_Write>
 800103a:	4603      	mov	r3, r0
 800103c:	75fb      	strb	r3, [r7, #23]
			I2C_MEMADD_SIZE_8BIT,
			&writeData,
			I2C_MEMADD_SIZE_8BIT,
			10);

	return status;
 800103e:	7dfb      	ldrb	r3, [r7, #23]
}
 8001040:	4618      	mov	r0, r3
 8001042:	3718      	adds	r7, #24
 8001044:	46bd      	mov	sp, r7
 8001046:	bd80      	pop	{r7, pc}

08001048 <_ICM20948_WriteByte>:

HAL_StatusTypeDef _ICM20948_WriteByte(I2C_HandleTypeDef * hi2c, uint8_t const selectI2cAddress, uint8_t const registerAddress, uint8_t writeData) {
 8001048:	b580      	push	{r7, lr}
 800104a:	b088      	sub	sp, #32
 800104c:	af04      	add	r7, sp, #16
 800104e:	6078      	str	r0, [r7, #4]
 8001050:	4608      	mov	r0, r1
 8001052:	4611      	mov	r1, r2
 8001054:	461a      	mov	r2, r3
 8001056:	4603      	mov	r3, r0
 8001058:	70fb      	strb	r3, [r7, #3]
 800105a:	460b      	mov	r3, r1
 800105c:	70bb      	strb	r3, [r7, #2]
 800105e:	4613      	mov	r3, r2
 8001060:	707b      	strb	r3, [r7, #1]
	HAL_StatusTypeDef status = HAL_OK;
 8001062:	2300      	movs	r3, #0
 8001064:	73fb      	strb	r3, [r7, #15]
	uint8_t deviceI2CAddress = (selectI2cAddress == 0)? ICM20948__I2C_SLAVE_ADDRESS_1: ICM20948__I2C_SLAVE_ADDRESS_2;
 8001066:	78fb      	ldrb	r3, [r7, #3]
 8001068:	2b00      	cmp	r3, #0
 800106a:	d101      	bne.n	8001070 <_ICM20948_WriteByte+0x28>
 800106c:	2368      	movs	r3, #104	; 0x68
 800106e:	e000      	b.n	8001072 <_ICM20948_WriteByte+0x2a>
 8001070:	2369      	movs	r3, #105	; 0x69
 8001072:	73bb      	strb	r3, [r7, #14]

	status = HAL_I2C_Mem_Write(
 8001074:	7bbb      	ldrb	r3, [r7, #14]
 8001076:	b29b      	uxth	r3, r3
 8001078:	005b      	lsls	r3, r3, #1
 800107a:	b299      	uxth	r1, r3
 800107c:	78bb      	ldrb	r3, [r7, #2]
 800107e:	b29a      	uxth	r2, r3
 8001080:	230a      	movs	r3, #10
 8001082:	9302      	str	r3, [sp, #8]
 8001084:	2301      	movs	r3, #1
 8001086:	9301      	str	r3, [sp, #4]
 8001088:	1c7b      	adds	r3, r7, #1
 800108a:	9300      	str	r3, [sp, #0]
 800108c:	2301      	movs	r3, #1
 800108e:	6878      	ldr	r0, [r7, #4]
 8001090:	f004 ffea 	bl	8006068 <HAL_I2C_Mem_Write>
 8001094:	4603      	mov	r3, r0
 8001096:	73fb      	strb	r3, [r7, #15]
			I2C_MEMADD_SIZE_8BIT,
			&writeData,
			I2C_MEMADD_SIZE_8BIT,
			10);

	return status;
 8001098:	7bfb      	ldrb	r3, [r7, #15]
}
 800109a:	4618      	mov	r0, r3
 800109c:	3710      	adds	r7, #16
 800109e:	46bd      	mov	sp, r7
 80010a0:	bd80      	pop	{r7, pc}

080010a2 <_ICM20948_BrustRead>:
			10);

	return status;
}

HAL_StatusTypeDef _ICM20948_BrustRead(I2C_HandleTypeDef * hi2c, uint8_t const selectI2cAddress, uint8_t const startAddress, uint16_t const amountOfRegistersToRead, uint8_t * readData) {
 80010a2:	b580      	push	{r7, lr}
 80010a4:	b088      	sub	sp, #32
 80010a6:	af04      	add	r7, sp, #16
 80010a8:	6078      	str	r0, [r7, #4]
 80010aa:	4608      	mov	r0, r1
 80010ac:	4611      	mov	r1, r2
 80010ae:	461a      	mov	r2, r3
 80010b0:	4603      	mov	r3, r0
 80010b2:	70fb      	strb	r3, [r7, #3]
 80010b4:	460b      	mov	r3, r1
 80010b6:	70bb      	strb	r3, [r7, #2]
 80010b8:	4613      	mov	r3, r2
 80010ba:	803b      	strh	r3, [r7, #0]
	HAL_StatusTypeDef status = HAL_OK;
 80010bc:	2300      	movs	r3, #0
 80010be:	73fb      	strb	r3, [r7, #15]
	uint8_t deviceI2CAddress = (selectI2cAddress == 0)? ICM20948__I2C_SLAVE_ADDRESS_1: ICM20948__I2C_SLAVE_ADDRESS_2;
 80010c0:	78fb      	ldrb	r3, [r7, #3]
 80010c2:	2b00      	cmp	r3, #0
 80010c4:	d101      	bne.n	80010ca <_ICM20948_BrustRead+0x28>
 80010c6:	2368      	movs	r3, #104	; 0x68
 80010c8:	e000      	b.n	80010cc <_ICM20948_BrustRead+0x2a>
 80010ca:	2369      	movs	r3, #105	; 0x69
 80010cc:	73bb      	strb	r3, [r7, #14]

	status = HAL_I2C_Mem_Read(
 80010ce:	7bbb      	ldrb	r3, [r7, #14]
 80010d0:	b29b      	uxth	r3, r3
 80010d2:	005b      	lsls	r3, r3, #1
 80010d4:	b299      	uxth	r1, r3
 80010d6:	78bb      	ldrb	r3, [r7, #2]
 80010d8:	b29a      	uxth	r2, r3
 80010da:	230a      	movs	r3, #10
 80010dc:	9302      	str	r3, [sp, #8]
 80010de:	883b      	ldrh	r3, [r7, #0]
 80010e0:	9301      	str	r3, [sp, #4]
 80010e2:	69bb      	ldr	r3, [r7, #24]
 80010e4:	9300      	str	r3, [sp, #0]
 80010e6:	2301      	movs	r3, #1
 80010e8:	6878      	ldr	r0, [r7, #4]
 80010ea:	f005 f8b7 	bl	800625c <HAL_I2C_Mem_Read>
 80010ee:	4603      	mov	r3, r0
 80010f0:	73fb      	strb	r3, [r7, #15]
			I2C_MEMADD_SIZE_8BIT,
			readData,
			amountOfRegistersToRead * I2C_MEMADD_SIZE_8BIT,
			10);

	return status;
 80010f2:	7bfb      	ldrb	r3, [r7, #15]
}
 80010f4:	4618      	mov	r0, r3
 80010f6:	3710      	adds	r7, #16
 80010f8:	46bd      	mov	sp, r7
 80010fa:	bd80      	pop	{r7, pc}

080010fc <_AK09916_WriteByte>:

HAL_StatusTypeDef _AK09916_WriteByte(I2C_HandleTypeDef * hi2c, uint8_t const registerAddress, uint8_t writeData) {
 80010fc:	b580      	push	{r7, lr}
 80010fe:	b088      	sub	sp, #32
 8001100:	af04      	add	r7, sp, #16
 8001102:	6078      	str	r0, [r7, #4]
 8001104:	460b      	mov	r3, r1
 8001106:	70fb      	strb	r3, [r7, #3]
 8001108:	4613      	mov	r3, r2
 800110a:	70bb      	strb	r3, [r7, #2]
	HAL_StatusTypeDef status = HAL_OK;
 800110c:	2300      	movs	r3, #0
 800110e:	73fb      	strb	r3, [r7, #15]

	status = HAL_I2C_Mem_Write(
 8001110:	78fb      	ldrb	r3, [r7, #3]
 8001112:	b29a      	uxth	r2, r3
 8001114:	230a      	movs	r3, #10
 8001116:	9302      	str	r3, [sp, #8]
 8001118:	2301      	movs	r3, #1
 800111a:	9301      	str	r3, [sp, #4]
 800111c:	1cbb      	adds	r3, r7, #2
 800111e:	9300      	str	r3, [sp, #0]
 8001120:	2301      	movs	r3, #1
 8001122:	2118      	movs	r1, #24
 8001124:	6878      	ldr	r0, [r7, #4]
 8001126:	f004 ff9f 	bl	8006068 <HAL_I2C_Mem_Write>
 800112a:	4603      	mov	r3, r0
 800112c:	73fb      	strb	r3, [r7, #15]
			I2C_MEMADD_SIZE_8BIT,
			&writeData,
			I2C_MEMADD_SIZE_8BIT,
			10);

	return status;
 800112e:	7bfb      	ldrb	r3, [r7, #15]
}
 8001130:	4618      	mov	r0, r3
 8001132:	3710      	adds	r7, #16
 8001134:	46bd      	mov	sp, r7
 8001136:	bd80      	pop	{r7, pc}

08001138 <_AK09916_ReadByte>:

HAL_StatusTypeDef _AK09916_ReadByte(I2C_HandleTypeDef * hi2c, uint8_t const registerAddress, uint8_t *readData) {
 8001138:	b580      	push	{r7, lr}
 800113a:	b08a      	sub	sp, #40	; 0x28
 800113c:	af04      	add	r7, sp, #16
 800113e:	60f8      	str	r0, [r7, #12]
 8001140:	460b      	mov	r3, r1
 8001142:	607a      	str	r2, [r7, #4]
 8001144:	72fb      	strb	r3, [r7, #11]
	HAL_StatusTypeDef status = HAL_OK;
 8001146:	2300      	movs	r3, #0
 8001148:	75fb      	strb	r3, [r7, #23]

	status = HAL_I2C_Mem_Read(
 800114a:	7afb      	ldrb	r3, [r7, #11]
 800114c:	b29a      	uxth	r2, r3
 800114e:	230a      	movs	r3, #10
 8001150:	9302      	str	r3, [sp, #8]
 8001152:	2301      	movs	r3, #1
 8001154:	9301      	str	r3, [sp, #4]
 8001156:	687b      	ldr	r3, [r7, #4]
 8001158:	9300      	str	r3, [sp, #0]
 800115a:	2301      	movs	r3, #1
 800115c:	2118      	movs	r1, #24
 800115e:	68f8      	ldr	r0, [r7, #12]
 8001160:	f005 f87c 	bl	800625c <HAL_I2C_Mem_Read>
 8001164:	4603      	mov	r3, r0
 8001166:	75fb      	strb	r3, [r7, #23]
			I2C_MEMADD_SIZE_8BIT,
			readData,
			I2C_MEMADD_SIZE_8BIT,
			10);

	return status;
 8001168:	7dfb      	ldrb	r3, [r7, #23]
}
 800116a:	4618      	mov	r0, r3
 800116c:	3718      	adds	r7, #24
 800116e:	46bd      	mov	sp, r7
 8001170:	bd80      	pop	{r7, pc}

08001172 <_AK09916_BrustRead>:

HAL_StatusTypeDef _AK09916_BrustRead(I2C_HandleTypeDef * hi2c, uint8_t const startAddress, uint16_t const amountOfRegistersToRead, uint8_t * readData) {
 8001172:	b580      	push	{r7, lr}
 8001174:	b08a      	sub	sp, #40	; 0x28
 8001176:	af04      	add	r7, sp, #16
 8001178:	60f8      	str	r0, [r7, #12]
 800117a:	607b      	str	r3, [r7, #4]
 800117c:	460b      	mov	r3, r1
 800117e:	72fb      	strb	r3, [r7, #11]
 8001180:	4613      	mov	r3, r2
 8001182:	813b      	strh	r3, [r7, #8]
	HAL_StatusTypeDef status = HAL_OK;
 8001184:	2300      	movs	r3, #0
 8001186:	75fb      	strb	r3, [r7, #23]

	status = HAL_I2C_Mem_Read(
 8001188:	7afb      	ldrb	r3, [r7, #11]
 800118a:	b29a      	uxth	r2, r3
 800118c:	230a      	movs	r3, #10
 800118e:	9302      	str	r3, [sp, #8]
 8001190:	893b      	ldrh	r3, [r7, #8]
 8001192:	9301      	str	r3, [sp, #4]
 8001194:	687b      	ldr	r3, [r7, #4]
 8001196:	9300      	str	r3, [sp, #0]
 8001198:	2301      	movs	r3, #1
 800119a:	2118      	movs	r1, #24
 800119c:	68f8      	ldr	r0, [r7, #12]
 800119e:	f005 f85d 	bl	800625c <HAL_I2C_Mem_Read>
 80011a2:	4603      	mov	r3, r0
 80011a4:	75fb      	strb	r3, [r7, #23]
			I2C_MEMADD_SIZE_8BIT,
			readData,
			amountOfRegistersToRead * I2C_MEMADD_SIZE_8BIT,
			10);

	return status;
 80011a6:	7dfb      	ldrb	r3, [r7, #23]
}
 80011a8:	4618      	mov	r0, r3
 80011aa:	3718      	adds	r7, #24
 80011ac:	46bd      	mov	sp, r7
 80011ae:	bd80      	pop	{r7, pc}

080011b0 <ICM20948_init>:
	}
	
	return 0;
}

void ICM20948_init(I2C_HandleTypeDef * hi2c, uint8_t const selectI2cAddress, uint8_t const selectGyroSensitivity, uint8_t const selectAccelSensitivity) {
 80011b0:	b580      	push	{r7, lr}
 80011b2:	b084      	sub	sp, #16
 80011b4:	af00      	add	r7, sp, #0
 80011b6:	6078      	str	r0, [r7, #4]
 80011b8:	4608      	mov	r0, r1
 80011ba:	4611      	mov	r1, r2
 80011bc:	461a      	mov	r2, r3
 80011be:	4603      	mov	r3, r0
 80011c0:	70fb      	strb	r3, [r7, #3]
 80011c2:	460b      	mov	r3, r1
 80011c4:	70bb      	strb	r3, [r7, #2]
 80011c6:	4613      	mov	r3, r2
 80011c8:	707b      	strb	r3, [r7, #1]
	HAL_StatusTypeDef status = HAL_OK;
 80011ca:	2300      	movs	r3, #0
 80011cc:	73fb      	strb	r3, [r7, #15]

	status = _ICM20948_SelectUserBank(hi2c, selectI2cAddress, USER_BANK_0);
 80011ce:	78fb      	ldrb	r3, [r7, #3]
 80011d0:	2200      	movs	r2, #0
 80011d2:	4619      	mov	r1, r3
 80011d4:	6878      	ldr	r0, [r7, #4]
 80011d6:	f7ff ff0b 	bl	8000ff0 <_ICM20948_SelectUserBank>
 80011da:	4603      	mov	r3, r0
 80011dc:	73fb      	strb	r3, [r7, #15]

	status = _ICM20948_WriteByte(
 80011de:	78f9      	ldrb	r1, [r7, #3]
 80011e0:	2380      	movs	r3, #128	; 0x80
 80011e2:	2206      	movs	r2, #6
 80011e4:	6878      	ldr	r0, [r7, #4]
 80011e6:	f7ff ff2f 	bl	8001048 <_ICM20948_WriteByte>
 80011ea:	4603      	mov	r3, r0
 80011ec:	73fb      	strb	r3, [r7, #15]
			hi2c,
			selectI2cAddress,
			ICM20948__USER_BANK_0__PWR_MGMT_1__REGISTER,
			ICM20948_RESET);

	HAL_Delay(200);
 80011ee:	20c8      	movs	r0, #200	; 0xc8
 80011f0:	f003 feac 	bl	8004f4c <HAL_Delay>

	status = _ICM20948_WriteByte(
 80011f4:	78f9      	ldrb	r1, [r7, #3]
 80011f6:	2301      	movs	r3, #1
 80011f8:	2206      	movs	r2, #6
 80011fa:	6878      	ldr	r0, [r7, #4]
 80011fc:	f7ff ff24 	bl	8001048 <_ICM20948_WriteByte>
 8001200:	4603      	mov	r3, r0
 8001202:	73fb      	strb	r3, [r7, #15]
			selectI2cAddress,
			ICM20948__USER_BANK_0__PWR_MGMT_1__REGISTER,
			ICM20948_AUTO_SELECT_CLOCK);

	//enable both gyroscope and accelerometer
	status = _ICM20948_WriteByte(
 8001204:	78f9      	ldrb	r1, [r7, #3]
 8001206:	2300      	movs	r3, #0
 8001208:	2207      	movs	r2, #7
 800120a:	6878      	ldr	r0, [r7, #4]
 800120c:	f7ff ff1c 	bl	8001048 <_ICM20948_WriteByte>
 8001210:	4603      	mov	r3, r0
 8001212:	73fb      	strb	r3, [r7, #15]
			hi2c,
			selectI2cAddress,
			ICM20948__USER_BANK_0__PWR_MGMT_2__REGISTER,
			ICM20948_DISABLE_SENSORS); // For some reason this needs to be tested

	status = _ICM20948_SelectUserBank(hi2c, selectI2cAddress, USER_BANK_2);
 8001214:	78fb      	ldrb	r3, [r7, #3]
 8001216:	2202      	movs	r2, #2
 8001218:	4619      	mov	r1, r3
 800121a:	6878      	ldr	r0, [r7, #4]
 800121c:	f7ff fee8 	bl	8000ff0 <_ICM20948_SelectUserBank>
 8001220:	4603      	mov	r3, r0
 8001222:	73fb      	strb	r3, [r7, #15]
	//gyroscope sampling rate settings.
	status = _ICM20948_WriteByte(
			hi2c,
			selectI2cAddress,
			ICM20948__USER_BANK_2__GYRO_CONFIG_1__REGISTER,
			0 << GYRO_DLPFCFG_BIT|selectGyroSensitivity << GYRO_FS_SEL_BIT|EN_GRYO_DLPF << GYRO_FCHOICE_BIT);
 8001224:	78bb      	ldrb	r3, [r7, #2]
 8001226:	005b      	lsls	r3, r3, #1
 8001228:	b25b      	sxtb	r3, r3
 800122a:	f043 0301 	orr.w	r3, r3, #1
 800122e:	b25b      	sxtb	r3, r3
	status = _ICM20948_WriteByte(
 8001230:	b2db      	uxtb	r3, r3
 8001232:	78f9      	ldrb	r1, [r7, #3]
 8001234:	2201      	movs	r2, #1
 8001236:	6878      	ldr	r0, [r7, #4]
 8001238:	f7ff ff06 	bl	8001048 <_ICM20948_WriteByte>
 800123c:	4603      	mov	r3, r0
 800123e:	73fb      	strb	r3, [r7, #15]
	status = _ICM20948_WriteByte(
 8001240:	78f9      	ldrb	r1, [r7, #3]
 8001242:	2304      	movs	r3, #4
 8001244:	2200      	movs	r2, #0
 8001246:	6878      	ldr	r0, [r7, #4]
 8001248:	f7ff fefe 	bl	8001048 <_ICM20948_WriteByte>
 800124c:	4603      	mov	r3, r0
 800124e:	73fb      	strb	r3, [r7, #15]
	//accelerometer sampling rate settings.
	status = _ICM20948_WriteByte(
			hi2c,
			selectI2cAddress,
			ICM20948__USER_BANK_2__ACCEL_CONFIG__REGISTER,
			1 << ACCEL_DLPFCFG_BIT|selectAccelSensitivity << ACCEL_FS_SEL_BIT|0x01 << ACCEL_FCHOICE_BIT);
 8001250:	787b      	ldrb	r3, [r7, #1]
 8001252:	005b      	lsls	r3, r3, #1
 8001254:	b25b      	sxtb	r3, r3
 8001256:	f043 0309 	orr.w	r3, r3, #9
 800125a:	b25b      	sxtb	r3, r3
	status = _ICM20948_WriteByte(
 800125c:	b2db      	uxtb	r3, r3
 800125e:	78f9      	ldrb	r1, [r7, #3]
 8001260:	2214      	movs	r2, #20
 8001262:	6878      	ldr	r0, [r7, #4]
 8001264:	f7ff fef0 	bl	8001048 <_ICM20948_WriteByte>
 8001268:	4603      	mov	r3, r0
 800126a:	73fb      	strb	r3, [r7, #15]
	status = _ICM20948_WriteByte(
 800126c:	78f9      	ldrb	r1, [r7, #3]
 800126e:	2304      	movs	r3, #4
 8001270:	2211      	movs	r2, #17
 8001272:	6878      	ldr	r0, [r7, #4]
 8001274:	f7ff fee8 	bl	8001048 <_ICM20948_WriteByte>
 8001278:	4603      	mov	r3, r0
 800127a:	73fb      	strb	r3, [r7, #15]
			selectI2cAddress,
			ICM20948__USER_BANK_2__ACCEL_SMPLRT_DIV_2__REGISTER,
			4);


	status = _ICM20948_SelectUserBank(hi2c, selectI2cAddress, USER_BANK_0);
 800127c:	78fb      	ldrb	r3, [r7, #3]
 800127e:	2200      	movs	r2, #0
 8001280:	4619      	mov	r1, r3
 8001282:	6878      	ldr	r0, [r7, #4]
 8001284:	f7ff feb4 	bl	8000ff0 <_ICM20948_SelectUserBank>
 8001288:	4603      	mov	r3, r0
 800128a:	73fb      	strb	r3, [r7, #15]

	status = _ICM20948_WriteByte(
 800128c:	78f9      	ldrb	r1, [r7, #3]
 800128e:	2302      	movs	r3, #2
 8001290:	220f      	movs	r2, #15
 8001292:	6878      	ldr	r0, [r7, #4]
 8001294:	f7ff fed8 	bl	8001048 <_ICM20948_WriteByte>
 8001298:	4603      	mov	r3, r0
 800129a:	73fb      	strb	r3, [r7, #15]
			hi2c,
			selectI2cAddress,
			ICM20948__USER_BANK_0__INT_PIN_CFG__REGISTER,
			0x02); // Don't understand how this works

	status = _AK09916_WriteByte(
 800129c:	2208      	movs	r2, #8
 800129e:	2131      	movs	r1, #49	; 0x31
 80012a0:	6878      	ldr	r0, [r7, #4]
 80012a2:	f7ff ff2b 	bl	80010fc <_AK09916_WriteByte>
 80012a6:	4603      	mov	r3, r0
 80012a8:	73fb      	strb	r3, [r7, #15]
			hi2c,
			AK09916__CNTL2__REGISTER,
			0x08);
}
 80012aa:	bf00      	nop
 80012ac:	3710      	adds	r7, #16
 80012ae:	46bd      	mov	sp, r7
 80012b0:	bd80      	pop	{r7, pc}
 80012b2:	0000      	movs	r0, r0
 80012b4:	0000      	movs	r0, r0
	...

080012b8 <ICM20948_readGyroscope_Z>:

void ICM20948_readGyroscope_Z(I2C_HandleTypeDef * hi2c, uint8_t const selectI2cAddress, uint8_t const selectGyroSensitivity, float *gyroZ) {
 80012b8:	b580      	push	{r7, lr}
 80012ba:	b088      	sub	sp, #32
 80012bc:	af02      	add	r7, sp, #8
 80012be:	60f8      	str	r0, [r7, #12]
 80012c0:	607b      	str	r3, [r7, #4]
 80012c2:	460b      	mov	r3, r1
 80012c4:	72fb      	strb	r3, [r7, #11]
 80012c6:	4613      	mov	r3, r2
 80012c8:	72bb      	strb	r3, [r7, #10]
	uint8_t readData[2];

//	_ICM20948_SelectUserBank(hi2c, selectI2cAddress, USER_BANK_0);
	_ICM20948_BrustRead(hi2c, selectI2cAddress, ICM20948__USER_BANK_0__GYRO_ZOUT_H__REGISTER, 2, readData);
 80012ca:	7af9      	ldrb	r1, [r7, #11]
 80012cc:	f107 0314 	add.w	r3, r7, #20
 80012d0:	9300      	str	r3, [sp, #0]
 80012d2:	2302      	movs	r3, #2
 80012d4:	2237      	movs	r2, #55	; 0x37
 80012d6:	68f8      	ldr	r0, [r7, #12]
 80012d8:	f7ff fee3 	bl	80010a2 <_ICM20948_BrustRead>

	int16_t reading = readData[0]<<8 | readData[1];
 80012dc:	7d3b      	ldrb	r3, [r7, #20]
 80012de:	021b      	lsls	r3, r3, #8
 80012e0:	b21a      	sxth	r2, r3
 80012e2:	7d7b      	ldrb	r3, [r7, #21]
 80012e4:	b21b      	sxth	r3, r3
 80012e6:	4313      	orrs	r3, r2
 80012e8:	82fb      	strh	r3, [r7, #22]
	*gyroZ = (float) -reading;
 80012ea:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 80012ee:	425b      	negs	r3, r3
 80012f0:	ee07 3a90 	vmov	s15, r3
 80012f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80012f8:	687b      	ldr	r3, [r7, #4]
 80012fa:	edc3 7a00 	vstr	s15, [r3]
	switch (selectGyroSensitivity) {
 80012fe:	7abb      	ldrb	r3, [r7, #10]
 8001300:	2b03      	cmp	r3, #3
 8001302:	d849      	bhi.n	8001398 <ICM20948_readGyroscope_Z+0xe0>
 8001304:	a201      	add	r2, pc, #4	; (adr r2, 800130c <ICM20948_readGyroscope_Z+0x54>)
 8001306:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800130a:	bf00      	nop
 800130c:	0800131d 	.word	0x0800131d
 8001310:	08001333 	.word	0x08001333
 8001314:	08001349 	.word	0x08001349
 8001318:	08001371 	.word	0x08001371
		case GYRO_FULL_SCALE_250DPS:
			*gyroZ /= GRYO_SENSITIVITY_SCALE_FACTOR_250DPS;
 800131c:	687b      	ldr	r3, [r7, #4]
 800131e:	ed93 7a00 	vldr	s14, [r3]
 8001322:	eddf 6a23 	vldr	s13, [pc, #140]	; 80013b0 <ICM20948_readGyroscope_Z+0xf8>
 8001326:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800132a:	687b      	ldr	r3, [r7, #4]
 800132c:	edc3 7a00 	vstr	s15, [r3]
			break;
 8001330:	e032      	b.n	8001398 <ICM20948_readGyroscope_Z+0xe0>
		case GYRO_FULL_SCALE_500DPS:
			*gyroZ /= GRYO_SENSITIVITY_SCALE_FACTOR_500DPS;
 8001332:	687b      	ldr	r3, [r7, #4]
 8001334:	ed93 7a00 	vldr	s14, [r3]
 8001338:	eddf 6a1e 	vldr	s13, [pc, #120]	; 80013b4 <ICM20948_readGyroscope_Z+0xfc>
 800133c:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001340:	687b      	ldr	r3, [r7, #4]
 8001342:	edc3 7a00 	vstr	s15, [r3]
			break;
 8001346:	e027      	b.n	8001398 <ICM20948_readGyroscope_Z+0xe0>
		case GYRO_FULL_SCALE_1000DPS:
			*gyroZ /= GRYO_SENSITIVITY_SCALE_FACTOR_1000DPS;
 8001348:	687b      	ldr	r3, [r7, #4]
 800134a:	681b      	ldr	r3, [r3, #0]
 800134c:	4618      	mov	r0, r3
 800134e:	f7ff f8fb 	bl	8000548 <__aeabi_f2d>
 8001352:	a313      	add	r3, pc, #76	; (adr r3, 80013a0 <ICM20948_readGyroscope_Z+0xe8>)
 8001354:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001358:	f7ff fa78 	bl	800084c <__aeabi_ddiv>
 800135c:	4602      	mov	r2, r0
 800135e:	460b      	mov	r3, r1
 8001360:	4610      	mov	r0, r2
 8001362:	4619      	mov	r1, r3
 8001364:	f7ff fc40 	bl	8000be8 <__aeabi_d2f>
 8001368:	4602      	mov	r2, r0
 800136a:	687b      	ldr	r3, [r7, #4]
 800136c:	601a      	str	r2, [r3, #0]
			break;
 800136e:	e013      	b.n	8001398 <ICM20948_readGyroscope_Z+0xe0>
		case GYRO_FULL_SCALE_2000DPS:
			*gyroZ /= GRYO_SENSITIVITY_SCALE_FACTOR_2000DPS;
 8001370:	687b      	ldr	r3, [r7, #4]
 8001372:	681b      	ldr	r3, [r3, #0]
 8001374:	4618      	mov	r0, r3
 8001376:	f7ff f8e7 	bl	8000548 <__aeabi_f2d>
 800137a:	a30b      	add	r3, pc, #44	; (adr r3, 80013a8 <ICM20948_readGyroscope_Z+0xf0>)
 800137c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001380:	f7ff fa64 	bl	800084c <__aeabi_ddiv>
 8001384:	4602      	mov	r2, r0
 8001386:	460b      	mov	r3, r1
 8001388:	4610      	mov	r0, r2
 800138a:	4619      	mov	r1, r3
 800138c:	f7ff fc2c 	bl	8000be8 <__aeabi_d2f>
 8001390:	4602      	mov	r2, r0
 8001392:	687b      	ldr	r3, [r7, #4]
 8001394:	601a      	str	r2, [r3, #0]
			break;
 8001396:	bf00      	nop
	}

}
 8001398:	bf00      	nop
 800139a:	3718      	adds	r7, #24
 800139c:	46bd      	mov	sp, r7
 800139e:	bd80      	pop	{r7, pc}
 80013a0:	66666666 	.word	0x66666666
 80013a4:	40406666 	.word	0x40406666
 80013a8:	66666666 	.word	0x66666666
 80013ac:	40306666 	.word	0x40306666
 80013b0:	43030000 	.word	0x43030000
 80013b4:	42830000 	.word	0x42830000

080013b8 <ICM20948_readAccelerometer_all>:

void ICM20948_readAccelerometer_all(I2C_HandleTypeDef * hi2c, uint8_t const selectI2cAddress, uint8_t const selectAccelSensitivity, float readings[3]) {
 80013b8:	b580      	push	{r7, lr}
 80013ba:	b08e      	sub	sp, #56	; 0x38
 80013bc:	af02      	add	r7, sp, #8
 80013be:	60f8      	str	r0, [r7, #12]
 80013c0:	607b      	str	r3, [r7, #4]
 80013c2:	460b      	mov	r3, r1
 80013c4:	72fb      	strb	r3, [r7, #11]
 80013c6:	4613      	mov	r3, r2
 80013c8:	72bb      	strb	r3, [r7, #10]
	uint8_t readData[6];

//	_ICM20948_SelectUserBank(hi2c, selectI2cAddress, USER_BANK_0);
	_ICM20948_BrustRead(hi2c, selectI2cAddress, ICM20948__USER_BANK_0__ACCEL_XOUT_H__REGISTER, 6, readData);
 80013ca:	7af9      	ldrb	r1, [r7, #11]
 80013cc:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80013d0:	9300      	str	r3, [sp, #0]
 80013d2:	2306      	movs	r3, #6
 80013d4:	222d      	movs	r2, #45	; 0x2d
 80013d6:	68f8      	ldr	r0, [r7, #12]
 80013d8:	f7ff fe63 	bl	80010a2 <_ICM20948_BrustRead>


	int16_t rD_int[3];
	rD_int[X] = readData[X_HIGH_BYTE]<<8|readData[X_LOW_BYTE];
 80013dc:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 80013e0:	021b      	lsls	r3, r3, #8
 80013e2:	b21a      	sxth	r2, r3
 80013e4:	f897 3029 	ldrb.w	r3, [r7, #41]	; 0x29
 80013e8:	b21b      	sxth	r3, r3
 80013ea:	4313      	orrs	r3, r2
 80013ec:	b21b      	sxth	r3, r3
 80013ee:	843b      	strh	r3, [r7, #32]
	rD_int[Y] = readData[Y_HIGH_BYTE]<<8|readData[Y_LOW_BYTE];
 80013f0:	f897 302a 	ldrb.w	r3, [r7, #42]	; 0x2a
 80013f4:	021b      	lsls	r3, r3, #8
 80013f6:	b21a      	sxth	r2, r3
 80013f8:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 80013fc:	b21b      	sxth	r3, r3
 80013fe:	4313      	orrs	r3, r2
 8001400:	b21b      	sxth	r3, r3
 8001402:	847b      	strh	r3, [r7, #34]	; 0x22
	rD_int[Z] = readData[Z_HIGH_BYTE]<<8|readData[Z_LOW_BYTE];
 8001404:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8001408:	021b      	lsls	r3, r3, #8
 800140a:	b21a      	sxth	r2, r3
 800140c:	f897 302d 	ldrb.w	r3, [r7, #45]	; 0x2d
 8001410:	b21b      	sxth	r3, r3
 8001412:	4313      	orrs	r3, r2
 8001414:	b21b      	sxth	r3, r3
 8001416:	84bb      	strh	r3, [r7, #36]	; 0x24

	float rD[3];
	rD[X] = (float) rD_int[X];
 8001418:	f9b7 3020 	ldrsh.w	r3, [r7, #32]
 800141c:	ee07 3a90 	vmov	s15, r3
 8001420:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001424:	edc7 7a05 	vstr	s15, [r7, #20]
	rD[Y] = (float) rD_int[Y];
 8001428:	f9b7 3022 	ldrsh.w	r3, [r7, #34]	; 0x22
 800142c:	ee07 3a90 	vmov	s15, r3
 8001430:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001434:	edc7 7a06 	vstr	s15, [r7, #24]
	rD[Z] = (float) rD_int[Z];
 8001438:	f9b7 3024 	ldrsh.w	r3, [r7, #36]	; 0x24
 800143c:	ee07 3a90 	vmov	s15, r3
 8001440:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001444:	edc7 7a07 	vstr	s15, [r7, #28]

	switch (selectAccelSensitivity) {
 8001448:	7abb      	ldrb	r3, [r7, #10]
 800144a:	2b03      	cmp	r3, #3
 800144c:	f200 8084 	bhi.w	8001558 <ICM20948_readAccelerometer_all+0x1a0>
 8001450:	a201      	add	r2, pc, #4	; (adr r2, 8001458 <ICM20948_readAccelerometer_all+0xa0>)
 8001452:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001456:	bf00      	nop
 8001458:	08001469 	.word	0x08001469
 800145c:	080014a5 	.word	0x080014a5
 8001460:	080014e1 	.word	0x080014e1
 8001464:	0800151d 	.word	0x0800151d
		case ACCEL_FULL_SCALE_2G:
			readings[X] = rD[X] / ACCEL_SENSITIVITY_SCALE_FACTOR_2G;
 8001468:	ed97 7a05 	vldr	s14, [r7, #20]
 800146c:	eddf 6a3c 	vldr	s13, [pc, #240]	; 8001560 <ICM20948_readAccelerometer_all+0x1a8>
 8001470:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001474:	687b      	ldr	r3, [r7, #4]
 8001476:	edc3 7a00 	vstr	s15, [r3]
			readings[Y] = rD[Y] / ACCEL_SENSITIVITY_SCALE_FACTOR_2G;
 800147a:	ed97 7a06 	vldr	s14, [r7, #24]
 800147e:	687b      	ldr	r3, [r7, #4]
 8001480:	3304      	adds	r3, #4
 8001482:	eddf 6a37 	vldr	s13, [pc, #220]	; 8001560 <ICM20948_readAccelerometer_all+0x1a8>
 8001486:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800148a:	edc3 7a00 	vstr	s15, [r3]
			readings[Z] = rD[Z] / ACCEL_SENSITIVITY_SCALE_FACTOR_2G;
 800148e:	ed97 7a07 	vldr	s14, [r7, #28]
 8001492:	687b      	ldr	r3, [r7, #4]
 8001494:	3308      	adds	r3, #8
 8001496:	eddf 6a32 	vldr	s13, [pc, #200]	; 8001560 <ICM20948_readAccelerometer_all+0x1a8>
 800149a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800149e:	edc3 7a00 	vstr	s15, [r3]
			break;
 80014a2:	e059      	b.n	8001558 <ICM20948_readAccelerometer_all+0x1a0>
		case ACCEL_FULL_SCALE_4G:
			readings[X] = rD[X] / ACCEL_SENSITIVITY_SCALE_FACTOR_4G;
 80014a4:	ed97 7a05 	vldr	s14, [r7, #20]
 80014a8:	eddf 6a2e 	vldr	s13, [pc, #184]	; 8001564 <ICM20948_readAccelerometer_all+0x1ac>
 80014ac:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80014b0:	687b      	ldr	r3, [r7, #4]
 80014b2:	edc3 7a00 	vstr	s15, [r3]
			readings[Y] = rD[Y] / ACCEL_SENSITIVITY_SCALE_FACTOR_4G;
 80014b6:	ed97 7a06 	vldr	s14, [r7, #24]
 80014ba:	687b      	ldr	r3, [r7, #4]
 80014bc:	3304      	adds	r3, #4
 80014be:	eddf 6a29 	vldr	s13, [pc, #164]	; 8001564 <ICM20948_readAccelerometer_all+0x1ac>
 80014c2:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80014c6:	edc3 7a00 	vstr	s15, [r3]
			readings[Z] = rD[Z] / ACCEL_SENSITIVITY_SCALE_FACTOR_4G;
 80014ca:	ed97 7a07 	vldr	s14, [r7, #28]
 80014ce:	687b      	ldr	r3, [r7, #4]
 80014d0:	3308      	adds	r3, #8
 80014d2:	eddf 6a24 	vldr	s13, [pc, #144]	; 8001564 <ICM20948_readAccelerometer_all+0x1ac>
 80014d6:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80014da:	edc3 7a00 	vstr	s15, [r3]
			break;
 80014de:	e03b      	b.n	8001558 <ICM20948_readAccelerometer_all+0x1a0>
		case ACCEL_FULL_SCALE_8G:
			readings[X] = rD[X] / ACCEL_SENSITIVITY_SCALE_FACTOR_8G;
 80014e0:	ed97 7a05 	vldr	s14, [r7, #20]
 80014e4:	eddf 6a20 	vldr	s13, [pc, #128]	; 8001568 <ICM20948_readAccelerometer_all+0x1b0>
 80014e8:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80014ec:	687b      	ldr	r3, [r7, #4]
 80014ee:	edc3 7a00 	vstr	s15, [r3]
			readings[Y] = rD[Y] / ACCEL_SENSITIVITY_SCALE_FACTOR_8G;
 80014f2:	ed97 7a06 	vldr	s14, [r7, #24]
 80014f6:	687b      	ldr	r3, [r7, #4]
 80014f8:	3304      	adds	r3, #4
 80014fa:	eddf 6a1b 	vldr	s13, [pc, #108]	; 8001568 <ICM20948_readAccelerometer_all+0x1b0>
 80014fe:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001502:	edc3 7a00 	vstr	s15, [r3]
			readings[Z] = rD[Z] / ACCEL_SENSITIVITY_SCALE_FACTOR_8G;
 8001506:	ed97 7a07 	vldr	s14, [r7, #28]
 800150a:	687b      	ldr	r3, [r7, #4]
 800150c:	3308      	adds	r3, #8
 800150e:	eddf 6a16 	vldr	s13, [pc, #88]	; 8001568 <ICM20948_readAccelerometer_all+0x1b0>
 8001512:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001516:	edc3 7a00 	vstr	s15, [r3]
			break;
 800151a:	e01d      	b.n	8001558 <ICM20948_readAccelerometer_all+0x1a0>
		case ACCEL_FULL_SCALE_16G:
			readings[X] = rD[X] / ACCEL_SENSITIVITY_SCALE_FACTOR_16G;
 800151c:	ed97 7a05 	vldr	s14, [r7, #20]
 8001520:	eddf 6a12 	vldr	s13, [pc, #72]	; 800156c <ICM20948_readAccelerometer_all+0x1b4>
 8001524:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001528:	687b      	ldr	r3, [r7, #4]
 800152a:	edc3 7a00 	vstr	s15, [r3]
			readings[Y] = rD[Y] / ACCEL_SENSITIVITY_SCALE_FACTOR_16G;
 800152e:	ed97 7a06 	vldr	s14, [r7, #24]
 8001532:	687b      	ldr	r3, [r7, #4]
 8001534:	3304      	adds	r3, #4
 8001536:	eddf 6a0d 	vldr	s13, [pc, #52]	; 800156c <ICM20948_readAccelerometer_all+0x1b4>
 800153a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800153e:	edc3 7a00 	vstr	s15, [r3]
			readings[Z] = rD[Z] / ACCEL_SENSITIVITY_SCALE_FACTOR_16G;
 8001542:	ed97 7a07 	vldr	s14, [r7, #28]
 8001546:	687b      	ldr	r3, [r7, #4]
 8001548:	3308      	adds	r3, #8
 800154a:	eddf 6a08 	vldr	s13, [pc, #32]	; 800156c <ICM20948_readAccelerometer_all+0x1b4>
 800154e:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001552:	edc3 7a00 	vstr	s15, [r3]
			break;
 8001556:	bf00      	nop
	}
}
 8001558:	bf00      	nop
 800155a:	3730      	adds	r7, #48	; 0x30
 800155c:	46bd      	mov	sp, r7
 800155e:	bd80      	pop	{r7, pc}
 8001560:	46800000 	.word	0x46800000
 8001564:	46000000 	.word	0x46000000
 8001568:	45800000 	.word	0x45800000
 800156c:	45000000 	.word	0x45000000

08001570 <ICM20948_readMagnetometer_XY>:

void ICM20948_readMagnetometer_XY(I2C_HandleTypeDef * hi2c, float magXY[2]) {
 8001570:	b590      	push	{r4, r7, lr}
 8001572:	b087      	sub	sp, #28
 8001574:	af00      	add	r7, sp, #0
 8001576:	6078      	str	r0, [r7, #4]
 8001578:	6039      	str	r1, [r7, #0]
	uint8_t readData[4];
	_AK09916_BrustRead(hi2c, AK09916__XOUT_L__REGISTER, 4, readData);
 800157a:	f107 0310 	add.w	r3, r7, #16
 800157e:	2204      	movs	r2, #4
 8001580:	2111      	movs	r1, #17
 8001582:	6878      	ldr	r0, [r7, #4]
 8001584:	f7ff fdf5 	bl	8001172 <_AK09916_BrustRead>

	//read status register to mark end of data read.
	uint8_t st2;
	_AK09916_ReadByte(hi2c, AK09916__ST2__REGISTER, &st2);
 8001588:	f107 030f 	add.w	r3, r7, #15
 800158c:	461a      	mov	r2, r3
 800158e:	2118      	movs	r1, #24
 8001590:	6878      	ldr	r0, [r7, #4]
 8001592:	f7ff fdd1 	bl	8001138 <_AK09916_ReadByte>
	int16_t reading;
	for (uint8_t i = 0; i < 2; i++) {
 8001596:	2300      	movs	r3, #0
 8001598:	75fb      	strb	r3, [r7, #23]
 800159a:	e02a      	b.n	80015f2 <ICM20948_readMagnetometer_XY+0x82>
		reading = readData[1+2*i]<<8|readData[2*i];
 800159c:	7dfb      	ldrb	r3, [r7, #23]
 800159e:	005b      	lsls	r3, r3, #1
 80015a0:	3301      	adds	r3, #1
 80015a2:	3318      	adds	r3, #24
 80015a4:	443b      	add	r3, r7
 80015a6:	f813 3c08 	ldrb.w	r3, [r3, #-8]
 80015aa:	021b      	lsls	r3, r3, #8
 80015ac:	b21a      	sxth	r2, r3
 80015ae:	7dfb      	ldrb	r3, [r7, #23]
 80015b0:	005b      	lsls	r3, r3, #1
 80015b2:	3318      	adds	r3, #24
 80015b4:	443b      	add	r3, r7
 80015b6:	f813 3c08 	ldrb.w	r3, [r3, #-8]
 80015ba:	b21b      	sxth	r3, r3
 80015bc:	4313      	orrs	r3, r2
 80015be:	82bb      	strh	r3, [r7, #20]
		magXY[i] = reading * MAG_SENSITIVITY_SCALE_FACTOR;
 80015c0:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 80015c4:	4618      	mov	r0, r3
 80015c6:	f7fe ffad 	bl	8000524 <__aeabi_i2d>
 80015ca:	a30f      	add	r3, pc, #60	; (adr r3, 8001608 <ICM20948_readMagnetometer_XY+0x98>)
 80015cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80015d0:	f7ff f812 	bl	80005f8 <__aeabi_dmul>
 80015d4:	4602      	mov	r2, r0
 80015d6:	460b      	mov	r3, r1
 80015d8:	4610      	mov	r0, r2
 80015da:	4619      	mov	r1, r3
 80015dc:	7dfb      	ldrb	r3, [r7, #23]
 80015de:	009b      	lsls	r3, r3, #2
 80015e0:	683a      	ldr	r2, [r7, #0]
 80015e2:	18d4      	adds	r4, r2, r3
 80015e4:	f7ff fb00 	bl	8000be8 <__aeabi_d2f>
 80015e8:	4603      	mov	r3, r0
 80015ea:	6023      	str	r3, [r4, #0]
	for (uint8_t i = 0; i < 2; i++) {
 80015ec:	7dfb      	ldrb	r3, [r7, #23]
 80015ee:	3301      	adds	r3, #1
 80015f0:	75fb      	strb	r3, [r7, #23]
 80015f2:	7dfb      	ldrb	r3, [r7, #23]
 80015f4:	2b01      	cmp	r3, #1
 80015f6:	d9d1      	bls.n	800159c <ICM20948_readMagnetometer_XY+0x2c>
	}
}
 80015f8:	bf00      	nop
 80015fa:	bf00      	nop
 80015fc:	371c      	adds	r7, #28
 80015fe:	46bd      	mov	sp, r7
 8001600:	bd90      	pop	{r4, r7, pc}
 8001602:	bf00      	nop
 8001604:	f3af 8000 	nop.w
 8001608:	33333333 	.word	0x33333333
 800160c:	3fc33333 	.word	0x3fc33333

08001610 <angle_init>:
#include "angle.h"

static KalmanParams kParams;

void angle_init(float heading) {
 8001610:	b580      	push	{r7, lr}
 8001612:	b082      	sub	sp, #8
 8001614:	af00      	add	r7, sp, #0
 8001616:	ed87 0a01 	vstr	s0, [r7, #4]
	angle_reset(heading);
 800161a:	ed97 0a01 	vldr	s0, [r7, #4]
 800161e:	f000 f805 	bl	800162c <angle_reset>
}
 8001622:	bf00      	nop
 8001624:	3708      	adds	r7, #8
 8001626:	46bd      	mov	sp, r7
 8001628:	bd80      	pop	{r7, pc}
	...

0800162c <angle_reset>:

void angle_reset(float heading) {
 800162c:	b580      	push	{r7, lr}
 800162e:	b082      	sub	sp, #8
 8001630:	af00      	add	r7, sp, #0
 8001632:	ed87 0a01 	vstr	s0, [r7, #4]
	kalman_init(&kParams, heading, ANGLE_S_W, ANGLE_S_HEADING);
 8001636:	eeb2 1a02 	vmov.f32	s2, #34	; 0x41100000  9.0
 800163a:	eef2 0a0c 	vmov.f32	s1, #44	; 0x41600000  14.0
 800163e:	ed97 0a01 	vldr	s0, [r7, #4]
 8001642:	4803      	ldr	r0, [pc, #12]	; (8001650 <angle_reset+0x24>)
 8001644:	f000 fdb8 	bl	80021b8 <kalman_init>
}
 8001648:	bf00      	nop
 800164a:	3708      	adds	r7, #8
 800164c:	46bd      	mov	sp, r7
 800164e:	bd80      	pop	{r7, pc}
 8001650:	20000204 	.word	0x20000204

08001654 <angle_get>:
float angle_get(float msElapsed, float w, float heading) {
 8001654:	b580      	push	{r7, lr}
 8001656:	b086      	sub	sp, #24
 8001658:	af00      	add	r7, sp, #0
 800165a:	ed87 0a03 	vstr	s0, [r7, #12]
 800165e:	edc7 0a02 	vstr	s1, [r7, #8]
 8001662:	ed87 1a01 	vstr	s2, [r7, #4]
	float angle_w = add_angle(kParams.last_est, w * msElapsed);
 8001666:	4b35      	ldr	r3, [pc, #212]	; (800173c <angle_get+0xe8>)
 8001668:	edd3 6a00 	vldr	s13, [r3]
 800166c:	ed97 7a02 	vldr	s14, [r7, #8]
 8001670:	edd7 7a03 	vldr	s15, [r7, #12]
 8001674:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001678:	eef0 0a67 	vmov.f32	s1, s15
 800167c:	eeb0 0a66 	vmov.f32	s0, s13
 8001680:	f000 fbea 	bl	8001e58 <add_angle>
 8001684:	ed87 0a05 	vstr	s0, [r7, #20]

	kParams.s_est += msElapsed * msElapsed * ANGLE_S_W;
 8001688:	4b2c      	ldr	r3, [pc, #176]	; (800173c <angle_get+0xe8>)
 800168a:	ed93 7a01 	vldr	s14, [r3, #4]
 800168e:	edd7 7a03 	vldr	s15, [r7, #12]
 8001692:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8001696:	eef2 6a0c 	vmov.f32	s13, #44	; 0x41600000  14.0
 800169a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800169e:	ee77 7a27 	vadd.f32	s15, s14, s15
 80016a2:	4b26      	ldr	r3, [pc, #152]	; (800173c <angle_get+0xe8>)
 80016a4:	edc3 7a01 	vstr	s15, [r3, #4]
	kalman_update(&kParams, angle_w, heading);
 80016a8:	edd7 0a01 	vldr	s1, [r7, #4]
 80016ac:	ed97 0a05 	vldr	s0, [r7, #20]
 80016b0:	4822      	ldr	r0, [pc, #136]	; (800173c <angle_get+0xe8>)
 80016b2:	f000 fd9a 	bl	80021ea <kalman_update>

	if (angle_w < -90 && (heading - angle_w) > 180 || heading < -90 && (angle_w - heading) > 180) {
 80016b6:	edd7 7a05 	vldr	s15, [r7, #20]
 80016ba:	ed9f 7a21 	vldr	s14, [pc, #132]	; 8001740 <angle_get+0xec>
 80016be:	eef4 7ac7 	vcmpe.f32	s15, s14
 80016c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80016c6:	d50c      	bpl.n	80016e2 <angle_get+0x8e>
 80016c8:	ed97 7a01 	vldr	s14, [r7, #4]
 80016cc:	edd7 7a05 	vldr	s15, [r7, #20]
 80016d0:	ee77 7a67 	vsub.f32	s15, s14, s15
 80016d4:	ed9f 7a1b 	vldr	s14, [pc, #108]	; 8001744 <angle_get+0xf0>
 80016d8:	eef4 7ac7 	vcmpe.f32	s15, s14
 80016dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80016e0:	dc15      	bgt.n	800170e <angle_get+0xba>
 80016e2:	edd7 7a01 	vldr	s15, [r7, #4]
 80016e6:	ed9f 7a16 	vldr	s14, [pc, #88]	; 8001740 <angle_get+0xec>
 80016ea:	eef4 7ac7 	vcmpe.f32	s15, s14
 80016ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80016f2:	d51a      	bpl.n	800172a <angle_get+0xd6>
 80016f4:	ed97 7a05 	vldr	s14, [r7, #20]
 80016f8:	edd7 7a01 	vldr	s15, [r7, #4]
 80016fc:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001700:	ed9f 7a10 	vldr	s14, [pc, #64]	; 8001744 <angle_get+0xf0>
 8001704:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001708:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800170c:	dd0d      	ble.n	800172a <angle_get+0xd6>
		//detect discontinuous wrapping; adjust accordingly.
		kParams.last_est = add_angle(kParams.last_est, 180);
 800170e:	4b0b      	ldr	r3, [pc, #44]	; (800173c <angle_get+0xe8>)
 8001710:	edd3 7a00 	vldr	s15, [r3]
 8001714:	eddf 0a0b 	vldr	s1, [pc, #44]	; 8001744 <angle_get+0xf0>
 8001718:	eeb0 0a67 	vmov.f32	s0, s15
 800171c:	f000 fb9c 	bl	8001e58 <add_angle>
 8001720:	eef0 7a40 	vmov.f32	s15, s0
 8001724:	4b05      	ldr	r3, [pc, #20]	; (800173c <angle_get+0xe8>)
 8001726:	edc3 7a00 	vstr	s15, [r3]
	}
	return kParams.last_est;
 800172a:	4b04      	ldr	r3, [pc, #16]	; (800173c <angle_get+0xe8>)
 800172c:	681b      	ldr	r3, [r3, #0]
 800172e:	ee07 3a90 	vmov	s15, r3
}
 8001732:	eeb0 0a67 	vmov.f32	s0, s15
 8001736:	3718      	adds	r7, #24
 8001738:	46bd      	mov	sp, r7
 800173a:	bd80      	pop	{r7, pc}
 800173c:	20000204 	.word	0x20000204
 8001740:	c2b40000 	.word	0xc2b40000
 8001744:	43340000 	.word	0x43340000

08001748 <get_new_cmd>:
#include "commands.h"

static Command *cur = NULL;

static Command *get_new_cmd() {
 8001748:	b580      	push	{r7, lr}
 800174a:	b082      	sub	sp, #8
 800174c:	af00      	add	r7, sp, #0
	Command *new = (Command *) malloc(sizeof(Command));
 800174e:	2018      	movs	r0, #24
 8001750:	f008 fe00 	bl	800a354 <malloc>
 8001754:	4603      	mov	r3, r0
 8001756:	607b      	str	r3, [r7, #4]
	new->dir = 0;
 8001758:	687b      	ldr	r3, [r7, #4]
 800175a:	2200      	movs	r2, #0
 800175c:	715a      	strb	r2, [r3, #5]
	new->speed = 0;
 800175e:	687b      	ldr	r3, [r7, #4]
 8001760:	2200      	movs	r2, #0
 8001762:	719a      	strb	r2, [r3, #6]
	new->steeringAngle = 0;
 8001764:	687b      	ldr	r3, [r7, #4]
 8001766:	f04f 0200 	mov.w	r2, #0
 800176a:	609a      	str	r2, [r3, #8]
	new->val = 0;
 800176c:	687b      	ldr	r3, [r7, #4]
 800176e:	f04f 0200 	mov.w	r2, #0
 8001772:	611a      	str	r2, [r3, #16]
	new->distType = TARGET;
 8001774:	687b      	ldr	r3, [r7, #4]
 8001776:	2200      	movs	r2, #0
 8001778:	731a      	strb	r2, [r3, #12]
	new->next = NULL;
 800177a:	687b      	ldr	r3, [r7, #4]
 800177c:	2200      	movs	r2, #0
 800177e:	615a      	str	r2, [r3, #20]

	return new;
 8001780:	687b      	ldr	r3, [r7, #4]
}
 8001782:	4618      	mov	r0, r3
 8001784:	3708      	adds	r7, #8
 8001786:	46bd      	mov	sp, r7
 8001788:	bd80      	pop	{r7, pc}

0800178a <commands_ack>:

static void commands_ack(UART_HandleTypeDef *uart, Command *cmd, uint8_t indicator) {
 800178a:	b580      	push	{r7, lr}
 800178c:	b086      	sub	sp, #24
 800178e:	af00      	add	r7, sp, #0
 8001790:	60f8      	str	r0, [r7, #12]
 8001792:	60b9      	str	r1, [r7, #8]
 8001794:	4613      	mov	r3, r2
 8001796:	71fb      	strb	r3, [r7, #7]
	uint8_t buf_size = cmd->str_size + 1;
 8001798:	68bb      	ldr	r3, [r7, #8]
 800179a:	791b      	ldrb	r3, [r3, #4]
 800179c:	3301      	adds	r3, #1
 800179e:	75fb      	strb	r3, [r7, #23]
	uint8_t *buf = (uint8_t *) malloc(buf_size * sizeof(uint8_t));
 80017a0:	7dfb      	ldrb	r3, [r7, #23]
 80017a2:	4618      	mov	r0, r3
 80017a4:	f008 fdd6 	bl	800a354 <malloc>
 80017a8:	4603      	mov	r3, r0
 80017aa:	613b      	str	r3, [r7, #16]
	*buf = indicator;
 80017ac:	693b      	ldr	r3, [r7, #16]
 80017ae:	79fa      	ldrb	r2, [r7, #7]
 80017b0:	701a      	strb	r2, [r3, #0]
	memcpy(buf + 1, cmd->str, buf_size - 1);
 80017b2:	693b      	ldr	r3, [r7, #16]
 80017b4:	1c58      	adds	r0, r3, #1
 80017b6:	68bb      	ldr	r3, [r7, #8]
 80017b8:	6819      	ldr	r1, [r3, #0]
 80017ba:	7dfb      	ldrb	r3, [r7, #23]
 80017bc:	3b01      	subs	r3, #1
 80017be:	461a      	mov	r2, r3
 80017c0:	f009 fee3 	bl	800b58a <memcpy>

	HAL_UART_Transmit(uart, buf, buf_size, HAL_MAX_DELAY);
 80017c4:	7dfb      	ldrb	r3, [r7, #23]
 80017c6:	b29a      	uxth	r2, r3
 80017c8:	f04f 33ff 	mov.w	r3, #4294967295
 80017cc:	6939      	ldr	r1, [r7, #16]
 80017ce:	68f8      	ldr	r0, [r7, #12]
 80017d0:	f007 fdba 	bl	8009348 <HAL_UART_Transmit>
	free(buf);
 80017d4:	6938      	ldr	r0, [r7, #16]
 80017d6:	f008 fdc5 	bl	800a364 <free>
}
 80017da:	bf00      	nop
 80017dc:	3718      	adds	r7, #24
 80017de:	46bd      	mov	sp, r7
 80017e0:	bd80      	pop	{r7, pc}
	...

080017e4 <commands_process>:

static uint8_t buf[3];
void commands_process(UART_HandleTypeDef *uart, uint8_t *buf, uint8_t size) {
 80017e4:	b580      	push	{r7, lr}
 80017e6:	b088      	sub	sp, #32
 80017e8:	af00      	add	r7, sp, #0
 80017ea:	60f8      	str	r0, [r7, #12]
 80017ec:	60b9      	str	r1, [r7, #8]
 80017ee:	4613      	mov	r3, r2
 80017f0:	71fb      	strb	r3, [r7, #7]
	Command *next = get_new_cmd();
 80017f2:	f7ff ffa9 	bl	8001748 <get_new_cmd>
 80017f6:	61b8      	str	r0, [r7, #24]

	uint8_t c = *buf, *temp = buf;
 80017f8:	68bb      	ldr	r3, [r7, #8]
 80017fa:	781b      	ldrb	r3, [r3, #0]
 80017fc:	75fb      	strb	r3, [r7, #23]
 80017fe:	68bb      	ldr	r3, [r7, #8]
 8001800:	613b      	str	r3, [r7, #16]

	//first byte: command flag
	switch (c) {
 8001802:	7dfb      	ldrb	r3, [r7, #23]
 8001804:	3b53      	subs	r3, #83	; 0x53
 8001806:	2b24      	cmp	r3, #36	; 0x24
 8001808:	f200 80d1 	bhi.w	80019ae <commands_process+0x1ca>
 800180c:	a201      	add	r2, pc, #4	; (adr r2, 8001814 <commands_process+0x30>)
 800180e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001812:	bf00      	nop
 8001814:	080018a9 	.word	0x080018a9
 8001818:	080018b1 	.word	0x080018b1
 800181c:	080019af 	.word	0x080019af
 8001820:	080019af 	.word	0x080019af
 8001824:	080018bf 	.word	0x080018bf
 8001828:	080019af 	.word	0x080019af
 800182c:	080019af 	.word	0x080019af
 8001830:	080019af 	.word	0x080019af
 8001834:	080019af 	.word	0x080019af
 8001838:	080019af 	.word	0x080019af
 800183c:	080019af 	.word	0x080019af
 8001840:	080019af 	.word	0x080019af
 8001844:	080019af 	.word	0x080019af
 8001848:	080019af 	.word	0x080019af
 800184c:	080019af 	.word	0x080019af
 8001850:	080019af 	.word	0x080019af
 8001854:	080019af 	.word	0x080019af
 8001858:	080019af 	.word	0x080019af
 800185c:	080019af 	.word	0x080019af
 8001860:	080019af 	.word	0x080019af
 8001864:	080019af 	.word	0x080019af
 8001868:	080019af 	.word	0x080019af
 800186c:	080019af 	.word	0x080019af
 8001870:	080019af 	.word	0x080019af
 8001874:	080019af 	.word	0x080019af
 8001878:	080019af 	.word	0x080019af
 800187c:	080019af 	.word	0x080019af
 8001880:	080019af 	.word	0x080019af
 8001884:	080019af 	.word	0x080019af
 8001888:	080019af 	.word	0x080019af
 800188c:	080019af 	.word	0x080019af
 8001890:	080019af 	.word	0x080019af
 8001894:	080019af 	.word	0x080019af
 8001898:	080018cd 	.word	0x080018cd
 800189c:	080019af 	.word	0x080019af
 80018a0:	080019af 	.word	0x080019af
 80018a4:	080018db 	.word	0x080018db
		case CMD_FULL_STOP:
			next->dir = 0;
 80018a8:	69bb      	ldr	r3, [r7, #24]
 80018aa:	2200      	movs	r2, #0
 80018ac:	715a      	strb	r2, [r3, #5]
			break;
 80018ae:	e01b      	b.n	80018e8 <commands_process+0x104>

		case CMD_FORWARD_DIST_TARGET:
			next->dir = 1;
 80018b0:	69bb      	ldr	r3, [r7, #24]
 80018b2:	2201      	movs	r2, #1
 80018b4:	715a      	strb	r2, [r3, #5]
			next->distType = TARGET;
 80018b6:	69bb      	ldr	r3, [r7, #24]
 80018b8:	2200      	movs	r2, #0
 80018ba:	731a      	strb	r2, [r3, #12]
			break;
 80018bc:	e014      	b.n	80018e8 <commands_process+0x104>

		case CMD_FORWARD_DIST_AWAY:
			next->dir = 1;
 80018be:	69bb      	ldr	r3, [r7, #24]
 80018c0:	2201      	movs	r2, #1
 80018c2:	715a      	strb	r2, [r3, #5]
			next->distType = STOP_AWAY;
 80018c4:	69bb      	ldr	r3, [r7, #24]
 80018c6:	2201      	movs	r2, #1
 80018c8:	731a      	strb	r2, [r3, #12]
			break;
 80018ca:	e00d      	b.n	80018e8 <commands_process+0x104>

		case CMD_BACKWARD_DIST_TARGET:
			next->dir = -1;
 80018cc:	69bb      	ldr	r3, [r7, #24]
 80018ce:	22ff      	movs	r2, #255	; 0xff
 80018d0:	715a      	strb	r2, [r3, #5]
			next->distType = TARGET;
 80018d2:	69bb      	ldr	r3, [r7, #24]
 80018d4:	2200      	movs	r2, #0
 80018d6:	731a      	strb	r2, [r3, #12]
			break;
 80018d8:	e006      	b.n	80018e8 <commands_process+0x104>

		case CMD_BACKWARD_DIST_AWAY:
			next->dir = -1;
 80018da:	69bb      	ldr	r3, [r7, #24]
 80018dc:	22ff      	movs	r2, #255	; 0xff
 80018de:	715a      	strb	r2, [r3, #5]
			next->distType = STOP_AWAY;
 80018e0:	69bb      	ldr	r3, [r7, #24]
 80018e2:	2201      	movs	r2, #1
 80018e4:	731a      	strb	r2, [r3, #12]
			break;
 80018e6:	bf00      	nop
		default:
			//invalid command, return.
			return;
	}

	if (c != CMD_FULL_STOP) {
 80018e8:	7dfb      	ldrb	r3, [r7, #23]
 80018ea:	2b53      	cmp	r3, #83	; 0x53
 80018ec:	d02b      	beq.n	8001946 <commands_process+0x162>
		temp++;
 80018ee:	693b      	ldr	r3, [r7, #16]
 80018f0:	3301      	adds	r3, #1
 80018f2:	613b      	str	r3, [r7, #16]
		next->speed = parse_uint16_t_until(&temp, CMD_SEP, 3);
 80018f4:	f107 0310 	add.w	r3, r7, #16
 80018f8:	2203      	movs	r2, #3
 80018fa:	217c      	movs	r1, #124	; 0x7c
 80018fc:	4618      	mov	r0, r3
 80018fe:	f000 f8b1 	bl	8001a64 <parse_uint16_t_until>
 8001902:	4603      	mov	r3, r0
 8001904:	b2da      	uxtb	r2, r3
 8001906:	69bb      	ldr	r3, [r7, #24]
 8001908:	719a      	strb	r2, [r3, #6]
		temp++;
 800190a:	693b      	ldr	r3, [r7, #16]
 800190c:	3301      	adds	r3, #1
 800190e:	613b      	str	r3, [r7, #16]
		next->steeringAngle = parse_float_until(&temp, CMD_SEP, 6);
 8001910:	f107 0310 	add.w	r3, r7, #16
 8001914:	2206      	movs	r2, #6
 8001916:	217c      	movs	r1, #124	; 0x7c
 8001918:	4618      	mov	r0, r3
 800191a:	f000 f8e1 	bl	8001ae0 <parse_float_until>
 800191e:	eef0 7a40 	vmov.f32	s15, s0
 8001922:	69bb      	ldr	r3, [r7, #24]
 8001924:	edc3 7a02 	vstr	s15, [r3, #8]
		temp++;
 8001928:	693b      	ldr	r3, [r7, #16]
 800192a:	3301      	adds	r3, #1
 800192c:	613b      	str	r3, [r7, #16]
		next->val = parse_float_until(&temp, CMD_END, 6);
 800192e:	f107 0310 	add.w	r3, r7, #16
 8001932:	2206      	movs	r2, #6
 8001934:	210a      	movs	r1, #10
 8001936:	4618      	mov	r0, r3
 8001938:	f000 f8d2 	bl	8001ae0 <parse_float_until>
 800193c:	eef0 7a40 	vmov.f32	s15, s0
 8001940:	69bb      	ldr	r3, [r7, #24]
 8001942:	edc3 7a04 	vstr	s15, [r3, #16]
	}

	//copy command.
	uint8_t str_size = temp - buf + 1;
 8001946:	693a      	ldr	r2, [r7, #16]
 8001948:	68bb      	ldr	r3, [r7, #8]
 800194a:	1ad3      	subs	r3, r2, r3
 800194c:	b2db      	uxtb	r3, r3
 800194e:	3301      	adds	r3, #1
 8001950:	75bb      	strb	r3, [r7, #22]
	next->str_size = str_size;
 8001952:	69bb      	ldr	r3, [r7, #24]
 8001954:	7dba      	ldrb	r2, [r7, #22]
 8001956:	711a      	strb	r2, [r3, #4]
	next->str = (uint8_t *) malloc(str_size * sizeof(uint8_t));
 8001958:	7dbb      	ldrb	r3, [r7, #22]
 800195a:	4618      	mov	r0, r3
 800195c:	f008 fcfa 	bl	800a354 <malloc>
 8001960:	4603      	mov	r3, r0
 8001962:	461a      	mov	r2, r3
 8001964:	69bb      	ldr	r3, [r7, #24]
 8001966:	601a      	str	r2, [r3, #0]
	memcpy(next->str, buf, str_size);
 8001968:	69bb      	ldr	r3, [r7, #24]
 800196a:	681b      	ldr	r3, [r3, #0]
 800196c:	7dba      	ldrb	r2, [r7, #22]
 800196e:	68b9      	ldr	r1, [r7, #8]
 8001970:	4618      	mov	r0, r3
 8001972:	f009 fe0a 	bl	800b58a <memcpy>


	if (cur == NULL) {
 8001976:	4b10      	ldr	r3, [pc, #64]	; (80019b8 <commands_process+0x1d4>)
 8001978:	681b      	ldr	r3, [r3, #0]
 800197a:	2b00      	cmp	r3, #0
 800197c:	d103      	bne.n	8001986 <commands_process+0x1a2>
		cur = next;
 800197e:	4a0e      	ldr	r2, [pc, #56]	; (80019b8 <commands_process+0x1d4>)
 8001980:	69bb      	ldr	r3, [r7, #24]
 8001982:	6013      	str	r3, [r2, #0]
 8001984:	e00d      	b.n	80019a2 <commands_process+0x1be>
	} else {
		Command *temp = cur;
 8001986:	4b0c      	ldr	r3, [pc, #48]	; (80019b8 <commands_process+0x1d4>)
 8001988:	681b      	ldr	r3, [r3, #0]
 800198a:	61fb      	str	r3, [r7, #28]
		while (temp->next != NULL) {
 800198c:	e002      	b.n	8001994 <commands_process+0x1b0>
			temp = temp->next;
 800198e:	69fb      	ldr	r3, [r7, #28]
 8001990:	695b      	ldr	r3, [r3, #20]
 8001992:	61fb      	str	r3, [r7, #28]
		while (temp->next != NULL) {
 8001994:	69fb      	ldr	r3, [r7, #28]
 8001996:	695b      	ldr	r3, [r3, #20]
 8001998:	2b00      	cmp	r3, #0
 800199a:	d1f8      	bne.n	800198e <commands_process+0x1aa>
		}
		temp->next = next;
 800199c:	69fb      	ldr	r3, [r7, #28]
 800199e:	69ba      	ldr	r2, [r7, #24]
 80019a0:	615a      	str	r2, [r3, #20]
	}

	//acknowledge command has been received and queued.
	commands_ack(uart, next, CMD_RCV);
 80019a2:	2272      	movs	r2, #114	; 0x72
 80019a4:	69b9      	ldr	r1, [r7, #24]
 80019a6:	68f8      	ldr	r0, [r7, #12]
 80019a8:	f7ff feef 	bl	800178a <commands_ack>
 80019ac:	e000      	b.n	80019b0 <commands_process+0x1cc>
			return;
 80019ae:	bf00      	nop
}
 80019b0:	3720      	adds	r7, #32
 80019b2:	46bd      	mov	sp, r7
 80019b4:	bd80      	pop	{r7, pc}
 80019b6:	bf00      	nop
 80019b8:	20000210 	.word	0x20000210

080019bc <commands_pop>:


Command *commands_pop() {
 80019bc:	b480      	push	{r7}
 80019be:	b083      	sub	sp, #12
 80019c0:	af00      	add	r7, sp, #0
	Command *ret = cur;
 80019c2:	4b09      	ldr	r3, [pc, #36]	; (80019e8 <commands_pop+0x2c>)
 80019c4:	681b      	ldr	r3, [r3, #0]
 80019c6:	607b      	str	r3, [r7, #4]
	if (cur != NULL) cur = cur->next;
 80019c8:	4b07      	ldr	r3, [pc, #28]	; (80019e8 <commands_pop+0x2c>)
 80019ca:	681b      	ldr	r3, [r3, #0]
 80019cc:	2b00      	cmp	r3, #0
 80019ce:	d004      	beq.n	80019da <commands_pop+0x1e>
 80019d0:	4b05      	ldr	r3, [pc, #20]	; (80019e8 <commands_pop+0x2c>)
 80019d2:	681b      	ldr	r3, [r3, #0]
 80019d4:	695b      	ldr	r3, [r3, #20]
 80019d6:	4a04      	ldr	r2, [pc, #16]	; (80019e8 <commands_pop+0x2c>)
 80019d8:	6013      	str	r3, [r2, #0]
	return ret;
 80019da:	687b      	ldr	r3, [r7, #4]
}
 80019dc:	4618      	mov	r0, r3
 80019de:	370c      	adds	r7, #12
 80019e0:	46bd      	mov	sp, r7
 80019e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019e6:	4770      	bx	lr
 80019e8:	20000210 	.word	0x20000210

080019ec <commands_peek>:

Command *commands_peek() {
 80019ec:	b480      	push	{r7}
 80019ee:	af00      	add	r7, sp, #0
	return cur;
 80019f0:	4b03      	ldr	r3, [pc, #12]	; (8001a00 <commands_peek+0x14>)
 80019f2:	681b      	ldr	r3, [r3, #0]
}
 80019f4:	4618      	mov	r0, r3
 80019f6:	46bd      	mov	sp, r7
 80019f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019fc:	4770      	bx	lr
 80019fe:	bf00      	nop
 8001a00:	20000210 	.word	0x20000210

08001a04 <commands_end>:

void commands_end(UART_HandleTypeDef *uart, Command *cmd) {
 8001a04:	b580      	push	{r7, lr}
 8001a06:	b082      	sub	sp, #8
 8001a08:	af00      	add	r7, sp, #0
 8001a0a:	6078      	str	r0, [r7, #4]
 8001a0c:	6039      	str	r1, [r7, #0]
	commands_ack(uart, cmd, CMD_FIN);
 8001a0e:	2266      	movs	r2, #102	; 0x66
 8001a10:	6839      	ldr	r1, [r7, #0]
 8001a12:	6878      	ldr	r0, [r7, #4]
 8001a14:	f7ff feb9 	bl	800178a <commands_ack>
	free(cmd->str);
 8001a18:	683b      	ldr	r3, [r7, #0]
 8001a1a:	681b      	ldr	r3, [r3, #0]
 8001a1c:	4618      	mov	r0, r3
 8001a1e:	f008 fca1 	bl	800a364 <free>
	free(cmd);
 8001a22:	6838      	ldr	r0, [r7, #0]
 8001a24:	f008 fc9e 	bl	800a364 <free>
}
 8001a28:	bf00      	nop
 8001a2a:	3708      	adds	r7, #8
 8001a2c:	46bd      	mov	sp, r7
 8001a2e:	bd80      	pop	{r7, pc}

08001a30 <abs_float>:
#include "convert.h"

float abs_float(float a) {
 8001a30:	b480      	push	{r7}
 8001a32:	b083      	sub	sp, #12
 8001a34:	af00      	add	r7, sp, #0
 8001a36:	ed87 0a01 	vstr	s0, [r7, #4]
	return a < 0 ? -a : a;
 8001a3a:	edd7 7a01 	vldr	s15, [r7, #4]
 8001a3e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001a42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001a46:	d504      	bpl.n	8001a52 <abs_float+0x22>
 8001a48:	edd7 7a01 	vldr	s15, [r7, #4]
 8001a4c:	eef1 7a67 	vneg.f32	s15, s15
 8001a50:	e001      	b.n	8001a56 <abs_float+0x26>
 8001a52:	edd7 7a01 	vldr	s15, [r7, #4]
}
 8001a56:	eeb0 0a67 	vmov.f32	s0, s15
 8001a5a:	370c      	adds	r7, #12
 8001a5c:	46bd      	mov	sp, r7
 8001a5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a62:	4770      	bx	lr

08001a64 <parse_uint16_t_until>:

	return ret;
}

//get a uint16_t from a string until terminating character.
uint16_t parse_uint16_t_until(uint8_t **buf_ptr, uint8_t until, uint8_t sizeExpected) {
 8001a64:	b480      	push	{r7}
 8001a66:	b085      	sub	sp, #20
 8001a68:	af00      	add	r7, sp, #0
 8001a6a:	6078      	str	r0, [r7, #4]
 8001a6c:	460b      	mov	r3, r1
 8001a6e:	70fb      	strb	r3, [r7, #3]
 8001a70:	4613      	mov	r3, r2
 8001a72:	70bb      	strb	r3, [r7, #2]
	uint8_t i = 0, c = **buf_ptr;
 8001a74:	2300      	movs	r3, #0
 8001a76:	73fb      	strb	r3, [r7, #15]
 8001a78:	687b      	ldr	r3, [r7, #4]
 8001a7a:	681b      	ldr	r3, [r3, #0]
 8001a7c:	781b      	ldrb	r3, [r3, #0]
 8001a7e:	73bb      	strb	r3, [r7, #14]
	uint16_t res = 0;
 8001a80:	2300      	movs	r3, #0
 8001a82:	81bb      	strh	r3, [r7, #12]

	while (i < sizeExpected && c != until) {
 8001a84:	e01d      	b.n	8001ac2 <parse_uint16_t_until+0x5e>
		if (c <= '9' && c >= '0') res = res * 10 + (c - '0');
 8001a86:	7bbb      	ldrb	r3, [r7, #14]
 8001a88:	2b39      	cmp	r3, #57	; 0x39
 8001a8a:	d80e      	bhi.n	8001aaa <parse_uint16_t_until+0x46>
 8001a8c:	7bbb      	ldrb	r3, [r7, #14]
 8001a8e:	2b2f      	cmp	r3, #47	; 0x2f
 8001a90:	d90b      	bls.n	8001aaa <parse_uint16_t_until+0x46>
 8001a92:	89bb      	ldrh	r3, [r7, #12]
 8001a94:	461a      	mov	r2, r3
 8001a96:	0092      	lsls	r2, r2, #2
 8001a98:	4413      	add	r3, r2
 8001a9a:	005b      	lsls	r3, r3, #1
 8001a9c:	b29a      	uxth	r2, r3
 8001a9e:	7bbb      	ldrb	r3, [r7, #14]
 8001aa0:	b29b      	uxth	r3, r3
 8001aa2:	4413      	add	r3, r2
 8001aa4:	b29b      	uxth	r3, r3
 8001aa6:	3b30      	subs	r3, #48	; 0x30
 8001aa8:	81bb      	strh	r3, [r7, #12]

		c = *(++(*buf_ptr)); i++;
 8001aaa:	687b      	ldr	r3, [r7, #4]
 8001aac:	681b      	ldr	r3, [r3, #0]
 8001aae:	1c5a      	adds	r2, r3, #1
 8001ab0:	687b      	ldr	r3, [r7, #4]
 8001ab2:	601a      	str	r2, [r3, #0]
 8001ab4:	687b      	ldr	r3, [r7, #4]
 8001ab6:	681b      	ldr	r3, [r3, #0]
 8001ab8:	781b      	ldrb	r3, [r3, #0]
 8001aba:	73bb      	strb	r3, [r7, #14]
 8001abc:	7bfb      	ldrb	r3, [r7, #15]
 8001abe:	3301      	adds	r3, #1
 8001ac0:	73fb      	strb	r3, [r7, #15]
	while (i < sizeExpected && c != until) {
 8001ac2:	7bfa      	ldrb	r2, [r7, #15]
 8001ac4:	78bb      	ldrb	r3, [r7, #2]
 8001ac6:	429a      	cmp	r2, r3
 8001ac8:	d203      	bcs.n	8001ad2 <parse_uint16_t_until+0x6e>
 8001aca:	7bba      	ldrb	r2, [r7, #14]
 8001acc:	78fb      	ldrb	r3, [r7, #3]
 8001ace:	429a      	cmp	r2, r3
 8001ad0:	d1d9      	bne.n	8001a86 <parse_uint16_t_until+0x22>
	}

	return res;
 8001ad2:	89bb      	ldrh	r3, [r7, #12]
}
 8001ad4:	4618      	mov	r0, r3
 8001ad6:	3714      	adds	r7, #20
 8001ad8:	46bd      	mov	sp, r7
 8001ada:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ade:	4770      	bx	lr

08001ae0 <parse_float_until>:

//get a float from a string until terminating character.
float parse_float_until(uint8_t **buf_ptr, uint8_t until, uint8_t sizeExpected) {
 8001ae0:	b580      	push	{r7, lr}
 8001ae2:	b088      	sub	sp, #32
 8001ae4:	af00      	add	r7, sp, #0
 8001ae6:	6078      	str	r0, [r7, #4]
 8001ae8:	460b      	mov	r3, r1
 8001aea:	70fb      	strb	r3, [r7, #3]
 8001aec:	4613      	mov	r3, r2
 8001aee:	70bb      	strb	r3, [r7, #2]
	uint8_t i = 0, c = **buf_ptr, isFrac = 0;
 8001af0:	2300      	movs	r3, #0
 8001af2:	77fb      	strb	r3, [r7, #31]
 8001af4:	687b      	ldr	r3, [r7, #4]
 8001af6:	681b      	ldr	r3, [r3, #0]
 8001af8:	781b      	ldrb	r3, [r3, #0]
 8001afa:	77bb      	strb	r3, [r7, #30]
 8001afc:	2300      	movs	r3, #0
 8001afe:	777b      	strb	r3, [r7, #29]
	int8_t sign = 1;
 8001b00:	2301      	movs	r3, #1
 8001b02:	773b      	strb	r3, [r7, #28]
	uint32_t whole = 0;
 8001b04:	2300      	movs	r3, #0
 8001b06:	61bb      	str	r3, [r7, #24]
	float frac = 0, div = 0.1;
 8001b08:	f04f 0300 	mov.w	r3, #0
 8001b0c:	617b      	str	r3, [r7, #20]
 8001b0e:	4b3c      	ldr	r3, [pc, #240]	; (8001c00 <parse_float_until+0x120>)
 8001b10:	613b      	str	r3, [r7, #16]

	while (i < sizeExpected && c != until) {
 8001b12:	e051      	b.n	8001bb8 <parse_float_until+0xd8>
		if (i == 0 && c == '-') sign *= -1;
 8001b14:	7ffb      	ldrb	r3, [r7, #31]
 8001b16:	2b00      	cmp	r3, #0
 8001b18:	d107      	bne.n	8001b2a <parse_float_until+0x4a>
 8001b1a:	7fbb      	ldrb	r3, [r7, #30]
 8001b1c:	2b2d      	cmp	r3, #45	; 0x2d
 8001b1e:	d104      	bne.n	8001b2a <parse_float_until+0x4a>
 8001b20:	7f3b      	ldrb	r3, [r7, #28]
 8001b22:	425b      	negs	r3, r3
 8001b24:	b2db      	uxtb	r3, r3
 8001b26:	773b      	strb	r3, [r7, #28]
 8001b28:	e03a      	b.n	8001ba0 <parse_float_until+0xc0>
		else if (c == '.') isFrac = 1;
 8001b2a:	7fbb      	ldrb	r3, [r7, #30]
 8001b2c:	2b2e      	cmp	r3, #46	; 0x2e
 8001b2e:	d102      	bne.n	8001b36 <parse_float_until+0x56>
 8001b30:	2301      	movs	r3, #1
 8001b32:	777b      	strb	r3, [r7, #29]
 8001b34:	e034      	b.n	8001ba0 <parse_float_until+0xc0>
		else if (c <= '9' && c >= '0') {
 8001b36:	7fbb      	ldrb	r3, [r7, #30]
 8001b38:	2b39      	cmp	r3, #57	; 0x39
 8001b3a:	d831      	bhi.n	8001ba0 <parse_float_until+0xc0>
 8001b3c:	7fbb      	ldrb	r3, [r7, #30]
 8001b3e:	2b2f      	cmp	r3, #47	; 0x2f
 8001b40:	d92e      	bls.n	8001ba0 <parse_float_until+0xc0>
			uint8_t d = c - '0';
 8001b42:	7fbb      	ldrb	r3, [r7, #30]
 8001b44:	3b30      	subs	r3, #48	; 0x30
 8001b46:	73fb      	strb	r3, [r7, #15]
			if (isFrac) {
 8001b48:	7f7b      	ldrb	r3, [r7, #29]
 8001b4a:	2b00      	cmp	r3, #0
 8001b4c:	d01f      	beq.n	8001b8e <parse_float_until+0xae>
				frac += div * d;
 8001b4e:	7bfb      	ldrb	r3, [r7, #15]
 8001b50:	ee07 3a90 	vmov	s15, r3
 8001b54:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8001b58:	edd7 7a04 	vldr	s15, [r7, #16]
 8001b5c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001b60:	ed97 7a05 	vldr	s14, [r7, #20]
 8001b64:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001b68:	edc7 7a05 	vstr	s15, [r7, #20]
				div *= 0.1;
 8001b6c:	6938      	ldr	r0, [r7, #16]
 8001b6e:	f7fe fceb 	bl	8000548 <__aeabi_f2d>
 8001b72:	a321      	add	r3, pc, #132	; (adr r3, 8001bf8 <parse_float_until+0x118>)
 8001b74:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001b78:	f7fe fd3e 	bl	80005f8 <__aeabi_dmul>
 8001b7c:	4602      	mov	r2, r0
 8001b7e:	460b      	mov	r3, r1
 8001b80:	4610      	mov	r0, r2
 8001b82:	4619      	mov	r1, r3
 8001b84:	f7ff f830 	bl	8000be8 <__aeabi_d2f>
 8001b88:	4603      	mov	r3, r0
 8001b8a:	613b      	str	r3, [r7, #16]
 8001b8c:	e008      	b.n	8001ba0 <parse_float_until+0xc0>
			}
			else whole = whole * 10 + d;
 8001b8e:	69ba      	ldr	r2, [r7, #24]
 8001b90:	4613      	mov	r3, r2
 8001b92:	009b      	lsls	r3, r3, #2
 8001b94:	4413      	add	r3, r2
 8001b96:	005b      	lsls	r3, r3, #1
 8001b98:	461a      	mov	r2, r3
 8001b9a:	7bfb      	ldrb	r3, [r7, #15]
 8001b9c:	4413      	add	r3, r2
 8001b9e:	61bb      	str	r3, [r7, #24]
		}

		c = *(++(*buf_ptr)); i++;
 8001ba0:	687b      	ldr	r3, [r7, #4]
 8001ba2:	681b      	ldr	r3, [r3, #0]
 8001ba4:	1c5a      	adds	r2, r3, #1
 8001ba6:	687b      	ldr	r3, [r7, #4]
 8001ba8:	601a      	str	r2, [r3, #0]
 8001baa:	687b      	ldr	r3, [r7, #4]
 8001bac:	681b      	ldr	r3, [r3, #0]
 8001bae:	781b      	ldrb	r3, [r3, #0]
 8001bb0:	77bb      	strb	r3, [r7, #30]
 8001bb2:	7ffb      	ldrb	r3, [r7, #31]
 8001bb4:	3301      	adds	r3, #1
 8001bb6:	77fb      	strb	r3, [r7, #31]
	while (i < sizeExpected && c != until) {
 8001bb8:	7ffa      	ldrb	r2, [r7, #31]
 8001bba:	78bb      	ldrb	r3, [r7, #2]
 8001bbc:	429a      	cmp	r2, r3
 8001bbe:	d203      	bcs.n	8001bc8 <parse_float_until+0xe8>
 8001bc0:	7fba      	ldrb	r2, [r7, #30]
 8001bc2:	78fb      	ldrb	r3, [r7, #3]
 8001bc4:	429a      	cmp	r2, r3
 8001bc6:	d1a5      	bne.n	8001b14 <parse_float_until+0x34>
	}

	return (whole + frac) * sign;
 8001bc8:	69bb      	ldr	r3, [r7, #24]
 8001bca:	ee07 3a90 	vmov	s15, r3
 8001bce:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8001bd2:	edd7 7a05 	vldr	s15, [r7, #20]
 8001bd6:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001bda:	f997 301c 	ldrsb.w	r3, [r7, #28]
 8001bde:	ee07 3a90 	vmov	s15, r3
 8001be2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001be6:	ee67 7a27 	vmul.f32	s15, s14, s15
}
 8001bea:	eeb0 0a67 	vmov.f32	s0, s15
 8001bee:	3720      	adds	r7, #32
 8001bf0:	46bd      	mov	sp, r7
 8001bf2:	bd80      	pop	{r7, pc}
 8001bf4:	f3af 8000 	nop.w
 8001bf8:	9999999a 	.word	0x9999999a
 8001bfc:	3fb99999 	.word	0x3fb99999
 8001c00:	3dcccccd 	.word	0x3dcccccd
 8001c04:	00000000 	.word	0x00000000

08001c08 <get_turning_r_steer_cm>:


static float get_turning_r_steer_cm(float steeringAngle) {
 8001c08:	b580      	push	{r7, lr}
 8001c0a:	b082      	sub	sp, #8
 8001c0c:	af00      	add	r7, sp, #0
 8001c0e:	ed87 0a01 	vstr	s0, [r7, #4]
	return CHASSIS_CM / sin(steeringAngle * M_PI / 180);
 8001c12:	6878      	ldr	r0, [r7, #4]
 8001c14:	f7fe fc98 	bl	8000548 <__aeabi_f2d>
 8001c18:	a319      	add	r3, pc, #100	; (adr r3, 8001c80 <get_turning_r_steer_cm+0x78>)
 8001c1a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001c1e:	f7fe fceb 	bl	80005f8 <__aeabi_dmul>
 8001c22:	4602      	mov	r2, r0
 8001c24:	460b      	mov	r3, r1
 8001c26:	4610      	mov	r0, r2
 8001c28:	4619      	mov	r1, r3
 8001c2a:	f04f 0200 	mov.w	r2, #0
 8001c2e:	4b12      	ldr	r3, [pc, #72]	; (8001c78 <get_turning_r_steer_cm+0x70>)
 8001c30:	f7fe fe0c 	bl	800084c <__aeabi_ddiv>
 8001c34:	4602      	mov	r2, r0
 8001c36:	460b      	mov	r3, r1
 8001c38:	ec43 2b17 	vmov	d7, r2, r3
 8001c3c:	eeb0 0a47 	vmov.f32	s0, s14
 8001c40:	eef0 0a67 	vmov.f32	s1, s15
 8001c44:	f00d f838 	bl	800ecb8 <sin>
 8001c48:	ec53 2b10 	vmov	r2, r3, d0
 8001c4c:	f04f 0000 	mov.w	r0, #0
 8001c50:	490a      	ldr	r1, [pc, #40]	; (8001c7c <get_turning_r_steer_cm+0x74>)
 8001c52:	f7fe fdfb 	bl	800084c <__aeabi_ddiv>
 8001c56:	4602      	mov	r2, r0
 8001c58:	460b      	mov	r3, r1
 8001c5a:	4610      	mov	r0, r2
 8001c5c:	4619      	mov	r1, r3
 8001c5e:	f7fe ffc3 	bl	8000be8 <__aeabi_d2f>
 8001c62:	4603      	mov	r3, r0
 8001c64:	ee07 3a90 	vmov	s15, r3
}
 8001c68:	eeb0 0a67 	vmov.f32	s0, s15
 8001c6c:	3708      	adds	r7, #8
 8001c6e:	46bd      	mov	sp, r7
 8001c70:	bd80      	pop	{r7, pc}
 8001c72:	bf00      	nop
 8001c74:	f3af 8000 	nop.w
 8001c78:	40668000 	.word	0x40668000
 8001c7c:	402d0000 	.word	0x402d0000
 8001c80:	54442d18 	.word	0x54442d18
 8001c84:	400921fb 	.word	0x400921fb

08001c88 <get_turning_r_back_cm>:
float get_turning_r_back_cm(float steeringAngle) {
 8001c88:	b580      	push	{r7, lr}
 8001c8a:	b082      	sub	sp, #8
 8001c8c:	af00      	add	r7, sp, #0
 8001c8e:	ed87 0a01 	vstr	s0, [r7, #4]
	return CHASSIS_CM / tan(steeringAngle * M_PI / 180);
 8001c92:	6878      	ldr	r0, [r7, #4]
 8001c94:	f7fe fc58 	bl	8000548 <__aeabi_f2d>
 8001c98:	a319      	add	r3, pc, #100	; (adr r3, 8001d00 <get_turning_r_back_cm+0x78>)
 8001c9a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001c9e:	f7fe fcab 	bl	80005f8 <__aeabi_dmul>
 8001ca2:	4602      	mov	r2, r0
 8001ca4:	460b      	mov	r3, r1
 8001ca6:	4610      	mov	r0, r2
 8001ca8:	4619      	mov	r1, r3
 8001caa:	f04f 0200 	mov.w	r2, #0
 8001cae:	4b12      	ldr	r3, [pc, #72]	; (8001cf8 <get_turning_r_back_cm+0x70>)
 8001cb0:	f7fe fdcc 	bl	800084c <__aeabi_ddiv>
 8001cb4:	4602      	mov	r2, r0
 8001cb6:	460b      	mov	r3, r1
 8001cb8:	ec43 2b17 	vmov	d7, r2, r3
 8001cbc:	eeb0 0a47 	vmov.f32	s0, s14
 8001cc0:	eef0 0a67 	vmov.f32	s1, s15
 8001cc4:	f00d f850 	bl	800ed68 <tan>
 8001cc8:	ec53 2b10 	vmov	r2, r3, d0
 8001ccc:	f04f 0000 	mov.w	r0, #0
 8001cd0:	490a      	ldr	r1, [pc, #40]	; (8001cfc <get_turning_r_back_cm+0x74>)
 8001cd2:	f7fe fdbb 	bl	800084c <__aeabi_ddiv>
 8001cd6:	4602      	mov	r2, r0
 8001cd8:	460b      	mov	r3, r1
 8001cda:	4610      	mov	r0, r2
 8001cdc:	4619      	mov	r1, r3
 8001cde:	f7fe ff83 	bl	8000be8 <__aeabi_d2f>
 8001ce2:	4603      	mov	r3, r0
 8001ce4:	ee07 3a90 	vmov	s15, r3
}
 8001ce8:	eeb0 0a67 	vmov.f32	s0, s15
 8001cec:	3708      	adds	r7, #8
 8001cee:	46bd      	mov	sp, r7
 8001cf0:	bd80      	pop	{r7, pc}
 8001cf2:	bf00      	nop
 8001cf4:	f3af 8000 	nop.w
 8001cf8:	40668000 	.word	0x40668000
 8001cfc:	402d0000 	.word	0x402d0000
 8001d00:	54442d18 	.word	0x54442d18
 8001d04:	400921fb 	.word	0x400921fb

08001d08 <get_turning_r_robot_cm>:
float get_turning_r_robot_cm(float steeringAngle) {
 8001d08:	b580      	push	{r7, lr}
 8001d0a:	b086      	sub	sp, #24
 8001d0c:	af00      	add	r7, sp, #0
 8001d0e:	ed87 0a01 	vstr	s0, [r7, #4]
	float r_steer = get_turning_r_steer_cm(steeringAngle);
 8001d12:	ed97 0a01 	vldr	s0, [r7, #4]
 8001d16:	f7ff ff77 	bl	8001c08 <get_turning_r_steer_cm>
 8001d1a:	ed87 0a04 	vstr	s0, [r7, #16]
	float L2 = CHASSIS_CM / 2;
 8001d1e:	4b19      	ldr	r3, [pc, #100]	; (8001d84 <get_turning_r_robot_cm+0x7c>)
 8001d20:	60fb      	str	r3, [r7, #12]
	float r = sqrt(r_steer * r_steer + L2 * L2);
 8001d22:	edd7 7a04 	vldr	s15, [r7, #16]
 8001d26:	ee27 7aa7 	vmul.f32	s14, s15, s15
 8001d2a:	edd7 7a03 	vldr	s15, [r7, #12]
 8001d2e:	ee67 7aa7 	vmul.f32	s15, s15, s15
 8001d32:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001d36:	ee17 0a90 	vmov	r0, s15
 8001d3a:	f7fe fc05 	bl	8000548 <__aeabi_f2d>
 8001d3e:	4602      	mov	r2, r0
 8001d40:	460b      	mov	r3, r1
 8001d42:	ec43 2b10 	vmov	d0, r2, r3
 8001d46:	f00c ff89 	bl	800ec5c <sqrt>
 8001d4a:	ec53 2b10 	vmov	r2, r3, d0
 8001d4e:	4610      	mov	r0, r2
 8001d50:	4619      	mov	r1, r3
 8001d52:	f7fe ff49 	bl	8000be8 <__aeabi_d2f>
 8001d56:	4603      	mov	r3, r0
 8001d58:	617b      	str	r3, [r7, #20]
	if (steeringAngle < 0) r = -r;
 8001d5a:	edd7 7a01 	vldr	s15, [r7, #4]
 8001d5e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8001d62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001d66:	d505      	bpl.n	8001d74 <get_turning_r_robot_cm+0x6c>
 8001d68:	edd7 7a05 	vldr	s15, [r7, #20]
 8001d6c:	eef1 7a67 	vneg.f32	s15, s15
 8001d70:	edc7 7a05 	vstr	s15, [r7, #20]
	return r;
 8001d74:	697b      	ldr	r3, [r7, #20]
 8001d76:	ee07 3a90 	vmov	s15, r3
}
 8001d7a:	eeb0 0a67 	vmov.f32	s0, s15
 8001d7e:	3718      	adds	r7, #24
 8001d80:	46bd      	mov	sp, r7
 8001d82:	bd80      	pop	{r7, pc}
 8001d84:	40e80000 	.word	0x40e80000

08001d88 <get_w_ms>:

//angular velocity (with actual translational speed).
float get_w_ms(float speed_cm_ms, float turning_r_robot_cm) {
 8001d88:	b580      	push	{r7, lr}
 8001d8a:	b082      	sub	sp, #8
 8001d8c:	af00      	add	r7, sp, #0
 8001d8e:	ed87 0a01 	vstr	s0, [r7, #4]
 8001d92:	edc7 0a00 	vstr	s1, [r7]
	return speed_cm_ms / turning_r_robot_cm *  180 / M_PI;
 8001d96:	edd7 6a01 	vldr	s13, [r7, #4]
 8001d9a:	ed97 7a00 	vldr	s14, [r7]
 8001d9e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001da2:	ed9f 7a0f 	vldr	s14, [pc, #60]	; 8001de0 <get_w_ms+0x58>
 8001da6:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001daa:	ee17 0a90 	vmov	r0, s15
 8001dae:	f7fe fbcb 	bl	8000548 <__aeabi_f2d>
 8001db2:	a309      	add	r3, pc, #36	; (adr r3, 8001dd8 <get_w_ms+0x50>)
 8001db4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001db8:	f7fe fd48 	bl	800084c <__aeabi_ddiv>
 8001dbc:	4602      	mov	r2, r0
 8001dbe:	460b      	mov	r3, r1
 8001dc0:	4610      	mov	r0, r2
 8001dc2:	4619      	mov	r1, r3
 8001dc4:	f7fe ff10 	bl	8000be8 <__aeabi_d2f>
 8001dc8:	4603      	mov	r3, r0
 8001dca:	ee07 3a90 	vmov	s15, r3
}
 8001dce:	eeb0 0a67 	vmov.f32	s0, s15
 8001dd2:	3708      	adds	r7, #8
 8001dd4:	46bd      	mov	sp, r7
 8001dd6:	bd80      	pop	{r7, pc}
 8001dd8:	54442d18 	.word	0x54442d18
 8001ddc:	400921fb 	.word	0x400921fb
 8001de0:	43340000 	.word	0x43340000

08001de4 <mod_360>:

static float mod_360(float angle) {
 8001de4:	b480      	push	{r7}
 8001de6:	b083      	sub	sp, #12
 8001de8:	af00      	add	r7, sp, #0
 8001dea:	ed87 0a01 	vstr	s0, [r7, #4]
	while (angle < -180) angle += 360;
 8001dee:	e007      	b.n	8001e00 <mod_360+0x1c>
 8001df0:	edd7 7a01 	vldr	s15, [r7, #4]
 8001df4:	ed9f 7a15 	vldr	s14, [pc, #84]	; 8001e4c <mod_360+0x68>
 8001df8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8001dfc:	edc7 7a01 	vstr	s15, [r7, #4]
 8001e00:	edd7 7a01 	vldr	s15, [r7, #4]
 8001e04:	ed9f 7a12 	vldr	s14, [pc, #72]	; 8001e50 <mod_360+0x6c>
 8001e08:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001e0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001e10:	d4ee      	bmi.n	8001df0 <mod_360+0xc>
	while (angle > 180) angle -= 360;
 8001e12:	e007      	b.n	8001e24 <mod_360+0x40>
 8001e14:	edd7 7a01 	vldr	s15, [r7, #4]
 8001e18:	ed9f 7a0c 	vldr	s14, [pc, #48]	; 8001e4c <mod_360+0x68>
 8001e1c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8001e20:	edc7 7a01 	vstr	s15, [r7, #4]
 8001e24:	edd7 7a01 	vldr	s15, [r7, #4]
 8001e28:	ed9f 7a0a 	vldr	s14, [pc, #40]	; 8001e54 <mod_360+0x70>
 8001e2c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001e30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001e34:	dcee      	bgt.n	8001e14 <mod_360+0x30>
	return angle;
 8001e36:	687b      	ldr	r3, [r7, #4]
 8001e38:	ee07 3a90 	vmov	s15, r3
}
 8001e3c:	eeb0 0a67 	vmov.f32	s0, s15
 8001e40:	370c      	adds	r7, #12
 8001e42:	46bd      	mov	sp, r7
 8001e44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e48:	4770      	bx	lr
 8001e4a:	bf00      	nop
 8001e4c:	43b40000 	.word	0x43b40000
 8001e50:	c3340000 	.word	0xc3340000
 8001e54:	43340000 	.word	0x43340000

08001e58 <add_angle>:

float add_angle(float old, float change) {
 8001e58:	b580      	push	{r7, lr}
 8001e5a:	b082      	sub	sp, #8
 8001e5c:	af00      	add	r7, sp, #0
 8001e5e:	ed87 0a01 	vstr	s0, [r7, #4]
 8001e62:	edc7 0a00 	vstr	s1, [r7]
	return mod_360(old + change);
 8001e66:	ed97 7a01 	vldr	s14, [r7, #4]
 8001e6a:	edd7 7a00 	vldr	s15, [r7]
 8001e6e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001e72:	eeb0 0a67 	vmov.f32	s0, s15
 8001e76:	f7ff ffb5 	bl	8001de4 <mod_360>
 8001e7a:	eef0 7a40 	vmov.f32	s15, s0
}
 8001e7e:	eeb0 0a67 	vmov.f32	s0, s15
 8001e82:	3708      	adds	r7, #8
 8001e84:	46bd      	mov	sp, r7
 8001e86:	bd80      	pop	{r7, pc}

08001e88 <angle_diff_180>:

float angle_diff_180(float a1, float a2) {
 8001e88:	b580      	push	{r7, lr}
 8001e8a:	b082      	sub	sp, #8
 8001e8c:	af00      	add	r7, sp, #0
 8001e8e:	ed87 0a01 	vstr	s0, [r7, #4]
 8001e92:	edc7 0a00 	vstr	s1, [r7]
	return mod_360(a1 - a2);
 8001e96:	ed97 7a01 	vldr	s14, [r7, #4]
 8001e9a:	edd7 7a00 	vldr	s15, [r7]
 8001e9e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001ea2:	eeb0 0a67 	vmov.f32	s0, s15
 8001ea6:	f7ff ff9d 	bl	8001de4 <mod_360>
 8001eaa:	eef0 7a40 	vmov.f32	s15, s0
}
 8001eae:	eeb0 0a67 	vmov.f32	s0, s15
 8001eb2:	3708      	adds	r7, #8
 8001eb4:	46bd      	mov	sp, r7
 8001eb6:	bd80      	pop	{r7, pc}

08001eb8 <get_distance_cm>:
	else if (diff > 0 && dir < 0) diff -= 360;

	return diff;
}

float get_distance_cm(uint16_t pulses) {
 8001eb8:	b580      	push	{r7, lr}
 8001eba:	b082      	sub	sp, #8
 8001ebc:	af00      	add	r7, sp, #0
 8001ebe:	4603      	mov	r3, r0
 8001ec0:	80fb      	strh	r3, [r7, #6]
	return ((float) pulses) / MOTOR_PPR * 2 * M_PI * WHEEL_R_CM;
 8001ec2:	88fb      	ldrh	r3, [r7, #6]
 8001ec4:	ee07 3a90 	vmov	s15, r3
 8001ec8:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8001ecc:	eddf 6a14 	vldr	s13, [pc, #80]	; 8001f20 <get_distance_cm+0x68>
 8001ed0:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001ed4:	ee77 7aa7 	vadd.f32	s15, s15, s15
 8001ed8:	ee17 0a90 	vmov	r0, s15
 8001edc:	f7fe fb34 	bl	8000548 <__aeabi_f2d>
 8001ee0:	a30d      	add	r3, pc, #52	; (adr r3, 8001f18 <get_distance_cm+0x60>)
 8001ee2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001ee6:	f7fe fb87 	bl	80005f8 <__aeabi_dmul>
 8001eea:	4602      	mov	r2, r0
 8001eec:	460b      	mov	r3, r1
 8001eee:	4610      	mov	r0, r2
 8001ef0:	4619      	mov	r1, r3
 8001ef2:	f04f 0200 	mov.w	r2, #0
 8001ef6:	4b0b      	ldr	r3, [pc, #44]	; (8001f24 <get_distance_cm+0x6c>)
 8001ef8:	f7fe fb7e 	bl	80005f8 <__aeabi_dmul>
 8001efc:	4602      	mov	r2, r0
 8001efe:	460b      	mov	r3, r1
 8001f00:	4610      	mov	r0, r2
 8001f02:	4619      	mov	r1, r3
 8001f04:	f7fe fe70 	bl	8000be8 <__aeabi_d2f>
 8001f08:	4603      	mov	r3, r0
 8001f0a:	ee07 3a90 	vmov	s15, r3
}
 8001f0e:	eeb0 0a67 	vmov.f32	s0, s15
 8001f12:	3708      	adds	r7, #8
 8001f14:	46bd      	mov	sp, r7
 8001f16:	bd80      	pop	{r7, pc}
 8001f18:	54442d18 	.word	0x54442d18
 8001f1c:	400921fb 	.word	0x400921fb
 8001f20:	44bfe000 	.word	0x44bfe000
 8001f24:	400a0000 	.word	0x400a0000

08001f28 <get_arc_length>:

float get_arc_length(float angle, float r) {
 8001f28:	b5b0      	push	{r4, r5, r7, lr}
 8001f2a:	b082      	sub	sp, #8
 8001f2c:	af00      	add	r7, sp, #0
 8001f2e:	ed87 0a01 	vstr	s0, [r7, #4]
 8001f32:	edc7 0a00 	vstr	s1, [r7]
	return 2 * M_PI * r * angle / 360;
 8001f36:	6838      	ldr	r0, [r7, #0]
 8001f38:	f7fe fb06 	bl	8000548 <__aeabi_f2d>
 8001f3c:	a315      	add	r3, pc, #84	; (adr r3, 8001f94 <get_arc_length+0x6c>)
 8001f3e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001f42:	f7fe fb59 	bl	80005f8 <__aeabi_dmul>
 8001f46:	4602      	mov	r2, r0
 8001f48:	460b      	mov	r3, r1
 8001f4a:	4614      	mov	r4, r2
 8001f4c:	461d      	mov	r5, r3
 8001f4e:	6878      	ldr	r0, [r7, #4]
 8001f50:	f7fe fafa 	bl	8000548 <__aeabi_f2d>
 8001f54:	4602      	mov	r2, r0
 8001f56:	460b      	mov	r3, r1
 8001f58:	4620      	mov	r0, r4
 8001f5a:	4629      	mov	r1, r5
 8001f5c:	f7fe fb4c 	bl	80005f8 <__aeabi_dmul>
 8001f60:	4602      	mov	r2, r0
 8001f62:	460b      	mov	r3, r1
 8001f64:	4610      	mov	r0, r2
 8001f66:	4619      	mov	r1, r3
 8001f68:	f04f 0200 	mov.w	r2, #0
 8001f6c:	4b08      	ldr	r3, [pc, #32]	; (8001f90 <get_arc_length+0x68>)
 8001f6e:	f7fe fc6d 	bl	800084c <__aeabi_ddiv>
 8001f72:	4602      	mov	r2, r0
 8001f74:	460b      	mov	r3, r1
 8001f76:	4610      	mov	r0, r2
 8001f78:	4619      	mov	r1, r3
 8001f7a:	f7fe fe35 	bl	8000be8 <__aeabi_d2f>
 8001f7e:	4603      	mov	r3, r0
 8001f80:	ee07 3a90 	vmov	s15, r3
}
 8001f84:	eeb0 0a67 	vmov.f32	s0, s15
 8001f88:	3708      	adds	r7, #8
 8001f8a:	46bd      	mov	sp, r7
 8001f8c:	bdb0      	pop	{r4, r5, r7, pc}
 8001f8e:	bf00      	nop
 8001f90:	40768000 	.word	0x40768000
 8001f94:	54442d18 	.word	0x54442d18
 8001f98:	401921fb 	.word	0x401921fb

08001f9c <delay_us_init>:
#include "delay_us.h"

static TIM_HandleTypeDef *htim;

void delay_us_init(TIM_HandleTypeDef *tim_ptr) {
 8001f9c:	b580      	push	{r7, lr}
 8001f9e:	b082      	sub	sp, #8
 8001fa0:	af00      	add	r7, sp, #0
 8001fa2:	6078      	str	r0, [r7, #4]
	htim = tim_ptr;
 8001fa4:	4a05      	ldr	r2, [pc, #20]	; (8001fbc <delay_us_init+0x20>)
 8001fa6:	687b      	ldr	r3, [r7, #4]
 8001fa8:	6013      	str	r3, [r2, #0]
	HAL_TIM_Base_Start(htim);
 8001faa:	4b04      	ldr	r3, [pc, #16]	; (8001fbc <delay_us_init+0x20>)
 8001fac:	681b      	ldr	r3, [r3, #0]
 8001fae:	4618      	mov	r0, r3
 8001fb0:	f005 fc0a 	bl	80077c8 <HAL_TIM_Base_Start>
}
 8001fb4:	bf00      	nop
 8001fb6:	3708      	adds	r7, #8
 8001fb8:	46bd      	mov	sp, r7
 8001fba:	bd80      	pop	{r7, pc}
 8001fbc:	20000214 	.word	0x20000214

08001fc0 <delay_us_wait>:

void delay_us_wait(uint16_t us) {
 8001fc0:	b480      	push	{r7}
 8001fc2:	b083      	sub	sp, #12
 8001fc4:	af00      	add	r7, sp, #0
 8001fc6:	4603      	mov	r3, r0
 8001fc8:	80fb      	strh	r3, [r7, #6]
	__HAL_TIM_SET_COUNTER(htim, 0);
 8001fca:	4b0a      	ldr	r3, [pc, #40]	; (8001ff4 <delay_us_wait+0x34>)
 8001fcc:	681b      	ldr	r3, [r3, #0]
 8001fce:	681b      	ldr	r3, [r3, #0]
 8001fd0:	2200      	movs	r2, #0
 8001fd2:	625a      	str	r2, [r3, #36]	; 0x24

	while (__HAL_TIM_GET_COUNTER(htim) < us);
 8001fd4:	bf00      	nop
 8001fd6:	4b07      	ldr	r3, [pc, #28]	; (8001ff4 <delay_us_wait+0x34>)
 8001fd8:	681b      	ldr	r3, [r3, #0]
 8001fda:	681b      	ldr	r3, [r3, #0]
 8001fdc:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8001fde:	88fb      	ldrh	r3, [r7, #6]
 8001fe0:	429a      	cmp	r2, r3
 8001fe2:	d3f8      	bcc.n	8001fd6 <delay_us_wait+0x16>
}
 8001fe4:	bf00      	nop
 8001fe6:	bf00      	nop
 8001fe8:	370c      	adds	r7, #12
 8001fea:	46bd      	mov	sp, r7
 8001fec:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ff0:	4770      	bx	lr
 8001ff2:	bf00      	nop
 8001ff4:	20000214 	.word	0x20000214

08001ff8 <dist_init>:
#include "dist.h"

static KalmanParams kParams;
static DistState state;

void dist_init() {
 8001ff8:	b580      	push	{r7, lr}
 8001ffa:	af00      	add	r7, sp, #0
	dist_reset(0);
 8001ffc:	ed9f 0a02 	vldr	s0, [pc, #8]	; 8002008 <dist_init+0x10>
 8002000:	f000 f804 	bl	800200c <dist_reset>
}
 8002004:	bf00      	nop
 8002006:	bd80      	pop	{r7, pc}
 8002008:	00000000 	.word	0x00000000

0800200c <dist_reset>:

void dist_reset(float v) {
 800200c:	b580      	push	{r7, lr}
 800200e:	b082      	sub	sp, #8
 8002010:	af00      	add	r7, sp, #0
 8002012:	ed87 0a01 	vstr	s0, [r7, #4]
	kalman_init(&kParams, 0, DIST_S_ACCEL, DIST_S_MOTOR);
 8002016:	eeb6 1a08 	vmov.f32	s2, #104	; 0x3f400000  0.750
 800201a:	eddf 0a0b 	vldr	s1, [pc, #44]	; 8002048 <dist_reset+0x3c>
 800201e:	ed9f 0a0b 	vldr	s0, [pc, #44]	; 800204c <dist_reset+0x40>
 8002022:	480b      	ldr	r0, [pc, #44]	; (8002050 <dist_reset+0x44>)
 8002024:	f000 f8c8 	bl	80021b8 <kalman_init>
	state.dist = 0;
 8002028:	4b0a      	ldr	r3, [pc, #40]	; (8002054 <dist_reset+0x48>)
 800202a:	f04f 0200 	mov.w	r2, #0
 800202e:	601a      	str	r2, [r3, #0]
	state.v = v;
 8002030:	4a08      	ldr	r2, [pc, #32]	; (8002054 <dist_reset+0x48>)
 8002032:	687b      	ldr	r3, [r7, #4]
 8002034:	6053      	str	r3, [r2, #4]
	state.s_v = 0;
 8002036:	4b07      	ldr	r3, [pc, #28]	; (8002054 <dist_reset+0x48>)
 8002038:	f04f 0200 	mov.w	r2, #0
 800203c:	609a      	str	r2, [r3, #8]
}
 800203e:	bf00      	nop
 8002040:	3708      	adds	r7, #8
 8002042:	46bd      	mov	sp, r7
 8002044:	bd80      	pop	{r7, pc}
 8002046:	bf00      	nop
 8002048:	3724873e 	.word	0x3724873e
 800204c:	00000000 	.word	0x00000000
 8002050:	20000218 	.word	0x20000218
 8002054:	20000224 	.word	0x20000224

08002058 <update_state>:

static void update_state(float msElapsed, float accel) {
 8002058:	b480      	push	{r7}
 800205a:	b083      	sub	sp, #12
 800205c:	af00      	add	r7, sp, #0
 800205e:	ed87 0a01 	vstr	s0, [r7, #4]
 8002062:	edc7 0a00 	vstr	s1, [r7]
	state.dist += state.v * msElapsed;
 8002066:	4b22      	ldr	r3, [pc, #136]	; (80020f0 <update_state+0x98>)
 8002068:	ed93 7a00 	vldr	s14, [r3]
 800206c:	4b20      	ldr	r3, [pc, #128]	; (80020f0 <update_state+0x98>)
 800206e:	edd3 6a01 	vldr	s13, [r3, #4]
 8002072:	edd7 7a01 	vldr	s15, [r7, #4]
 8002076:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800207a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800207e:	4b1c      	ldr	r3, [pc, #112]	; (80020f0 <update_state+0x98>)
 8002080:	edc3 7a00 	vstr	s15, [r3]
	state.v += accel * msElapsed;
 8002084:	4b1a      	ldr	r3, [pc, #104]	; (80020f0 <update_state+0x98>)
 8002086:	ed93 7a01 	vldr	s14, [r3, #4]
 800208a:	edd7 6a00 	vldr	s13, [r7]
 800208e:	edd7 7a01 	vldr	s15, [r7, #4]
 8002092:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8002096:	ee77 7a27 	vadd.f32	s15, s14, s15
 800209a:	4b15      	ldr	r3, [pc, #84]	; (80020f0 <update_state+0x98>)
 800209c:	edc3 7a01 	vstr	s15, [r3, #4]

	//update uncertainties.
	kParams.s_est += msElapsed * msElapsed * state.s_v;
 80020a0:	4b14      	ldr	r3, [pc, #80]	; (80020f4 <update_state+0x9c>)
 80020a2:	ed93 7a01 	vldr	s14, [r3, #4]
 80020a6:	edd7 7a01 	vldr	s15, [r7, #4]
 80020aa:	ee67 6aa7 	vmul.f32	s13, s15, s15
 80020ae:	4b10      	ldr	r3, [pc, #64]	; (80020f0 <update_state+0x98>)
 80020b0:	edd3 7a02 	vldr	s15, [r3, #8]
 80020b4:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80020b8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80020bc:	4b0d      	ldr	r3, [pc, #52]	; (80020f4 <update_state+0x9c>)
 80020be:	edc3 7a01 	vstr	s15, [r3, #4]
	state.s_v += msElapsed * msElapsed * DIST_S_ACCEL;
 80020c2:	4b0b      	ldr	r3, [pc, #44]	; (80020f0 <update_state+0x98>)
 80020c4:	ed93 7a02 	vldr	s14, [r3, #8]
 80020c8:	edd7 7a01 	vldr	s15, [r7, #4]
 80020cc:	ee67 7aa7 	vmul.f32	s15, s15, s15
 80020d0:	eddf 6a09 	vldr	s13, [pc, #36]	; 80020f8 <update_state+0xa0>
 80020d4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80020d8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80020dc:	4b04      	ldr	r3, [pc, #16]	; (80020f0 <update_state+0x98>)
 80020de:	edc3 7a02 	vstr	s15, [r3, #8]
}
 80020e2:	bf00      	nop
 80020e4:	370c      	adds	r7, #12
 80020e6:	46bd      	mov	sp, r7
 80020e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020ec:	4770      	bx	lr
 80020ee:	bf00      	nop
 80020f0:	20000224 	.word	0x20000224
 80020f4:	20000218 	.word	0x20000218
 80020f8:	3724873e 	.word	0x3724873e

080020fc <dist_get_cm>:

float dist_get_cm(float msElapsed, float accel, float motorDist) {
 80020fc:	b580      	push	{r7, lr}
 80020fe:	b084      	sub	sp, #16
 8002100:	af00      	add	r7, sp, #0
 8002102:	ed87 0a03 	vstr	s0, [r7, #12]
 8002106:	edc7 0a02 	vstr	s1, [r7, #8]
 800210a:	ed87 1a01 	vstr	s2, [r7, #4]
	//get raw estimate, and update uncertainty.
	update_state(msElapsed, accel);
 800210e:	edd7 0a02 	vldr	s1, [r7, #8]
 8002112:	ed97 0a03 	vldr	s0, [r7, #12]
 8002116:	f7ff ff9f 	bl	8002058 <update_state>

	//get improved estimate.
	kalman_update(&kParams, state.dist, motorDist);
 800211a:	4b0b      	ldr	r3, [pc, #44]	; (8002148 <dist_get_cm+0x4c>)
 800211c:	edd3 7a00 	vldr	s15, [r3]
 8002120:	edd7 0a01 	vldr	s1, [r7, #4]
 8002124:	eeb0 0a67 	vmov.f32	s0, s15
 8002128:	4808      	ldr	r0, [pc, #32]	; (800214c <dist_get_cm+0x50>)
 800212a:	f000 f85e 	bl	80021ea <kalman_update>
	state.dist = kParams.last_est;
 800212e:	4b07      	ldr	r3, [pc, #28]	; (800214c <dist_get_cm+0x50>)
 8002130:	681b      	ldr	r3, [r3, #0]
 8002132:	4a05      	ldr	r2, [pc, #20]	; (8002148 <dist_get_cm+0x4c>)
 8002134:	6013      	str	r3, [r2, #0]

	return state.dist;
 8002136:	4b04      	ldr	r3, [pc, #16]	; (8002148 <dist_get_cm+0x4c>)
 8002138:	681b      	ldr	r3, [r3, #0]
 800213a:	ee07 3a90 	vmov	s15, r3
}
 800213e:	eeb0 0a67 	vmov.f32	s0, s15
 8002142:	3710      	adds	r7, #16
 8002144:	46bd      	mov	sp, r7
 8002146:	bd80      	pop	{r7, pc}
 8002148:	20000224 	.word	0x20000224
 800214c:	20000218 	.word	0x20000218

08002150 <dist_get_front>:

float dist_get_front(float usDist, float irDist) {
 8002150:	b480      	push	{r7}
 8002152:	b085      	sub	sp, #20
 8002154:	af00      	add	r7, sp, #0
 8002156:	ed87 0a01 	vstr	s0, [r7, #4]
 800215a:	edc7 0a00 	vstr	s1, [r7]
	float dist = usDist;
 800215e:	687b      	ldr	r3, [r7, #4]
 8002160:	60fb      	str	r3, [r7, #12]
	if (usDist > DIST_IR_MIN && usDist < DIST_IR_MAX) {
 8002162:	edd7 7a01 	vldr	s15, [r7, #4]
 8002166:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 800216a:	eef4 7ac7 	vcmpe.f32	s15, s14
 800216e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002172:	dd14      	ble.n	800219e <dist_get_front+0x4e>
 8002174:	edd7 7a01 	vldr	s15, [r7, #4]
 8002178:	ed9f 7a0e 	vldr	s14, [pc, #56]	; 80021b4 <dist_get_front+0x64>
 800217c:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002180:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002184:	d50b      	bpl.n	800219e <dist_get_front+0x4e>
		//use IR for averaging.
		dist = (usDist + irDist) / 2;
 8002186:	ed97 7a01 	vldr	s14, [r7, #4]
 800218a:	edd7 7a00 	vldr	s15, [r7]
 800218e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8002192:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 8002196:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800219a:	edc7 7a03 	vstr	s15, [r7, #12]
	}

	return dist;
 800219e:	68fb      	ldr	r3, [r7, #12]
 80021a0:	ee07 3a90 	vmov	s15, r3
}
 80021a4:	eeb0 0a67 	vmov.f32	s0, s15
 80021a8:	3714      	adds	r7, #20
 80021aa:	46bd      	mov	sp, r7
 80021ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021b0:	4770      	bx	lr
 80021b2:	bf00      	nop
 80021b4:	428c0000 	.word	0x428c0000

080021b8 <kalman_init>:
#include "kalman.h"

void kalman_init(KalmanParams *params, float initial_est, float s_est, float s_mea){
 80021b8:	b480      	push	{r7}
 80021ba:	b085      	sub	sp, #20
 80021bc:	af00      	add	r7, sp, #0
 80021be:	60f8      	str	r0, [r7, #12]
 80021c0:	ed87 0a02 	vstr	s0, [r7, #8]
 80021c4:	edc7 0a01 	vstr	s1, [r7, #4]
 80021c8:	ed87 1a00 	vstr	s2, [r7]
	params->last_est = initial_est;
 80021cc:	68fb      	ldr	r3, [r7, #12]
 80021ce:	68ba      	ldr	r2, [r7, #8]
 80021d0:	601a      	str	r2, [r3, #0]
	params->s_est = s_est;
 80021d2:	68fb      	ldr	r3, [r7, #12]
 80021d4:	687a      	ldr	r2, [r7, #4]
 80021d6:	605a      	str	r2, [r3, #4]
	params->s_mea = s_mea;
 80021d8:	68fb      	ldr	r3, [r7, #12]
 80021da:	683a      	ldr	r2, [r7, #0]
 80021dc:	609a      	str	r2, [r3, #8]
}
 80021de:	bf00      	nop
 80021e0:	3714      	adds	r7, #20
 80021e2:	46bd      	mov	sp, r7
 80021e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021e8:	4770      	bx	lr

080021ea <kalman_update>:

void kalman_update(KalmanParams *params, float est, float mea){
 80021ea:	b480      	push	{r7}
 80021ec:	b087      	sub	sp, #28
 80021ee:	af00      	add	r7, sp, #0
 80021f0:	60f8      	str	r0, [r7, #12]
 80021f2:	ed87 0a02 	vstr	s0, [r7, #8]
 80021f6:	edc7 0a01 	vstr	s1, [r7, #4]
	//calculate Kalman gain.
	float G = (params->s_est) / (params->s_est + params->s_mea);
 80021fa:	68fb      	ldr	r3, [r7, #12]
 80021fc:	edd3 6a01 	vldr	s13, [r3, #4]
 8002200:	68fb      	ldr	r3, [r7, #12]
 8002202:	ed93 7a01 	vldr	s14, [r3, #4]
 8002206:	68fb      	ldr	r3, [r7, #12]
 8002208:	edd3 7a02 	vldr	s15, [r3, #8]
 800220c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8002210:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8002214:	edc7 7a05 	vstr	s15, [r7, #20]

	//update estimate.
	params->last_est += G * (mea - est);
 8002218:	68fb      	ldr	r3, [r7, #12]
 800221a:	ed93 7a00 	vldr	s14, [r3]
 800221e:	edd7 6a01 	vldr	s13, [r7, #4]
 8002222:	edd7 7a02 	vldr	s15, [r7, #8]
 8002226:	ee76 6ae7 	vsub.f32	s13, s13, s15
 800222a:	edd7 7a05 	vldr	s15, [r7, #20]
 800222e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8002232:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002236:	68fb      	ldr	r3, [r7, #12]
 8002238:	edc3 7a00 	vstr	s15, [r3]
}
 800223c:	bf00      	nop
 800223e:	371c      	adds	r7, #28
 8002240:	46bd      	mov	sp, r7
 8002242:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002246:	4770      	bx	lr

08002248 <magcal_preload>:
#include "mag_cal.h"

static I2C_HandleTypeDef *hi2c;
static MagCalParams *params;

static void magcal_preload(MagCalParams *params_ptr) {
 8002248:	b480      	push	{r7}
 800224a:	b083      	sub	sp, #12
 800224c:	af00      	add	r7, sp, #0
 800224e:	6078      	str	r0, [r7, #4]
	params_ptr->offset_HI[0] = 12.3750;
 8002250:	687b      	ldr	r3, [r7, #4]
 8002252:	4a0b      	ldr	r2, [pc, #44]	; (8002280 <magcal_preload+0x38>)
 8002254:	601a      	str	r2, [r3, #0]
	params_ptr->offset_HI[1] = -56.4750;
 8002256:	687b      	ldr	r3, [r7, #4]
 8002258:	4a0a      	ldr	r2, [pc, #40]	; (8002284 <magcal_preload+0x3c>)
 800225a:	605a      	str	r2, [r3, #4]

	params_ptr->matrix_SI[0][0] = 0.8898;
 800225c:	687b      	ldr	r3, [r7, #4]
 800225e:	4a0a      	ldr	r2, [pc, #40]	; (8002288 <magcal_preload+0x40>)
 8002260:	609a      	str	r2, [r3, #8]
	params_ptr->matrix_SI[0][1] = -0.5961;
 8002262:	687b      	ldr	r3, [r7, #4]
 8002264:	4a09      	ldr	r2, [pc, #36]	; (800228c <magcal_preload+0x44>)
 8002266:	60da      	str	r2, [r3, #12]
	params_ptr->matrix_SI[1][0] = 0.8007;
 8002268:	687b      	ldr	r3, [r7, #4]
 800226a:	4a09      	ldr	r2, [pc, #36]	; (8002290 <magcal_preload+0x48>)
 800226c:	611a      	str	r2, [r3, #16]
	params_ptr->matrix_SI[1][1] = 1.1952;
 800226e:	687b      	ldr	r3, [r7, #4]
 8002270:	4a08      	ldr	r2, [pc, #32]	; (8002294 <magcal_preload+0x4c>)
 8002272:	615a      	str	r2, [r3, #20]
}
 8002274:	bf00      	nop
 8002276:	370c      	adds	r7, #12
 8002278:	46bd      	mov	sp, r7
 800227a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800227e:	4770      	bx	lr
 8002280:	41460000 	.word	0x41460000
 8002284:	c261e666 	.word	0xc261e666
 8002288:	3f63c9ef 	.word	0x3f63c9ef
 800228c:	bf189a02 	.word	0xbf189a02
 8002290:	3f4cfaad 	.word	0x3f4cfaad
 8002294:	3f98fc50 	.word	0x3f98fc50

08002298 <magcal_init>:

void magcal_init(I2C_HandleTypeDef *hi2c_ptr, MagCalParams *params_ptr) {
 8002298:	b580      	push	{r7, lr}
 800229a:	b082      	sub	sp, #8
 800229c:	af00      	add	r7, sp, #0
 800229e:	6078      	str	r0, [r7, #4]
 80022a0:	6039      	str	r1, [r7, #0]
	hi2c = hi2c_ptr;
 80022a2:	4a06      	ldr	r2, [pc, #24]	; (80022bc <magcal_init+0x24>)
 80022a4:	687b      	ldr	r3, [r7, #4]
 80022a6:	6013      	str	r3, [r2, #0]
	params = params_ptr;
 80022a8:	4a05      	ldr	r2, [pc, #20]	; (80022c0 <magcal_init+0x28>)
 80022aa:	683b      	ldr	r3, [r7, #0]
 80022ac:	6013      	str	r3, [r2, #0]

	magcal_preload(params_ptr);
 80022ae:	6838      	ldr	r0, [r7, #0]
 80022b0:	f7ff ffca 	bl	8002248 <magcal_preload>
}
 80022b4:	bf00      	nop
 80022b6:	3708      	adds	r7, #8
 80022b8:	46bd      	mov	sp, r7
 80022ba:	bd80      	pop	{r7, pc}
 80022bc:	20000230 	.word	0x20000230
 80022c0:	20000234 	.word	0x20000234

080022c4 <magcal_adjust>:

	OLED_Clear();
	OLED_Refresh_Gram();
}

void magcal_adjust(float magXY[2]) {
 80022c4:	b480      	push	{r7}
 80022c6:	b085      	sub	sp, #20
 80022c8:	af00      	add	r7, sp, #0
 80022ca:	6078      	str	r0, [r7, #4]
	float x = magXY[0] - params->offset_HI[0], y = magXY[1] - params->offset_HI[1];
 80022cc:	687b      	ldr	r3, [r7, #4]
 80022ce:	ed93 7a00 	vldr	s14, [r3]
 80022d2:	4b22      	ldr	r3, [pc, #136]	; (800235c <magcal_adjust+0x98>)
 80022d4:	681b      	ldr	r3, [r3, #0]
 80022d6:	edd3 7a00 	vldr	s15, [r3]
 80022da:	ee77 7a67 	vsub.f32	s15, s14, s15
 80022de:	edc7 7a03 	vstr	s15, [r7, #12]
 80022e2:	687b      	ldr	r3, [r7, #4]
 80022e4:	3304      	adds	r3, #4
 80022e6:	ed93 7a00 	vldr	s14, [r3]
 80022ea:	4b1c      	ldr	r3, [pc, #112]	; (800235c <magcal_adjust+0x98>)
 80022ec:	681b      	ldr	r3, [r3, #0]
 80022ee:	edd3 7a01 	vldr	s15, [r3, #4]
 80022f2:	ee77 7a67 	vsub.f32	s15, s14, s15
 80022f6:	edc7 7a02 	vstr	s15, [r7, #8]
	magXY[0] = params->matrix_SI[0][0] * x + params->matrix_SI[0][1] * y;
 80022fa:	4b18      	ldr	r3, [pc, #96]	; (800235c <magcal_adjust+0x98>)
 80022fc:	681b      	ldr	r3, [r3, #0]
 80022fe:	ed93 7a02 	vldr	s14, [r3, #8]
 8002302:	edd7 7a03 	vldr	s15, [r7, #12]
 8002306:	ee27 7a27 	vmul.f32	s14, s14, s15
 800230a:	4b14      	ldr	r3, [pc, #80]	; (800235c <magcal_adjust+0x98>)
 800230c:	681b      	ldr	r3, [r3, #0]
 800230e:	edd3 6a03 	vldr	s13, [r3, #12]
 8002312:	edd7 7a02 	vldr	s15, [r7, #8]
 8002316:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800231a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800231e:	687b      	ldr	r3, [r7, #4]
 8002320:	edc3 7a00 	vstr	s15, [r3]
	magXY[1] = params->matrix_SI[1][0] * x + params->matrix_SI[1][1] * y;
 8002324:	4b0d      	ldr	r3, [pc, #52]	; (800235c <magcal_adjust+0x98>)
 8002326:	681b      	ldr	r3, [r3, #0]
 8002328:	ed93 7a04 	vldr	s14, [r3, #16]
 800232c:	edd7 7a03 	vldr	s15, [r7, #12]
 8002330:	ee27 7a27 	vmul.f32	s14, s14, s15
 8002334:	4b09      	ldr	r3, [pc, #36]	; (800235c <magcal_adjust+0x98>)
 8002336:	681b      	ldr	r3, [r3, #0]
 8002338:	edd3 6a05 	vldr	s13, [r3, #20]
 800233c:	edd7 7a02 	vldr	s15, [r7, #8]
 8002340:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8002344:	687b      	ldr	r3, [r7, #4]
 8002346:	3304      	adds	r3, #4
 8002348:	ee77 7a27 	vadd.f32	s15, s14, s15
 800234c:	edc3 7a00 	vstr	s15, [r3]
}
 8002350:	bf00      	nop
 8002352:	3714      	adds	r7, #20
 8002354:	46bd      	mov	sp, r7
 8002356:	f85d 7b04 	ldr.w	r7, [sp], #4
 800235a:	4770      	bx	lr
 800235c:	20000234 	.word	0x20000234

08002360 <HAL_UART_RxCpltCallback>:
/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */


//serial in.
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
 8002360:	b580      	push	{r7, lr}
 8002362:	b082      	sub	sp, #8
 8002364:	af00      	add	r7, sp, #0
 8002366:	6078      	str	r0, [r7, #4]
	HAL_UART_Receive_IT(&huart3, &byte_serial, 1);
 8002368:	2201      	movs	r2, #1
 800236a:	4910      	ldr	r1, [pc, #64]	; (80023ac <HAL_UART_RxCpltCallback+0x4c>)
 800236c:	4810      	ldr	r0, [pc, #64]	; (80023b0 <HAL_UART_RxCpltCallback+0x50>)
 800236e:	f007 f876 	bl	800945e <HAL_UART_Receive_IT>
	buf_serial[buf_i++] = byte_serial;
 8002372:	4b10      	ldr	r3, [pc, #64]	; (80023b4 <HAL_UART_RxCpltCallback+0x54>)
 8002374:	781b      	ldrb	r3, [r3, #0]
 8002376:	1c5a      	adds	r2, r3, #1
 8002378:	b2d1      	uxtb	r1, r2
 800237a:	4a0e      	ldr	r2, [pc, #56]	; (80023b4 <HAL_UART_RxCpltCallback+0x54>)
 800237c:	7011      	strb	r1, [r2, #0]
 800237e:	461a      	mov	r2, r3
 8002380:	4b0a      	ldr	r3, [pc, #40]	; (80023ac <HAL_UART_RxCpltCallback+0x4c>)
 8002382:	7819      	ldrb	r1, [r3, #0]
 8002384:	4b0c      	ldr	r3, [pc, #48]	; (80023b8 <HAL_UART_RxCpltCallback+0x58>)
 8002386:	5499      	strb	r1, [r3, r2]

	if (byte_serial == CMD_END) {
 8002388:	4b08      	ldr	r3, [pc, #32]	; (80023ac <HAL_UART_RxCpltCallback+0x4c>)
 800238a:	781b      	ldrb	r3, [r3, #0]
 800238c:	2b0a      	cmp	r3, #10
 800238e:	d109      	bne.n	80023a4 <HAL_UART_RxCpltCallback+0x44>
		commands_process(&huart3, buf_serial, buf_i);
 8002390:	4b08      	ldr	r3, [pc, #32]	; (80023b4 <HAL_UART_RxCpltCallback+0x54>)
 8002392:	781b      	ldrb	r3, [r3, #0]
 8002394:	461a      	mov	r2, r3
 8002396:	4908      	ldr	r1, [pc, #32]	; (80023b8 <HAL_UART_RxCpltCallback+0x58>)
 8002398:	4805      	ldr	r0, [pc, #20]	; (80023b0 <HAL_UART_RxCpltCallback+0x50>)
 800239a:	f7ff fa23 	bl	80017e4 <commands_process>
		buf_i = 0;
 800239e:	4b05      	ldr	r3, [pc, #20]	; (80023b4 <HAL_UART_RxCpltCallback+0x54>)
 80023a0:	2200      	movs	r2, #0
 80023a2:	701a      	strb	r2, [r3, #0]
	}
}
 80023a4:	bf00      	nop
 80023a6:	3708      	adds	r7, #8
 80023a8:	46bd      	mov	sp, r7
 80023aa:	bd80      	pop	{r7, pc}
 80023ac:	20000574 	.word	0x20000574
 80023b0:	200004cc 	.word	0x200004cc
 80023b4:	2000055c 	.word	0x2000055c
 80023b8:	20000560 	.word	0x20000560

080023bc <HAL_TIM_PeriodElapsedCallback>:

/* --- Start: Timer Management --- */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 80023bc:	b480      	push	{r7}
 80023be:	b083      	sub	sp, #12
 80023c0:	af00      	add	r7, sp, #0
 80023c2:	6078      	str	r0, [r7, #4]
	if (htim == &htim4) {
 80023c4:	687b      	ldr	r3, [r7, #4]
 80023c6:	4a0c      	ldr	r2, [pc, #48]	; (80023f8 <HAL_TIM_PeriodElapsedCallback+0x3c>)
 80023c8:	4293      	cmp	r3, r2
 80023ca:	d107      	bne.n	80023dc <HAL_TIM_PeriodElapsedCallback+0x20>
		usWrap++;
 80023cc:	4b0b      	ldr	r3, [pc, #44]	; (80023fc <HAL_TIM_PeriodElapsedCallback+0x40>)
 80023ce:	881b      	ldrh	r3, [r3, #0]
 80023d0:	b29b      	uxth	r3, r3
 80023d2:	3301      	adds	r3, #1
 80023d4:	b29a      	uxth	r2, r3
 80023d6:	4b09      	ldr	r3, [pc, #36]	; (80023fc <HAL_TIM_PeriodElapsedCallback+0x40>)
 80023d8:	801a      	strh	r2, [r3, #0]

	else if (htim == &htim7) {
		//8MHz / 20000 = 2.5ms frame.
		newTick = 1;
	}
}
 80023da:	e006      	b.n	80023ea <HAL_TIM_PeriodElapsedCallback+0x2e>
	else if (htim == &htim7) {
 80023dc:	687b      	ldr	r3, [r7, #4]
 80023de:	4a08      	ldr	r2, [pc, #32]	; (8002400 <HAL_TIM_PeriodElapsedCallback+0x44>)
 80023e0:	4293      	cmp	r3, r2
 80023e2:	d102      	bne.n	80023ea <HAL_TIM_PeriodElapsedCallback+0x2e>
		newTick = 1;
 80023e4:	4b07      	ldr	r3, [pc, #28]	; (8002404 <HAL_TIM_PeriodElapsedCallback+0x48>)
 80023e6:	2201      	movs	r2, #1
 80023e8:	701a      	strb	r2, [r3, #0]
}
 80023ea:	bf00      	nop
 80023ec:	370c      	adds	r7, #12
 80023ee:	46bd      	mov	sp, r7
 80023f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023f4:	4770      	bx	lr
 80023f6:	bf00      	nop
 80023f8:	200003ac 	.word	0x200003ac
 80023fc:	20000578 	.word	0x20000578
 8002400:	2000043c 	.word	0x2000043c
 8002404:	20000580 	.word	0x20000580

08002408 <HAL_TIM_IC_CaptureCallback>:
void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim) {
 8002408:	b580      	push	{r7, lr}
 800240a:	b082      	sub	sp, #8
 800240c:	af00      	add	r7, sp, #0
 800240e:	6078      	str	r0, [r7, #4]
	if (!isRisingCaptured) {
 8002410:	4b33      	ldr	r3, [pc, #204]	; (80024e0 <HAL_TIM_IC_CaptureCallback+0xd8>)
 8002412:	781b      	ldrb	r3, [r3, #0]
 8002414:	b2db      	uxtb	r3, r3
 8002416:	2b00      	cmp	r3, #0
 8002418:	d11a      	bne.n	8002450 <HAL_TIM_IC_CaptureCallback+0x48>
		//rising edge
		usWrap = 0;
 800241a:	4b32      	ldr	r3, [pc, #200]	; (80024e4 <HAL_TIM_IC_CaptureCallback+0xdc>)
 800241c:	2200      	movs	r2, #0
 800241e:	801a      	strh	r2, [r3, #0]
		__HAL_TIM_SET_COUNTER(htim, 0);
 8002420:	687b      	ldr	r3, [r7, #4]
 8002422:	681b      	ldr	r3, [r3, #0]
 8002424:	2200      	movs	r2, #0
 8002426:	625a      	str	r2, [r3, #36]	; 0x24

		isRisingCaptured = 1;
 8002428:	4b2d      	ldr	r3, [pc, #180]	; (80024e0 <HAL_TIM_IC_CaptureCallback+0xd8>)
 800242a:	2201      	movs	r2, #1
 800242c:	701a      	strb	r2, [r3, #0]
		__HAL_TIM_SET_CAPTUREPOLARITY(htim, US_IC_CHANNEL, TIM_INPUTCHANNELPOLARITY_FALLING);
 800242e:	687b      	ldr	r3, [r7, #4]
 8002430:	681b      	ldr	r3, [r3, #0]
 8002432:	6a1a      	ldr	r2, [r3, #32]
 8002434:	687b      	ldr	r3, [r7, #4]
 8002436:	681b      	ldr	r3, [r3, #0]
 8002438:	f022 020a 	bic.w	r2, r2, #10
 800243c:	621a      	str	r2, [r3, #32]
 800243e:	687b      	ldr	r3, [r7, #4]
 8002440:	681b      	ldr	r3, [r3, #0]
 8002442:	6a1a      	ldr	r2, [r3, #32]
 8002444:	687b      	ldr	r3, [r7, #4]
 8002446:	681b      	ldr	r3, [r3, #0]
 8002448:	f042 0202 	orr.w	r2, r2, #2
 800244c:	621a      	str	r2, [r3, #32]
		__HAL_TIM_SET_CAPTUREPOLARITY(htim, US_IC_CHANNEL, TIM_INPUTCHANNELPOLARITY_RISING);

		usCaptureComplete = 1;

	}
}
 800244e:	e03e      	b.n	80024ce <HAL_TIM_IC_CaptureCallback+0xc6>
		counter = HAL_TIM_ReadCapturedValue(htim, US_IC_CHANNEL);
 8002450:	2100      	movs	r1, #0
 8002452:	6878      	ldr	r0, [r7, #4]
 8002454:	f006 f99e 	bl	8008794 <HAL_TIM_ReadCapturedValue>
 8002458:	4603      	mov	r3, r0
 800245a:	4a23      	ldr	r2, [pc, #140]	; (80024e8 <HAL_TIM_IC_CaptureCallback+0xe0>)
 800245c:	6013      	str	r3, [r2, #0]
		counter += usWrap * 65536;
 800245e:	4b21      	ldr	r3, [pc, #132]	; (80024e4 <HAL_TIM_IC_CaptureCallback+0xdc>)
 8002460:	881b      	ldrh	r3, [r3, #0]
 8002462:	b29b      	uxth	r3, r3
 8002464:	041b      	lsls	r3, r3, #16
 8002466:	461a      	mov	r2, r3
 8002468:	4b1f      	ldr	r3, [pc, #124]	; (80024e8 <HAL_TIM_IC_CaptureCallback+0xe0>)
 800246a:	681b      	ldr	r3, [r3, #0]
 800246c:	4413      	add	r3, r2
 800246e:	4a1e      	ldr	r2, [pc, #120]	; (80024e8 <HAL_TIM_IC_CaptureCallback+0xe0>)
 8002470:	6013      	str	r3, [r2, #0]
		sensors_read_usDist((float) counter * 1e-6);
 8002472:	4b1d      	ldr	r3, [pc, #116]	; (80024e8 <HAL_TIM_IC_CaptureCallback+0xe0>)
 8002474:	681b      	ldr	r3, [r3, #0]
 8002476:	ee07 3a90 	vmov	s15, r3
 800247a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800247e:	ee17 0a90 	vmov	r0, s15
 8002482:	f7fe f861 	bl	8000548 <__aeabi_f2d>
 8002486:	a314      	add	r3, pc, #80	; (adr r3, 80024d8 <HAL_TIM_IC_CaptureCallback+0xd0>)
 8002488:	e9d3 2300 	ldrd	r2, r3, [r3]
 800248c:	f7fe f8b4 	bl	80005f8 <__aeabi_dmul>
 8002490:	4602      	mov	r2, r0
 8002492:	460b      	mov	r3, r1
 8002494:	4610      	mov	r0, r2
 8002496:	4619      	mov	r1, r3
 8002498:	f7fe fba6 	bl	8000be8 <__aeabi_d2f>
 800249c:	4603      	mov	r3, r0
 800249e:	ee00 3a10 	vmov	s0, r3
 80024a2:	f001 fe7b 	bl	800419c <sensors_read_usDist>
		isRisingCaptured = 0;
 80024a6:	4b0e      	ldr	r3, [pc, #56]	; (80024e0 <HAL_TIM_IC_CaptureCallback+0xd8>)
 80024a8:	2200      	movs	r2, #0
 80024aa:	701a      	strb	r2, [r3, #0]
		__HAL_TIM_SET_CAPTUREPOLARITY(htim, US_IC_CHANNEL, TIM_INPUTCHANNELPOLARITY_RISING);
 80024ac:	687b      	ldr	r3, [r7, #4]
 80024ae:	681b      	ldr	r3, [r3, #0]
 80024b0:	6a1a      	ldr	r2, [r3, #32]
 80024b2:	687b      	ldr	r3, [r7, #4]
 80024b4:	681b      	ldr	r3, [r3, #0]
 80024b6:	f022 020a 	bic.w	r2, r2, #10
 80024ba:	621a      	str	r2, [r3, #32]
 80024bc:	687b      	ldr	r3, [r7, #4]
 80024be:	681a      	ldr	r2, [r3, #0]
 80024c0:	687b      	ldr	r3, [r7, #4]
 80024c2:	681b      	ldr	r3, [r3, #0]
 80024c4:	6a12      	ldr	r2, [r2, #32]
 80024c6:	621a      	str	r2, [r3, #32]
		usCaptureComplete = 1;
 80024c8:	4b08      	ldr	r3, [pc, #32]	; (80024ec <HAL_TIM_IC_CaptureCallback+0xe4>)
 80024ca:	2201      	movs	r2, #1
 80024cc:	701a      	strb	r2, [r3, #0]
}
 80024ce:	bf00      	nop
 80024d0:	3708      	adds	r7, #8
 80024d2:	46bd      	mov	sp, r7
 80024d4:	bd80      	pop	{r7, pc}
 80024d6:	bf00      	nop
 80024d8:	a0b5ed8d 	.word	0xa0b5ed8d
 80024dc:	3eb0c6f7 	.word	0x3eb0c6f7
 80024e0:	20000575 	.word	0x20000575
 80024e4:	20000578 	.word	0x20000578
 80024e8:	2000057c 	.word	0x2000057c
 80024ec:	20000576 	.word	0x20000576

080024f0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80024f0:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 80024f4:	b09c      	sub	sp, #112	; 0x70
 80024f6:	af02      	add	r7, sp, #8
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80024f8:	f002 fcb6 	bl	8004e68 <HAL_Init>

  /* USER CODE BEGIN Init */
  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80024fc:	f000 fb34 	bl	8002b68 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8002500:	f000 ff0a 	bl	8003318 <MX_GPIO_Init>
  MX_USART3_UART_Init();
 8002504:	f000 fede 	bl	80032c4 <MX_USART3_UART_Init>
  MX_I2C1_Init();
 8002508:	f000 fbde 	bl	8002cc8 <MX_I2C1_Init>
  MX_TIM8_Init();
 800250c:	f000 fe2e 	bl	800316c <MX_TIM8_Init>
  MX_TIM2_Init();
 8002510:	f000 fca8 	bl	8002e64 <MX_TIM2_Init>
  MX_TIM3_Init();
 8002514:	f000 fcfa 	bl	8002f0c <MX_TIM3_Init>
  MX_TIM1_Init();
 8002518:	f000 fc04 	bl	8002d24 <MX_TIM1_Init>
  MX_TIM4_Init();
 800251c:	f000 fd4a 	bl	8002fb4 <MX_TIM4_Init>
  MX_ADC1_Init();
 8002520:	f000 fb80 	bl	8002c24 <MX_ADC1_Init>
  MX_TIM6_Init();
 8002524:	f000 fdb6 	bl	8003094 <MX_TIM6_Init>
  MX_TIM7_Init();
 8002528:	f000 fdea 	bl	8003100 <MX_TIM7_Init>
  /* USER CODE BEGIN 2 */

  /* ----- Start: Initialize libraries ----- */
  OLED_Init();										//initialize OLED display.
 800252c:	f001 fc1c 	bl	8003d68 <OLED_Init>
  magcal_init(&hi2c1, &magCalParams);				//initialize magnetometer calibration.
 8002530:	49c9      	ldr	r1, [pc, #804]	; (8002858 <main+0x368>)
 8002532:	48ca      	ldr	r0, [pc, #808]	; (800285c <main+0x36c>)
 8002534:	f7ff feb0 	bl	8002298 <magcal_init>
  sensors_init(&hi2c1, &hadc1, &htim4, &sensors); 	//initialize motion sensors.
 8002538:	4bc9      	ldr	r3, [pc, #804]	; (8002860 <main+0x370>)
 800253a:	4aca      	ldr	r2, [pc, #808]	; (8002864 <main+0x374>)
 800253c:	49ca      	ldr	r1, [pc, #808]	; (8002868 <main+0x378>)
 800253e:	48c7      	ldr	r0, [pc, #796]	; (800285c <main+0x36c>)
 8002540:	f001 fdc2 	bl	80040c8 <sensors_init>
  motor_init(&htim8, &htim2, &htim3); 				//initialize motor PWM and encoders.
 8002544:	4ac9      	ldr	r2, [pc, #804]	; (800286c <main+0x37c>)
 8002546:	49ca      	ldr	r1, [pc, #808]	; (8002870 <main+0x380>)
 8002548:	48ca      	ldr	r0, [pc, #808]	; (8002874 <main+0x384>)
 800254a:	f000 ff91 	bl	8003470 <motor_init>
  servo_init(&htim1); 								//initialize servo PWM.
 800254e:	48ca      	ldr	r0, [pc, #808]	; (8002878 <main+0x388>)
 8002550:	f001 fffe 	bl	8004550 <servo_init>
  delay_us_init(&htim6);							//initialize us timer.
 8002554:	48c9      	ldr	r0, [pc, #804]	; (800287c <main+0x38c>)
 8002556:	f7ff fd21 	bl	8001f9c <delay_us_init>

  dist_init();										//initialize distance tracking.
 800255a:	f7ff fd4d 	bl	8001ff8 <dist_init>

  /* ----- Start: Car setup ----- */
//  magcal_calc_params();

  //reset car.
  servo_setAngle(0);
 800255e:	ed9f 0ac8 	vldr	s0, [pc, #800]	; 8002880 <main+0x390>
 8002562:	f002 f819 	bl	8004598 <servo_setAngle>
  motor_setDrive(0, 0);
 8002566:	2100      	movs	r1, #0
 8002568:	2000      	movs	r0, #0
 800256a:	f001 fa0d 	bl	8003988 <motor_setDrive>

  OLED_ShowString(0, 0, "Press USER when ready...");
 800256e:	4ac5      	ldr	r2, [pc, #788]	; (8002884 <main+0x394>)
 8002570:	2100      	movs	r1, #0
 8002572:	2000      	movs	r0, #0
 8002574:	f001 fbc6 	bl	8003d04 <OLED_ShowString>
  OLED_Refresh_Gram();
 8002578:	f001 fa9a 	bl	8003ab0 <OLED_Refresh_Gram>
//  while (!user_is_pressed());	//wait for user to place car.
  OLED_Clear();
 800257c:	f001 fad0 	bl	8003b20 <OLED_Clear>
  OLED_ShowString(0, 0, "Setting sensors bias...");
 8002580:	4ac1      	ldr	r2, [pc, #772]	; (8002888 <main+0x398>)
 8002582:	2100      	movs	r1, #0
 8002584:	2000      	movs	r0, #0
 8002586:	f001 fbbd 	bl	8003d04 <OLED_ShowString>
  OLED_Refresh_Gram();
 800258a:	f001 fa91 	bl	8003ab0 <OLED_Refresh_Gram>

  sensors_set_bias(500); 		// set initial bias.
 800258e:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8002592:	f001 ff21 	bl	80043d8 <sensors_set_bias>
  OLED_Clear();
 8002596:	f001 fac3 	bl	8003b20 <OLED_Clear>
  OLED_ShowString(0, 0, "Active.");
 800259a:	4abc      	ldr	r2, [pc, #752]	; (800288c <main+0x39c>)
 800259c:	2100      	movs	r1, #0
 800259e:	2000      	movs	r0, #0
 80025a0:	f001 fbb0 	bl	8003d04 <OLED_ShowString>
  OLED_Refresh_Gram();
 80025a4:	f001 fa84 	bl	8003ab0 <OLED_Refresh_Gram>

  /* ----- End: Car setup ----- */

  /* ----- Start: OS Parameters ----- */
  //ticking for longer timing requirements for ultrasound.
  uint8_t ticksElapsed = 0,
 80025a8:	2300      	movs	r3, #0
 80025aa:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
		  ticksUltrasound = (15.0f / MS_FRAME) + 1,
 80025ae:	2307      	movs	r3, #7
 80025b0:	f887 303f 	strb.w	r3, [r7, #63]	; 0x3f
		  ticksRefresh = ticksUltrasound;
 80025b4:	f897 303f 	ldrb.w	r3, [r7, #63]	; 0x3f
 80025b8:	f887 303e 	strb.w	r3, [r7, #62]	; 0x3e

  Command *cmd = NULL;							//current command.
 80025bc:	2300      	movs	r3, #0
 80025be:	663b      	str	r3, [r7, #96]	; 0x60
  float steeringAngle = 0;						//current steering angle.
 80025c0:	f04f 0300 	mov.w	r3, #0
 80025c4:	63bb      	str	r3, [r7, #56]	; 0x38
  float motorDist = 0, estDist = 0,
 80025c6:	f04f 0300 	mov.w	r3, #0
 80025ca:	637b      	str	r3, [r7, #52]	; 0x34
 80025cc:	f04f 0300 	mov.w	r3, #0
 80025d0:	633b      	str	r3, [r7, #48]	; 0x30
		  estAngle = 0,
 80025d2:	f04f 0300 	mov.w	r3, #0
 80025d6:	65fb      	str	r3, [r7, #92]	; 0x5c
		  estDistOld = 0; 						//distance estimations.
 80025d8:	f04f 0300 	mov.w	r3, #0
 80025dc:	65bb      	str	r3, [r7, #88]	; 0x58

  float distTarget = 0;							//decide distance target.
 80025de:	f04f 0300 	mov.w	r3, #0
 80025e2:	657b      	str	r3, [r7, #84]	; 0x54
  float distDiff = 0, brakingDist = 0; 			//current distance difference.
 80025e4:	f04f 0300 	mov.w	r3, #0
 80025e8:	653b      	str	r3, [r7, #80]	; 0x50
 80025ea:	f04f 0300 	mov.w	r3, #0
 80025ee:	64fb      	str	r3, [r7, #76]	; 0x4c
  float wDiff = 0, wTarget = 0;					//current angular velocity difference and target.
 80025f0:	f04f 0300 	mov.w	r3, #0
 80025f4:	62fb      	str	r3, [r7, #44]	; 0x2c
 80025f6:	f04f 0300 	mov.w	r3, #0
 80025fa:	64bb      	str	r3, [r7, #72]	; 0x48
  float rBack = 0, rRobot = 0;					//turning radii at the back and centre of robot.
 80025fc:	f04f 0300 	mov.w	r3, #0
 8002600:	647b      	str	r3, [r7, #68]	; 0x44
 8002602:	f04f 0300 	mov.w	r3, #0
 8002606:	643b      	str	r3, [r7, #64]	; 0x40
  /* ----- End: OS Parameters ----- */

  /* ----- Start: Interrupts ----- */
  HAL_UART_Receive_IT(&huart3, &byte_serial, 1);	//start receiving serial.
 8002608:	2201      	movs	r2, #1
 800260a:	49a1      	ldr	r1, [pc, #644]	; (8002890 <main+0x3a0>)
 800260c:	48a1      	ldr	r0, [pc, #644]	; (8002894 <main+0x3a4>)
 800260e:	f006 ff26 	bl	800945e <HAL_UART_Receive_IT>
  HAL_ADC_Start(&hadc1);							//start continuous ADC conversion.
 8002612:	4895      	ldr	r0, [pc, #596]	; (8002868 <main+0x378>)
 8002614:	f002 fd02 	bl	800501c <HAL_ADC_Start>
  HAL_TIM_Base_Start_IT(&htim7);					//start paced loop timer.
 8002618:	489f      	ldr	r0, [pc, #636]	; (8002898 <main+0x3a8>)
 800261a:	f005 f93d 	bl	8007898 <HAL_TIM_Base_Start_IT>

    /* USER CODE BEGIN 3 */

	/* ----- Start: Sensor reading ----- */
	//trigger distance measurement (minimum 3ms delay)
	if (!(ticksElapsed % ticksUltrasound)) {
 800261e:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 8002622:	f897 203f 	ldrb.w	r2, [r7, #63]	; 0x3f
 8002626:	fbb3 f1f2 	udiv	r1, r3, r2
 800262a:	fb01 f202 	mul.w	r2, r1, r2
 800262e:	1a9b      	subs	r3, r3, r2
 8002630:	b2db      	uxtb	r3, r3
 8002632:	2b00      	cmp	r3, #0
 8002634:	d101      	bne.n	800263a <main+0x14a>
		sensors_us_trig();
 8002636:	f001 fd95 	bl	8004164 <sensors_us_trig>
	}

	sensors_read_irDist();
 800263a:	f001 fddd 	bl	80041f8 <sensors_read_irDist>
	sensors_read_accel();
 800263e:	f001 fe63 	bl	8004308 <sensors_read_accel>
	sensors_read_gyroZ();
 8002642:	f001 fe3d 	bl	80042c0 <sensors_read_gyroZ>
	sensors_read_heading(MS_FRAME, sensors.gyroZ);
 8002646:	4b86      	ldr	r3, [pc, #536]	; (8002860 <main+0x370>)
 8002648:	edd3 7a02 	vldr	s15, [r3, #8]
 800264c:	eef0 0a67 	vmov.f32	s1, s15
 8002650:	eeb0 0a04 	vmov.f32	s0, #4	; 0x40200000  2.5
 8002654:	f001 fe94 	bl	8004380 <sensors_read_heading>
	/* ----- End: Sensor reading ----- */

	/* ----- Start: Get next command (if any) ----- */
	if (cmd == NULL) {
 8002658:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800265a:	2b00      	cmp	r3, #0
 800265c:	d16e      	bne.n	800273c <main+0x24c>
		cmd = commands_pop();
 800265e:	f7ff f9ad 	bl	80019bc <commands_pop>
 8002662:	6638      	str	r0, [r7, #96]	; 0x60

		if (cmd != NULL) {
 8002664:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8002666:	2b00      	cmp	r3, #0
 8002668:	d068      	beq.n	800273c <main+0x24c>
			estDistOld = 0;
 800266a:	f04f 0300 	mov.w	r3, #0
 800266e:	65bb      	str	r3, [r7, #88]	; 0x58
			estAngle = 0;
 8002670:	f04f 0300 	mov.w	r3, #0
 8002674:	65fb      	str	r3, [r7, #92]	; 0x5c
			motor_setDrive(cmd->dir, cmd->speed);
 8002676:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8002678:	f993 2005 	ldrsb.w	r2, [r3, #5]
 800267c:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800267e:	799b      	ldrb	r3, [r3, #6]
 8002680:	4619      	mov	r1, r3
 8002682:	4610      	mov	r0, r2
 8002684:	f001 f980 	bl	8003988 <motor_setDrive>
			if (cmd->dir != 0) {
 8002688:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800268a:	f993 3005 	ldrsb.w	r3, [r3, #5]
 800268e:	2b00      	cmp	r3, #0
 8002690:	d04e      	beq.n	8002730 <main+0x240>
				distTarget = cmd->val;
 8002692:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8002694:	691b      	ldr	r3, [r3, #16]
 8002696:	657b      	str	r3, [r7, #84]	; 0x54
				distDiff = DIST_DIFF_DEFAULT;
 8002698:	4b80      	ldr	r3, [pc, #512]	; (800289c <main+0x3ac>)
 800269a:	653b      	str	r3, [r7, #80]	; 0x50
				brakingDist = MOTOR_BRAKING_DIST_CM * cmd->speed / 100;
 800269c:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800269e:	799b      	ldrb	r3, [r3, #6]
 80026a0:	ee07 3a90 	vmov	s15, r3
 80026a4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80026a8:	eeb3 7a00 	vmov.f32	s14, #48	; 0x41800000  16.0
 80026ac:	ee27 7a87 	vmul.f32	s14, s15, s14
 80026b0:	eddf 6a7b 	vldr	s13, [pc, #492]	; 80028a0 <main+0x3b0>
 80026b4:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80026b8:	edc7 7a13 	vstr	s15, [r7, #76]	; 0x4c

				steeringAngle = cmd->steeringAngle;
 80026bc:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 80026be:	689b      	ldr	r3, [r3, #8]
 80026c0:	63bb      	str	r3, [r7, #56]	; 0x38
				servo_setAngle(steeringAngle);
 80026c2:	ed97 0a0e 	vldr	s0, [r7, #56]	; 0x38
 80026c6:	f001 ff67 	bl	8004598 <servo_setAngle>
				if (steeringAngle != 0) {
 80026ca:	edd7 7a0e 	vldr	s15, [r7, #56]	; 0x38
 80026ce:	eef5 7a40 	vcmp.f32	s15, #0.0
 80026d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80026d6:	d021      	beq.n	800271c <main+0x22c>
					rBack = get_turning_r_back_cm(steeringAngle);
 80026d8:	ed97 0a0e 	vldr	s0, [r7, #56]	; 0x38
 80026dc:	f7ff fad4 	bl	8001c88 <get_turning_r_back_cm>
 80026e0:	ed87 0a11 	vstr	s0, [r7, #68]	; 0x44
					rRobot = get_turning_r_robot_cm(steeringAngle);
 80026e4:	ed97 0a0e 	vldr	s0, [r7, #56]	; 0x38
 80026e8:	f7ff fb0e 	bl	8001d08 <get_turning_r_robot_cm>
 80026ec:	ed87 0a10 	vstr	s0, [r7, #64]	; 0x40
					if (cmd->distType == TARGET) {
 80026f0:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 80026f2:	7b1b      	ldrb	r3, [r3, #12]
 80026f4:	2b00      	cmp	r3, #0
 80026f6:	d121      	bne.n	800273c <main+0x24c>
						distTarget = abs_float(get_arc_length(cmd->val, rRobot));
 80026f8:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 80026fa:	edd3 7a04 	vldr	s15, [r3, #16]
 80026fe:	edd7 0a10 	vldr	s1, [r7, #64]	; 0x40
 8002702:	eeb0 0a67 	vmov.f32	s0, s15
 8002706:	f7ff fc0f 	bl	8001f28 <get_arc_length>
 800270a:	eef0 7a40 	vmov.f32	s15, s0
 800270e:	eeb0 0a67 	vmov.f32	s0, s15
 8002712:	f7ff f98d 	bl	8001a30 <abs_float>
 8002716:	ed87 0a15 	vstr	s0, [r7, #84]	; 0x54
 800271a:	e00f      	b.n	800273c <main+0x24c>
					}
				} else {
					rBack = 0;
 800271c:	f04f 0300 	mov.w	r3, #0
 8002720:	647b      	str	r3, [r7, #68]	; 0x44
					rRobot = 0;
 8002722:	f04f 0300 	mov.w	r3, #0
 8002726:	643b      	str	r3, [r7, #64]	; 0x40
					wTarget = 0;
 8002728:	f04f 0300 	mov.w	r3, #0
 800272c:	64bb      	str	r3, [r7, #72]	; 0x48
 800272e:	e005      	b.n	800273c <main+0x24c>
				}
			} else {
				commands_end(&huart3, cmd);
 8002730:	6e39      	ldr	r1, [r7, #96]	; 0x60
 8002732:	4858      	ldr	r0, [pc, #352]	; (8002894 <main+0x3a4>)
 8002734:	f7ff f966 	bl	8001a04 <commands_end>
				cmd = NULL;
 8002738:	2300      	movs	r3, #0
 800273a:	663b      	str	r3, [r7, #96]	; 0x60
		}
	}
	/* ----- End: Get next command (if any) ----- */

	/* ----- Start: Drive PID Control ----- */
	if (cmd != NULL && cmd->dir != 0) {
 800273c:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800273e:	2b00      	cmp	r3, #0
 8002740:	f000 81dc 	beq.w	8002afc <main+0x60c>
 8002744:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8002746:	f993 3005 	ldrsb.w	r3, [r3, #5]
 800274a:	2b00      	cmp	r3, #0
 800274c:	f000 81d6 	beq.w	8002afc <main+0x60c>
		//calculate distance.
		motorDist = motor_getDist();
 8002750:	f000 ff3a 	bl	80035c8 <motor_getDist>
 8002754:	ed87 0a0d 	vstr	s0, [r7, #52]	; 0x34
		estDist = dist_get_cm(MS_FRAME, cmd->dir * sensors.accel[1], motorDist);
 8002758:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800275a:	f993 3005 	ldrsb.w	r3, [r3, #5]
 800275e:	ee07 3a90 	vmov	s15, r3
 8002762:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8002766:	4b3e      	ldr	r3, [pc, #248]	; (8002860 <main+0x370>)
 8002768:	edd3 7a04 	vldr	s15, [r3, #16]
 800276c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002770:	ed97 1a0d 	vldr	s2, [r7, #52]	; 0x34
 8002774:	eef0 0a67 	vmov.f32	s1, s15
 8002778:	eeb0 0a04 	vmov.f32	s0, #4	; 0x40200000  2.5
 800277c:	f7ff fcbe 	bl	80020fc <dist_get_cm>
 8002780:	ed87 0a0c 	vstr	s0, [r7, #48]	; 0x30

		//estimate current speed.
		float estSpeed = (estDist - estDistOld) / MS_FRAME;
 8002784:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 8002788:	edd7 7a16 	vldr	s15, [r7, #88]	; 0x58
 800278c:	ee37 7a67 	vsub.f32	s14, s14, s15
 8002790:	eef0 6a04 	vmov.f32	s13, #4	; 0x40200000  2.5
 8002794:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8002798:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28
		estDistOld = estDist;
 800279c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800279e:	65bb      	str	r3, [r7, #88]	; 0x58

		//calculate difference in angular velocity.
		if (rRobot != 0) wTarget = get_w_ms(estSpeed, rRobot);
 80027a0:	edd7 7a10 	vldr	s15, [r7, #64]	; 0x40
 80027a4:	eef5 7a40 	vcmp.f32	s15, #0.0
 80027a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80027ac:	d007      	beq.n	80027be <main+0x2ce>
 80027ae:	edd7 0a10 	vldr	s1, [r7, #64]	; 0x40
 80027b2:	ed97 0a0a 	vldr	s0, [r7, #40]	; 0x28
 80027b6:	f7ff fae7 	bl	8001d88 <get_w_ms>
 80027ba:	ed87 0a12 	vstr	s0, [r7, #72]	; 0x48
		float wGyro = cmd->dir * sensors.gyroZ;
 80027be:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 80027c0:	f993 3005 	ldrsb.w	r3, [r3, #5]
 80027c4:	ee07 3a90 	vmov	s15, r3
 80027c8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80027cc:	4b24      	ldr	r3, [pc, #144]	; (8002860 <main+0x370>)
 80027ce:	edd3 7a02 	vldr	s15, [r3, #8]
 80027d2:	ee67 7a27 	vmul.f32	s15, s14, s15
 80027d6:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24
		wDiff = (wGyro - wTarget); //gyro is flipped when going backwards.
 80027da:	ed97 7a09 	vldr	s14, [r7, #36]	; 0x24
 80027de:	edd7 7a12 	vldr	s15, [r7, #72]	; 0x48
 80027e2:	ee77 7a67 	vsub.f32	s15, s14, s15
 80027e6:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c

		estAngle += abs_float(wGyro * MS_FRAME);
 80027ea:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 80027ee:	eeb0 7a04 	vmov.f32	s14, #4	; 0x40200000  2.5
 80027f2:	ee67 7a87 	vmul.f32	s15, s15, s14
 80027f6:	eeb0 0a67 	vmov.f32	s0, s15
 80027fa:	f7ff f919 	bl	8001a30 <abs_float>
 80027fe:	eeb0 7a40 	vmov.f32	s14, s0
 8002802:	edd7 7a17 	vldr	s15, [r7, #92]	; 0x5c
 8002806:	ee77 7a87 	vadd.f32	s15, s15, s14
 800280a:	edc7 7a17 	vstr	s15, [r7, #92]	; 0x5c
		switch (cmd->distType) {
 800280e:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8002810:	7b1b      	ldrb	r3, [r3, #12]
 8002812:	2b00      	cmp	r3, #0
 8002814:	d002      	beq.n	800281c <main+0x32c>
 8002816:	2b01      	cmp	r3, #1
 8002818:	d07c      	beq.n	8002914 <main+0x424>
 800281a:	e0a6      	b.n	800296a <main+0x47a>
			case TARGET:
				distDiff = distTarget - estDist;
 800281c:	ed97 7a15 	vldr	s14, [r7, #84]	; 0x54
 8002820:	edd7 7a0c 	vldr	s15, [r7, #48]	; 0x30
 8002824:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002828:	edc7 7a14 	vstr	s15, [r7, #80]	; 0x50
				if (rRobot != 0) {
 800282c:	edd7 7a10 	vldr	s15, [r7, #64]	; 0x40
 8002830:	eef5 7a40 	vcmp.f32	s15, #0.0
 8002834:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002838:	f000 809a 	beq.w	8002970 <main+0x480>
					if (estAngle >= cmd->val) distDiff = 0;
 800283c:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800283e:	edd3 7a04 	vldr	s15, [r3, #16]
 8002842:	ed97 7a17 	vldr	s14, [r7, #92]	; 0x5c
 8002846:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800284a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800284e:	db29      	blt.n	80028a4 <main+0x3b4>
 8002850:	f04f 0300 	mov.w	r3, #0
 8002854:	653b      	str	r3, [r7, #80]	; 0x50
					else distDiff = 0.05 * distDiff +
						0.95 * abs_float(get_arc_length(cmd->val - estAngle, rRobot));
				}
				break;
 8002856:	e08b      	b.n	8002970 <main+0x480>
 8002858:	20000544 	.word	0x20000544
 800285c:	20000280 	.word	0x20000280
 8002860:	20000514 	.word	0x20000514
 8002864:	200003ac 	.word	0x200003ac
 8002868:	20000238 	.word	0x20000238
 800286c:	20000364 	.word	0x20000364
 8002870:	2000031c 	.word	0x2000031c
 8002874:	20000484 	.word	0x20000484
 8002878:	200002d4 	.word	0x200002d4
 800287c:	200003f4 	.word	0x200003f4
 8002880:	00000000 	.word	0x00000000
 8002884:	08011330 	.word	0x08011330
 8002888:	0801134c 	.word	0x0801134c
 800288c:	08011364 	.word	0x08011364
 8002890:	20000574 	.word	0x20000574
 8002894:	200004cc 	.word	0x200004cc
 8002898:	2000043c 	.word	0x2000043c
 800289c:	41200000 	.word	0x41200000
 80028a0:	42c80000 	.word	0x42c80000
					else distDiff = 0.05 * distDiff +
 80028a4:	6d38      	ldr	r0, [r7, #80]	; 0x50
 80028a6:	f7fd fe4f 	bl	8000548 <__aeabi_f2d>
 80028aa:	a3ab      	add	r3, pc, #684	; (adr r3, 8002b58 <main+0x668>)
 80028ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 80028b0:	f7fd fea2 	bl	80005f8 <__aeabi_dmul>
 80028b4:	4602      	mov	r2, r0
 80028b6:	460b      	mov	r3, r1
 80028b8:	4614      	mov	r4, r2
 80028ba:	461d      	mov	r5, r3
						0.95 * abs_float(get_arc_length(cmd->val - estAngle, rRobot));
 80028bc:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 80028be:	ed93 7a04 	vldr	s14, [r3, #16]
 80028c2:	edd7 7a17 	vldr	s15, [r7, #92]	; 0x5c
 80028c6:	ee77 7a67 	vsub.f32	s15, s14, s15
 80028ca:	edd7 0a10 	vldr	s1, [r7, #64]	; 0x40
 80028ce:	eeb0 0a67 	vmov.f32	s0, s15
 80028d2:	f7ff fb29 	bl	8001f28 <get_arc_length>
 80028d6:	eef0 7a40 	vmov.f32	s15, s0
 80028da:	eeb0 0a67 	vmov.f32	s0, s15
 80028de:	f7ff f8a7 	bl	8001a30 <abs_float>
 80028e2:	ee10 3a10 	vmov	r3, s0
 80028e6:	4618      	mov	r0, r3
 80028e8:	f7fd fe2e 	bl	8000548 <__aeabi_f2d>
 80028ec:	a39c      	add	r3, pc, #624	; (adr r3, 8002b60 <main+0x670>)
 80028ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 80028f2:	f7fd fe81 	bl	80005f8 <__aeabi_dmul>
 80028f6:	4602      	mov	r2, r0
 80028f8:	460b      	mov	r3, r1
					else distDiff = 0.05 * distDiff +
 80028fa:	4620      	mov	r0, r4
 80028fc:	4629      	mov	r1, r5
 80028fe:	f7fd fcc5 	bl	800028c <__adddf3>
 8002902:	4602      	mov	r2, r0
 8002904:	460b      	mov	r3, r1
 8002906:	4610      	mov	r0, r2
 8002908:	4619      	mov	r1, r3
 800290a:	f7fe f96d 	bl	8000be8 <__aeabi_d2f>
 800290e:	4603      	mov	r3, r0
 8002910:	653b      	str	r3, [r7, #80]	; 0x50
				break;
 8002912:	e02d      	b.n	8002970 <main+0x480>
			case STOP_AWAY:
				if (usCaptureComplete) {
 8002914:	4b88      	ldr	r3, [pc, #544]	; (8002b38 <main+0x648>)
 8002916:	781b      	ldrb	r3, [r3, #0]
 8002918:	b2db      	uxtb	r3, r3
 800291a:	2b00      	cmp	r3, #0
 800291c:	d02a      	beq.n	8002974 <main+0x484>
					distDiff = dist_get_front(sensors.usDist, sensors.irDist) - cmd->val;
 800291e:	4b87      	ldr	r3, [pc, #540]	; (8002b3c <main+0x64c>)
 8002920:	edd3 7a01 	vldr	s15, [r3, #4]
 8002924:	4b85      	ldr	r3, [pc, #532]	; (8002b3c <main+0x64c>)
 8002926:	ed93 7a00 	vldr	s14, [r3]
 800292a:	eef0 0a47 	vmov.f32	s1, s14
 800292e:	eeb0 0a67 	vmov.f32	s0, s15
 8002932:	f7ff fc0d 	bl	8002150 <dist_get_front>
 8002936:	eeb0 7a40 	vmov.f32	s14, s0
 800293a:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800293c:	edd3 7a04 	vldr	s15, [r3, #16]
 8002940:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002944:	edc7 7a14 	vstr	s15, [r7, #80]	; 0x50
					distDiff *= cmd->dir;
 8002948:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800294a:	f993 3005 	ldrsb.w	r3, [r3, #5]
 800294e:	ee07 3a90 	vmov	s15, r3
 8002952:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002956:	ed97 7a14 	vldr	s14, [r7, #80]	; 0x50
 800295a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800295e:	edc7 7a14 	vstr	s15, [r7, #80]	; 0x50

					usCaptureComplete = 0;
 8002962:	4b75      	ldr	r3, [pc, #468]	; (8002b38 <main+0x648>)
 8002964:	2200      	movs	r2, #0
 8002966:	701a      	strb	r2, [r3, #0]
				}
				break;
 8002968:	e004      	b.n	8002974 <main+0x484>
			default:
				distDiff = DIST_DIFF_DEFAULT;
 800296a:	4b75      	ldr	r3, [pc, #468]	; (8002b40 <main+0x650>)
 800296c:	653b      	str	r3, [r7, #80]	; 0x50
				break;
 800296e:	e002      	b.n	8002976 <main+0x486>
				break;
 8002970:	bf00      	nop
 8002972:	e000      	b.n	8002976 <main+0x486>
				break;
 8002974:	bf00      	nop
		}

		Command *next = commands_peek();
 8002976:	f7ff f839 	bl	80019ec <commands_peek>
 800297a:	6238      	str	r0, [r7, #32]
		float nextAngle = next != NULL ? next->steeringAngle : 0;
 800297c:	6a3b      	ldr	r3, [r7, #32]
 800297e:	2b00      	cmp	r3, #0
 8002980:	d002      	beq.n	8002988 <main+0x498>
 8002982:	6a3b      	ldr	r3, [r7, #32]
 8002984:	689b      	ldr	r3, [r3, #8]
 8002986:	e001      	b.n	800298c <main+0x49c>
 8002988:	f04f 0300 	mov.w	r3, #0
 800298c:	61fb      	str	r3, [r7, #28]
		uint8_t shouldBrake = next != NULL
				? (next->dir != cmd->dir || abs_float(next->steeringAngle - cmd->steeringAngle) > SERVO_WIDTH)
				: 1;
 800298e:	6a3b      	ldr	r3, [r7, #32]
 8002990:	2b00      	cmp	r3, #0
 8002992:	d01c      	beq.n	80029ce <main+0x4de>
				? (next->dir != cmd->dir || abs_float(next->steeringAngle - cmd->steeringAngle) > SERVO_WIDTH)
 8002994:	6a3b      	ldr	r3, [r7, #32]
 8002996:	f993 2005 	ldrsb.w	r2, [r3, #5]
 800299a:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800299c:	f993 3005 	ldrsb.w	r3, [r3, #5]
				: 1;
 80029a0:	429a      	cmp	r2, r3
 80029a2:	d114      	bne.n	80029ce <main+0x4de>
				? (next->dir != cmd->dir || abs_float(next->steeringAngle - cmd->steeringAngle) > SERVO_WIDTH)
 80029a4:	6a3b      	ldr	r3, [r7, #32]
 80029a6:	ed93 7a02 	vldr	s14, [r3, #8]
 80029aa:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 80029ac:	edd3 7a02 	vldr	s15, [r3, #8]
 80029b0:	ee77 7a67 	vsub.f32	s15, s14, s15
 80029b4:	eeb0 0a67 	vmov.f32	s0, s15
 80029b8:	f7ff f83a 	bl	8001a30 <abs_float>
 80029bc:	eef0 7a40 	vmov.f32	s15, s0
 80029c0:	eeb3 7a09 	vmov.f32	s14, #57	; 0x41c80000  25.0
 80029c4:	eef4 7ac7 	vcmpe.f32	s15, s14
 80029c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80029cc:	dd01      	ble.n	80029d2 <main+0x4e2>
				: 1;
 80029ce:	2301      	movs	r3, #1
 80029d0:	e000      	b.n	80029d4 <main+0x4e4>
 80029d2:	2300      	movs	r3, #0
		uint8_t shouldBrake = next != NULL
 80029d4:	76fb      	strb	r3, [r7, #27]
		shouldBrake = 1;
 80029d6:	2301      	movs	r3, #1
 80029d8:	76fb      	strb	r3, [r7, #27]
		//motor correction.
		motor_pwmCorrection(
 80029da:	7efb      	ldrb	r3, [r7, #27]
 80029dc:	2b00      	cmp	r3, #0
 80029de:	d002      	beq.n	80029e6 <main+0x4f6>
 80029e0:	edd7 7a13 	vldr	s15, [r7, #76]	; 0x4c
 80029e4:	e001      	b.n	80029ea <main+0x4fa>
 80029e6:	eddf 7a57 	vldr	s15, [pc, #348]	; 8002b44 <main+0x654>
 80029ea:	eeb0 2a67 	vmov.f32	s4, s15
 80029ee:	edd7 1a14 	vldr	s3, [r7, #80]	; 0x50
 80029f2:	ed97 1a10 	vldr	s2, [r7, #64]	; 0x40
 80029f6:	edd7 0a11 	vldr	s1, [r7, #68]	; 0x44
 80029fa:	ed97 0a0b 	vldr	s0, [r7, #44]	; 0x2c
 80029fe:	f000 fe1b 	bl	8003638 <motor_pwmCorrection>
			wDiff, rBack, rRobot, distDiff,
			shouldBrake ? brakingDist : 0
		);

		if (distDiff < (shouldBrake ? 0.1 : 0.85 * cmd->speed / 100) * brakingDist) servo_setAngle(nextAngle);
 8002a02:	6d38      	ldr	r0, [r7, #80]	; 0x50
 8002a04:	f7fd fda0 	bl	8000548 <__aeabi_f2d>
 8002a08:	4604      	mov	r4, r0
 8002a0a:	460d      	mov	r5, r1
 8002a0c:	7efb      	ldrb	r3, [r7, #27]
 8002a0e:	2b00      	cmp	r3, #0
 8002a10:	d117      	bne.n	8002a42 <main+0x552>
 8002a12:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8002a14:	799b      	ldrb	r3, [r3, #6]
 8002a16:	4618      	mov	r0, r3
 8002a18:	f7fd fd84 	bl	8000524 <__aeabi_i2d>
 8002a1c:	a342      	add	r3, pc, #264	; (adr r3, 8002b28 <main+0x638>)
 8002a1e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002a22:	f7fd fde9 	bl	80005f8 <__aeabi_dmul>
 8002a26:	4602      	mov	r2, r0
 8002a28:	460b      	mov	r3, r1
 8002a2a:	4610      	mov	r0, r2
 8002a2c:	4619      	mov	r1, r3
 8002a2e:	f04f 0200 	mov.w	r2, #0
 8002a32:	4b45      	ldr	r3, [pc, #276]	; (8002b48 <main+0x658>)
 8002a34:	f7fd ff0a 	bl	800084c <__aeabi_ddiv>
 8002a38:	4602      	mov	r2, r0
 8002a3a:	460b      	mov	r3, r1
 8002a3c:	4690      	mov	r8, r2
 8002a3e:	4699      	mov	r9, r3
 8002a40:	e003      	b.n	8002a4a <main+0x55a>
 8002a42:	f20f 09ec 	addw	r9, pc, #236	; 0xec
 8002a46:	e9d9 8900 	ldrd	r8, r9, [r9]
 8002a4a:	6cf8      	ldr	r0, [r7, #76]	; 0x4c
 8002a4c:	f7fd fd7c 	bl	8000548 <__aeabi_f2d>
 8002a50:	4602      	mov	r2, r0
 8002a52:	460b      	mov	r3, r1
 8002a54:	4640      	mov	r0, r8
 8002a56:	4649      	mov	r1, r9
 8002a58:	f7fd fdce 	bl	80005f8 <__aeabi_dmul>
 8002a5c:	4602      	mov	r2, r0
 8002a5e:	460b      	mov	r3, r1
 8002a60:	4620      	mov	r0, r4
 8002a62:	4629      	mov	r1, r5
 8002a64:	f7fe f83a 	bl	8000adc <__aeabi_dcmplt>
 8002a68:	4603      	mov	r3, r0
 8002a6a:	2b00      	cmp	r3, #0
 8002a6c:	d003      	beq.n	8002a76 <main+0x586>
 8002a6e:	ed97 0a07 	vldr	s0, [r7, #28]
 8002a72:	f001 fd91 	bl	8004598 <servo_setAngle>
		if (distDiff <= 0) {
 8002a76:	edd7 7a14 	vldr	s15, [r7, #80]	; 0x50
 8002a7a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8002a7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002a82:	d83b      	bhi.n	8002afc <main+0x60c>
			//target achieved; move to next command.
			commands_end(&huart3, cmd);
 8002a84:	6e39      	ldr	r1, [r7, #96]	; 0x60
 8002a86:	4831      	ldr	r0, [pc, #196]	; (8002b4c <main+0x65c>)
 8002a88:	f7fe ffbc 	bl	8001a04 <commands_end>
			cmd = NULL;
 8002a8c:	2300      	movs	r3, #0
 8002a8e:	663b      	str	r3, [r7, #96]	; 0x60

			snprintf(buf, 20, "%7.3f", motorDist);
 8002a90:	6b78      	ldr	r0, [r7, #52]	; 0x34
 8002a92:	f7fd fd59 	bl	8000548 <__aeabi_f2d>
 8002a96:	4602      	mov	r2, r0
 8002a98:	460b      	mov	r3, r1
 8002a9a:	1d38      	adds	r0, r7, #4
 8002a9c:	e9cd 2300 	strd	r2, r3, [sp]
 8002aa0:	4a2b      	ldr	r2, [pc, #172]	; (8002b50 <main+0x660>)
 8002aa2:	2114      	movs	r1, #20
 8002aa4:	f008 fc4a 	bl	800b33c <sniprintf>
			OLED_ShowString(0, 0, buf);
 8002aa8:	1d3b      	adds	r3, r7, #4
 8002aaa:	461a      	mov	r2, r3
 8002aac:	2100      	movs	r1, #0
 8002aae:	2000      	movs	r0, #0
 8002ab0:	f001 f928 	bl	8003d04 <OLED_ShowString>
			snprintf(buf, 20, "%7.3f", estDist);
 8002ab4:	6b38      	ldr	r0, [r7, #48]	; 0x30
 8002ab6:	f7fd fd47 	bl	8000548 <__aeabi_f2d>
 8002aba:	4602      	mov	r2, r0
 8002abc:	460b      	mov	r3, r1
 8002abe:	1d38      	adds	r0, r7, #4
 8002ac0:	e9cd 2300 	strd	r2, r3, [sp]
 8002ac4:	4a22      	ldr	r2, [pc, #136]	; (8002b50 <main+0x660>)
 8002ac6:	2114      	movs	r1, #20
 8002ac8:	f008 fc38 	bl	800b33c <sniprintf>
			OLED_ShowString(0, 10, buf);
 8002acc:	1d3b      	adds	r3, r7, #4
 8002ace:	461a      	mov	r2, r3
 8002ad0:	210a      	movs	r1, #10
 8002ad2:	2000      	movs	r0, #0
 8002ad4:	f001 f916 	bl	8003d04 <OLED_ShowString>
			OLED_Refresh_Gram();
 8002ad8:	f000 ffea 	bl	8003ab0 <OLED_Refresh_Gram>

			if (shouldBrake) {
 8002adc:	7efb      	ldrb	r3, [r7, #27]
 8002ade:	2b00      	cmp	r3, #0
 8002ae0:	d008      	beq.n	8002af4 <main+0x604>
				motor_setDrive(0, 0);
 8002ae2:	2100      	movs	r1, #0
 8002ae4:	2000      	movs	r0, #0
 8002ae6:	f000 ff4f 	bl	8003988 <motor_setDrive>
				dist_reset(0);
 8002aea:	ed9f 0a16 	vldr	s0, [pc, #88]	; 8002b44 <main+0x654>
 8002aee:	f7ff fa8d 	bl	800200c <dist_reset>
 8002af2:	e003      	b.n	8002afc <main+0x60c>
			} else dist_reset(estSpeed);
 8002af4:	ed97 0a0a 	vldr	s0, [r7, #40]	; 0x28
 8002af8:	f7ff fa88 	bl	800200c <dist_reset>
		}
	}
	/* ----- End: Drive PID Control ----- */

	/* ----- Start: Paced Loop Control ----- */
	while (!newTick);									//wait for new tick.
 8002afc:	bf00      	nop
 8002afe:	4b15      	ldr	r3, [pc, #84]	; (8002b54 <main+0x664>)
 8002b00:	781b      	ldrb	r3, [r3, #0]
 8002b02:	b2db      	uxtb	r3, r3
 8002b04:	2b00      	cmp	r3, #0
 8002b06:	d0fa      	beq.n	8002afe <main+0x60e>
	newTick = 0;										//acknowledge flag.
 8002b08:	4b12      	ldr	r3, [pc, #72]	; (8002b54 <main+0x664>)
 8002b0a:	2200      	movs	r2, #0
 8002b0c:	701a      	strb	r2, [r3, #0]

	ticksElapsed = (ticksElapsed + 1) % ticksRefresh;	//refresh tick count.
 8002b0e:	f897 3067 	ldrb.w	r3, [r7, #103]	; 0x67
 8002b12:	3301      	adds	r3, #1
 8002b14:	f897 203e 	ldrb.w	r2, [r7, #62]	; 0x3e
 8002b18:	fb93 f1f2 	sdiv	r1, r3, r2
 8002b1c:	fb01 f202 	mul.w	r2, r1, r2
 8002b20:	1a9b      	subs	r3, r3, r2
 8002b22:	f887 3067 	strb.w	r3, [r7, #103]	; 0x67
	if (!(ticksElapsed % ticksUltrasound)) {
 8002b26:	e57a      	b.n	800261e <main+0x12e>
 8002b28:	33333333 	.word	0x33333333
 8002b2c:	3feb3333 	.word	0x3feb3333
 8002b30:	9999999a 	.word	0x9999999a
 8002b34:	3fb99999 	.word	0x3fb99999
 8002b38:	20000576 	.word	0x20000576
 8002b3c:	20000514 	.word	0x20000514
 8002b40:	41200000 	.word	0x41200000
 8002b44:	00000000 	.word	0x00000000
 8002b48:	40590000 	.word	0x40590000
 8002b4c:	200004cc 	.word	0x200004cc
 8002b50:	0801136c 	.word	0x0801136c
 8002b54:	20000580 	.word	0x20000580
 8002b58:	9999999a 	.word	0x9999999a
 8002b5c:	3fa99999 	.word	0x3fa99999
 8002b60:	66666666 	.word	0x66666666
 8002b64:	3fee6666 	.word	0x3fee6666

08002b68 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8002b68:	b580      	push	{r7, lr}
 8002b6a:	b094      	sub	sp, #80	; 0x50
 8002b6c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8002b6e:	f107 0320 	add.w	r3, r7, #32
 8002b72:	2230      	movs	r2, #48	; 0x30
 8002b74:	2100      	movs	r1, #0
 8002b76:	4618      	mov	r0, r3
 8002b78:	f008 fc77 	bl	800b46a <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002b7c:	f107 030c 	add.w	r3, r7, #12
 8002b80:	2200      	movs	r2, #0
 8002b82:	601a      	str	r2, [r3, #0]
 8002b84:	605a      	str	r2, [r3, #4]
 8002b86:	609a      	str	r2, [r3, #8]
 8002b88:	60da      	str	r2, [r3, #12]
 8002b8a:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8002b8c:	2300      	movs	r3, #0
 8002b8e:	60bb      	str	r3, [r7, #8]
 8002b90:	4b22      	ldr	r3, [pc, #136]	; (8002c1c <SystemClock_Config+0xb4>)
 8002b92:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002b94:	4a21      	ldr	r2, [pc, #132]	; (8002c1c <SystemClock_Config+0xb4>)
 8002b96:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002b9a:	6413      	str	r3, [r2, #64]	; 0x40
 8002b9c:	4b1f      	ldr	r3, [pc, #124]	; (8002c1c <SystemClock_Config+0xb4>)
 8002b9e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002ba0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002ba4:	60bb      	str	r3, [r7, #8]
 8002ba6:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8002ba8:	2300      	movs	r3, #0
 8002baa:	607b      	str	r3, [r7, #4]
 8002bac:	4b1c      	ldr	r3, [pc, #112]	; (8002c20 <SystemClock_Config+0xb8>)
 8002bae:	681b      	ldr	r3, [r3, #0]
 8002bb0:	4a1b      	ldr	r2, [pc, #108]	; (8002c20 <SystemClock_Config+0xb8>)
 8002bb2:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002bb6:	6013      	str	r3, [r2, #0]
 8002bb8:	4b19      	ldr	r3, [pc, #100]	; (8002c20 <SystemClock_Config+0xb8>)
 8002bba:	681b      	ldr	r3, [r3, #0]
 8002bbc:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8002bc0:	607b      	str	r3, [r7, #4]
 8002bc2:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8002bc4:	2302      	movs	r3, #2
 8002bc6:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8002bc8:	2301      	movs	r3, #1
 8002bca:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8002bcc:	2310      	movs	r3, #16
 8002bce:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8002bd0:	2300      	movs	r3, #0
 8002bd2:	63bb      	str	r3, [r7, #56]	; 0x38
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002bd4:	f107 0320 	add.w	r3, r7, #32
 8002bd8:	4618      	mov	r0, r3
 8002bda:	f004 f94d 	bl	8006e78 <HAL_RCC_OscConfig>
 8002bde:	4603      	mov	r3, r0
 8002be0:	2b00      	cmp	r3, #0
 8002be2:	d001      	beq.n	8002be8 <SystemClock_Config+0x80>
  {
    Error_Handler();
 8002be4:	f000 fc3e 	bl	8003464 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002be8:	230f      	movs	r3, #15
 8002bea:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8002bec:	2300      	movs	r3, #0
 8002bee:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002bf0:	2300      	movs	r3, #0
 8002bf2:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8002bf4:	2300      	movs	r3, #0
 8002bf6:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8002bf8:	2300      	movs	r3, #0
 8002bfa:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8002bfc:	f107 030c 	add.w	r3, r7, #12
 8002c00:	2100      	movs	r1, #0
 8002c02:	4618      	mov	r0, r3
 8002c04:	f004 fbb0 	bl	8007368 <HAL_RCC_ClockConfig>
 8002c08:	4603      	mov	r3, r0
 8002c0a:	2b00      	cmp	r3, #0
 8002c0c:	d001      	beq.n	8002c12 <SystemClock_Config+0xaa>
  {
    Error_Handler();
 8002c0e:	f000 fc29 	bl	8003464 <Error_Handler>
  }
}
 8002c12:	bf00      	nop
 8002c14:	3750      	adds	r7, #80	; 0x50
 8002c16:	46bd      	mov	sp, r7
 8002c18:	bd80      	pop	{r7, pc}
 8002c1a:	bf00      	nop
 8002c1c:	40023800 	.word	0x40023800
 8002c20:	40007000 	.word	0x40007000

08002c24 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 8002c24:	b580      	push	{r7, lr}
 8002c26:	b084      	sub	sp, #16
 8002c28:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8002c2a:	463b      	mov	r3, r7
 8002c2c:	2200      	movs	r2, #0
 8002c2e:	601a      	str	r2, [r3, #0]
 8002c30:	605a      	str	r2, [r3, #4]
 8002c32:	609a      	str	r2, [r3, #8]
 8002c34:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 8002c36:	4b21      	ldr	r3, [pc, #132]	; (8002cbc <MX_ADC1_Init+0x98>)
 8002c38:	4a21      	ldr	r2, [pc, #132]	; (8002cc0 <MX_ADC1_Init+0x9c>)
 8002c3a:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 8002c3c:	4b1f      	ldr	r3, [pc, #124]	; (8002cbc <MX_ADC1_Init+0x98>)
 8002c3e:	2200      	movs	r2, #0
 8002c40:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8002c42:	4b1e      	ldr	r3, [pc, #120]	; (8002cbc <MX_ADC1_Init+0x98>)
 8002c44:	2200      	movs	r2, #0
 8002c46:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 8002c48:	4b1c      	ldr	r3, [pc, #112]	; (8002cbc <MX_ADC1_Init+0x98>)
 8002c4a:	2200      	movs	r2, #0
 8002c4c:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = ENABLE;
 8002c4e:	4b1b      	ldr	r3, [pc, #108]	; (8002cbc <MX_ADC1_Init+0x98>)
 8002c50:	2201      	movs	r2, #1
 8002c52:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 8002c54:	4b19      	ldr	r3, [pc, #100]	; (8002cbc <MX_ADC1_Init+0x98>)
 8002c56:	2200      	movs	r2, #0
 8002c58:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8002c5c:	4b17      	ldr	r3, [pc, #92]	; (8002cbc <MX_ADC1_Init+0x98>)
 8002c5e:	2200      	movs	r2, #0
 8002c60:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8002c62:	4b16      	ldr	r3, [pc, #88]	; (8002cbc <MX_ADC1_Init+0x98>)
 8002c64:	4a17      	ldr	r2, [pc, #92]	; (8002cc4 <MX_ADC1_Init+0xa0>)
 8002c66:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8002c68:	4b14      	ldr	r3, [pc, #80]	; (8002cbc <MX_ADC1_Init+0x98>)
 8002c6a:	2200      	movs	r2, #0
 8002c6c:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 8002c6e:	4b13      	ldr	r3, [pc, #76]	; (8002cbc <MX_ADC1_Init+0x98>)
 8002c70:	2201      	movs	r2, #1
 8002c72:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8002c74:	4b11      	ldr	r3, [pc, #68]	; (8002cbc <MX_ADC1_Init+0x98>)
 8002c76:	2200      	movs	r2, #0
 8002c78:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8002c7c:	4b0f      	ldr	r3, [pc, #60]	; (8002cbc <MX_ADC1_Init+0x98>)
 8002c7e:	2201      	movs	r2, #1
 8002c80:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8002c82:	480e      	ldr	r0, [pc, #56]	; (8002cbc <MX_ADC1_Init+0x98>)
 8002c84:	f002 f986 	bl	8004f94 <HAL_ADC_Init>
 8002c88:	4603      	mov	r3, r0
 8002c8a:	2b00      	cmp	r3, #0
 8002c8c:	d001      	beq.n	8002c92 <MX_ADC1_Init+0x6e>
  {
    Error_Handler();
 8002c8e:	f000 fbe9 	bl	8003464 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_13;
 8002c92:	230d      	movs	r3, #13
 8002c94:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 8002c96:	2301      	movs	r3, #1
 8002c98:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8002c9a:	2300      	movs	r3, #0
 8002c9c:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8002c9e:	463b      	mov	r3, r7
 8002ca0:	4619      	mov	r1, r3
 8002ca2:	4806      	ldr	r0, [pc, #24]	; (8002cbc <MX_ADC1_Init+0x98>)
 8002ca4:	f002 fb24 	bl	80052f0 <HAL_ADC_ConfigChannel>
 8002ca8:	4603      	mov	r3, r0
 8002caa:	2b00      	cmp	r3, #0
 8002cac:	d001      	beq.n	8002cb2 <MX_ADC1_Init+0x8e>
  {
    Error_Handler();
 8002cae:	f000 fbd9 	bl	8003464 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8002cb2:	bf00      	nop
 8002cb4:	3710      	adds	r7, #16
 8002cb6:	46bd      	mov	sp, r7
 8002cb8:	bd80      	pop	{r7, pc}
 8002cba:	bf00      	nop
 8002cbc:	20000238 	.word	0x20000238
 8002cc0:	40012000 	.word	0x40012000
 8002cc4:	0f000001 	.word	0x0f000001

08002cc8 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8002cc8:	b580      	push	{r7, lr}
 8002cca:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8002ccc:	4b12      	ldr	r3, [pc, #72]	; (8002d18 <MX_I2C1_Init+0x50>)
 8002cce:	4a13      	ldr	r2, [pc, #76]	; (8002d1c <MX_I2C1_Init+0x54>)
 8002cd0:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 400000;
 8002cd2:	4b11      	ldr	r3, [pc, #68]	; (8002d18 <MX_I2C1_Init+0x50>)
 8002cd4:	4a12      	ldr	r2, [pc, #72]	; (8002d20 <MX_I2C1_Init+0x58>)
 8002cd6:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8002cd8:	4b0f      	ldr	r3, [pc, #60]	; (8002d18 <MX_I2C1_Init+0x50>)
 8002cda:	2200      	movs	r2, #0
 8002cdc:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 8002cde:	4b0e      	ldr	r3, [pc, #56]	; (8002d18 <MX_I2C1_Init+0x50>)
 8002ce0:	2200      	movs	r2, #0
 8002ce2:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8002ce4:	4b0c      	ldr	r3, [pc, #48]	; (8002d18 <MX_I2C1_Init+0x50>)
 8002ce6:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 8002cea:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8002cec:	4b0a      	ldr	r3, [pc, #40]	; (8002d18 <MX_I2C1_Init+0x50>)
 8002cee:	2200      	movs	r2, #0
 8002cf0:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 8002cf2:	4b09      	ldr	r3, [pc, #36]	; (8002d18 <MX_I2C1_Init+0x50>)
 8002cf4:	2200      	movs	r2, #0
 8002cf6:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8002cf8:	4b07      	ldr	r3, [pc, #28]	; (8002d18 <MX_I2C1_Init+0x50>)
 8002cfa:	2200      	movs	r2, #0
 8002cfc:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8002cfe:	4b06      	ldr	r3, [pc, #24]	; (8002d18 <MX_I2C1_Init+0x50>)
 8002d00:	2200      	movs	r2, #0
 8002d02:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8002d04:	4804      	ldr	r0, [pc, #16]	; (8002d18 <MX_I2C1_Init+0x50>)
 8002d06:	f003 f86b 	bl	8005de0 <HAL_I2C_Init>
 8002d0a:	4603      	mov	r3, r0
 8002d0c:	2b00      	cmp	r3, #0
 8002d0e:	d001      	beq.n	8002d14 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8002d10:	f000 fba8 	bl	8003464 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8002d14:	bf00      	nop
 8002d16:	bd80      	pop	{r7, pc}
 8002d18:	20000280 	.word	0x20000280
 8002d1c:	40005400 	.word	0x40005400
 8002d20:	00061a80 	.word	0x00061a80

08002d24 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8002d24:	b580      	push	{r7, lr}
 8002d26:	b096      	sub	sp, #88	; 0x58
 8002d28:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8002d2a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8002d2e:	2200      	movs	r2, #0
 8002d30:	601a      	str	r2, [r3, #0]
 8002d32:	605a      	str	r2, [r3, #4]
 8002d34:	609a      	str	r2, [r3, #8]
 8002d36:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002d38:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8002d3c:	2200      	movs	r2, #0
 8002d3e:	601a      	str	r2, [r3, #0]
 8002d40:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8002d42:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002d46:	2200      	movs	r2, #0
 8002d48:	601a      	str	r2, [r3, #0]
 8002d4a:	605a      	str	r2, [r3, #4]
 8002d4c:	609a      	str	r2, [r3, #8]
 8002d4e:	60da      	str	r2, [r3, #12]
 8002d50:	611a      	str	r2, [r3, #16]
 8002d52:	615a      	str	r2, [r3, #20]
 8002d54:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8002d56:	1d3b      	adds	r3, r7, #4
 8002d58:	2220      	movs	r2, #32
 8002d5a:	2100      	movs	r1, #0
 8002d5c:	4618      	mov	r0, r3
 8002d5e:	f008 fb84 	bl	800b46a <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8002d62:	4b3e      	ldr	r3, [pc, #248]	; (8002e5c <MX_TIM1_Init+0x138>)
 8002d64:	4a3e      	ldr	r2, [pc, #248]	; (8002e60 <MX_TIM1_Init+0x13c>)
 8002d66:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 5-1;
 8002d68:	4b3c      	ldr	r3, [pc, #240]	; (8002e5c <MX_TIM1_Init+0x138>)
 8002d6a:	2204      	movs	r2, #4
 8002d6c:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002d6e:	4b3b      	ldr	r3, [pc, #236]	; (8002e5c <MX_TIM1_Init+0x138>)
 8002d70:	2200      	movs	r2, #0
 8002d72:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 64000-1;
 8002d74:	4b39      	ldr	r3, [pc, #228]	; (8002e5c <MX_TIM1_Init+0x138>)
 8002d76:	f64f 12ff 	movw	r2, #63999	; 0xf9ff
 8002d7a:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002d7c:	4b37      	ldr	r3, [pc, #220]	; (8002e5c <MX_TIM1_Init+0x138>)
 8002d7e:	2200      	movs	r2, #0
 8002d80:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8002d82:	4b36      	ldr	r3, [pc, #216]	; (8002e5c <MX_TIM1_Init+0x138>)
 8002d84:	2200      	movs	r2, #0
 8002d86:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002d88:	4b34      	ldr	r3, [pc, #208]	; (8002e5c <MX_TIM1_Init+0x138>)
 8002d8a:	2200      	movs	r2, #0
 8002d8c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8002d8e:	4833      	ldr	r0, [pc, #204]	; (8002e5c <MX_TIM1_Init+0x138>)
 8002d90:	f004 fcca 	bl	8007728 <HAL_TIM_Base_Init>
 8002d94:	4603      	mov	r3, r0
 8002d96:	2b00      	cmp	r3, #0
 8002d98:	d001      	beq.n	8002d9e <MX_TIM1_Init+0x7a>
  {
    Error_Handler();
 8002d9a:	f000 fb63 	bl	8003464 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002d9e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002da2:	64bb      	str	r3, [r7, #72]	; 0x48
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8002da4:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8002da8:	4619      	mov	r1, r3
 8002daa:	482c      	ldr	r0, [pc, #176]	; (8002e5c <MX_TIM1_Init+0x138>)
 8002dac:	f005 fc2a 	bl	8008604 <HAL_TIM_ConfigClockSource>
 8002db0:	4603      	mov	r3, r0
 8002db2:	2b00      	cmp	r3, #0
 8002db4:	d001      	beq.n	8002dba <MX_TIM1_Init+0x96>
  {
    Error_Handler();
 8002db6:	f000 fb55 	bl	8003464 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 8002dba:	4828      	ldr	r0, [pc, #160]	; (8002e5c <MX_TIM1_Init+0x138>)
 8002dbc:	f004 fddc 	bl	8007978 <HAL_TIM_PWM_Init>
 8002dc0:	4603      	mov	r3, r0
 8002dc2:	2b00      	cmp	r3, #0
 8002dc4:	d001      	beq.n	8002dca <MX_TIM1_Init+0xa6>
  {
    Error_Handler();
 8002dc6:	f000 fb4d 	bl	8003464 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002dca:	2300      	movs	r3, #0
 8002dcc:	643b      	str	r3, [r7, #64]	; 0x40
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002dce:	2300      	movs	r3, #0
 8002dd0:	647b      	str	r3, [r7, #68]	; 0x44
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8002dd2:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8002dd6:	4619      	mov	r1, r3
 8002dd8:	4820      	ldr	r0, [pc, #128]	; (8002e5c <MX_TIM1_Init+0x138>)
 8002dda:	f006 f983 	bl	80090e4 <HAL_TIMEx_MasterConfigSynchronization>
 8002dde:	4603      	mov	r3, r0
 8002de0:	2b00      	cmp	r3, #0
 8002de2:	d001      	beq.n	8002de8 <MX_TIM1_Init+0xc4>
  {
    Error_Handler();
 8002de4:	f000 fb3e 	bl	8003464 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8002de8:	2360      	movs	r3, #96	; 0x60
 8002dea:	627b      	str	r3, [r7, #36]	; 0x24
  sConfigOC.Pulse = 0;
 8002dec:	2300      	movs	r3, #0
 8002dee:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8002df0:	2300      	movs	r3, #0
 8002df2:	62fb      	str	r3, [r7, #44]	; 0x2c
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 8002df4:	2300      	movs	r3, #0
 8002df6:	633b      	str	r3, [r7, #48]	; 0x30
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8002df8:	2300      	movs	r3, #0
 8002dfa:	637b      	str	r3, [r7, #52]	; 0x34
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8002dfc:	2300      	movs	r3, #0
 8002dfe:	63bb      	str	r3, [r7, #56]	; 0x38
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8002e00:	2300      	movs	r3, #0
 8002e02:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8002e04:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002e08:	2200      	movs	r2, #0
 8002e0a:	4619      	mov	r1, r3
 8002e0c:	4813      	ldr	r0, [pc, #76]	; (8002e5c <MX_TIM1_Init+0x138>)
 8002e0e:	f005 fb37 	bl	8008480 <HAL_TIM_PWM_ConfigChannel>
 8002e12:	4603      	mov	r3, r0
 8002e14:	2b00      	cmp	r3, #0
 8002e16:	d001      	beq.n	8002e1c <MX_TIM1_Init+0xf8>
  {
    Error_Handler();
 8002e18:	f000 fb24 	bl	8003464 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8002e1c:	2300      	movs	r3, #0
 8002e1e:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8002e20:	2300      	movs	r3, #0
 8002e22:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 8002e24:	2300      	movs	r3, #0
 8002e26:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 8002e28:	2300      	movs	r3, #0
 8002e2a:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8002e2c:	2300      	movs	r3, #0
 8002e2e:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8002e30:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002e34:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8002e36:	2300      	movs	r3, #0
 8002e38:	623b      	str	r3, [r7, #32]
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 8002e3a:	1d3b      	adds	r3, r7, #4
 8002e3c:	4619      	mov	r1, r3
 8002e3e:	4807      	ldr	r0, [pc, #28]	; (8002e5c <MX_TIM1_Init+0x138>)
 8002e40:	f006 f9cc 	bl	80091dc <HAL_TIMEx_ConfigBreakDeadTime>
 8002e44:	4603      	mov	r3, r0
 8002e46:	2b00      	cmp	r3, #0
 8002e48:	d001      	beq.n	8002e4e <MX_TIM1_Init+0x12a>
  {
    Error_Handler();
 8002e4a:	f000 fb0b 	bl	8003464 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 8002e4e:	4803      	ldr	r0, [pc, #12]	; (8002e5c <MX_TIM1_Init+0x138>)
 8002e50:	f001 fe04 	bl	8004a5c <HAL_TIM_MspPostInit>

}
 8002e54:	bf00      	nop
 8002e56:	3758      	adds	r7, #88	; 0x58
 8002e58:	46bd      	mov	sp, r7
 8002e5a:	bd80      	pop	{r7, pc}
 8002e5c:	200002d4 	.word	0x200002d4
 8002e60:	40010000 	.word	0x40010000

08002e64 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8002e64:	b580      	push	{r7, lr}
 8002e66:	b08c      	sub	sp, #48	; 0x30
 8002e68:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 8002e6a:	f107 030c 	add.w	r3, r7, #12
 8002e6e:	2224      	movs	r2, #36	; 0x24
 8002e70:	2100      	movs	r1, #0
 8002e72:	4618      	mov	r0, r3
 8002e74:	f008 faf9 	bl	800b46a <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002e78:	1d3b      	adds	r3, r7, #4
 8002e7a:	2200      	movs	r2, #0
 8002e7c:	601a      	str	r2, [r3, #0]
 8002e7e:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8002e80:	4b21      	ldr	r3, [pc, #132]	; (8002f08 <MX_TIM2_Init+0xa4>)
 8002e82:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8002e86:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 0;
 8002e88:	4b1f      	ldr	r3, [pc, #124]	; (8002f08 <MX_TIM2_Init+0xa4>)
 8002e8a:	2200      	movs	r2, #0
 8002e8c:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002e8e:	4b1e      	ldr	r3, [pc, #120]	; (8002f08 <MX_TIM2_Init+0xa4>)
 8002e90:	2200      	movs	r2, #0
 8002e92:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 65535;
 8002e94:	4b1c      	ldr	r3, [pc, #112]	; (8002f08 <MX_TIM2_Init+0xa4>)
 8002e96:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8002e9a:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002e9c:	4b1a      	ldr	r3, [pc, #104]	; (8002f08 <MX_TIM2_Init+0xa4>)
 8002e9e:	2200      	movs	r2, #0
 8002ea0:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002ea2:	4b19      	ldr	r3, [pc, #100]	; (8002f08 <MX_TIM2_Init+0xa4>)
 8002ea4:	2200      	movs	r2, #0
 8002ea6:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 8002ea8:	2303      	movs	r3, #3
 8002eaa:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 8002eac:	2300      	movs	r3, #0
 8002eae:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 8002eb0:	2301      	movs	r3, #1
 8002eb2:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 8002eb4:	2300      	movs	r3, #0
 8002eb6:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 0;
 8002eb8:	2300      	movs	r3, #0
 8002eba:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 8002ebc:	2300      	movs	r3, #0
 8002ebe:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 8002ec0:	2301      	movs	r3, #1
 8002ec2:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 8002ec4:	2300      	movs	r3, #0
 8002ec6:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfig.IC2Filter = 0;
 8002ec8:	2300      	movs	r3, #0
 8002eca:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIM_Encoder_Init(&htim2, &sConfig) != HAL_OK)
 8002ecc:	f107 030c 	add.w	r3, r7, #12
 8002ed0:	4619      	mov	r1, r3
 8002ed2:	480d      	ldr	r0, [pc, #52]	; (8002f08 <MX_TIM2_Init+0xa4>)
 8002ed4:	f004 fff4 	bl	8007ec0 <HAL_TIM_Encoder_Init>
 8002ed8:	4603      	mov	r3, r0
 8002eda:	2b00      	cmp	r3, #0
 8002edc:	d001      	beq.n	8002ee2 <MX_TIM2_Init+0x7e>
  {
    Error_Handler();
 8002ede:	f000 fac1 	bl	8003464 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002ee2:	2300      	movs	r3, #0
 8002ee4:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002ee6:	2300      	movs	r3, #0
 8002ee8:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8002eea:	1d3b      	adds	r3, r7, #4
 8002eec:	4619      	mov	r1, r3
 8002eee:	4806      	ldr	r0, [pc, #24]	; (8002f08 <MX_TIM2_Init+0xa4>)
 8002ef0:	f006 f8f8 	bl	80090e4 <HAL_TIMEx_MasterConfigSynchronization>
 8002ef4:	4603      	mov	r3, r0
 8002ef6:	2b00      	cmp	r3, #0
 8002ef8:	d001      	beq.n	8002efe <MX_TIM2_Init+0x9a>
  {
    Error_Handler();
 8002efa:	f000 fab3 	bl	8003464 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8002efe:	bf00      	nop
 8002f00:	3730      	adds	r7, #48	; 0x30
 8002f02:	46bd      	mov	sp, r7
 8002f04:	bd80      	pop	{r7, pc}
 8002f06:	bf00      	nop
 8002f08:	2000031c 	.word	0x2000031c

08002f0c <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8002f0c:	b580      	push	{r7, lr}
 8002f0e:	b08c      	sub	sp, #48	; 0x30
 8002f10:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 8002f12:	f107 030c 	add.w	r3, r7, #12
 8002f16:	2224      	movs	r2, #36	; 0x24
 8002f18:	2100      	movs	r1, #0
 8002f1a:	4618      	mov	r0, r3
 8002f1c:	f008 faa5 	bl	800b46a <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002f20:	1d3b      	adds	r3, r7, #4
 8002f22:	2200      	movs	r2, #0
 8002f24:	601a      	str	r2, [r3, #0]
 8002f26:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8002f28:	4b20      	ldr	r3, [pc, #128]	; (8002fac <MX_TIM3_Init+0xa0>)
 8002f2a:	4a21      	ldr	r2, [pc, #132]	; (8002fb0 <MX_TIM3_Init+0xa4>)
 8002f2c:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 0;
 8002f2e:	4b1f      	ldr	r3, [pc, #124]	; (8002fac <MX_TIM3_Init+0xa0>)
 8002f30:	2200      	movs	r2, #0
 8002f32:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002f34:	4b1d      	ldr	r3, [pc, #116]	; (8002fac <MX_TIM3_Init+0xa0>)
 8002f36:	2200      	movs	r2, #0
 8002f38:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 65535;
 8002f3a:	4b1c      	ldr	r3, [pc, #112]	; (8002fac <MX_TIM3_Init+0xa0>)
 8002f3c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8002f40:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002f42:	4b1a      	ldr	r3, [pc, #104]	; (8002fac <MX_TIM3_Init+0xa0>)
 8002f44:	2200      	movs	r2, #0
 8002f46:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002f48:	4b18      	ldr	r3, [pc, #96]	; (8002fac <MX_TIM3_Init+0xa0>)
 8002f4a:	2200      	movs	r2, #0
 8002f4c:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 8002f4e:	2303      	movs	r3, #3
 8002f50:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 8002f52:	2300      	movs	r3, #0
 8002f54:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 8002f56:	2301      	movs	r3, #1
 8002f58:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 8002f5a:	2300      	movs	r3, #0
 8002f5c:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 0;
 8002f5e:	2300      	movs	r3, #0
 8002f60:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 8002f62:	2300      	movs	r3, #0
 8002f64:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 8002f66:	2301      	movs	r3, #1
 8002f68:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 8002f6a:	2300      	movs	r3, #0
 8002f6c:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfig.IC2Filter = 0;
 8002f6e:	2300      	movs	r3, #0
 8002f70:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIM_Encoder_Init(&htim3, &sConfig) != HAL_OK)
 8002f72:	f107 030c 	add.w	r3, r7, #12
 8002f76:	4619      	mov	r1, r3
 8002f78:	480c      	ldr	r0, [pc, #48]	; (8002fac <MX_TIM3_Init+0xa0>)
 8002f7a:	f004 ffa1 	bl	8007ec0 <HAL_TIM_Encoder_Init>
 8002f7e:	4603      	mov	r3, r0
 8002f80:	2b00      	cmp	r3, #0
 8002f82:	d001      	beq.n	8002f88 <MX_TIM3_Init+0x7c>
  {
    Error_Handler();
 8002f84:	f000 fa6e 	bl	8003464 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002f88:	2300      	movs	r3, #0
 8002f8a:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002f8c:	2300      	movs	r3, #0
 8002f8e:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8002f90:	1d3b      	adds	r3, r7, #4
 8002f92:	4619      	mov	r1, r3
 8002f94:	4805      	ldr	r0, [pc, #20]	; (8002fac <MX_TIM3_Init+0xa0>)
 8002f96:	f006 f8a5 	bl	80090e4 <HAL_TIMEx_MasterConfigSynchronization>
 8002f9a:	4603      	mov	r3, r0
 8002f9c:	2b00      	cmp	r3, #0
 8002f9e:	d001      	beq.n	8002fa4 <MX_TIM3_Init+0x98>
  {
    Error_Handler();
 8002fa0:	f000 fa60 	bl	8003464 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 8002fa4:	bf00      	nop
 8002fa6:	3730      	adds	r7, #48	; 0x30
 8002fa8:	46bd      	mov	sp, r7
 8002faa:	bd80      	pop	{r7, pc}
 8002fac:	20000364 	.word	0x20000364
 8002fb0:	40000400 	.word	0x40000400

08002fb4 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 8002fb4:	b580      	push	{r7, lr}
 8002fb6:	b08a      	sub	sp, #40	; 0x28
 8002fb8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8002fba:	f107 0318 	add.w	r3, r7, #24
 8002fbe:	2200      	movs	r2, #0
 8002fc0:	601a      	str	r2, [r3, #0]
 8002fc2:	605a      	str	r2, [r3, #4]
 8002fc4:	609a      	str	r2, [r3, #8]
 8002fc6:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002fc8:	f107 0310 	add.w	r3, r7, #16
 8002fcc:	2200      	movs	r2, #0
 8002fce:	601a      	str	r2, [r3, #0]
 8002fd0:	605a      	str	r2, [r3, #4]
  TIM_IC_InitTypeDef sConfigIC = {0};
 8002fd2:	463b      	mov	r3, r7
 8002fd4:	2200      	movs	r2, #0
 8002fd6:	601a      	str	r2, [r3, #0]
 8002fd8:	605a      	str	r2, [r3, #4]
 8002fda:	609a      	str	r2, [r3, #8]
 8002fdc:	60da      	str	r2, [r3, #12]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8002fde:	4b2b      	ldr	r3, [pc, #172]	; (800308c <MX_TIM4_Init+0xd8>)
 8002fe0:	4a2b      	ldr	r2, [pc, #172]	; (8003090 <MX_TIM4_Init+0xdc>)
 8002fe2:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 16-1;
 8002fe4:	4b29      	ldr	r3, [pc, #164]	; (800308c <MX_TIM4_Init+0xd8>)
 8002fe6:	220f      	movs	r2, #15
 8002fe8:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002fea:	4b28      	ldr	r3, [pc, #160]	; (800308c <MX_TIM4_Init+0xd8>)
 8002fec:	2200      	movs	r2, #0
 8002fee:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 65536-1;
 8002ff0:	4b26      	ldr	r3, [pc, #152]	; (800308c <MX_TIM4_Init+0xd8>)
 8002ff2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8002ff6:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002ff8:	4b24      	ldr	r3, [pc, #144]	; (800308c <MX_TIM4_Init+0xd8>)
 8002ffa:	2200      	movs	r2, #0
 8002ffc:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002ffe:	4b23      	ldr	r3, [pc, #140]	; (800308c <MX_TIM4_Init+0xd8>)
 8003000:	2200      	movs	r2, #0
 8003002:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 8003004:	4821      	ldr	r0, [pc, #132]	; (800308c <MX_TIM4_Init+0xd8>)
 8003006:	f004 fb8f 	bl	8007728 <HAL_TIM_Base_Init>
 800300a:	4603      	mov	r3, r0
 800300c:	2b00      	cmp	r3, #0
 800300e:	d001      	beq.n	8003014 <MX_TIM4_Init+0x60>
  {
    Error_Handler();
 8003010:	f000 fa28 	bl	8003464 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8003014:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003018:	61bb      	str	r3, [r7, #24]
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 800301a:	f107 0318 	add.w	r3, r7, #24
 800301e:	4619      	mov	r1, r3
 8003020:	481a      	ldr	r0, [pc, #104]	; (800308c <MX_TIM4_Init+0xd8>)
 8003022:	f005 faef 	bl	8008604 <HAL_TIM_ConfigClockSource>
 8003026:	4603      	mov	r3, r0
 8003028:	2b00      	cmp	r3, #0
 800302a:	d001      	beq.n	8003030 <MX_TIM4_Init+0x7c>
  {
    Error_Handler();
 800302c:	f000 fa1a 	bl	8003464 <Error_Handler>
  }
  if (HAL_TIM_IC_Init(&htim4) != HAL_OK)
 8003030:	4816      	ldr	r0, [pc, #88]	; (800308c <MX_TIM4_Init+0xd8>)
 8003032:	f004 fdc3 	bl	8007bbc <HAL_TIM_IC_Init>
 8003036:	4603      	mov	r3, r0
 8003038:	2b00      	cmp	r3, #0
 800303a:	d001      	beq.n	8003040 <MX_TIM4_Init+0x8c>
  {
    Error_Handler();
 800303c:	f000 fa12 	bl	8003464 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8003040:	2300      	movs	r3, #0
 8003042:	613b      	str	r3, [r7, #16]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8003044:	2300      	movs	r3, #0
 8003046:	617b      	str	r3, [r7, #20]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8003048:	f107 0310 	add.w	r3, r7, #16
 800304c:	4619      	mov	r1, r3
 800304e:	480f      	ldr	r0, [pc, #60]	; (800308c <MX_TIM4_Init+0xd8>)
 8003050:	f006 f848 	bl	80090e4 <HAL_TIMEx_MasterConfigSynchronization>
 8003054:	4603      	mov	r3, r0
 8003056:	2b00      	cmp	r3, #0
 8003058:	d001      	beq.n	800305e <MX_TIM4_Init+0xaa>
  {
    Error_Handler();
 800305a:	f000 fa03 	bl	8003464 <Error_Handler>
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 800305e:	2300      	movs	r3, #0
 8003060:	603b      	str	r3, [r7, #0]
  sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 8003062:	2301      	movs	r3, #1
 8003064:	607b      	str	r3, [r7, #4]
  sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 8003066:	2300      	movs	r3, #0
 8003068:	60bb      	str	r3, [r7, #8]
  sConfigIC.ICFilter = 0;
 800306a:	2300      	movs	r3, #0
 800306c:	60fb      	str	r3, [r7, #12]
  if (HAL_TIM_IC_ConfigChannel(&htim4, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 800306e:	463b      	mov	r3, r7
 8003070:	2200      	movs	r2, #0
 8003072:	4619      	mov	r1, r3
 8003074:	4805      	ldr	r0, [pc, #20]	; (800308c <MX_TIM4_Init+0xd8>)
 8003076:	f005 f967 	bl	8008348 <HAL_TIM_IC_ConfigChannel>
 800307a:	4603      	mov	r3, r0
 800307c:	2b00      	cmp	r3, #0
 800307e:	d001      	beq.n	8003084 <MX_TIM4_Init+0xd0>
  {
    Error_Handler();
 8003080:	f000 f9f0 	bl	8003464 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 8003084:	bf00      	nop
 8003086:	3728      	adds	r7, #40	; 0x28
 8003088:	46bd      	mov	sp, r7
 800308a:	bd80      	pop	{r7, pc}
 800308c:	200003ac 	.word	0x200003ac
 8003090:	40000800 	.word	0x40000800

08003094 <MX_TIM6_Init>:
  * @brief TIM6 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM6_Init(void)
{
 8003094:	b580      	push	{r7, lr}
 8003096:	b082      	sub	sp, #8
 8003098:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM6_Init 0 */

  /* USER CODE END TIM6_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800309a:	463b      	mov	r3, r7
 800309c:	2200      	movs	r2, #0
 800309e:	601a      	str	r2, [r3, #0]
 80030a0:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM6_Init 1 */

  /* USER CODE END TIM6_Init 1 */
  htim6.Instance = TIM6;
 80030a2:	4b15      	ldr	r3, [pc, #84]	; (80030f8 <MX_TIM6_Init+0x64>)
 80030a4:	4a15      	ldr	r2, [pc, #84]	; (80030fc <MX_TIM6_Init+0x68>)
 80030a6:	601a      	str	r2, [r3, #0]
  htim6.Init.Prescaler = 16-1;
 80030a8:	4b13      	ldr	r3, [pc, #76]	; (80030f8 <MX_TIM6_Init+0x64>)
 80030aa:	220f      	movs	r2, #15
 80030ac:	605a      	str	r2, [r3, #4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80030ae:	4b12      	ldr	r3, [pc, #72]	; (80030f8 <MX_TIM6_Init+0x64>)
 80030b0:	2200      	movs	r2, #0
 80030b2:	609a      	str	r2, [r3, #8]
  htim6.Init.Period = 65536-1;
 80030b4:	4b10      	ldr	r3, [pc, #64]	; (80030f8 <MX_TIM6_Init+0x64>)
 80030b6:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80030ba:	60da      	str	r2, [r3, #12]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80030bc:	4b0e      	ldr	r3, [pc, #56]	; (80030f8 <MX_TIM6_Init+0x64>)
 80030be:	2200      	movs	r2, #0
 80030c0:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 80030c2:	480d      	ldr	r0, [pc, #52]	; (80030f8 <MX_TIM6_Init+0x64>)
 80030c4:	f004 fb30 	bl	8007728 <HAL_TIM_Base_Init>
 80030c8:	4603      	mov	r3, r0
 80030ca:	2b00      	cmp	r3, #0
 80030cc:	d001      	beq.n	80030d2 <MX_TIM6_Init+0x3e>
  {
    Error_Handler();
 80030ce:	f000 f9c9 	bl	8003464 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80030d2:	2300      	movs	r3, #0
 80030d4:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80030d6:	2300      	movs	r3, #0
 80030d8:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 80030da:	463b      	mov	r3, r7
 80030dc:	4619      	mov	r1, r3
 80030de:	4806      	ldr	r0, [pc, #24]	; (80030f8 <MX_TIM6_Init+0x64>)
 80030e0:	f006 f800 	bl	80090e4 <HAL_TIMEx_MasterConfigSynchronization>
 80030e4:	4603      	mov	r3, r0
 80030e6:	2b00      	cmp	r3, #0
 80030e8:	d001      	beq.n	80030ee <MX_TIM6_Init+0x5a>
  {
    Error_Handler();
 80030ea:	f000 f9bb 	bl	8003464 <Error_Handler>
  }
  /* USER CODE BEGIN TIM6_Init 2 */

  /* USER CODE END TIM6_Init 2 */

}
 80030ee:	bf00      	nop
 80030f0:	3708      	adds	r7, #8
 80030f2:	46bd      	mov	sp, r7
 80030f4:	bd80      	pop	{r7, pc}
 80030f6:	bf00      	nop
 80030f8:	200003f4 	.word	0x200003f4
 80030fc:	40001000 	.word	0x40001000

08003100 <MX_TIM7_Init>:
  * @brief TIM7 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM7_Init(void)
{
 8003100:	b580      	push	{r7, lr}
 8003102:	b082      	sub	sp, #8
 8003104:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM7_Init 0 */

  /* USER CODE END TIM7_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8003106:	463b      	mov	r3, r7
 8003108:	2200      	movs	r2, #0
 800310a:	601a      	str	r2, [r3, #0]
 800310c:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM7_Init 1 */

  /* USER CODE END TIM7_Init 1 */
  htim7.Instance = TIM7;
 800310e:	4b15      	ldr	r3, [pc, #84]	; (8003164 <MX_TIM7_Init+0x64>)
 8003110:	4a15      	ldr	r2, [pc, #84]	; (8003168 <MX_TIM7_Init+0x68>)
 8003112:	601a      	str	r2, [r3, #0]
  htim7.Init.Prescaler = 2-1;
 8003114:	4b13      	ldr	r3, [pc, #76]	; (8003164 <MX_TIM7_Init+0x64>)
 8003116:	2201      	movs	r2, #1
 8003118:	605a      	str	r2, [r3, #4]
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 800311a:	4b12      	ldr	r3, [pc, #72]	; (8003164 <MX_TIM7_Init+0x64>)
 800311c:	2200      	movs	r2, #0
 800311e:	609a      	str	r2, [r3, #8]
  htim7.Init.Period = 20000-1;
 8003120:	4b10      	ldr	r3, [pc, #64]	; (8003164 <MX_TIM7_Init+0x64>)
 8003122:	f644 621f 	movw	r2, #19999	; 0x4e1f
 8003126:	60da      	str	r2, [r3, #12]
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8003128:	4b0e      	ldr	r3, [pc, #56]	; (8003164 <MX_TIM7_Init+0x64>)
 800312a:	2200      	movs	r2, #0
 800312c:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 800312e:	480d      	ldr	r0, [pc, #52]	; (8003164 <MX_TIM7_Init+0x64>)
 8003130:	f004 fafa 	bl	8007728 <HAL_TIM_Base_Init>
 8003134:	4603      	mov	r3, r0
 8003136:	2b00      	cmp	r3, #0
 8003138:	d001      	beq.n	800313e <MX_TIM7_Init+0x3e>
  {
    Error_Handler();
 800313a:	f000 f993 	bl	8003464 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800313e:	2300      	movs	r3, #0
 8003140:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8003142:	2300      	movs	r3, #0
 8003144:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 8003146:	463b      	mov	r3, r7
 8003148:	4619      	mov	r1, r3
 800314a:	4806      	ldr	r0, [pc, #24]	; (8003164 <MX_TIM7_Init+0x64>)
 800314c:	f005 ffca 	bl	80090e4 <HAL_TIMEx_MasterConfigSynchronization>
 8003150:	4603      	mov	r3, r0
 8003152:	2b00      	cmp	r3, #0
 8003154:	d001      	beq.n	800315a <MX_TIM7_Init+0x5a>
  {
    Error_Handler();
 8003156:	f000 f985 	bl	8003464 <Error_Handler>
  }
  /* USER CODE BEGIN TIM7_Init 2 */

  /* USER CODE END TIM7_Init 2 */

}
 800315a:	bf00      	nop
 800315c:	3708      	adds	r7, #8
 800315e:	46bd      	mov	sp, r7
 8003160:	bd80      	pop	{r7, pc}
 8003162:	bf00      	nop
 8003164:	2000043c 	.word	0x2000043c
 8003168:	40001400 	.word	0x40001400

0800316c <MX_TIM8_Init>:
  * @brief TIM8 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM8_Init(void)
{
 800316c:	b580      	push	{r7, lr}
 800316e:	b096      	sub	sp, #88	; 0x58
 8003170:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM8_Init 0 */

  /* USER CODE END TIM8_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8003172:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8003176:	2200      	movs	r2, #0
 8003178:	601a      	str	r2, [r3, #0]
 800317a:	605a      	str	r2, [r3, #4]
 800317c:	609a      	str	r2, [r3, #8]
 800317e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8003180:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8003184:	2200      	movs	r2, #0
 8003186:	601a      	str	r2, [r3, #0]
 8003188:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800318a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800318e:	2200      	movs	r2, #0
 8003190:	601a      	str	r2, [r3, #0]
 8003192:	605a      	str	r2, [r3, #4]
 8003194:	609a      	str	r2, [r3, #8]
 8003196:	60da      	str	r2, [r3, #12]
 8003198:	611a      	str	r2, [r3, #16]
 800319a:	615a      	str	r2, [r3, #20]
 800319c:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 800319e:	1d3b      	adds	r3, r7, #4
 80031a0:	2220      	movs	r2, #32
 80031a2:	2100      	movs	r1, #0
 80031a4:	4618      	mov	r0, r3
 80031a6:	f008 f960 	bl	800b46a <memset>

  /* USER CODE BEGIN TIM8_Init 1 */

  /* USER CODE END TIM8_Init 1 */
  htim8.Instance = TIM8;
 80031aa:	4b44      	ldr	r3, [pc, #272]	; (80032bc <MX_TIM8_Init+0x150>)
 80031ac:	4a44      	ldr	r2, [pc, #272]	; (80032c0 <MX_TIM8_Init+0x154>)
 80031ae:	601a      	str	r2, [r3, #0]
  htim8.Init.Prescaler = 0;
 80031b0:	4b42      	ldr	r3, [pc, #264]	; (80032bc <MX_TIM8_Init+0x150>)
 80031b2:	2200      	movs	r2, #0
 80031b4:	605a      	str	r2, [r3, #4]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 80031b6:	4b41      	ldr	r3, [pc, #260]	; (80032bc <MX_TIM8_Init+0x150>)
 80031b8:	2200      	movs	r2, #0
 80031ba:	609a      	str	r2, [r3, #8]
  htim8.Init.Period = 7200-1;
 80031bc:	4b3f      	ldr	r3, [pc, #252]	; (80032bc <MX_TIM8_Init+0x150>)
 80031be:	f641 421f 	movw	r2, #7199	; 0x1c1f
 80031c2:	60da      	str	r2, [r3, #12]
  htim8.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80031c4:	4b3d      	ldr	r3, [pc, #244]	; (80032bc <MX_TIM8_Init+0x150>)
 80031c6:	2200      	movs	r2, #0
 80031c8:	611a      	str	r2, [r3, #16]
  htim8.Init.RepetitionCounter = 0;
 80031ca:	4b3c      	ldr	r3, [pc, #240]	; (80032bc <MX_TIM8_Init+0x150>)
 80031cc:	2200      	movs	r2, #0
 80031ce:	615a      	str	r2, [r3, #20]
  htim8.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80031d0:	4b3a      	ldr	r3, [pc, #232]	; (80032bc <MX_TIM8_Init+0x150>)
 80031d2:	2200      	movs	r2, #0
 80031d4:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim8) != HAL_OK)
 80031d6:	4839      	ldr	r0, [pc, #228]	; (80032bc <MX_TIM8_Init+0x150>)
 80031d8:	f004 faa6 	bl	8007728 <HAL_TIM_Base_Init>
 80031dc:	4603      	mov	r3, r0
 80031de:	2b00      	cmp	r3, #0
 80031e0:	d001      	beq.n	80031e6 <MX_TIM8_Init+0x7a>
  {
    Error_Handler();
 80031e2:	f000 f93f 	bl	8003464 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80031e6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80031ea:	64bb      	str	r3, [r7, #72]	; 0x48
  if (HAL_TIM_ConfigClockSource(&htim8, &sClockSourceConfig) != HAL_OK)
 80031ec:	f107 0348 	add.w	r3, r7, #72	; 0x48
 80031f0:	4619      	mov	r1, r3
 80031f2:	4832      	ldr	r0, [pc, #200]	; (80032bc <MX_TIM8_Init+0x150>)
 80031f4:	f005 fa06 	bl	8008604 <HAL_TIM_ConfigClockSource>
 80031f8:	4603      	mov	r3, r0
 80031fa:	2b00      	cmp	r3, #0
 80031fc:	d001      	beq.n	8003202 <MX_TIM8_Init+0x96>
  {
    Error_Handler();
 80031fe:	f000 f931 	bl	8003464 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim8) != HAL_OK)
 8003202:	482e      	ldr	r0, [pc, #184]	; (80032bc <MX_TIM8_Init+0x150>)
 8003204:	f004 fbb8 	bl	8007978 <HAL_TIM_PWM_Init>
 8003208:	4603      	mov	r3, r0
 800320a:	2b00      	cmp	r3, #0
 800320c:	d001      	beq.n	8003212 <MX_TIM8_Init+0xa6>
  {
    Error_Handler();
 800320e:	f000 f929 	bl	8003464 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8003212:	2300      	movs	r3, #0
 8003214:	643b      	str	r3, [r7, #64]	; 0x40
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8003216:	2300      	movs	r3, #0
 8003218:	647b      	str	r3, [r7, #68]	; 0x44
  if (HAL_TIMEx_MasterConfigSynchronization(&htim8, &sMasterConfig) != HAL_OK)
 800321a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800321e:	4619      	mov	r1, r3
 8003220:	4826      	ldr	r0, [pc, #152]	; (80032bc <MX_TIM8_Init+0x150>)
 8003222:	f005 ff5f 	bl	80090e4 <HAL_TIMEx_MasterConfigSynchronization>
 8003226:	4603      	mov	r3, r0
 8003228:	2b00      	cmp	r3, #0
 800322a:	d001      	beq.n	8003230 <MX_TIM8_Init+0xc4>
  {
    Error_Handler();
 800322c:	f000 f91a 	bl	8003464 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8003230:	2360      	movs	r3, #96	; 0x60
 8003232:	627b      	str	r3, [r7, #36]	; 0x24
  sConfigOC.Pulse = 0;
 8003234:	2300      	movs	r3, #0
 8003236:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8003238:	2300      	movs	r3, #0
 800323a:	62fb      	str	r3, [r7, #44]	; 0x2c
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 800323c:	2300      	movs	r3, #0
 800323e:	633b      	str	r3, [r7, #48]	; 0x30
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8003240:	2300      	movs	r3, #0
 8003242:	637b      	str	r3, [r7, #52]	; 0x34
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8003244:	2300      	movs	r3, #0
 8003246:	63bb      	str	r3, [r7, #56]	; 0x38
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8003248:	2300      	movs	r3, #0
 800324a:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800324c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8003250:	2200      	movs	r2, #0
 8003252:	4619      	mov	r1, r3
 8003254:	4819      	ldr	r0, [pc, #100]	; (80032bc <MX_TIM8_Init+0x150>)
 8003256:	f005 f913 	bl	8008480 <HAL_TIM_PWM_ConfigChannel>
 800325a:	4603      	mov	r3, r0
 800325c:	2b00      	cmp	r3, #0
 800325e:	d001      	beq.n	8003264 <MX_TIM8_Init+0xf8>
  {
    Error_Handler();
 8003260:	f000 f900 	bl	8003464 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim8, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8003264:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8003268:	2204      	movs	r2, #4
 800326a:	4619      	mov	r1, r3
 800326c:	4813      	ldr	r0, [pc, #76]	; (80032bc <MX_TIM8_Init+0x150>)
 800326e:	f005 f907 	bl	8008480 <HAL_TIM_PWM_ConfigChannel>
 8003272:	4603      	mov	r3, r0
 8003274:	2b00      	cmp	r3, #0
 8003276:	d001      	beq.n	800327c <MX_TIM8_Init+0x110>
  {
    Error_Handler();
 8003278:	f000 f8f4 	bl	8003464 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 800327c:	2300      	movs	r3, #0
 800327e:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8003280:	2300      	movs	r3, #0
 8003282:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 8003284:	2300      	movs	r3, #0
 8003286:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 8003288:	2300      	movs	r3, #0
 800328a:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 800328c:	2300      	movs	r3, #0
 800328e:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8003290:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8003294:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8003296:	2300      	movs	r3, #0
 8003298:	623b      	str	r3, [r7, #32]
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim8, &sBreakDeadTimeConfig) != HAL_OK)
 800329a:	1d3b      	adds	r3, r7, #4
 800329c:	4619      	mov	r1, r3
 800329e:	4807      	ldr	r0, [pc, #28]	; (80032bc <MX_TIM8_Init+0x150>)
 80032a0:	f005 ff9c 	bl	80091dc <HAL_TIMEx_ConfigBreakDeadTime>
 80032a4:	4603      	mov	r3, r0
 80032a6:	2b00      	cmp	r3, #0
 80032a8:	d001      	beq.n	80032ae <MX_TIM8_Init+0x142>
  {
    Error_Handler();
 80032aa:	f000 f8db 	bl	8003464 <Error_Handler>
  }
  /* USER CODE BEGIN TIM8_Init 2 */

  /* USER CODE END TIM8_Init 2 */
  HAL_TIM_MspPostInit(&htim8);
 80032ae:	4803      	ldr	r0, [pc, #12]	; (80032bc <MX_TIM8_Init+0x150>)
 80032b0:	f001 fbd4 	bl	8004a5c <HAL_TIM_MspPostInit>

}
 80032b4:	bf00      	nop
 80032b6:	3758      	adds	r7, #88	; 0x58
 80032b8:	46bd      	mov	sp, r7
 80032ba:	bd80      	pop	{r7, pc}
 80032bc:	20000484 	.word	0x20000484
 80032c0:	40010400 	.word	0x40010400

080032c4 <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 80032c4:	b580      	push	{r7, lr}
 80032c6:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 80032c8:	4b11      	ldr	r3, [pc, #68]	; (8003310 <MX_USART3_UART_Init+0x4c>)
 80032ca:	4a12      	ldr	r2, [pc, #72]	; (8003314 <MX_USART3_UART_Init+0x50>)
 80032cc:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 115200;
 80032ce:	4b10      	ldr	r3, [pc, #64]	; (8003310 <MX_USART3_UART_Init+0x4c>)
 80032d0:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80032d4:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 80032d6:	4b0e      	ldr	r3, [pc, #56]	; (8003310 <MX_USART3_UART_Init+0x4c>)
 80032d8:	2200      	movs	r2, #0
 80032da:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 80032dc:	4b0c      	ldr	r3, [pc, #48]	; (8003310 <MX_USART3_UART_Init+0x4c>)
 80032de:	2200      	movs	r2, #0
 80032e0:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 80032e2:	4b0b      	ldr	r3, [pc, #44]	; (8003310 <MX_USART3_UART_Init+0x4c>)
 80032e4:	2200      	movs	r2, #0
 80032e6:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 80032e8:	4b09      	ldr	r3, [pc, #36]	; (8003310 <MX_USART3_UART_Init+0x4c>)
 80032ea:	220c      	movs	r2, #12
 80032ec:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80032ee:	4b08      	ldr	r3, [pc, #32]	; (8003310 <MX_USART3_UART_Init+0x4c>)
 80032f0:	2200      	movs	r2, #0
 80032f2:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 80032f4:	4b06      	ldr	r3, [pc, #24]	; (8003310 <MX_USART3_UART_Init+0x4c>)
 80032f6:	2200      	movs	r2, #0
 80032f8:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart3) != HAL_OK)
 80032fa:	4805      	ldr	r0, [pc, #20]	; (8003310 <MX_USART3_UART_Init+0x4c>)
 80032fc:	f005 ffd4 	bl	80092a8 <HAL_UART_Init>
 8003300:	4603      	mov	r3, r0
 8003302:	2b00      	cmp	r3, #0
 8003304:	d001      	beq.n	800330a <MX_USART3_UART_Init+0x46>
  {
    Error_Handler();
 8003306:	f000 f8ad 	bl	8003464 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 800330a:	bf00      	nop
 800330c:	bd80      	pop	{r7, pc}
 800330e:	bf00      	nop
 8003310:	200004cc 	.word	0x200004cc
 8003314:	40004800 	.word	0x40004800

08003318 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8003318:	b580      	push	{r7, lr}
 800331a:	b08a      	sub	sp, #40	; 0x28
 800331c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800331e:	f107 0314 	add.w	r3, r7, #20
 8003322:	2200      	movs	r2, #0
 8003324:	601a      	str	r2, [r3, #0]
 8003326:	605a      	str	r2, [r3, #4]
 8003328:	609a      	str	r2, [r3, #8]
 800332a:	60da      	str	r2, [r3, #12]
 800332c:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800332e:	2300      	movs	r3, #0
 8003330:	613b      	str	r3, [r7, #16]
 8003332:	4b48      	ldr	r3, [pc, #288]	; (8003454 <MX_GPIO_Init+0x13c>)
 8003334:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003336:	4a47      	ldr	r2, [pc, #284]	; (8003454 <MX_GPIO_Init+0x13c>)
 8003338:	f043 0310 	orr.w	r3, r3, #16
 800333c:	6313      	str	r3, [r2, #48]	; 0x30
 800333e:	4b45      	ldr	r3, [pc, #276]	; (8003454 <MX_GPIO_Init+0x13c>)
 8003340:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003342:	f003 0310 	and.w	r3, r3, #16
 8003346:	613b      	str	r3, [r7, #16]
 8003348:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800334a:	2300      	movs	r3, #0
 800334c:	60fb      	str	r3, [r7, #12]
 800334e:	4b41      	ldr	r3, [pc, #260]	; (8003454 <MX_GPIO_Init+0x13c>)
 8003350:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003352:	4a40      	ldr	r2, [pc, #256]	; (8003454 <MX_GPIO_Init+0x13c>)
 8003354:	f043 0304 	orr.w	r3, r3, #4
 8003358:	6313      	str	r3, [r2, #48]	; 0x30
 800335a:	4b3e      	ldr	r3, [pc, #248]	; (8003454 <MX_GPIO_Init+0x13c>)
 800335c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800335e:	f003 0304 	and.w	r3, r3, #4
 8003362:	60fb      	str	r3, [r7, #12]
 8003364:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8003366:	2300      	movs	r3, #0
 8003368:	60bb      	str	r3, [r7, #8]
 800336a:	4b3a      	ldr	r3, [pc, #232]	; (8003454 <MX_GPIO_Init+0x13c>)
 800336c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800336e:	4a39      	ldr	r2, [pc, #228]	; (8003454 <MX_GPIO_Init+0x13c>)
 8003370:	f043 0301 	orr.w	r3, r3, #1
 8003374:	6313      	str	r3, [r2, #48]	; 0x30
 8003376:	4b37      	ldr	r3, [pc, #220]	; (8003454 <MX_GPIO_Init+0x13c>)
 8003378:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800337a:	f003 0301 	and.w	r3, r3, #1
 800337e:	60bb      	str	r3, [r7, #8]
 8003380:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8003382:	2300      	movs	r3, #0
 8003384:	607b      	str	r3, [r7, #4]
 8003386:	4b33      	ldr	r3, [pc, #204]	; (8003454 <MX_GPIO_Init+0x13c>)
 8003388:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800338a:	4a32      	ldr	r2, [pc, #200]	; (8003454 <MX_GPIO_Init+0x13c>)
 800338c:	f043 0308 	orr.w	r3, r3, #8
 8003390:	6313      	str	r3, [r2, #48]	; 0x30
 8003392:	4b30      	ldr	r3, [pc, #192]	; (8003454 <MX_GPIO_Init+0x13c>)
 8003394:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003396:	f003 0308 	and.w	r3, r3, #8
 800339a:	607b      	str	r3, [r7, #4]
 800339c:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800339e:	2300      	movs	r3, #0
 80033a0:	603b      	str	r3, [r7, #0]
 80033a2:	4b2c      	ldr	r3, [pc, #176]	; (8003454 <MX_GPIO_Init+0x13c>)
 80033a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80033a6:	4a2b      	ldr	r2, [pc, #172]	; (8003454 <MX_GPIO_Init+0x13c>)
 80033a8:	f043 0302 	orr.w	r3, r3, #2
 80033ac:	6313      	str	r3, [r2, #48]	; 0x30
 80033ae:	4b29      	ldr	r3, [pc, #164]	; (8003454 <MX_GPIO_Init+0x13c>)
 80033b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80033b2:	f003 0302 	and.w	r3, r3, #2
 80033b6:	603b      	str	r3, [r7, #0]
 80033b8:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOE, OLED_SCLK_Pin|OLED_SDIN_Pin|OLED_RESET__Pin|OLED_DATA_COMMAND__Pin, GPIO_PIN_RESET);
 80033ba:	2200      	movs	r2, #0
 80033bc:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 80033c0:	4825      	ldr	r0, [pc, #148]	; (8003458 <MX_GPIO_Init+0x140>)
 80033c2:	f002 fcf3 	bl	8005dac <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, MOTORA_IN2_Pin|MOTORA_IN1_Pin|MOTORB_IN1_Pin|MOTORB_IN2_Pin, GPIO_PIN_RESET);
 80033c6:	2200      	movs	r2, #0
 80033c8:	213c      	movs	r1, #60	; 0x3c
 80033ca:	4824      	ldr	r0, [pc, #144]	; (800345c <MX_GPIO_Init+0x144>)
 80033cc:	f002 fcee 	bl	8005dac <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(US_TRIG_GPIO_Port, US_TRIG_Pin, GPIO_PIN_RESET);
 80033d0:	2200      	movs	r2, #0
 80033d2:	2180      	movs	r1, #128	; 0x80
 80033d4:	4822      	ldr	r0, [pc, #136]	; (8003460 <MX_GPIO_Init+0x148>)
 80033d6:	f002 fce9 	bl	8005dac <HAL_GPIO_WritePin>

  /*Configure GPIO pins : OLED_SCLK_Pin OLED_SDIN_Pin OLED_RESET__Pin OLED_DATA_COMMAND__Pin */
  GPIO_InitStruct.Pin = OLED_SCLK_Pin|OLED_SDIN_Pin|OLED_RESET__Pin|OLED_DATA_COMMAND__Pin;
 80033da:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 80033de:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80033e0:	2301      	movs	r3, #1
 80033e2:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80033e4:	2300      	movs	r3, #0
 80033e6:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80033e8:	2300      	movs	r3, #0
 80033ea:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80033ec:	f107 0314 	add.w	r3, r7, #20
 80033f0:	4619      	mov	r1, r3
 80033f2:	4819      	ldr	r0, [pc, #100]	; (8003458 <MX_GPIO_Init+0x140>)
 80033f4:	f002 fb3e 	bl	8005a74 <HAL_GPIO_Init>

  /*Configure GPIO pins : MOTORA_IN2_Pin MOTORA_IN1_Pin MOTORB_IN1_Pin MOTORB_IN2_Pin */
  GPIO_InitStruct.Pin = MOTORA_IN2_Pin|MOTORA_IN1_Pin|MOTORB_IN1_Pin|MOTORB_IN2_Pin;
 80033f8:	233c      	movs	r3, #60	; 0x3c
 80033fa:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80033fc:	2301      	movs	r3, #1
 80033fe:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003400:	2300      	movs	r3, #0
 8003402:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003404:	2300      	movs	r3, #0
 8003406:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003408:	f107 0314 	add.w	r3, r7, #20
 800340c:	4619      	mov	r1, r3
 800340e:	4813      	ldr	r0, [pc, #76]	; (800345c <MX_GPIO_Init+0x144>)
 8003410:	f002 fb30 	bl	8005a74 <HAL_GPIO_Init>

  /*Configure GPIO pin : BTN_USER_Pin */
  GPIO_InitStruct.Pin = BTN_USER_Pin;
 8003414:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003418:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800341a:	2300      	movs	r3, #0
 800341c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 800341e:	2301      	movs	r3, #1
 8003420:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(BTN_USER_GPIO_Port, &GPIO_InitStruct);
 8003422:	f107 0314 	add.w	r3, r7, #20
 8003426:	4619      	mov	r1, r3
 8003428:	480d      	ldr	r0, [pc, #52]	; (8003460 <MX_GPIO_Init+0x148>)
 800342a:	f002 fb23 	bl	8005a74 <HAL_GPIO_Init>

  /*Configure GPIO pin : US_TRIG_Pin */
  GPIO_InitStruct.Pin = US_TRIG_Pin;
 800342e:	2380      	movs	r3, #128	; 0x80
 8003430:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8003432:	2301      	movs	r3, #1
 8003434:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003436:	2300      	movs	r3, #0
 8003438:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800343a:	2300      	movs	r3, #0
 800343c:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(US_TRIG_GPIO_Port, &GPIO_InitStruct);
 800343e:	f107 0314 	add.w	r3, r7, #20
 8003442:	4619      	mov	r1, r3
 8003444:	4806      	ldr	r0, [pc, #24]	; (8003460 <MX_GPIO_Init+0x148>)
 8003446:	f002 fb15 	bl	8005a74 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 800344a:	bf00      	nop
 800344c:	3728      	adds	r7, #40	; 0x28
 800344e:	46bd      	mov	sp, r7
 8003450:	bd80      	pop	{r7, pc}
 8003452:	bf00      	nop
 8003454:	40023800 	.word	0x40023800
 8003458:	40021000 	.word	0x40021000
 800345c:	40020000 	.word	0x40020000
 8003460:	40020c00 	.word	0x40020c00

08003464 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8003464:	b480      	push	{r7}
 8003466:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8003468:	b672      	cpsid	i
}
 800346a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800346c:	e7fe      	b.n	800346c <Error_Handler+0x8>
	...

08003470 <motor_init>:
static PidDef pidDist;
const static float Kp_dist = 0.21;
const static float Ki_dist = 0.0009;
const static float Kd_dist = 0.1;

void motor_init(TIM_HandleTypeDef *pwm, TIM_HandleTypeDef *l_enc, TIM_HandleTypeDef *r_enc) {
 8003470:	b580      	push	{r7, lr}
 8003472:	b084      	sub	sp, #16
 8003474:	af00      	add	r7, sp, #0
 8003476:	60f8      	str	r0, [r7, #12]
 8003478:	60b9      	str	r1, [r7, #8]
 800347a:	607a      	str	r2, [r7, #4]
	//assign timer pointers.
	motor_pwm_tim = pwm;
 800347c:	4a1d      	ldr	r2, [pc, #116]	; (80034f4 <motor_init+0x84>)
 800347e:	68fb      	ldr	r3, [r7, #12]
 8003480:	6013      	str	r3, [r2, #0]
	l_enc_tim = l_enc;
 8003482:	4a1d      	ldr	r2, [pc, #116]	; (80034f8 <motor_init+0x88>)
 8003484:	68bb      	ldr	r3, [r7, #8]
 8003486:	6013      	str	r3, [r2, #0]
	r_enc_tim = r_enc;
 8003488:	4a1c      	ldr	r2, [pc, #112]	; (80034fc <motor_init+0x8c>)
 800348a:	687b      	ldr	r3, [r7, #4]
 800348c:	6013      	str	r3, [r2, #0]

	//start Encoders and PWM for L, R motors.
	HAL_TIM_Encoder_Start_IT(l_enc, TIM_CHANNEL_ALL);
 800348e:	213c      	movs	r1, #60	; 0x3c
 8003490:	68b8      	ldr	r0, [r7, #8]
 8003492:	f004 fdbb 	bl	800800c <HAL_TIM_Encoder_Start_IT>
	HAL_TIM_Encoder_Start_IT(r_enc, TIM_CHANNEL_ALL);
 8003496:	213c      	movs	r1, #60	; 0x3c
 8003498:	6878      	ldr	r0, [r7, #4]
 800349a:	f004 fdb7 	bl	800800c <HAL_TIM_Encoder_Start_IT>
	HAL_TIM_PWM_Start(pwm, L_CHANNEL);
 800349e:	2100      	movs	r1, #0
 80034a0:	68f8      	ldr	r0, [r7, #12]
 80034a2:	f004 fac3 	bl	8007a2c <HAL_TIM_PWM_Start>
	HAL_TIM_PWM_Start(pwm, R_CHANNEL);
 80034a6:	2104      	movs	r1, #4
 80034a8:	68f8      	ldr	r0, [r7, #12]
 80034aa:	f004 fabf 	bl	8007a2c <HAL_TIM_PWM_Start>

	//initialize PID values.
	pid_init(&pidMatch, Kp_match, Ki_match, Kd_match);
 80034ae:	eddf 7a14 	vldr	s15, [pc, #80]	; 8003500 <motor_init+0x90>
 80034b2:	ed9f 7a14 	vldr	s14, [pc, #80]	; 8003504 <motor_init+0x94>
 80034b6:	eddf 6a14 	vldr	s13, [pc, #80]	; 8003508 <motor_init+0x98>
 80034ba:	eeb0 1a66 	vmov.f32	s2, s13
 80034be:	eef0 0a47 	vmov.f32	s1, s14
 80034c2:	eeb0 0a67 	vmov.f32	s0, s15
 80034c6:	4811      	ldr	r0, [pc, #68]	; (800350c <motor_init+0x9c>)
 80034c8:	f000 fcec 	bl	8003ea4 <pid_init>
	pid_init(&pidDist, Kp_dist, Ki_dist, Kd_dist);
 80034cc:	eddf 7a10 	vldr	s15, [pc, #64]	; 8003510 <motor_init+0xa0>
 80034d0:	ed9f 7a10 	vldr	s14, [pc, #64]	; 8003514 <motor_init+0xa4>
 80034d4:	eddf 6a10 	vldr	s13, [pc, #64]	; 8003518 <motor_init+0xa8>
 80034d8:	eeb0 1a66 	vmov.f32	s2, s13
 80034dc:	eef0 0a47 	vmov.f32	s1, s14
 80034e0:	eeb0 0a67 	vmov.f32	s0, s15
 80034e4:	480d      	ldr	r0, [pc, #52]	; (800351c <motor_init+0xac>)
 80034e6:	f000 fcdd 	bl	8003ea4 <pid_init>
}
 80034ea:	bf00      	nop
 80034ec:	3710      	adds	r7, #16
 80034ee:	46bd      	mov	sp, r7
 80034f0:	bd80      	pop	{r7, pc}
 80034f2:	bf00      	nop
 80034f4:	20000584 	.word	0x20000584
 80034f8:	20000588 	.word	0x20000588
 80034fc:	2000058c 	.word	0x2000058c
 8003500:	466a6000 	.word	0x466a6000
 8003504:	44548000 	.word	0x44548000
 8003508:	461c4000 	.word	0x461c4000
 800350c:	20000598 	.word	0x20000598
 8003510:	3e570a3d 	.word	0x3e570a3d
 8003514:	3a6bedfa 	.word	0x3a6bedfa
 8003518:	3dcccccd 	.word	0x3dcccccd
 800351c:	200005ac 	.word	0x200005ac

08003520 <timer_reset>:

static void timer_reset(TIM_HandleTypeDef *htim) {
 8003520:	b480      	push	{r7}
 8003522:	b083      	sub	sp, #12
 8003524:	af00      	add	r7, sp, #0
 8003526:	6078      	str	r0, [r7, #4]
	__HAL_TIM_SET_COUNTER(htim, 0);
 8003528:	687b      	ldr	r3, [r7, #4]
 800352a:	681b      	ldr	r3, [r3, #0]
 800352c:	2200      	movs	r2, #0
 800352e:	625a      	str	r2, [r3, #36]	; 0x24
}
 8003530:	bf00      	nop
 8003532:	370c      	adds	r7, #12
 8003534:	46bd      	mov	sp, r7
 8003536:	f85d 7b04 	ldr.w	r7, [sp], #4
 800353a:	4770      	bx	lr

0800353c <setPwmLR>:

static void setPwmLR() {
 800353c:	b480      	push	{r7}
 800353e:	af00      	add	r7, sp, #0
	//set L, R channels.
	__HAL_TIM_SetCompare(motor_pwm_tim, L_CHANNEL,
 8003540:	4b0e      	ldr	r3, [pc, #56]	; (800357c <setPwmLR+0x40>)
 8003542:	881b      	ldrh	r3, [r3, #0]
 8003544:	f241 7270 	movw	r2, #6000	; 0x1770
 8003548:	4293      	cmp	r3, r2
 800354a:	bf28      	it	cs
 800354c:	4613      	movcs	r3, r2
 800354e:	b29a      	uxth	r2, r3
 8003550:	4b0b      	ldr	r3, [pc, #44]	; (8003580 <setPwmLR+0x44>)
 8003552:	681b      	ldr	r3, [r3, #0]
 8003554:	681b      	ldr	r3, [r3, #0]
 8003556:	635a      	str	r2, [r3, #52]	; 0x34
		lPwmVal > MOTOR_PWM_MAX
		? MOTOR_PWM_MAX
		: lPwmVal);
	__HAL_TIM_SetCompare(motor_pwm_tim, R_CHANNEL,
 8003558:	4b0a      	ldr	r3, [pc, #40]	; (8003584 <setPwmLR+0x48>)
 800355a:	881b      	ldrh	r3, [r3, #0]
 800355c:	f241 7270 	movw	r2, #6000	; 0x1770
 8003560:	4293      	cmp	r3, r2
 8003562:	bf28      	it	cs
 8003564:	4613      	movcs	r3, r2
 8003566:	b29a      	uxth	r2, r3
 8003568:	4b05      	ldr	r3, [pc, #20]	; (8003580 <setPwmLR+0x44>)
 800356a:	681b      	ldr	r3, [r3, #0]
 800356c:	681b      	ldr	r3, [r3, #0]
 800356e:	639a      	str	r2, [r3, #56]	; 0x38
		rPwmVal > MOTOR_PWM_MAX
		? MOTOR_PWM_MAX
		: rPwmVal);
}
 8003570:	bf00      	nop
 8003572:	46bd      	mov	sp, r7
 8003574:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003578:	4770      	bx	lr
 800357a:	bf00      	nop
 800357c:	20000594 	.word	0x20000594
 8003580:	20000584 	.word	0x20000584
 8003584:	20000596 	.word	0x20000596

08003588 <resetPwmParams>:

static void resetPwmParams() {
 8003588:	b580      	push	{r7, lr}
 800358a:	af00      	add	r7, sp, #0
	pid_reset(&pidMatch);
 800358c:	4803      	ldr	r0, [pc, #12]	; (800359c <resetPwmParams+0x14>)
 800358e:	f000 fc77 	bl	8003e80 <pid_reset>
	pid_reset(&pidDist);
 8003592:	4803      	ldr	r0, [pc, #12]	; (80035a0 <resetPwmParams+0x18>)
 8003594:	f000 fc74 	bl	8003e80 <pid_reset>
}
 8003598:	bf00      	nop
 800359a:	bd80      	pop	{r7, pc}
 800359c:	20000598 	.word	0x20000598
 80035a0:	200005ac 	.word	0x200005ac

080035a4 <resetEncoders>:

static void resetEncoders() {
 80035a4:	b580      	push	{r7, lr}
 80035a6:	af00      	add	r7, sp, #0
	timer_reset(l_enc_tim);
 80035a8:	4b05      	ldr	r3, [pc, #20]	; (80035c0 <resetEncoders+0x1c>)
 80035aa:	681b      	ldr	r3, [r3, #0]
 80035ac:	4618      	mov	r0, r3
 80035ae:	f7ff ffb7 	bl	8003520 <timer_reset>
	timer_reset(r_enc_tim);
 80035b2:	4b04      	ldr	r3, [pc, #16]	; (80035c4 <resetEncoders+0x20>)
 80035b4:	681b      	ldr	r3, [r3, #0]
 80035b6:	4618      	mov	r0, r3
 80035b8:	f7ff ffb2 	bl	8003520 <timer_reset>
}
 80035bc:	bf00      	nop
 80035be:	bd80      	pop	{r7, pc}
 80035c0:	20000588 	.word	0x20000588
 80035c4:	2000058c 	.word	0x2000058c

080035c8 <motor_getDist>:

float motor_getDist() {
 80035c8:	b580      	push	{r7, lr}
 80035ca:	b084      	sub	sp, #16
 80035cc:	af00      	add	r7, sp, #0
	uint32_t lCounter = __HAL_TIM_GET_COUNTER(l_enc_tim),
 80035ce:	4b18      	ldr	r3, [pc, #96]	; (8003630 <motor_getDist+0x68>)
 80035d0:	681b      	ldr	r3, [r3, #0]
 80035d2:	681b      	ldr	r3, [r3, #0]
 80035d4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80035d6:	60bb      	str	r3, [r7, #8]
			rCounter = __HAL_TIM_GET_COUNTER(r_enc_tim);
 80035d8:	4b16      	ldr	r3, [pc, #88]	; (8003634 <motor_getDist+0x6c>)
 80035da:	681b      	ldr	r3, [r3, #0]
 80035dc:	681b      	ldr	r3, [r3, #0]
 80035de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80035e0:	607b      	str	r3, [r7, #4]
	int16_t lCount = (int16_t) lCounter,
 80035e2:	68bb      	ldr	r3, [r7, #8]
 80035e4:	81fb      	strh	r3, [r7, #14]
			rCount = (int16_t) rCounter;
 80035e6:	687b      	ldr	r3, [r7, #4]
 80035e8:	81bb      	strh	r3, [r7, #12]
	if (lCount < 0) lCount = -lCount;
 80035ea:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80035ee:	2b00      	cmp	r3, #0
 80035f0:	da03      	bge.n	80035fa <motor_getDist+0x32>
 80035f2:	89fb      	ldrh	r3, [r7, #14]
 80035f4:	425b      	negs	r3, r3
 80035f6:	b29b      	uxth	r3, r3
 80035f8:	81fb      	strh	r3, [r7, #14]
	if (rCount < 0) rCount = -rCount;
 80035fa:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80035fe:	2b00      	cmp	r3, #0
 8003600:	da03      	bge.n	800360a <motor_getDist+0x42>
 8003602:	89bb      	ldrh	r3, [r7, #12]
 8003604:	425b      	negs	r3, r3
 8003606:	b29b      	uxth	r3, r3
 8003608:	81bb      	strh	r3, [r7, #12]

	uint16_t pulses = ((uint16_t) lCount) + ((uint16_t) rCount);
 800360a:	89fa      	ldrh	r2, [r7, #14]
 800360c:	89bb      	ldrh	r3, [r7, #12]
 800360e:	4413      	add	r3, r2
 8003610:	807b      	strh	r3, [r7, #2]
	pulses >>= 1;
 8003612:	887b      	ldrh	r3, [r7, #2]
 8003614:	085b      	lsrs	r3, r3, #1
 8003616:	807b      	strh	r3, [r7, #2]

	return get_distance_cm(pulses);
 8003618:	887b      	ldrh	r3, [r7, #2]
 800361a:	4618      	mov	r0, r3
 800361c:	f7fe fc4c 	bl	8001eb8 <get_distance_cm>
 8003620:	eef0 7a40 	vmov.f32	s15, s0
}
 8003624:	eeb0 0a67 	vmov.f32	s0, s15
 8003628:	3710      	adds	r7, #16
 800362a:	46bd      	mov	sp, r7
 800362c:	bd80      	pop	{r7, pc}
 800362e:	bf00      	nop
 8003630:	20000588 	.word	0x20000588
 8003634:	2000058c 	.word	0x2000058c

08003638 <motor_pwmCorrection>:

//PWM at fixed intervals.
void motor_pwmCorrection(float wDiff, float rBack, float rRobot, float distDiff, float brakingDist) {
 8003638:	b580      	push	{r7, lr}
 800363a:	b08c      	sub	sp, #48	; 0x30
 800363c:	af00      	add	r7, sp, #0
 800363e:	ed87 0a05 	vstr	s0, [r7, #20]
 8003642:	edc7 0a04 	vstr	s1, [r7, #16]
 8003646:	ed87 1a03 	vstr	s2, [r7, #12]
 800364a:	edc7 1a02 	vstr	s3, [r7, #8]
 800364e:	ed87 2a01 	vstr	s4, [r7, #4]
	//adjust speed based on distance to drive.
	if (distDiff < brakingDist) {
 8003652:	ed97 7a02 	vldr	s14, [r7, #8]
 8003656:	edd7 7a01 	vldr	s15, [r7, #4]
 800365a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800365e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003662:	d521      	bpl.n	80036a8 <motor_pwmCorrection+0x70>
		pwmValAccel = MOTOR_PWM_MIN + pid_adjust(&pidDist, distDiff, 1) / brakingDist * (pwmValTarget - MOTOR_PWM_MIN);
 8003664:	eef7 0a00 	vmov.f32	s1, #112	; 0x3f800000  1.0
 8003668:	ed97 0a02 	vldr	s0, [r7, #8]
 800366c:	4894      	ldr	r0, [pc, #592]	; (80038c0 <motor_pwmCorrection+0x288>)
 800366e:	f000 fc33 	bl	8003ed8 <pid_adjust>
 8003672:	eef0 6a40 	vmov.f32	s13, s0
 8003676:	edd7 7a01 	vldr	s15, [r7, #4]
 800367a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800367e:	4b91      	ldr	r3, [pc, #580]	; (80038c4 <motor_pwmCorrection+0x28c>)
 8003680:	881b      	ldrh	r3, [r3, #0]
 8003682:	3bfa      	subs	r3, #250	; 0xfa
 8003684:	ee07 3a90 	vmov	s15, r3
 8003688:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800368c:	ee67 7a27 	vmul.f32	s15, s14, s15
 8003690:	ed9f 7a8d 	vldr	s14, [pc, #564]	; 80038c8 <motor_pwmCorrection+0x290>
 8003694:	ee77 7a87 	vadd.f32	s15, s15, s14
 8003698:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800369c:	ee17 3a90 	vmov	r3, s15
 80036a0:	b29a      	uxth	r2, r3
 80036a2:	4b8a      	ldr	r3, [pc, #552]	; (80038cc <motor_pwmCorrection+0x294>)
 80036a4:	801a      	strh	r2, [r3, #0]
 80036a6:	e00b      	b.n	80036c0 <motor_pwmCorrection+0x88>
	} else if (pwmValAccel < pwmValTarget) pwmValAccel += MOTOR_PWM_ACCEL;
 80036a8:	4b88      	ldr	r3, [pc, #544]	; (80038cc <motor_pwmCorrection+0x294>)
 80036aa:	881a      	ldrh	r2, [r3, #0]
 80036ac:	4b85      	ldr	r3, [pc, #532]	; (80038c4 <motor_pwmCorrection+0x28c>)
 80036ae:	881b      	ldrh	r3, [r3, #0]
 80036b0:	429a      	cmp	r2, r3
 80036b2:	d205      	bcs.n	80036c0 <motor_pwmCorrection+0x88>
 80036b4:	4b85      	ldr	r3, [pc, #532]	; (80038cc <motor_pwmCorrection+0x294>)
 80036b6:	881b      	ldrh	r3, [r3, #0]
 80036b8:	330f      	adds	r3, #15
 80036ba:	b29a      	uxth	r2, r3
 80036bc:	4b83      	ldr	r3, [pc, #524]	; (80038cc <motor_pwmCorrection+0x294>)
 80036be:	801a      	strh	r2, [r3, #0]
	if (pwmValAccel > pwmValTarget) pwmValAccel = pwmValTarget;
 80036c0:	4b82      	ldr	r3, [pc, #520]	; (80038cc <motor_pwmCorrection+0x294>)
 80036c2:	881a      	ldrh	r2, [r3, #0]
 80036c4:	4b7f      	ldr	r3, [pc, #508]	; (80038c4 <motor_pwmCorrection+0x28c>)
 80036c6:	881b      	ldrh	r3, [r3, #0]
 80036c8:	429a      	cmp	r2, r3
 80036ca:	d903      	bls.n	80036d4 <motor_pwmCorrection+0x9c>
 80036cc:	4b7d      	ldr	r3, [pc, #500]	; (80038c4 <motor_pwmCorrection+0x28c>)
 80036ce:	881a      	ldrh	r2, [r3, #0]
 80036d0:	4b7e      	ldr	r3, [pc, #504]	; (80038cc <motor_pwmCorrection+0x294>)
 80036d2:	801a      	strh	r2, [r3, #0]

	float offset = pid_adjust(&pidMatch, wDiff, 1) * pwmValAccel / pwmValTarget;
 80036d4:	eef7 0a00 	vmov.f32	s1, #112	; 0x3f800000  1.0
 80036d8:	ed97 0a05 	vldr	s0, [r7, #20]
 80036dc:	487c      	ldr	r0, [pc, #496]	; (80038d0 <motor_pwmCorrection+0x298>)
 80036de:	f000 fbfb 	bl	8003ed8 <pid_adjust>
 80036e2:	eeb0 7a40 	vmov.f32	s14, s0
 80036e6:	4b79      	ldr	r3, [pc, #484]	; (80038cc <motor_pwmCorrection+0x294>)
 80036e8:	881b      	ldrh	r3, [r3, #0]
 80036ea:	ee07 3a90 	vmov	s15, r3
 80036ee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80036f2:	ee67 6a27 	vmul.f32	s13, s14, s15
 80036f6:	4b73      	ldr	r3, [pc, #460]	; (80038c4 <motor_pwmCorrection+0x28c>)
 80036f8:	881b      	ldrh	r3, [r3, #0]
 80036fa:	ee07 3a90 	vmov	s15, r3
 80036fe:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003702:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8003706:	edc7 7a09 	vstr	s15, [r7, #36]	; 0x24
//	float offset = 0;
	float lScale = 1, rScale = 1;
 800370a:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 800370e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003710:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 8003714:	62bb      	str	r3, [r7, #40]	; 0x28

	if (rBack != 0 && rRobot != 0) {
 8003716:	edd7 7a04 	vldr	s15, [r7, #16]
 800371a:	eef5 7a40 	vcmp.f32	s15, #0.0
 800371e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003722:	d04d      	beq.n	80037c0 <motor_pwmCorrection+0x188>
 8003724:	edd7 7a03 	vldr	s15, [r7, #12]
 8003728:	eef5 7a40 	vcmp.f32	s15, #0.0
 800372c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003730:	d046      	beq.n	80037c0 <motor_pwmCorrection+0x188>
		float B2 = WHEELBASE_CM / 2;
 8003732:	4b68      	ldr	r3, [pc, #416]	; (80038d4 <motor_pwmCorrection+0x29c>)
 8003734:	623b      	str	r3, [r7, #32]

		if (rBack < 0 && rRobot < 0) {
 8003736:	edd7 7a04 	vldr	s15, [r7, #16]
 800373a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800373e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003742:	d525      	bpl.n	8003790 <motor_pwmCorrection+0x158>
 8003744:	edd7 7a03 	vldr	s15, [r7, #12]
 8003748:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800374c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003750:	d51e      	bpl.n	8003790 <motor_pwmCorrection+0x158>
			lScale = (-rBack - B2) / -rRobot;
 8003752:	edd7 7a04 	vldr	s15, [r7, #16]
 8003756:	eeb1 7a67 	vneg.f32	s14, s15
 800375a:	edd7 7a08 	vldr	s15, [r7, #32]
 800375e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8003762:	eef1 6a67 	vneg.f32	s13, s15
 8003766:	ed97 7a03 	vldr	s14, [r7, #12]
 800376a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800376e:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c
			rScale = (-rBack + B2) / -rRobot;
 8003772:	ed97 7a08 	vldr	s14, [r7, #32]
 8003776:	edd7 7a04 	vldr	s15, [r7, #16]
 800377a:	ee77 7a67 	vsub.f32	s15, s14, s15
 800377e:	eef1 6a67 	vneg.f32	s13, s15
 8003782:	ed97 7a03 	vldr	s14, [r7, #12]
 8003786:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800378a:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28
 800378e:	e017      	b.n	80037c0 <motor_pwmCorrection+0x188>
		} else {
			lScale = (rBack + B2) / rRobot;
 8003790:	ed97 7a04 	vldr	s14, [r7, #16]
 8003794:	edd7 7a08 	vldr	s15, [r7, #32]
 8003798:	ee77 6a27 	vadd.f32	s13, s14, s15
 800379c:	ed97 7a03 	vldr	s14, [r7, #12]
 80037a0:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80037a4:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c
			rScale = (rBack - B2) / rRobot;
 80037a8:	ed97 7a04 	vldr	s14, [r7, #16]
 80037ac:	edd7 7a08 	vldr	s15, [r7, #32]
 80037b0:	ee77 6a67 	vsub.f32	s13, s14, s15
 80037b4:	ed97 7a03 	vldr	s14, [r7, #12]
 80037b8:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80037bc:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28
		}
	}

	lPwmVal = pwmValAccel * lScale - offset;
 80037c0:	4b42      	ldr	r3, [pc, #264]	; (80038cc <motor_pwmCorrection+0x294>)
 80037c2:	881b      	ldrh	r3, [r3, #0]
 80037c4:	ee07 3a90 	vmov	s15, r3
 80037c8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80037cc:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 80037d0:	ee27 7a27 	vmul.f32	s14, s14, s15
 80037d4:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 80037d8:	ee77 7a67 	vsub.f32	s15, s14, s15
 80037dc:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80037e0:	ee17 3a90 	vmov	r3, s15
 80037e4:	b29a      	uxth	r2, r3
 80037e6:	4b3c      	ldr	r3, [pc, #240]	; (80038d8 <motor_pwmCorrection+0x2a0>)
 80037e8:	801a      	strh	r2, [r3, #0]
	rPwmVal = pwmValAccel * rScale + offset;
 80037ea:	4b38      	ldr	r3, [pc, #224]	; (80038cc <motor_pwmCorrection+0x294>)
 80037ec:	881b      	ldrh	r3, [r3, #0]
 80037ee:	ee07 3a90 	vmov	s15, r3
 80037f2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80037f6:	edd7 7a0a 	vldr	s15, [r7, #40]	; 0x28
 80037fa:	ee27 7a27 	vmul.f32	s14, s14, s15
 80037fe:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 8003802:	ee77 7a27 	vadd.f32	s15, s14, s15
 8003806:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800380a:	ee17 3a90 	vmov	r3, s15
 800380e:	b29a      	uxth	r2, r3
 8003810:	4b32      	ldr	r3, [pc, #200]	; (80038dc <motor_pwmCorrection+0x2a4>)
 8003812:	801a      	strh	r2, [r3, #0]

	if (lPwmVal > MOTOR_PWM_MAX || rPwmVal > MOTOR_PWM_MAX) {
 8003814:	4b30      	ldr	r3, [pc, #192]	; (80038d8 <motor_pwmCorrection+0x2a0>)
 8003816:	881b      	ldrh	r3, [r3, #0]
 8003818:	f241 7270 	movw	r2, #6000	; 0x1770
 800381c:	4293      	cmp	r3, r2
 800381e:	d805      	bhi.n	800382c <motor_pwmCorrection+0x1f4>
 8003820:	4b2e      	ldr	r3, [pc, #184]	; (80038dc <motor_pwmCorrection+0x2a4>)
 8003822:	881b      	ldrh	r3, [r3, #0]
 8003824:	f241 7270 	movw	r2, #6000	; 0x1770
 8003828:	4293      	cmp	r3, r2
 800382a:	d942      	bls.n	80038b2 <motor_pwmCorrection+0x27a>
		float scale;
		if (lPwmVal > rPwmVal) {
 800382c:	4b2a      	ldr	r3, [pc, #168]	; (80038d8 <motor_pwmCorrection+0x2a0>)
 800382e:	881a      	ldrh	r2, [r3, #0]
 8003830:	4b2a      	ldr	r3, [pc, #168]	; (80038dc <motor_pwmCorrection+0x2a4>)
 8003832:	881b      	ldrh	r3, [r3, #0]
 8003834:	429a      	cmp	r2, r3
 8003836:	d91e      	bls.n	8003876 <motor_pwmCorrection+0x23e>
			scale = rPwmVal / lPwmVal;
 8003838:	4b28      	ldr	r3, [pc, #160]	; (80038dc <motor_pwmCorrection+0x2a4>)
 800383a:	881a      	ldrh	r2, [r3, #0]
 800383c:	4b26      	ldr	r3, [pc, #152]	; (80038d8 <motor_pwmCorrection+0x2a0>)
 800383e:	881b      	ldrh	r3, [r3, #0]
 8003840:	fbb2 f3f3 	udiv	r3, r2, r3
 8003844:	b29b      	uxth	r3, r3
 8003846:	ee07 3a90 	vmov	s15, r3
 800384a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800384e:	edc7 7a07 	vstr	s15, [r7, #28]
			lPwmVal = MOTOR_PWM_MAX;
 8003852:	4b21      	ldr	r3, [pc, #132]	; (80038d8 <motor_pwmCorrection+0x2a0>)
 8003854:	f241 7270 	movw	r2, #6000	; 0x1770
 8003858:	801a      	strh	r2, [r3, #0]
			rPwmVal = MOTOR_PWM_MAX * scale;
 800385a:	edd7 7a07 	vldr	s15, [r7, #28]
 800385e:	ed9f 7a20 	vldr	s14, [pc, #128]	; 80038e0 <motor_pwmCorrection+0x2a8>
 8003862:	ee67 7a87 	vmul.f32	s15, s15, s14
 8003866:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800386a:	ee17 3a90 	vmov	r3, s15
 800386e:	b29a      	uxth	r2, r3
 8003870:	4b1a      	ldr	r3, [pc, #104]	; (80038dc <motor_pwmCorrection+0x2a4>)
 8003872:	801a      	strh	r2, [r3, #0]
 8003874:	e01d      	b.n	80038b2 <motor_pwmCorrection+0x27a>
		} else {
			scale = lPwmVal / rPwmVal;
 8003876:	4b18      	ldr	r3, [pc, #96]	; (80038d8 <motor_pwmCorrection+0x2a0>)
 8003878:	881a      	ldrh	r2, [r3, #0]
 800387a:	4b18      	ldr	r3, [pc, #96]	; (80038dc <motor_pwmCorrection+0x2a4>)
 800387c:	881b      	ldrh	r3, [r3, #0]
 800387e:	fbb2 f3f3 	udiv	r3, r2, r3
 8003882:	b29b      	uxth	r3, r3
 8003884:	ee07 3a90 	vmov	s15, r3
 8003888:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800388c:	edc7 7a07 	vstr	s15, [r7, #28]
			lPwmVal = MOTOR_PWM_MAX * scale;
 8003890:	edd7 7a07 	vldr	s15, [r7, #28]
 8003894:	ed9f 7a12 	vldr	s14, [pc, #72]	; 80038e0 <motor_pwmCorrection+0x2a8>
 8003898:	ee67 7a87 	vmul.f32	s15, s15, s14
 800389c:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80038a0:	ee17 3a90 	vmov	r3, s15
 80038a4:	b29a      	uxth	r2, r3
 80038a6:	4b0c      	ldr	r3, [pc, #48]	; (80038d8 <motor_pwmCorrection+0x2a0>)
 80038a8:	801a      	strh	r2, [r3, #0]
			rPwmVal = MOTOR_PWM_MAX;
 80038aa:	4b0c      	ldr	r3, [pc, #48]	; (80038dc <motor_pwmCorrection+0x2a4>)
 80038ac:	f241 7270 	movw	r2, #6000	; 0x1770
 80038b0:	801a      	strh	r2, [r3, #0]
		}
	}

	setPwmLR();
 80038b2:	f7ff fe43 	bl	800353c <setPwmLR>
}
 80038b6:	bf00      	nop
 80038b8:	3730      	adds	r7, #48	; 0x30
 80038ba:	46bd      	mov	sp, r7
 80038bc:	bd80      	pop	{r7, pc}
 80038be:	bf00      	nop
 80038c0:	200005ac 	.word	0x200005ac
 80038c4:	20000592 	.word	0x20000592
 80038c8:	437a0000 	.word	0x437a0000
 80038cc:	20000590 	.word	0x20000590
 80038d0:	20000598 	.word	0x20000598
 80038d4:	4101999a 	.word	0x4101999a
 80038d8:	20000594 	.word	0x20000594
 80038dc:	20000596 	.word	0x20000596
 80038e0:	45bb8000 	.word	0x45bb8000

080038e4 <setDriveDir>:

static void setDriveDir(int8_t dir) {
 80038e4:	b580      	push	{r7, lr}
 80038e6:	b082      	sub	sp, #8
 80038e8:	af00      	add	r7, sp, #0
 80038ea:	4603      	mov	r3, r0
 80038ec:	71fb      	strb	r3, [r7, #7]
	if (dir > 0) {
 80038ee:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80038f2:	2b00      	cmp	r3, #0
 80038f4:	dd14      	ble.n	8003920 <setDriveDir+0x3c>
		//forward.
		HAL_GPIO_WritePin(MOTORA_IN1_GPIO_Port, MOTORA_IN1_Pin, GPIO_PIN_SET);
 80038f6:	2201      	movs	r2, #1
 80038f8:	2108      	movs	r1, #8
 80038fa:	4822      	ldr	r0, [pc, #136]	; (8003984 <setDriveDir+0xa0>)
 80038fc:	f002 fa56 	bl	8005dac <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(MOTORA_IN2_GPIO_Port, MOTORA_IN2_Pin, GPIO_PIN_RESET);
 8003900:	2200      	movs	r2, #0
 8003902:	2104      	movs	r1, #4
 8003904:	481f      	ldr	r0, [pc, #124]	; (8003984 <setDriveDir+0xa0>)
 8003906:	f002 fa51 	bl	8005dac <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(MOTORB_IN1_GPIO_Port, MOTORB_IN1_Pin, GPIO_PIN_SET);
 800390a:	2201      	movs	r2, #1
 800390c:	2110      	movs	r1, #16
 800390e:	481d      	ldr	r0, [pc, #116]	; (8003984 <setDriveDir+0xa0>)
 8003910:	f002 fa4c 	bl	8005dac <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(MOTORB_IN2_GPIO_Port, MOTORB_IN2_Pin, GPIO_PIN_RESET);
 8003914:	2200      	movs	r2, #0
 8003916:	2120      	movs	r1, #32
 8003918:	481a      	ldr	r0, [pc, #104]	; (8003984 <setDriveDir+0xa0>)
 800391a:	f002 fa47 	bl	8005dac <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(MOTORA_IN1_GPIO_Port, MOTORA_IN1_Pin, GPIO_PIN_RESET);
		HAL_GPIO_WritePin(MOTORA_IN2_GPIO_Port, MOTORA_IN2_Pin, GPIO_PIN_RESET);
		HAL_GPIO_WritePin(MOTORB_IN1_GPIO_Port, MOTORB_IN1_Pin, GPIO_PIN_RESET);
		HAL_GPIO_WritePin(MOTORB_IN2_GPIO_Port, MOTORB_IN2_Pin, GPIO_PIN_RESET);
	}
}
 800391e:	e02c      	b.n	800397a <setDriveDir+0x96>
	} else if (dir < 0) {
 8003920:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003924:	2b00      	cmp	r3, #0
 8003926:	da14      	bge.n	8003952 <setDriveDir+0x6e>
		HAL_GPIO_WritePin(MOTORA_IN1_GPIO_Port, MOTORA_IN1_Pin, GPIO_PIN_RESET);
 8003928:	2200      	movs	r2, #0
 800392a:	2108      	movs	r1, #8
 800392c:	4815      	ldr	r0, [pc, #84]	; (8003984 <setDriveDir+0xa0>)
 800392e:	f002 fa3d 	bl	8005dac <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(MOTORA_IN2_GPIO_Port, MOTORA_IN2_Pin, GPIO_PIN_SET);
 8003932:	2201      	movs	r2, #1
 8003934:	2104      	movs	r1, #4
 8003936:	4813      	ldr	r0, [pc, #76]	; (8003984 <setDriveDir+0xa0>)
 8003938:	f002 fa38 	bl	8005dac <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(MOTORB_IN1_GPIO_Port, MOTORB_IN1_Pin, GPIO_PIN_RESET);
 800393c:	2200      	movs	r2, #0
 800393e:	2110      	movs	r1, #16
 8003940:	4810      	ldr	r0, [pc, #64]	; (8003984 <setDriveDir+0xa0>)
 8003942:	f002 fa33 	bl	8005dac <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(MOTORB_IN2_GPIO_Port, MOTORB_IN2_Pin, GPIO_PIN_SET);
 8003946:	2201      	movs	r2, #1
 8003948:	2120      	movs	r1, #32
 800394a:	480e      	ldr	r0, [pc, #56]	; (8003984 <setDriveDir+0xa0>)
 800394c:	f002 fa2e 	bl	8005dac <HAL_GPIO_WritePin>
}
 8003950:	e013      	b.n	800397a <setDriveDir+0x96>
		HAL_GPIO_WritePin(MOTORA_IN1_GPIO_Port, MOTORA_IN1_Pin, GPIO_PIN_RESET);
 8003952:	2200      	movs	r2, #0
 8003954:	2108      	movs	r1, #8
 8003956:	480b      	ldr	r0, [pc, #44]	; (8003984 <setDriveDir+0xa0>)
 8003958:	f002 fa28 	bl	8005dac <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(MOTORA_IN2_GPIO_Port, MOTORA_IN2_Pin, GPIO_PIN_RESET);
 800395c:	2200      	movs	r2, #0
 800395e:	2104      	movs	r1, #4
 8003960:	4808      	ldr	r0, [pc, #32]	; (8003984 <setDriveDir+0xa0>)
 8003962:	f002 fa23 	bl	8005dac <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(MOTORB_IN1_GPIO_Port, MOTORB_IN1_Pin, GPIO_PIN_RESET);
 8003966:	2200      	movs	r2, #0
 8003968:	2110      	movs	r1, #16
 800396a:	4806      	ldr	r0, [pc, #24]	; (8003984 <setDriveDir+0xa0>)
 800396c:	f002 fa1e 	bl	8005dac <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(MOTORB_IN2_GPIO_Port, MOTORB_IN2_Pin, GPIO_PIN_RESET);
 8003970:	2200      	movs	r2, #0
 8003972:	2120      	movs	r1, #32
 8003974:	4803      	ldr	r0, [pc, #12]	; (8003984 <setDriveDir+0xa0>)
 8003976:	f002 fa19 	bl	8005dac <HAL_GPIO_WritePin>
}
 800397a:	bf00      	nop
 800397c:	3708      	adds	r7, #8
 800397e:	46bd      	mov	sp, r7
 8003980:	bd80      	pop	{r7, pc}
 8003982:	bf00      	nop
 8003984:	40020000 	.word	0x40020000

08003988 <motor_setDrive>:

//speed: 0 - 100
void motor_setDrive(int8_t dir, uint8_t speed) {
 8003988:	b580      	push	{r7, lr}
 800398a:	b082      	sub	sp, #8
 800398c:	af00      	add	r7, sp, #0
 800398e:	4603      	mov	r3, r0
 8003990:	460a      	mov	r2, r1
 8003992:	71fb      	strb	r3, [r7, #7]
 8003994:	4613      	mov	r3, r2
 8003996:	71bb      	strb	r3, [r7, #6]
	if (dir == 0) {
 8003998:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800399c:	2b00      	cmp	r3, #0
 800399e:	d103      	bne.n	80039a8 <motor_setDrive+0x20>
		setDriveDir(0);
 80039a0:	2000      	movs	r0, #0
 80039a2:	f7ff ff9f 	bl	80038e4 <setDriveDir>
		return;
 80039a6:	e02d      	b.n	8003a04 <motor_setDrive+0x7c>
	}

	//derive PWM value.
	pwmValTarget = MOTOR_PWM_MAX / 100 * speed;
 80039a8:	79bb      	ldrb	r3, [r7, #6]
 80039aa:	b29b      	uxth	r3, r3
 80039ac:	461a      	mov	r2, r3
 80039ae:	0112      	lsls	r2, r2, #4
 80039b0:	1ad3      	subs	r3, r2, r3
 80039b2:	009b      	lsls	r3, r3, #2
 80039b4:	b29a      	uxth	r2, r3
 80039b6:	4b15      	ldr	r3, [pc, #84]	; (8003a0c <motor_setDrive+0x84>)
 80039b8:	801a      	strh	r2, [r3, #0]
	if (pwmValTarget > 0) pwmValTarget--;
 80039ba:	4b14      	ldr	r3, [pc, #80]	; (8003a0c <motor_setDrive+0x84>)
 80039bc:	881b      	ldrh	r3, [r3, #0]
 80039be:	2b00      	cmp	r3, #0
 80039c0:	d005      	beq.n	80039ce <motor_setDrive+0x46>
 80039c2:	4b12      	ldr	r3, [pc, #72]	; (8003a0c <motor_setDrive+0x84>)
 80039c4:	881b      	ldrh	r3, [r3, #0]
 80039c6:	3b01      	subs	r3, #1
 80039c8:	b29a      	uxth	r2, r3
 80039ca:	4b10      	ldr	r3, [pc, #64]	; (8003a0c <motor_setDrive+0x84>)
 80039cc:	801a      	strh	r2, [r3, #0]

	pwmValAccel = speed > 0
 80039ce:	79bb      	ldrb	r3, [r7, #6]
 80039d0:	2b00      	cmp	r3, #0
 80039d2:	d001      	beq.n	80039d8 <motor_setDrive+0x50>
 80039d4:	22fa      	movs	r2, #250	; 0xfa
 80039d6:	e000      	b.n	80039da <motor_setDrive+0x52>
 80039d8:	2200      	movs	r2, #0
 80039da:	4b0d      	ldr	r3, [pc, #52]	; (8003a10 <motor_setDrive+0x88>)
 80039dc:	801a      	strh	r2, [r3, #0]
		? MOTOR_PWM_MIN
		: 0;
	lPwmVal = rPwmVal = pwmValAccel;
 80039de:	4b0c      	ldr	r3, [pc, #48]	; (8003a10 <motor_setDrive+0x88>)
 80039e0:	881a      	ldrh	r2, [r3, #0]
 80039e2:	4b0c      	ldr	r3, [pc, #48]	; (8003a14 <motor_setDrive+0x8c>)
 80039e4:	801a      	strh	r2, [r3, #0]
 80039e6:	4b0b      	ldr	r3, [pc, #44]	; (8003a14 <motor_setDrive+0x8c>)
 80039e8:	881a      	ldrh	r2, [r3, #0]
 80039ea:	4b0b      	ldr	r3, [pc, #44]	; (8003a18 <motor_setDrive+0x90>)
 80039ec:	801a      	strh	r2, [r3, #0]

	//reset.
	resetEncoders();
 80039ee:	f7ff fdd9 	bl	80035a4 <resetEncoders>
	resetPwmParams();
 80039f2:	f7ff fdc9 	bl	8003588 <resetPwmParams>

	setDriveDir(dir);
 80039f6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80039fa:	4618      	mov	r0, r3
 80039fc:	f7ff ff72 	bl	80038e4 <setDriveDir>
	setPwmLR();
 8003a00:	f7ff fd9c 	bl	800353c <setPwmLR>
}
 8003a04:	3708      	adds	r7, #8
 8003a06:	46bd      	mov	sp, r7
 8003a08:	bd80      	pop	{r7, pc}
 8003a0a:	bf00      	nop
 8003a0c:	20000592 	.word	0x20000592
 8003a10:	20000590 	.word	0x20000590
 8003a14:	20000596 	.word	0x20000596
 8003a18:	20000594 	.word	0x20000594

08003a1c <OLED_WR_Byte>:
Output  : none

**************************************************************************/  

void OLED_WR_Byte(uint8_t dat,uint8_t DataCmd)
{	
 8003a1c:	b580      	push	{r7, lr}
 8003a1e:	b084      	sub	sp, #16
 8003a20:	af00      	add	r7, sp, #0
 8003a22:	4603      	mov	r3, r0
 8003a24:	460a      	mov	r2, r1
 8003a26:	71fb      	strb	r3, [r7, #7]
 8003a28:	4613      	mov	r3, r2
 8003a2a:	71bb      	strb	r3, [r7, #6]
	uint8_t i;

	if(DataCmd == 1) 		// Data write
 8003a2c:	79bb      	ldrb	r3, [r7, #6]
 8003a2e:	2b01      	cmp	r3, #1
 8003a30:	d106      	bne.n	8003a40 <OLED_WR_Byte+0x24>
	  OLED_RS_Set();		// Set the D/C# line
 8003a32:	2201      	movs	r2, #1
 8003a34:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003a38:	481c      	ldr	r0, [pc, #112]	; (8003aac <OLED_WR_Byte+0x90>)
 8003a3a:	f002 f9b7 	bl	8005dac <HAL_GPIO_WritePin>
 8003a3e:	e005      	b.n	8003a4c <OLED_WR_Byte+0x30>
	else  					// Command write
	  OLED_RS_Clr();        // Clear the D/C# line
 8003a40:	2200      	movs	r2, #0
 8003a42:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003a46:	4819      	ldr	r0, [pc, #100]	; (8003aac <OLED_WR_Byte+0x90>)
 8003a48:	f002 f9b0 	bl	8005dac <HAL_GPIO_WritePin>

	for(i=0;i<8;i++)
 8003a4c:	2300      	movs	r3, #0
 8003a4e:	73fb      	strb	r3, [r7, #15]
 8003a50:	e01f      	b.n	8003a92 <OLED_WR_Byte+0x76>
	{ // Complete the code below
		OLED_SCLK_Clr();
 8003a52:	2200      	movs	r2, #0
 8003a54:	2120      	movs	r1, #32
 8003a56:	4815      	ldr	r0, [pc, #84]	; (8003aac <OLED_WR_Byte+0x90>)
 8003a58:	f002 f9a8 	bl	8005dac <HAL_GPIO_WritePin>
		if (dat & (0x80 >> i)) OLED_SDIN_Set();
 8003a5c:	79fa      	ldrb	r2, [r7, #7]
 8003a5e:	7bfb      	ldrb	r3, [r7, #15]
 8003a60:	2180      	movs	r1, #128	; 0x80
 8003a62:	fa41 f303 	asr.w	r3, r1, r3
 8003a66:	4013      	ands	r3, r2
 8003a68:	2b00      	cmp	r3, #0
 8003a6a:	d005      	beq.n	8003a78 <OLED_WR_Byte+0x5c>
 8003a6c:	2201      	movs	r2, #1
 8003a6e:	2140      	movs	r1, #64	; 0x40
 8003a70:	480e      	ldr	r0, [pc, #56]	; (8003aac <OLED_WR_Byte+0x90>)
 8003a72:	f002 f99b 	bl	8005dac <HAL_GPIO_WritePin>
 8003a76:	e004      	b.n	8003a82 <OLED_WR_Byte+0x66>
		else OLED_SDIN_Clr();
 8003a78:	2200      	movs	r2, #0
 8003a7a:	2140      	movs	r1, #64	; 0x40
 8003a7c:	480b      	ldr	r0, [pc, #44]	; (8003aac <OLED_WR_Byte+0x90>)
 8003a7e:	f002 f995 	bl	8005dac <HAL_GPIO_WritePin>
		OLED_SCLK_Set();
 8003a82:	2201      	movs	r2, #1
 8003a84:	2120      	movs	r1, #32
 8003a86:	4809      	ldr	r0, [pc, #36]	; (8003aac <OLED_WR_Byte+0x90>)
 8003a88:	f002 f990 	bl	8005dac <HAL_GPIO_WritePin>
	for(i=0;i<8;i++)
 8003a8c:	7bfb      	ldrb	r3, [r7, #15]
 8003a8e:	3301      	adds	r3, #1
 8003a90:	73fb      	strb	r3, [r7, #15]
 8003a92:	7bfb      	ldrb	r3, [r7, #15]
 8003a94:	2b07      	cmp	r3, #7
 8003a96:	d9dc      	bls.n	8003a52 <OLED_WR_Byte+0x36>
	}

	OLED_RS_Set();   	  // Keep the D/C# line high upon exit
 8003a98:	2201      	movs	r2, #1
 8003a9a:	f44f 7180 	mov.w	r1, #256	; 0x100
 8003a9e:	4803      	ldr	r0, [pc, #12]	; (8003aac <OLED_WR_Byte+0x90>)
 8003aa0:	f002 f984 	bl	8005dac <HAL_GPIO_WritePin>
} 
 8003aa4:	bf00      	nop
 8003aa6:	3710      	adds	r7, #16
 8003aa8:	46bd      	mov	sp, r7
 8003aaa:	bd80      	pop	{r7, pc}
 8003aac:	40021000 	.word	0x40021000

08003ab0 <OLED_Refresh_Gram>:

//**************************************************************************
// Refresh the GRAM
uint8_t OLED_GRAM[128][8];
void OLED_Refresh_Gram(void)
{
 8003ab0:	b580      	push	{r7, lr}
 8003ab2:	b082      	sub	sp, #8
 8003ab4:	af00      	add	r7, sp, #0
	uint8_t i,n;
	for(i=0;i<8;i++)
 8003ab6:	2300      	movs	r3, #0
 8003ab8:	71fb      	strb	r3, [r7, #7]
 8003aba:	e026      	b.n	8003b0a <OLED_Refresh_Gram+0x5a>
	{
		OLED_WR_Byte (0xb0+i,OLED_CMD);
 8003abc:	79fb      	ldrb	r3, [r7, #7]
 8003abe:	3b50      	subs	r3, #80	; 0x50
 8003ac0:	b2db      	uxtb	r3, r3
 8003ac2:	2100      	movs	r1, #0
 8003ac4:	4618      	mov	r0, r3
 8003ac6:	f7ff ffa9 	bl	8003a1c <OLED_WR_Byte>
		OLED_WR_Byte (0x00,OLED_CMD);
 8003aca:	2100      	movs	r1, #0
 8003acc:	2000      	movs	r0, #0
 8003ace:	f7ff ffa5 	bl	8003a1c <OLED_WR_Byte>
		OLED_WR_Byte (0x10,OLED_CMD);
 8003ad2:	2100      	movs	r1, #0
 8003ad4:	2010      	movs	r0, #16
 8003ad6:	f7ff ffa1 	bl	8003a1c <OLED_WR_Byte>
		for(n=0;n<128;n++)OLED_WR_Byte(OLED_GRAM[n][i],OLED_DATA);
 8003ada:	2300      	movs	r3, #0
 8003adc:	71bb      	strb	r3, [r7, #6]
 8003ade:	e00d      	b.n	8003afc <OLED_Refresh_Gram+0x4c>
 8003ae0:	79ba      	ldrb	r2, [r7, #6]
 8003ae2:	79fb      	ldrb	r3, [r7, #7]
 8003ae4:	490d      	ldr	r1, [pc, #52]	; (8003b1c <OLED_Refresh_Gram+0x6c>)
 8003ae6:	00d2      	lsls	r2, r2, #3
 8003ae8:	440a      	add	r2, r1
 8003aea:	4413      	add	r3, r2
 8003aec:	781b      	ldrb	r3, [r3, #0]
 8003aee:	2101      	movs	r1, #1
 8003af0:	4618      	mov	r0, r3
 8003af2:	f7ff ff93 	bl	8003a1c <OLED_WR_Byte>
 8003af6:	79bb      	ldrb	r3, [r7, #6]
 8003af8:	3301      	adds	r3, #1
 8003afa:	71bb      	strb	r3, [r7, #6]
 8003afc:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8003b00:	2b00      	cmp	r3, #0
 8003b02:	daed      	bge.n	8003ae0 <OLED_Refresh_Gram+0x30>
	for(i=0;i<8;i++)
 8003b04:	79fb      	ldrb	r3, [r7, #7]
 8003b06:	3301      	adds	r3, #1
 8003b08:	71fb      	strb	r3, [r7, #7]
 8003b0a:	79fb      	ldrb	r3, [r7, #7]
 8003b0c:	2b07      	cmp	r3, #7
 8003b0e:	d9d5      	bls.n	8003abc <OLED_Refresh_Gram+0xc>
	}
}
 8003b10:	bf00      	nop
 8003b12:	bf00      	nop
 8003b14:	3708      	adds	r7, #8
 8003b16:	46bd      	mov	sp, r7
 8003b18:	bd80      	pop	{r7, pc}
 8003b1a:	bf00      	nop
 8003b1c:	200005c0 	.word	0x200005c0

08003b20 <OLED_Clear>:

/**************************************************************************
Clear OLED
**************************************************************************/  
void OLED_Clear(void)  
{  
 8003b20:	b580      	push	{r7, lr}
 8003b22:	b082      	sub	sp, #8
 8003b24:	af00      	add	r7, sp, #0
	uint8_t i,n;  
	for(i=0;i<8;i++)for(n=0;n<128;n++)OLED_GRAM[n][i]=0X00;  
 8003b26:	2300      	movs	r3, #0
 8003b28:	71fb      	strb	r3, [r7, #7]
 8003b2a:	e014      	b.n	8003b56 <OLED_Clear+0x36>
 8003b2c:	2300      	movs	r3, #0
 8003b2e:	71bb      	strb	r3, [r7, #6]
 8003b30:	e00a      	b.n	8003b48 <OLED_Clear+0x28>
 8003b32:	79ba      	ldrb	r2, [r7, #6]
 8003b34:	79fb      	ldrb	r3, [r7, #7]
 8003b36:	490c      	ldr	r1, [pc, #48]	; (8003b68 <OLED_Clear+0x48>)
 8003b38:	00d2      	lsls	r2, r2, #3
 8003b3a:	440a      	add	r2, r1
 8003b3c:	4413      	add	r3, r2
 8003b3e:	2200      	movs	r2, #0
 8003b40:	701a      	strb	r2, [r3, #0]
 8003b42:	79bb      	ldrb	r3, [r7, #6]
 8003b44:	3301      	adds	r3, #1
 8003b46:	71bb      	strb	r3, [r7, #6]
 8003b48:	f997 3006 	ldrsb.w	r3, [r7, #6]
 8003b4c:	2b00      	cmp	r3, #0
 8003b4e:	daf0      	bge.n	8003b32 <OLED_Clear+0x12>
 8003b50:	79fb      	ldrb	r3, [r7, #7]
 8003b52:	3301      	adds	r3, #1
 8003b54:	71fb      	strb	r3, [r7, #7]
 8003b56:	79fb      	ldrb	r3, [r7, #7]
 8003b58:	2b07      	cmp	r3, #7
 8003b5a:	d9e7      	bls.n	8003b2c <OLED_Clear+0xc>
	OLED_Refresh_Gram();//Refresh
 8003b5c:	f7ff ffa8 	bl	8003ab0 <OLED_Refresh_Gram>
}
 8003b60:	bf00      	nop
 8003b62:	3708      	adds	r7, #8
 8003b64:	46bd      	mov	sp, r7
 8003b66:	bd80      	pop	{r7, pc}
 8003b68:	200005c0 	.word	0x200005c0

08003b6c <OLED_DrawPoint>:

/**************************************************************************
Draw A Point
**************************************************************************/ 
void OLED_DrawPoint(uint8_t x,uint8_t y,uint8_t t)
{
 8003b6c:	b480      	push	{r7}
 8003b6e:	b085      	sub	sp, #20
 8003b70:	af00      	add	r7, sp, #0
 8003b72:	4603      	mov	r3, r0
 8003b74:	71fb      	strb	r3, [r7, #7]
 8003b76:	460b      	mov	r3, r1
 8003b78:	71bb      	strb	r3, [r7, #6]
 8003b7a:	4613      	mov	r3, r2
 8003b7c:	717b      	strb	r3, [r7, #5]
	uint8_t pos,bx,temp=0;
 8003b7e:	2300      	movs	r3, #0
 8003b80:	73fb      	strb	r3, [r7, #15]
	if(x>127||y>63)return;//Out of reach
 8003b82:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003b86:	2b00      	cmp	r3, #0
 8003b88:	db41      	blt.n	8003c0e <OLED_DrawPoint+0xa2>
 8003b8a:	79bb      	ldrb	r3, [r7, #6]
 8003b8c:	2b3f      	cmp	r3, #63	; 0x3f
 8003b8e:	d83e      	bhi.n	8003c0e <OLED_DrawPoint+0xa2>
	pos=7-y/8;
 8003b90:	79bb      	ldrb	r3, [r7, #6]
 8003b92:	08db      	lsrs	r3, r3, #3
 8003b94:	b2db      	uxtb	r3, r3
 8003b96:	f1c3 0307 	rsb	r3, r3, #7
 8003b9a:	73bb      	strb	r3, [r7, #14]
	bx=y%8;
 8003b9c:	79bb      	ldrb	r3, [r7, #6]
 8003b9e:	f003 0307 	and.w	r3, r3, #7
 8003ba2:	737b      	strb	r3, [r7, #13]
	temp=1<<(7-bx);
 8003ba4:	7b7b      	ldrb	r3, [r7, #13]
 8003ba6:	f1c3 0307 	rsb	r3, r3, #7
 8003baa:	2201      	movs	r2, #1
 8003bac:	fa02 f303 	lsl.w	r3, r2, r3
 8003bb0:	73fb      	strb	r3, [r7, #15]
	if(t)OLED_GRAM[x][pos]|=temp;
 8003bb2:	797b      	ldrb	r3, [r7, #5]
 8003bb4:	2b00      	cmp	r3, #0
 8003bb6:	d012      	beq.n	8003bde <OLED_DrawPoint+0x72>
 8003bb8:	79fa      	ldrb	r2, [r7, #7]
 8003bba:	7bbb      	ldrb	r3, [r7, #14]
 8003bbc:	4917      	ldr	r1, [pc, #92]	; (8003c1c <OLED_DrawPoint+0xb0>)
 8003bbe:	00d2      	lsls	r2, r2, #3
 8003bc0:	440a      	add	r2, r1
 8003bc2:	4413      	add	r3, r2
 8003bc4:	7818      	ldrb	r0, [r3, #0]
 8003bc6:	79fa      	ldrb	r2, [r7, #7]
 8003bc8:	7bbb      	ldrb	r3, [r7, #14]
 8003bca:	7bf9      	ldrb	r1, [r7, #15]
 8003bcc:	4301      	orrs	r1, r0
 8003bce:	b2c8      	uxtb	r0, r1
 8003bd0:	4912      	ldr	r1, [pc, #72]	; (8003c1c <OLED_DrawPoint+0xb0>)
 8003bd2:	00d2      	lsls	r2, r2, #3
 8003bd4:	440a      	add	r2, r1
 8003bd6:	4413      	add	r3, r2
 8003bd8:	4602      	mov	r2, r0
 8003bda:	701a      	strb	r2, [r3, #0]
 8003bdc:	e018      	b.n	8003c10 <OLED_DrawPoint+0xa4>
	else OLED_GRAM[x][pos]&=~temp;	    
 8003bde:	79fa      	ldrb	r2, [r7, #7]
 8003be0:	7bbb      	ldrb	r3, [r7, #14]
 8003be2:	490e      	ldr	r1, [pc, #56]	; (8003c1c <OLED_DrawPoint+0xb0>)
 8003be4:	00d2      	lsls	r2, r2, #3
 8003be6:	440a      	add	r2, r1
 8003be8:	4413      	add	r3, r2
 8003bea:	781b      	ldrb	r3, [r3, #0]
 8003bec:	b25a      	sxtb	r2, r3
 8003bee:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003bf2:	43db      	mvns	r3, r3
 8003bf4:	b25b      	sxtb	r3, r3
 8003bf6:	4013      	ands	r3, r2
 8003bf8:	b259      	sxtb	r1, r3
 8003bfa:	79fa      	ldrb	r2, [r7, #7]
 8003bfc:	7bbb      	ldrb	r3, [r7, #14]
 8003bfe:	b2c8      	uxtb	r0, r1
 8003c00:	4906      	ldr	r1, [pc, #24]	; (8003c1c <OLED_DrawPoint+0xb0>)
 8003c02:	00d2      	lsls	r2, r2, #3
 8003c04:	440a      	add	r2, r1
 8003c06:	4413      	add	r3, r2
 8003c08:	4602      	mov	r2, r0
 8003c0a:	701a      	strb	r2, [r3, #0]
 8003c0c:	e000      	b.n	8003c10 <OLED_DrawPoint+0xa4>
	if(x>127||y>63)return;//Out of reach
 8003c0e:	bf00      	nop
}
 8003c10:	3714      	adds	r7, #20
 8003c12:	46bd      	mov	sp, r7
 8003c14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c18:	4770      	bx	lr
 8003c1a:	bf00      	nop
 8003c1c:	200005c0 	.word	0x200005c0

08003c20 <OLED_ShowChar>:
/**************************************************************************
Show Char
**************************************************************************/
void OLED_ShowChar(uint8_t x,uint8_t y,uint8_t chr,uint8_t size,uint8_t mode)
{      			    
 8003c20:	b590      	push	{r4, r7, lr}
 8003c22:	b085      	sub	sp, #20
 8003c24:	af00      	add	r7, sp, #0
 8003c26:	4604      	mov	r4, r0
 8003c28:	4608      	mov	r0, r1
 8003c2a:	4611      	mov	r1, r2
 8003c2c:	461a      	mov	r2, r3
 8003c2e:	4623      	mov	r3, r4
 8003c30:	71fb      	strb	r3, [r7, #7]
 8003c32:	4603      	mov	r3, r0
 8003c34:	71bb      	strb	r3, [r7, #6]
 8003c36:	460b      	mov	r3, r1
 8003c38:	717b      	strb	r3, [r7, #5]
 8003c3a:	4613      	mov	r3, r2
 8003c3c:	713b      	strb	r3, [r7, #4]
	uint8_t temp,t,t1;
	uint8_t y0=y;
 8003c3e:	79bb      	ldrb	r3, [r7, #6]
 8003c40:	733b      	strb	r3, [r7, #12]
	chr=chr-' ';				   
 8003c42:	797b      	ldrb	r3, [r7, #5]
 8003c44:	3b20      	subs	r3, #32
 8003c46:	717b      	strb	r3, [r7, #5]
    for(t=0;t<size;t++)
 8003c48:	2300      	movs	r3, #0
 8003c4a:	73bb      	strb	r3, [r7, #14]
 8003c4c:	e04d      	b.n	8003cea <OLED_ShowChar+0xca>
    {   
		if(size==12)temp=oled_asc2_1206[chr][t];  //1206 Size
 8003c4e:	793b      	ldrb	r3, [r7, #4]
 8003c50:	2b0c      	cmp	r3, #12
 8003c52:	d10b      	bne.n	8003c6c <OLED_ShowChar+0x4c>
 8003c54:	797a      	ldrb	r2, [r7, #5]
 8003c56:	7bb9      	ldrb	r1, [r7, #14]
 8003c58:	4828      	ldr	r0, [pc, #160]	; (8003cfc <OLED_ShowChar+0xdc>)
 8003c5a:	4613      	mov	r3, r2
 8003c5c:	005b      	lsls	r3, r3, #1
 8003c5e:	4413      	add	r3, r2
 8003c60:	009b      	lsls	r3, r3, #2
 8003c62:	4403      	add	r3, r0
 8003c64:	440b      	add	r3, r1
 8003c66:	781b      	ldrb	r3, [r3, #0]
 8003c68:	73fb      	strb	r3, [r7, #15]
 8003c6a:	e007      	b.n	8003c7c <OLED_ShowChar+0x5c>
		else temp=oled_asc2_1608[chr][t];		 //1608 Size	                          
 8003c6c:	797a      	ldrb	r2, [r7, #5]
 8003c6e:	7bbb      	ldrb	r3, [r7, #14]
 8003c70:	4923      	ldr	r1, [pc, #140]	; (8003d00 <OLED_ShowChar+0xe0>)
 8003c72:	0112      	lsls	r2, r2, #4
 8003c74:	440a      	add	r2, r1
 8003c76:	4413      	add	r3, r2
 8003c78:	781b      	ldrb	r3, [r3, #0]
 8003c7a:	73fb      	strb	r3, [r7, #15]
        for(t1=0;t1<8;t1++)
 8003c7c:	2300      	movs	r3, #0
 8003c7e:	737b      	strb	r3, [r7, #13]
 8003c80:	e02d      	b.n	8003cde <OLED_ShowChar+0xbe>
		{
			if(temp&0x80)OLED_DrawPoint(x,y,mode);
 8003c82:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8003c86:	2b00      	cmp	r3, #0
 8003c88:	da07      	bge.n	8003c9a <OLED_ShowChar+0x7a>
 8003c8a:	f897 2020 	ldrb.w	r2, [r7, #32]
 8003c8e:	79b9      	ldrb	r1, [r7, #6]
 8003c90:	79fb      	ldrb	r3, [r7, #7]
 8003c92:	4618      	mov	r0, r3
 8003c94:	f7ff ff6a 	bl	8003b6c <OLED_DrawPoint>
 8003c98:	e00c      	b.n	8003cb4 <OLED_ShowChar+0x94>
			else OLED_DrawPoint(x,y,!mode);
 8003c9a:	f897 3020 	ldrb.w	r3, [r7, #32]
 8003c9e:	2b00      	cmp	r3, #0
 8003ca0:	bf0c      	ite	eq
 8003ca2:	2301      	moveq	r3, #1
 8003ca4:	2300      	movne	r3, #0
 8003ca6:	b2db      	uxtb	r3, r3
 8003ca8:	461a      	mov	r2, r3
 8003caa:	79b9      	ldrb	r1, [r7, #6]
 8003cac:	79fb      	ldrb	r3, [r7, #7]
 8003cae:	4618      	mov	r0, r3
 8003cb0:	f7ff ff5c 	bl	8003b6c <OLED_DrawPoint>
			temp<<=1;
 8003cb4:	7bfb      	ldrb	r3, [r7, #15]
 8003cb6:	005b      	lsls	r3, r3, #1
 8003cb8:	73fb      	strb	r3, [r7, #15]
			y++;
 8003cba:	79bb      	ldrb	r3, [r7, #6]
 8003cbc:	3301      	adds	r3, #1
 8003cbe:	71bb      	strb	r3, [r7, #6]
			if((y-y0)==size)
 8003cc0:	79ba      	ldrb	r2, [r7, #6]
 8003cc2:	7b3b      	ldrb	r3, [r7, #12]
 8003cc4:	1ad2      	subs	r2, r2, r3
 8003cc6:	793b      	ldrb	r3, [r7, #4]
 8003cc8:	429a      	cmp	r2, r3
 8003cca:	d105      	bne.n	8003cd8 <OLED_ShowChar+0xb8>
			{
				y=y0;
 8003ccc:	7b3b      	ldrb	r3, [r7, #12]
 8003cce:	71bb      	strb	r3, [r7, #6]
				x++;
 8003cd0:	79fb      	ldrb	r3, [r7, #7]
 8003cd2:	3301      	adds	r3, #1
 8003cd4:	71fb      	strb	r3, [r7, #7]
				break;
 8003cd6:	e005      	b.n	8003ce4 <OLED_ShowChar+0xc4>
        for(t1=0;t1<8;t1++)
 8003cd8:	7b7b      	ldrb	r3, [r7, #13]
 8003cda:	3301      	adds	r3, #1
 8003cdc:	737b      	strb	r3, [r7, #13]
 8003cde:	7b7b      	ldrb	r3, [r7, #13]
 8003ce0:	2b07      	cmp	r3, #7
 8003ce2:	d9ce      	bls.n	8003c82 <OLED_ShowChar+0x62>
    for(t=0;t<size;t++)
 8003ce4:	7bbb      	ldrb	r3, [r7, #14]
 8003ce6:	3301      	adds	r3, #1
 8003ce8:	73bb      	strb	r3, [r7, #14]
 8003cea:	7bba      	ldrb	r2, [r7, #14]
 8003cec:	793b      	ldrb	r3, [r7, #4]
 8003cee:	429a      	cmp	r2, r3
 8003cf0:	d3ad      	bcc.n	8003c4e <OLED_ShowChar+0x2e>
			}
		}  	 
    }          
}
 8003cf2:	bf00      	nop
 8003cf4:	bf00      	nop
 8003cf6:	3714      	adds	r7, #20
 8003cf8:	46bd      	mov	sp, r7
 8003cfa:	bd90      	pop	{r4, r7, pc}
 8003cfc:	08011374 	.word	0x08011374
 8003d00:	080117e8 	.word	0x080117e8

08003d04 <OLED_ShowString>:
} 
/**************************************************************************
Show The String
**************************************************************************/
void OLED_ShowString(uint8_t x,uint8_t y,const uint8_t *p)
{
 8003d04:	b580      	push	{r7, lr}
 8003d06:	b084      	sub	sp, #16
 8003d08:	af02      	add	r7, sp, #8
 8003d0a:	4603      	mov	r3, r0
 8003d0c:	603a      	str	r2, [r7, #0]
 8003d0e:	71fb      	strb	r3, [r7, #7]
 8003d10:	460b      	mov	r3, r1
 8003d12:	71bb      	strb	r3, [r7, #6]
#define MAX_CHAR_POSX 122
#define MAX_CHAR_POSY 58          
    while(*p!='\0')
 8003d14:	e01f      	b.n	8003d56 <OLED_ShowString+0x52>
    {       
        if(x>MAX_CHAR_POSX){x=0;y+=16;}
 8003d16:	79fb      	ldrb	r3, [r7, #7]
 8003d18:	2b7a      	cmp	r3, #122	; 0x7a
 8003d1a:	d904      	bls.n	8003d26 <OLED_ShowString+0x22>
 8003d1c:	2300      	movs	r3, #0
 8003d1e:	71fb      	strb	r3, [r7, #7]
 8003d20:	79bb      	ldrb	r3, [r7, #6]
 8003d22:	3310      	adds	r3, #16
 8003d24:	71bb      	strb	r3, [r7, #6]
        if(y>MAX_CHAR_POSY){y=x=0;OLED_Clear();}
 8003d26:	79bb      	ldrb	r3, [r7, #6]
 8003d28:	2b3a      	cmp	r3, #58	; 0x3a
 8003d2a:	d905      	bls.n	8003d38 <OLED_ShowString+0x34>
 8003d2c:	2300      	movs	r3, #0
 8003d2e:	71fb      	strb	r3, [r7, #7]
 8003d30:	79fb      	ldrb	r3, [r7, #7]
 8003d32:	71bb      	strb	r3, [r7, #6]
 8003d34:	f7ff fef4 	bl	8003b20 <OLED_Clear>
        OLED_ShowChar(x,y,*p,12,1);	 
 8003d38:	683b      	ldr	r3, [r7, #0]
 8003d3a:	781a      	ldrb	r2, [r3, #0]
 8003d3c:	79b9      	ldrb	r1, [r7, #6]
 8003d3e:	79f8      	ldrb	r0, [r7, #7]
 8003d40:	2301      	movs	r3, #1
 8003d42:	9300      	str	r3, [sp, #0]
 8003d44:	230c      	movs	r3, #12
 8003d46:	f7ff ff6b 	bl	8003c20 <OLED_ShowChar>
        x+=8;
 8003d4a:	79fb      	ldrb	r3, [r7, #7]
 8003d4c:	3308      	adds	r3, #8
 8003d4e:	71fb      	strb	r3, [r7, #7]
        p++;
 8003d50:	683b      	ldr	r3, [r7, #0]
 8003d52:	3301      	adds	r3, #1
 8003d54:	603b      	str	r3, [r7, #0]
    while(*p!='\0')
 8003d56:	683b      	ldr	r3, [r7, #0]
 8003d58:	781b      	ldrb	r3, [r3, #0]
 8003d5a:	2b00      	cmp	r3, #0
 8003d5c:	d1db      	bne.n	8003d16 <OLED_ShowString+0x12>
    }  
}	 
 8003d5e:	bf00      	nop
 8003d60:	bf00      	nop
 8003d62:	3708      	adds	r7, #8
 8003d64:	46bd      	mov	sp, r7
 8003d66:	bd80      	pop	{r7, pc}

08003d68 <OLED_Init>:

void OLED_Init(void)
{
 8003d68:	b580      	push	{r7, lr}
 8003d6a:	af00      	add	r7, sp, #0
	HAL_PWR_EnableBkUpAccess(); //Enable access to the RTC and Backup Register
 8003d6c:	f003 f85c 	bl	8006e28 <HAL_PWR_EnableBkUpAccess>
	__HAL_RCC_LSE_CONFIG(RCC_LSE_OFF); //turn OFF the LSE oscillator, LSERDY flag goes low after 6 LSE oscillator clock cycles.
 8003d70:	4b41      	ldr	r3, [pc, #260]	; (8003e78 <OLED_Init+0x110>)
 8003d72:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003d74:	4a40      	ldr	r2, [pc, #256]	; (8003e78 <OLED_Init+0x110>)
 8003d76:	f023 0301 	bic.w	r3, r3, #1
 8003d7a:	6713      	str	r3, [r2, #112]	; 0x70
 8003d7c:	4b3e      	ldr	r3, [pc, #248]	; (8003e78 <OLED_Init+0x110>)
 8003d7e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003d80:	4a3d      	ldr	r2, [pc, #244]	; (8003e78 <OLED_Init+0x110>)
 8003d82:	f023 0304 	bic.w	r3, r3, #4
 8003d86:	6713      	str	r3, [r2, #112]	; 0x70
	                                   //LSE oscillator switch off to let PC13 PC14 PC15 be IO
	
	
	HAL_PWR_DisableBkUpAccess();
 8003d88:	f003 f862 	bl	8006e50 <HAL_PWR_DisableBkUpAccess>
	
	OLED_RST_Clr();
 8003d8c:	2200      	movs	r2, #0
 8003d8e:	2180      	movs	r1, #128	; 0x80
 8003d90:	483a      	ldr	r0, [pc, #232]	; (8003e7c <OLED_Init+0x114>)
 8003d92:	f002 f80b 	bl	8005dac <HAL_GPIO_WritePin>
	HAL_Delay(100);
 8003d96:	2064      	movs	r0, #100	; 0x64
 8003d98:	f001 f8d8 	bl	8004f4c <HAL_Delay>
	OLED_RST_Set();
 8003d9c:	2201      	movs	r2, #1
 8003d9e:	2180      	movs	r1, #128	; 0x80
 8003da0:	4836      	ldr	r0, [pc, #216]	; (8003e7c <OLED_Init+0x114>)
 8003da2:	f002 f803 	bl	8005dac <HAL_GPIO_WritePin>
	
	OLED_WR_Byte(0xAE,OLED_CMD); //Off Display
 8003da6:	2100      	movs	r1, #0
 8003da8:	20ae      	movs	r0, #174	; 0xae
 8003daa:	f7ff fe37 	bl	8003a1c <OLED_WR_Byte>
	
	OLED_WR_Byte(0xD5,OLED_CMD); //Set Oscillator Division
 8003dae:	2100      	movs	r1, #0
 8003db0:	20d5      	movs	r0, #213	; 0xd5
 8003db2:	f7ff fe33 	bl	8003a1c <OLED_WR_Byte>
	OLED_WR_Byte(80,OLED_CMD);    //[3:0]: divide ratio of the DCLK, [7:4], set the oscillator frequency. Reset
 8003db6:	2100      	movs	r1, #0
 8003db8:	2050      	movs	r0, #80	; 0x50
 8003dba:	f7ff fe2f 	bl	8003a1c <OLED_WR_Byte>
	OLED_WR_Byte(0xA8,OLED_CMD); //multiplex ratio
 8003dbe:	2100      	movs	r1, #0
 8003dc0:	20a8      	movs	r0, #168	; 0xa8
 8003dc2:	f7ff fe2b 	bl	8003a1c <OLED_WR_Byte>
	OLED_WR_Byte(0X3F,OLED_CMD); //duty = 0X3F(1/64) 
 8003dc6:	2100      	movs	r1, #0
 8003dc8:	203f      	movs	r0, #63	; 0x3f
 8003dca:	f7ff fe27 	bl	8003a1c <OLED_WR_Byte>
	OLED_WR_Byte(0xD3,OLED_CMD);  //set display offset
 8003dce:	2100      	movs	r1, #0
 8003dd0:	20d3      	movs	r0, #211	; 0xd3
 8003dd2:	f7ff fe23 	bl	8003a1c <OLED_WR_Byte>
	OLED_WR_Byte(0X00,OLED_CMD); //0
 8003dd6:	2100      	movs	r1, #0
 8003dd8:	2000      	movs	r0, #0
 8003dda:	f7ff fe1f 	bl	8003a1c <OLED_WR_Byte>

	OLED_WR_Byte(0x40,OLED_CMD); //set display start line [5:0]- from 0-63. RESET
 8003dde:	2100      	movs	r1, #0
 8003de0:	2040      	movs	r0, #64	; 0x40
 8003de2:	f7ff fe1b 	bl	8003a1c <OLED_WR_Byte>
													
	OLED_WR_Byte(0x8D,OLED_CMD); //Set charge pump
 8003de6:	2100      	movs	r1, #0
 8003de8:	208d      	movs	r0, #141	; 0x8d
 8003dea:	f7ff fe17 	bl	8003a1c <OLED_WR_Byte>
	OLED_WR_Byte(0x14,OLED_CMD); //Enable Charge Pump
 8003dee:	2100      	movs	r1, #0
 8003df0:	2014      	movs	r0, #20
 8003df2:	f7ff fe13 	bl	8003a1c <OLED_WR_Byte>
	OLED_WR_Byte(0x20,OLED_CMD); //Set Memory Addressing Mode
 8003df6:	2100      	movs	r1, #0
 8003df8:	2020      	movs	r0, #32
 8003dfa:	f7ff fe0f 	bl	8003a1c <OLED_WR_Byte>
	OLED_WR_Byte(0x02,OLED_CMD); //Page Addressing Mode (RESET)
 8003dfe:	2100      	movs	r1, #0
 8003e00:	2002      	movs	r0, #2
 8003e02:	f7ff fe0b 	bl	8003a1c <OLED_WR_Byte>
	OLED_WR_Byte(0xA1,OLED_CMD); //Set segment remap, bit0:0,0->0;1,0->127;
 8003e06:	2100      	movs	r1, #0
 8003e08:	20a1      	movs	r0, #161	; 0xa1
 8003e0a:	f7ff fe07 	bl	8003a1c <OLED_WR_Byte>
	OLED_WR_Byte(0xC0,OLED_CMD); //Set COM Output Scan Direction
 8003e0e:	2100      	movs	r1, #0
 8003e10:	20c0      	movs	r0, #192	; 0xc0
 8003e12:	f7ff fe03 	bl	8003a1c <OLED_WR_Byte>
	OLED_WR_Byte(0xDA,OLED_CMD); //Set COM Pins
 8003e16:	2100      	movs	r1, #0
 8003e18:	20da      	movs	r0, #218	; 0xda
 8003e1a:	f7ff fdff 	bl	8003a1c <OLED_WR_Byte>
	OLED_WR_Byte(0x12,OLED_CMD); //[5:4] setting
 8003e1e:	2100      	movs	r1, #0
 8003e20:	2012      	movs	r0, #18
 8003e22:	f7ff fdfb 	bl	8003a1c <OLED_WR_Byte>
	 
	OLED_WR_Byte(0x81,OLED_CMD); //Contrast Control
 8003e26:	2100      	movs	r1, #0
 8003e28:	2081      	movs	r0, #129	; 0x81
 8003e2a:	f7ff fdf7 	bl	8003a1c <OLED_WR_Byte>
	OLED_WR_Byte(0xEF,OLED_CMD); //1~256; Default: 0X7F
 8003e2e:	2100      	movs	r1, #0
 8003e30:	20ef      	movs	r0, #239	; 0xef
 8003e32:	f7ff fdf3 	bl	8003a1c <OLED_WR_Byte>
	OLED_WR_Byte(0xD9,OLED_CMD); //Set Pre-charge Period
 8003e36:	2100      	movs	r1, #0
 8003e38:	20d9      	movs	r0, #217	; 0xd9
 8003e3a:	f7ff fdef 	bl	8003a1c <OLED_WR_Byte>
	OLED_WR_Byte(0xf1,OLED_CMD); //[3:0],PHASE 1;[7:4],PHASE 2;
 8003e3e:	2100      	movs	r1, #0
 8003e40:	20f1      	movs	r0, #241	; 0xf1
 8003e42:	f7ff fdeb 	bl	8003a1c <OLED_WR_Byte>
	OLED_WR_Byte(0xDB,OLED_CMD); //Set VCOMH
 8003e46:	2100      	movs	r1, #0
 8003e48:	20db      	movs	r0, #219	; 0xdb
 8003e4a:	f7ff fde7 	bl	8003a1c <OLED_WR_Byte>
	OLED_WR_Byte(0x30,OLED_CMD);  //[6:4] 000,0.65*vcc;001,0.77*vcc;011,0.83*vcc;
 8003e4e:	2100      	movs	r1, #0
 8003e50:	2030      	movs	r0, #48	; 0x30
 8003e52:	f7ff fde3 	bl	8003a1c <OLED_WR_Byte>

	OLED_WR_Byte(0xA4,OLED_CMD); //Enable display outputs according to the GDDRAM contents
 8003e56:	2100      	movs	r1, #0
 8003e58:	20a4      	movs	r0, #164	; 0xa4
 8003e5a:	f7ff fddf 	bl	8003a1c <OLED_WR_Byte>
	OLED_WR_Byte(0xA6,OLED_CMD); //Set normal display   						   
 8003e5e:	2100      	movs	r1, #0
 8003e60:	20a6      	movs	r0, #166	; 0xa6
 8003e62:	f7ff fddb 	bl	8003a1c <OLED_WR_Byte>
	OLED_WR_Byte(0xAF,OLED_CMD); //DISPLAY ON	 
 8003e66:	2100      	movs	r1, #0
 8003e68:	20af      	movs	r0, #175	; 0xaf
 8003e6a:	f7ff fdd7 	bl	8003a1c <OLED_WR_Byte>
	OLED_Clear(); 
 8003e6e:	f7ff fe57 	bl	8003b20 <OLED_Clear>
}
 8003e72:	bf00      	nop
 8003e74:	bd80      	pop	{r7, pc}
 8003e76:	bf00      	nop
 8003e78:	40023800 	.word	0x40023800
 8003e7c:	40021000 	.word	0x40021000

08003e80 <pid_reset>:
#include "pid.h"

void pid_reset(PidDef *def) {
 8003e80:	b480      	push	{r7}
 8003e82:	b083      	sub	sp, #12
 8003e84:	af00      	add	r7, sp, #0
 8003e86:	6078      	str	r0, [r7, #4]
	def->errorArea = 0;
 8003e88:	687b      	ldr	r3, [r7, #4]
 8003e8a:	f04f 0200 	mov.w	r2, #0
 8003e8e:	605a      	str	r2, [r3, #4]
	def->errorOld = 0;
 8003e90:	687b      	ldr	r3, [r7, #4]
 8003e92:	f04f 0200 	mov.w	r2, #0
 8003e96:	601a      	str	r2, [r3, #0]
}
 8003e98:	bf00      	nop
 8003e9a:	370c      	adds	r7, #12
 8003e9c:	46bd      	mov	sp, r7
 8003e9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ea2:	4770      	bx	lr

08003ea4 <pid_init>:

void pid_init(PidDef *def, float Kp, float Ki, float Kd) {
 8003ea4:	b580      	push	{r7, lr}
 8003ea6:	b084      	sub	sp, #16
 8003ea8:	af00      	add	r7, sp, #0
 8003eaa:	60f8      	str	r0, [r7, #12]
 8003eac:	ed87 0a02 	vstr	s0, [r7, #8]
 8003eb0:	edc7 0a01 	vstr	s1, [r7, #4]
 8003eb4:	ed87 1a00 	vstr	s2, [r7]
	pid_reset(def);
 8003eb8:	68f8      	ldr	r0, [r7, #12]
 8003eba:	f7ff ffe1 	bl	8003e80 <pid_reset>

	def->Kp = Kp;
 8003ebe:	68fb      	ldr	r3, [r7, #12]
 8003ec0:	68ba      	ldr	r2, [r7, #8]
 8003ec2:	609a      	str	r2, [r3, #8]
	def->Ki = Ki;
 8003ec4:	68fb      	ldr	r3, [r7, #12]
 8003ec6:	687a      	ldr	r2, [r7, #4]
 8003ec8:	60da      	str	r2, [r3, #12]
	def->Kd = Kd;
 8003eca:	68fb      	ldr	r3, [r7, #12]
 8003ecc:	683a      	ldr	r2, [r7, #0]
 8003ece:	611a      	str	r2, [r3, #16]
}
 8003ed0:	bf00      	nop
 8003ed2:	3710      	adds	r7, #16
 8003ed4:	46bd      	mov	sp, r7
 8003ed6:	bd80      	pop	{r7, pc}

08003ed8 <pid_adjust>:

float pid_adjust(PidDef *def, float error, float scale) {
 8003ed8:	b480      	push	{r7}
 8003eda:	b087      	sub	sp, #28
 8003edc:	af00      	add	r7, sp, #0
 8003ede:	60f8      	str	r0, [r7, #12]
 8003ee0:	ed87 0a02 	vstr	s0, [r7, #8]
 8003ee4:	edc7 0a01 	vstr	s1, [r7, #4]
	def->errorArea += error;
 8003ee8:	68fb      	ldr	r3, [r7, #12]
 8003eea:	ed93 7a01 	vldr	s14, [r3, #4]
 8003eee:	edd7 7a02 	vldr	s15, [r7, #8]
 8003ef2:	ee77 7a27 	vadd.f32	s15, s14, s15
 8003ef6:	68fb      	ldr	r3, [r7, #12]
 8003ef8:	edc3 7a01 	vstr	s15, [r3, #4]
	float errorRate = (error - def->errorOld);
 8003efc:	68fb      	ldr	r3, [r7, #12]
 8003efe:	edd3 7a00 	vldr	s15, [r3]
 8003f02:	ed97 7a02 	vldr	s14, [r7, #8]
 8003f06:	ee77 7a67 	vsub.f32	s15, s14, s15
 8003f0a:	edc7 7a05 	vstr	s15, [r7, #20]
	def->errorOld = error;
 8003f0e:	68fb      	ldr	r3, [r7, #12]
 8003f10:	68ba      	ldr	r2, [r7, #8]
 8003f12:	601a      	str	r2, [r3, #0]

	return error * def->Kp * scale + def->errorArea * def->Ki * scale + errorRate * def->Kd * scale;
 8003f14:	68fb      	ldr	r3, [r7, #12]
 8003f16:	ed93 7a02 	vldr	s14, [r3, #8]
 8003f1a:	edd7 7a02 	vldr	s15, [r7, #8]
 8003f1e:	ee27 7a27 	vmul.f32	s14, s14, s15
 8003f22:	edd7 7a01 	vldr	s15, [r7, #4]
 8003f26:	ee27 7a27 	vmul.f32	s14, s14, s15
 8003f2a:	68fb      	ldr	r3, [r7, #12]
 8003f2c:	edd3 6a01 	vldr	s13, [r3, #4]
 8003f30:	68fb      	ldr	r3, [r7, #12]
 8003f32:	edd3 7a03 	vldr	s15, [r3, #12]
 8003f36:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8003f3a:	edd7 7a01 	vldr	s15, [r7, #4]
 8003f3e:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8003f42:	ee37 7a27 	vadd.f32	s14, s14, s15
 8003f46:	68fb      	ldr	r3, [r7, #12]
 8003f48:	edd3 6a04 	vldr	s13, [r3, #16]
 8003f4c:	edd7 7a05 	vldr	s15, [r7, #20]
 8003f50:	ee66 6aa7 	vmul.f32	s13, s13, s15
 8003f54:	edd7 7a01 	vldr	s15, [r7, #4]
 8003f58:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8003f5c:	ee77 7a27 	vadd.f32	s15, s14, s15
}
 8003f60:	eeb0 0a67 	vmov.f32	s0, s15
 8003f64:	371c      	adds	r7, #28
 8003f66:	46bd      	mov	sp, r7
 8003f68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f6c:	4770      	bx	lr

08003f6e <lpf>:
static const float a_accel = 0.8;
static const float a_mag = 0.9;
static float magOld[2];
static float headingRaw, headingOld;

static float lpf(float a, float old, float new) {
 8003f6e:	b480      	push	{r7}
 8003f70:	b085      	sub	sp, #20
 8003f72:	af00      	add	r7, sp, #0
 8003f74:	ed87 0a03 	vstr	s0, [r7, #12]
 8003f78:	edc7 0a02 	vstr	s1, [r7, #8]
 8003f7c:	ed87 1a01 	vstr	s2, [r7, #4]
	return a * old + (1 - a) * new;
 8003f80:	ed97 7a03 	vldr	s14, [r7, #12]
 8003f84:	edd7 7a02 	vldr	s15, [r7, #8]
 8003f88:	ee27 7a27 	vmul.f32	s14, s14, s15
 8003f8c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8003f90:	edd7 7a03 	vldr	s15, [r7, #12]
 8003f94:	ee76 6ae7 	vsub.f32	s13, s13, s15
 8003f98:	edd7 7a01 	vldr	s15, [r7, #4]
 8003f9c:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8003fa0:	ee77 7a27 	vadd.f32	s15, s14, s15
}
 8003fa4:	eeb0 0a67 	vmov.f32	s0, s15
 8003fa8:	3714      	adds	r7, #20
 8003faa:	46bd      	mov	sp, r7
 8003fac:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003fb0:	4770      	bx	lr
 8003fb2:	0000      	movs	r0, r0
 8003fb4:	0000      	movs	r0, r0
	...

08003fb8 <read_mag_angle>:
static I2C_HandleTypeDef *hi2c_ptr;
static ADC_HandleTypeDef *hadc_ptr;
static TIM_HandleTypeDef *hic_ptr;
static Sensors *sensors_ptr;

static float read_mag_angle() {
 8003fb8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003fbc:	b085      	sub	sp, #20
 8003fbe:	af00      	add	r7, sp, #0
	//Calculate angle from X and Y
	float mag[2];
	ICM20948_readMagnetometer_XY(hi2c_ptr, mag);
 8003fc0:	4b3d      	ldr	r3, [pc, #244]	; (80040b8 <read_mag_angle+0x100>)
 8003fc2:	681b      	ldr	r3, [r3, #0]
 8003fc4:	1d3a      	adds	r2, r7, #4
 8003fc6:	4611      	mov	r1, r2
 8003fc8:	4618      	mov	r0, r3
 8003fca:	f7fd fad1 	bl	8001570 <ICM20948_readMagnetometer_XY>
	for (uint8_t i = 0; i < 2; i++) {
 8003fce:	2300      	movs	r3, #0
 8003fd0:	73fb      	strb	r3, [r7, #15]
 8003fd2:	e02d      	b.n	8004030 <read_mag_angle+0x78>
		mag[i] = lpf(a_mag, magOld[i], mag[i]);
 8003fd4:	eddf 6a39 	vldr	s13, [pc, #228]	; 80040bc <read_mag_angle+0x104>
 8003fd8:	7bfb      	ldrb	r3, [r7, #15]
 8003fda:	4a39      	ldr	r2, [pc, #228]	; (80040c0 <read_mag_angle+0x108>)
 8003fdc:	009b      	lsls	r3, r3, #2
 8003fde:	4413      	add	r3, r2
 8003fe0:	edd3 7a00 	vldr	s15, [r3]
 8003fe4:	7bfb      	ldrb	r3, [r7, #15]
 8003fe6:	009b      	lsls	r3, r3, #2
 8003fe8:	3310      	adds	r3, #16
 8003fea:	443b      	add	r3, r7
 8003fec:	3b0c      	subs	r3, #12
 8003fee:	ed93 7a00 	vldr	s14, [r3]
 8003ff2:	7bfe      	ldrb	r6, [r7, #15]
 8003ff4:	eeb0 1a47 	vmov.f32	s2, s14
 8003ff8:	eef0 0a67 	vmov.f32	s1, s15
 8003ffc:	eeb0 0a66 	vmov.f32	s0, s13
 8004000:	f7ff ffb5 	bl	8003f6e <lpf>
 8004004:	eef0 7a40 	vmov.f32	s15, s0
 8004008:	00b3      	lsls	r3, r6, #2
 800400a:	3310      	adds	r3, #16
 800400c:	443b      	add	r3, r7
 800400e:	3b0c      	subs	r3, #12
 8004010:	edc3 7a00 	vstr	s15, [r3]
		magOld[i] = mag[i];
 8004014:	7bfa      	ldrb	r2, [r7, #15]
 8004016:	7bfb      	ldrb	r3, [r7, #15]
 8004018:	0092      	lsls	r2, r2, #2
 800401a:	3210      	adds	r2, #16
 800401c:	443a      	add	r2, r7
 800401e:	3a0c      	subs	r2, #12
 8004020:	6812      	ldr	r2, [r2, #0]
 8004022:	4927      	ldr	r1, [pc, #156]	; (80040c0 <read_mag_angle+0x108>)
 8004024:	009b      	lsls	r3, r3, #2
 8004026:	440b      	add	r3, r1
 8004028:	601a      	str	r2, [r3, #0]
	for (uint8_t i = 0; i < 2; i++) {
 800402a:	7bfb      	ldrb	r3, [r7, #15]
 800402c:	3301      	adds	r3, #1
 800402e:	73fb      	strb	r3, [r7, #15]
 8004030:	7bfb      	ldrb	r3, [r7, #15]
 8004032:	2b01      	cmp	r3, #1
 8004034:	d9ce      	bls.n	8003fd4 <read_mag_angle+0x1c>
	}
	magcal_adjust(mag);
 8004036:	1d3b      	adds	r3, r7, #4
 8004038:	4618      	mov	r0, r3
 800403a:	f7fe f943 	bl	80022c4 <magcal_adjust>
	return -atan2(mag[1], mag[0]) * 180 / M_PI;
 800403e:	68bb      	ldr	r3, [r7, #8]
 8004040:	4618      	mov	r0, r3
 8004042:	f7fc fa81 	bl	8000548 <__aeabi_f2d>
 8004046:	4680      	mov	r8, r0
 8004048:	4689      	mov	r9, r1
 800404a:	687b      	ldr	r3, [r7, #4]
 800404c:	4618      	mov	r0, r3
 800404e:	f7fc fa7b 	bl	8000548 <__aeabi_f2d>
 8004052:	4602      	mov	r2, r0
 8004054:	460b      	mov	r3, r1
 8004056:	ec43 2b11 	vmov	d1, r2, r3
 800405a:	ec49 8b10 	vmov	d0, r8, r9
 800405e:	f00a fd8b 	bl	800eb78 <atan2>
 8004062:	ec53 2b10 	vmov	r2, r3, d0
 8004066:	4614      	mov	r4, r2
 8004068:	f083 4500 	eor.w	r5, r3, #2147483648	; 0x80000000
 800406c:	f04f 0200 	mov.w	r2, #0
 8004070:	4b14      	ldr	r3, [pc, #80]	; (80040c4 <read_mag_angle+0x10c>)
 8004072:	4620      	mov	r0, r4
 8004074:	4629      	mov	r1, r5
 8004076:	f7fc fabf 	bl	80005f8 <__aeabi_dmul>
 800407a:	4602      	mov	r2, r0
 800407c:	460b      	mov	r3, r1
 800407e:	4610      	mov	r0, r2
 8004080:	4619      	mov	r1, r3
 8004082:	a30b      	add	r3, pc, #44	; (adr r3, 80040b0 <read_mag_angle+0xf8>)
 8004084:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004088:	f7fc fbe0 	bl	800084c <__aeabi_ddiv>
 800408c:	4602      	mov	r2, r0
 800408e:	460b      	mov	r3, r1
 8004090:	4610      	mov	r0, r2
 8004092:	4619      	mov	r1, r3
 8004094:	f7fc fda8 	bl	8000be8 <__aeabi_d2f>
 8004098:	4603      	mov	r3, r0
 800409a:	ee07 3a90 	vmov	s15, r3
}
 800409e:	eeb0 0a67 	vmov.f32	s0, s15
 80040a2:	3714      	adds	r7, #20
 80040a4:	46bd      	mov	sp, r7
 80040a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80040aa:	bf00      	nop
 80040ac:	f3af 8000 	nop.w
 80040b0:	54442d18 	.word	0x54442d18
 80040b4:	400921fb 	.word	0x400921fb
 80040b8:	200009c8 	.word	0x200009c8
 80040bc:	3f666666 	.word	0x3f666666
 80040c0:	200009c0 	.word	0x200009c0
 80040c4:	40668000 	.word	0x40668000

080040c8 <sensors_init>:

void sensors_init(I2C_HandleTypeDef *i2c_ptr, ADC_HandleTypeDef *adc_ptr, TIM_HandleTypeDef *ic_ptr, Sensors *sens_ptr) {
 80040c8:	b580      	push	{r7, lr}
 80040ca:	b086      	sub	sp, #24
 80040cc:	af00      	add	r7, sp, #0
 80040ce:	60f8      	str	r0, [r7, #12]
 80040d0:	60b9      	str	r1, [r7, #8]
 80040d2:	607a      	str	r2, [r7, #4]
 80040d4:	603b      	str	r3, [r7, #0]
	hi2c_ptr = i2c_ptr;
 80040d6:	4a1e      	ldr	r2, [pc, #120]	; (8004150 <sensors_init+0x88>)
 80040d8:	68fb      	ldr	r3, [r7, #12]
 80040da:	6013      	str	r3, [r2, #0]
	hadc_ptr = adc_ptr;
 80040dc:	4a1d      	ldr	r2, [pc, #116]	; (8004154 <sensors_init+0x8c>)
 80040de:	68bb      	ldr	r3, [r7, #8]
 80040e0:	6013      	str	r3, [r2, #0]
	hic_ptr = ic_ptr;
 80040e2:	4a1d      	ldr	r2, [pc, #116]	; (8004158 <sensors_init+0x90>)
 80040e4:	687b      	ldr	r3, [r7, #4]
 80040e6:	6013      	str	r3, [r2, #0]
	sensors_ptr = sens_ptr;
 80040e8:	4a1c      	ldr	r2, [pc, #112]	; (800415c <sensors_init+0x94>)
 80040ea:	683b      	ldr	r3, [r7, #0]
 80040ec:	6013      	str	r3, [r2, #0]

	ICM20948_init(hi2c_ptr, ICM_I2C_ADDR, GYRO_SENS, ACCEL_SENS);
 80040ee:	4b18      	ldr	r3, [pc, #96]	; (8004150 <sensors_init+0x88>)
 80040f0:	6818      	ldr	r0, [r3, #0]
 80040f2:	2200      	movs	r2, #0
 80040f4:	2300      	movs	r3, #0
 80040f6:	2100      	movs	r1, #0
 80040f8:	f7fd f85a 	bl	80011b0 <ICM20948_init>
	ICM20948_readMagnetometer_XY(hi2c_ptr, magOld); //pre-load magOld values.
 80040fc:	4b14      	ldr	r3, [pc, #80]	; (8004150 <sensors_init+0x88>)
 80040fe:	681b      	ldr	r3, [r3, #0]
 8004100:	4917      	ldr	r1, [pc, #92]	; (8004160 <sensors_init+0x98>)
 8004102:	4618      	mov	r0, r3
 8004104:	f7fd fa34 	bl	8001570 <ICM20948_readMagnetometer_XY>

	HAL_TIM_IC_Start_IT(ic_ptr, US_IC_CHANNEL);
 8004108:	2100      	movs	r1, #0
 800410a:	6878      	ldr	r0, [r7, #4]
 800410c:	f003 fdb0 	bl	8007c70 <HAL_TIM_IC_Start_IT>

	sens_ptr->gyroZ_bias = 0;
 8004110:	683b      	ldr	r3, [r7, #0]
 8004112:	f04f 0200 	mov.w	r2, #0
 8004116:	61da      	str	r2, [r3, #28]
	sens_ptr->accel_bias[0] = sens_ptr->accel_bias[1] = sens_ptr->accel_bias[2] = 0;
 8004118:	683b      	ldr	r3, [r7, #0]
 800411a:	f04f 0200 	mov.w	r2, #0
 800411e:	629a      	str	r2, [r3, #40]	; 0x28
 8004120:	683b      	ldr	r3, [r7, #0]
 8004122:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8004124:	683b      	ldr	r3, [r7, #0]
 8004126:	625a      	str	r2, [r3, #36]	; 0x24
 8004128:	683b      	ldr	r3, [r7, #0]
 800412a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800412c:	683b      	ldr	r3, [r7, #0]
 800412e:	621a      	str	r2, [r3, #32]

	float mag_angle = read_mag_angle();
 8004130:	f7ff ff42 	bl	8003fb8 <read_mag_angle>
 8004134:	ed87 0a05 	vstr	s0, [r7, #20]
	sens_ptr->heading_bias = mag_angle;
 8004138:	683b      	ldr	r3, [r7, #0]
 800413a:	697a      	ldr	r2, [r7, #20]
 800413c:	62da      	str	r2, [r3, #44]	; 0x2c
	angle_init(mag_angle);
 800413e:	ed97 0a05 	vldr	s0, [r7, #20]
 8004142:	f7fd fa65 	bl	8001610 <angle_init>
}
 8004146:	bf00      	nop
 8004148:	3718      	adds	r7, #24
 800414a:	46bd      	mov	sp, r7
 800414c:	bd80      	pop	{r7, pc}
 800414e:	bf00      	nop
 8004150:	200009c8 	.word	0x200009c8
 8004154:	200009cc 	.word	0x200009cc
 8004158:	200009d0 	.word	0x200009d0
 800415c:	200009d4 	.word	0x200009d4
 8004160:	200009c0 	.word	0x200009c0

08004164 <sensors_us_trig>:

void sensors_us_trig() {
 8004164:	b580      	push	{r7, lr}
 8004166:	af00      	add	r7, sp, #0
	US_TRIG_CLR();
 8004168:	2200      	movs	r2, #0
 800416a:	2180      	movs	r1, #128	; 0x80
 800416c:	480a      	ldr	r0, [pc, #40]	; (8004198 <sensors_us_trig+0x34>)
 800416e:	f001 fe1d 	bl	8005dac <HAL_GPIO_WritePin>
	delay_us_wait(5);
 8004172:	2005      	movs	r0, #5
 8004174:	f7fd ff24 	bl	8001fc0 <delay_us_wait>

	//1. 10us pulse
	US_TRIG_SET();
 8004178:	2201      	movs	r2, #1
 800417a:	2180      	movs	r1, #128	; 0x80
 800417c:	4806      	ldr	r0, [pc, #24]	; (8004198 <sensors_us_trig+0x34>)
 800417e:	f001 fe15 	bl	8005dac <HAL_GPIO_WritePin>
	delay_us_wait(10);
 8004182:	200a      	movs	r0, #10
 8004184:	f7fd ff1c 	bl	8001fc0 <delay_us_wait>
	US_TRIG_CLR();
 8004188:	2200      	movs	r2, #0
 800418a:	2180      	movs	r1, #128	; 0x80
 800418c:	4802      	ldr	r0, [pc, #8]	; (8004198 <sensors_us_trig+0x34>)
 800418e:	f001 fe0d 	bl	8005dac <HAL_GPIO_WritePin>
}
 8004192:	bf00      	nop
 8004194:	bd80      	pop	{r7, pc}
 8004196:	bf00      	nop
 8004198:	40020c00 	.word	0x40020c00

0800419c <sensors_read_usDist>:

void sensors_read_usDist(float pulse_s) {
 800419c:	b590      	push	{r4, r7, lr}
 800419e:	b083      	sub	sp, #12
 80041a0:	af00      	add	r7, sp, #0
 80041a2:	ed87 0a01 	vstr	s0, [r7, #4]
	sensors_ptr->usDist = lpf(a_usDist, sensors_ptr->usDist, pulse_s * 34300 / 2);
 80041a6:	eddf 5a11 	vldr	s11, [pc, #68]	; 80041ec <sensors_read_usDist+0x50>
 80041aa:	4b11      	ldr	r3, [pc, #68]	; (80041f0 <sensors_read_usDist+0x54>)
 80041ac:	681b      	ldr	r3, [r3, #0]
 80041ae:	ed93 7a01 	vldr	s14, [r3, #4]
 80041b2:	edd7 7a01 	vldr	s15, [r7, #4]
 80041b6:	eddf 6a0f 	vldr	s13, [pc, #60]	; 80041f4 <sensors_read_usDist+0x58>
 80041ba:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80041be:	eeb0 6a00 	vmov.f32	s12, #0	; 0x40000000  2.0
 80041c2:	eec7 6a86 	vdiv.f32	s13, s15, s12
 80041c6:	4b0a      	ldr	r3, [pc, #40]	; (80041f0 <sensors_read_usDist+0x54>)
 80041c8:	681c      	ldr	r4, [r3, #0]
 80041ca:	eeb0 1a66 	vmov.f32	s2, s13
 80041ce:	eef0 0a47 	vmov.f32	s1, s14
 80041d2:	eeb0 0a65 	vmov.f32	s0, s11
 80041d6:	f7ff feca 	bl	8003f6e <lpf>
 80041da:	eef0 7a40 	vmov.f32	s15, s0
 80041de:	edc4 7a01 	vstr	s15, [r4, #4]
}
 80041e2:	bf00      	nop
 80041e4:	370c      	adds	r7, #12
 80041e6:	46bd      	mov	sp, r7
 80041e8:	bd90      	pop	{r4, r7, pc}
 80041ea:	bf00      	nop
 80041ec:	3f0ccccd 	.word	0x3f0ccccd
 80041f0:	200009d4 	.word	0x200009d4
 80041f4:	4705fc00 	.word	0x4705fc00

080041f8 <sensors_read_irDist>:

void sensors_read_irDist() {
 80041f8:	b590      	push	{r4, r7, lr}
 80041fa:	b083      	sub	sp, #12
 80041fc:	af00      	add	r7, sp, #0
	HAL_ADC_Start(hadc_ptr);
 80041fe:	4b2c      	ldr	r3, [pc, #176]	; (80042b0 <sensors_read_irDist+0xb8>)
 8004200:	681b      	ldr	r3, [r3, #0]
 8004202:	4618      	mov	r0, r3
 8004204:	f000 ff0a 	bl	800501c <HAL_ADC_Start>
	HAL_ADC_PollForConversion(hadc_ptr, HAL_MAX_DELAY);
 8004208:	4b29      	ldr	r3, [pc, #164]	; (80042b0 <sensors_read_irDist+0xb8>)
 800420a:	681b      	ldr	r3, [r3, #0]
 800420c:	f04f 31ff 	mov.w	r1, #4294967295
 8004210:	4618      	mov	r0, r3
 8004212:	f000 ffd5 	bl	80051c0 <HAL_ADC_PollForConversion>

	uint16_t value = (uint16_t) HAL_ADC_GetValue(hadc_ptr);
 8004216:	4b26      	ldr	r3, [pc, #152]	; (80042b0 <sensors_read_irDist+0xb8>)
 8004218:	681b      	ldr	r3, [r3, #0]
 800421a:	4618      	mov	r0, r3
 800421c:	f001 f85b 	bl	80052d6 <HAL_ADC_GetValue>
 8004220:	4603      	mov	r3, r0
 8004222:	80fb      	strh	r3, [r7, #6]
	float dist = 6.3028 / pow(((float) value) / 4095, 1.226);
 8004224:	88fb      	ldrh	r3, [r7, #6]
 8004226:	ee07 3a90 	vmov	s15, r3
 800422a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800422e:	ed9f 7a21 	vldr	s14, [pc, #132]	; 80042b4 <sensors_read_irDist+0xbc>
 8004232:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8004236:	ee16 0a90 	vmov	r0, s13
 800423a:	f7fc f985 	bl	8000548 <__aeabi_f2d>
 800423e:	4602      	mov	r2, r0
 8004240:	460b      	mov	r3, r1
 8004242:	ed9f 1b17 	vldr	d1, [pc, #92]	; 80042a0 <sensors_read_irDist+0xa8>
 8004246:	ec43 2b10 	vmov	d0, r2, r3
 800424a:	f00a fc97 	bl	800eb7c <pow>
 800424e:	ec53 2b10 	vmov	r2, r3, d0
 8004252:	a115      	add	r1, pc, #84	; (adr r1, 80042a8 <sensors_read_irDist+0xb0>)
 8004254:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004258:	f7fc faf8 	bl	800084c <__aeabi_ddiv>
 800425c:	4602      	mov	r2, r0
 800425e:	460b      	mov	r3, r1
 8004260:	4610      	mov	r0, r2
 8004262:	4619      	mov	r1, r3
 8004264:	f7fc fcc0 	bl	8000be8 <__aeabi_d2f>
 8004268:	4603      	mov	r3, r0
 800426a:	603b      	str	r3, [r7, #0]
	sensors_ptr->irDist = lpf(a_irDist, sensors_ptr->irDist, dist);
 800426c:	ed9f 7a12 	vldr	s14, [pc, #72]	; 80042b8 <sensors_read_irDist+0xc0>
 8004270:	4b12      	ldr	r3, [pc, #72]	; (80042bc <sensors_read_irDist+0xc4>)
 8004272:	681b      	ldr	r3, [r3, #0]
 8004274:	edd3 7a00 	vldr	s15, [r3]
 8004278:	4b10      	ldr	r3, [pc, #64]	; (80042bc <sensors_read_irDist+0xc4>)
 800427a:	681c      	ldr	r4, [r3, #0]
 800427c:	ed97 1a00 	vldr	s2, [r7]
 8004280:	eef0 0a67 	vmov.f32	s1, s15
 8004284:	eeb0 0a47 	vmov.f32	s0, s14
 8004288:	f7ff fe71 	bl	8003f6e <lpf>
 800428c:	eef0 7a40 	vmov.f32	s15, s0
 8004290:	edc4 7a00 	vstr	s15, [r4]
}
 8004294:	bf00      	nop
 8004296:	370c      	adds	r7, #12
 8004298:	46bd      	mov	sp, r7
 800429a:	bd90      	pop	{r4, r7, pc}
 800429c:	f3af 8000 	nop.w
 80042a0:	2d0e5604 	.word	0x2d0e5604
 80042a4:	3ff39db2 	.word	0x3ff39db2
 80042a8:	3404ea4b 	.word	0x3404ea4b
 80042ac:	40193611 	.word	0x40193611
 80042b0:	200009cc 	.word	0x200009cc
 80042b4:	457ff000 	.word	0x457ff000
 80042b8:	3f4ccccd 	.word	0x3f4ccccd
 80042bc:	200009d4 	.word	0x200009d4

080042c0 <sensors_read_gyroZ>:

void sensors_read_gyroZ() {
 80042c0:	b580      	push	{r7, lr}
 80042c2:	b082      	sub	sp, #8
 80042c4:	af00      	add	r7, sp, #0
	float val;
	ICM20948_readGyroscope_Z(hi2c_ptr, ICM_I2C_ADDR, GYRO_SENS, &val);
 80042c6:	4b0d      	ldr	r3, [pc, #52]	; (80042fc <sensors_read_gyroZ+0x3c>)
 80042c8:	6818      	ldr	r0, [r3, #0]
 80042ca:	2200      	movs	r2, #0
 80042cc:	1d3b      	adds	r3, r7, #4
 80042ce:	2100      	movs	r1, #0
 80042d0:	f7fc fff2 	bl	80012b8 <ICM20948_readGyroscope_Z>
	sensors_ptr->gyroZ = (val - sensors_ptr->gyroZ_bias) / 1000; //convert to ms
 80042d4:	ed97 7a01 	vldr	s14, [r7, #4]
 80042d8:	4b09      	ldr	r3, [pc, #36]	; (8004300 <sensors_read_gyroZ+0x40>)
 80042da:	681b      	ldr	r3, [r3, #0]
 80042dc:	edd3 7a07 	vldr	s15, [r3, #28]
 80042e0:	ee37 7a67 	vsub.f32	s14, s14, s15
 80042e4:	4b06      	ldr	r3, [pc, #24]	; (8004300 <sensors_read_gyroZ+0x40>)
 80042e6:	681b      	ldr	r3, [r3, #0]
 80042e8:	eddf 6a06 	vldr	s13, [pc, #24]	; 8004304 <sensors_read_gyroZ+0x44>
 80042ec:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80042f0:	edc3 7a02 	vstr	s15, [r3, #8]
}
 80042f4:	bf00      	nop
 80042f6:	3708      	adds	r7, #8
 80042f8:	46bd      	mov	sp, r7
 80042fa:	bd80      	pop	{r7, pc}
 80042fc:	200009c8 	.word	0x200009c8
 8004300:	200009d4 	.word	0x200009d4
 8004304:	447a0000 	.word	0x447a0000

08004308 <sensors_read_accel>:


void sensors_read_accel() {
 8004308:	b580      	push	{r7, lr}
 800430a:	b084      	sub	sp, #16
 800430c:	af00      	add	r7, sp, #0
	float accel_new[3];
	ICM20948_readAccelerometer_all(hi2c_ptr, ICM_I2C_ADDR, ACCEL_SENS, accel_new);
 800430e:	4b19      	ldr	r3, [pc, #100]	; (8004374 <sensors_read_accel+0x6c>)
 8004310:	6818      	ldr	r0, [r3, #0]
 8004312:	2200      	movs	r2, #0
 8004314:	463b      	mov	r3, r7
 8004316:	2100      	movs	r1, #0
 8004318:	f7fd f84e 	bl	80013b8 <ICM20948_readAccelerometer_all>
	for (int i = 0; i < 3; i++) {
 800431c:	2300      	movs	r3, #0
 800431e:	60fb      	str	r3, [r7, #12]
 8004320:	e020      	b.n	8004364 <sensors_read_accel+0x5c>
		sensors_ptr->accel[i] = (accel_new[i] - sensors_ptr->accel_bias[i]) * GRAVITY;
 8004322:	68fb      	ldr	r3, [r7, #12]
 8004324:	009b      	lsls	r3, r3, #2
 8004326:	3310      	adds	r3, #16
 8004328:	443b      	add	r3, r7
 800432a:	3b10      	subs	r3, #16
 800432c:	ed93 7a00 	vldr	s14, [r3]
 8004330:	4b11      	ldr	r3, [pc, #68]	; (8004378 <sensors_read_accel+0x70>)
 8004332:	681a      	ldr	r2, [r3, #0]
 8004334:	68fb      	ldr	r3, [r7, #12]
 8004336:	3308      	adds	r3, #8
 8004338:	009b      	lsls	r3, r3, #2
 800433a:	4413      	add	r3, r2
 800433c:	edd3 7a00 	vldr	s15, [r3]
 8004340:	ee77 7a67 	vsub.f32	s15, s14, s15
 8004344:	4b0c      	ldr	r3, [pc, #48]	; (8004378 <sensors_read_accel+0x70>)
 8004346:	681a      	ldr	r2, [r3, #0]
 8004348:	ed9f 7a0c 	vldr	s14, [pc, #48]	; 800437c <sensors_read_accel+0x74>
 800434c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8004350:	68fb      	ldr	r3, [r7, #12]
 8004352:	3302      	adds	r3, #2
 8004354:	009b      	lsls	r3, r3, #2
 8004356:	4413      	add	r3, r2
 8004358:	3304      	adds	r3, #4
 800435a:	edc3 7a00 	vstr	s15, [r3]
	for (int i = 0; i < 3; i++) {
 800435e:	68fb      	ldr	r3, [r7, #12]
 8004360:	3301      	adds	r3, #1
 8004362:	60fb      	str	r3, [r7, #12]
 8004364:	68fb      	ldr	r3, [r7, #12]
 8004366:	2b02      	cmp	r3, #2
 8004368:	dddb      	ble.n	8004322 <sensors_read_accel+0x1a>
	}
}
 800436a:	bf00      	nop
 800436c:	bf00      	nop
 800436e:	3710      	adds	r7, #16
 8004370:	46bd      	mov	sp, r7
 8004372:	bd80      	pop	{r7, pc}
 8004374:	200009c8 	.word	0x200009c8
 8004378:	200009d4 	.word	0x200009d4
 800437c:	3a8089a8 	.word	0x3a8089a8

08004380 <sensors_read_heading>:

void sensors_read_heading(float msElapsed, float gyroZ) {
 8004380:	b590      	push	{r4, r7, lr}
 8004382:	b083      	sub	sp, #12
 8004384:	af00      	add	r7, sp, #0
 8004386:	ed87 0a01 	vstr	s0, [r7, #4]
 800438a:	edc7 0a00 	vstr	s1, [r7]
	sensors_ptr->heading = angle_diff_180(
 800438e:	f7ff fe13 	bl	8003fb8 <read_mag_angle>
 8004392:	eef0 7a40 	vmov.f32	s15, s0
 8004396:	eeb0 1a67 	vmov.f32	s2, s15
 800439a:	edd7 0a00 	vldr	s1, [r7]
 800439e:	ed97 0a01 	vldr	s0, [r7, #4]
 80043a2:	f7fd f957 	bl	8001654 <angle_get>
 80043a6:	eeb0 7a40 	vmov.f32	s14, s0
		angle_get(msElapsed, gyroZ, read_mag_angle()),
		sensors_ptr->heading_bias
 80043aa:	4b0a      	ldr	r3, [pc, #40]	; (80043d4 <sensors_read_heading+0x54>)
 80043ac:	681b      	ldr	r3, [r3, #0]
	sensors_ptr->heading = angle_diff_180(
 80043ae:	edd3 7a0b 	vldr	s15, [r3, #44]	; 0x2c
 80043b2:	4b08      	ldr	r3, [pc, #32]	; (80043d4 <sensors_read_heading+0x54>)
 80043b4:	681c      	ldr	r4, [r3, #0]
 80043b6:	eef0 0a67 	vmov.f32	s1, s15
 80043ba:	eeb0 0a47 	vmov.f32	s0, s14
 80043be:	f7fd fd63 	bl	8001e88 <angle_diff_180>
 80043c2:	eef0 7a40 	vmov.f32	s15, s0
 80043c6:	edc4 7a06 	vstr	s15, [r4, #24]
	);
}
 80043ca:	bf00      	nop
 80043cc:	370c      	adds	r7, #12
 80043ce:	46bd      	mov	sp, r7
 80043d0:	bd90      	pop	{r4, r7, pc}
 80043d2:	bf00      	nop
 80043d4:	200009d4 	.word	0x200009d4

080043d8 <sensors_set_bias>:

void sensors_set_bias(uint16_t count) {
 80043d8:	b580      	push	{r7, lr}
 80043da:	b08e      	sub	sp, #56	; 0x38
 80043dc:	af00      	add	r7, sp, #0
 80043de:	4603      	mov	r3, r0
 80043e0:	80fb      	strh	r3, [r7, #6]
	uint16_t i;
	uint8_t j;
	float gyroZTotal = 0, gyroZ = 0,
 80043e2:	f04f 0300 	mov.w	r3, #0
 80043e6:	633b      	str	r3, [r7, #48]	; 0x30
 80043e8:	f04f 0300 	mov.w	r3, #0
 80043ec:	627b      	str	r3, [r7, #36]	; 0x24
		accelTotal[3] = {0}, accel[3],
 80043ee:	f107 0318 	add.w	r3, r7, #24
 80043f2:	2200      	movs	r2, #0
 80043f4:	601a      	str	r2, [r3, #0]
 80043f6:	605a      	str	r2, [r3, #4]
 80043f8:	609a      	str	r2, [r3, #8]
		headingTotal = 0;
 80043fa:	f04f 0300 	mov.w	r3, #0
 80043fe:	62fb      	str	r3, [r7, #44]	; 0x2c

	for (i = 0; i < count; i++) {
 8004400:	2300      	movs	r3, #0
 8004402:	86fb      	strh	r3, [r7, #54]	; 0x36
 8004404:	e04b      	b.n	800449e <sensors_set_bias+0xc6>
		ICM20948_readGyroscope_Z(hi2c_ptr, ICM_I2C_ADDR, GYRO_SENS, &gyroZ); //gyroscope bias
 8004406:	4b4f      	ldr	r3, [pc, #316]	; (8004544 <sensors_set_bias+0x16c>)
 8004408:	6818      	ldr	r0, [r3, #0]
 800440a:	2200      	movs	r2, #0
 800440c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004410:	2100      	movs	r1, #0
 8004412:	f7fc ff51 	bl	80012b8 <ICM20948_readGyroscope_Z>
		gyroZTotal += gyroZ;
 8004416:	edd7 7a09 	vldr	s15, [r7, #36]	; 0x24
 800441a:	ed97 7a0c 	vldr	s14, [r7, #48]	; 0x30
 800441e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8004422:	edc7 7a0c 	vstr	s15, [r7, #48]	; 0x30

		ICM20948_readAccelerometer_all(hi2c_ptr, ICM_I2C_ADDR, ACCEL_SENS, accel); //accelerometer bias
 8004426:	4b47      	ldr	r3, [pc, #284]	; (8004544 <sensors_set_bias+0x16c>)
 8004428:	6818      	ldr	r0, [r3, #0]
 800442a:	2200      	movs	r2, #0
 800442c:	f107 030c 	add.w	r3, r7, #12
 8004430:	2100      	movs	r1, #0
 8004432:	f7fc ffc1 	bl	80013b8 <ICM20948_readAccelerometer_all>
		for (j = 0; j < 3; j++) accelTotal[j] += accel[j];
 8004436:	2300      	movs	r3, #0
 8004438:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35
 800443c:	e01e      	b.n	800447c <sensors_set_bias+0xa4>
 800443e:	f897 3035 	ldrb.w	r3, [r7, #53]	; 0x35
 8004442:	009b      	lsls	r3, r3, #2
 8004444:	3338      	adds	r3, #56	; 0x38
 8004446:	443b      	add	r3, r7
 8004448:	3b20      	subs	r3, #32
 800444a:	ed93 7a00 	vldr	s14, [r3]
 800444e:	f897 3035 	ldrb.w	r3, [r7, #53]	; 0x35
 8004452:	009b      	lsls	r3, r3, #2
 8004454:	3338      	adds	r3, #56	; 0x38
 8004456:	443b      	add	r3, r7
 8004458:	3b2c      	subs	r3, #44	; 0x2c
 800445a:	edd3 7a00 	vldr	s15, [r3]
 800445e:	f897 3035 	ldrb.w	r3, [r7, #53]	; 0x35
 8004462:	ee77 7a27 	vadd.f32	s15, s14, s15
 8004466:	009b      	lsls	r3, r3, #2
 8004468:	3338      	adds	r3, #56	; 0x38
 800446a:	443b      	add	r3, r7
 800446c:	3b20      	subs	r3, #32
 800446e:	edc3 7a00 	vstr	s15, [r3]
 8004472:	f897 3035 	ldrb.w	r3, [r7, #53]	; 0x35
 8004476:	3301      	adds	r3, #1
 8004478:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35
 800447c:	f897 3035 	ldrb.w	r3, [r7, #53]	; 0x35
 8004480:	2b02      	cmp	r3, #2
 8004482:	d9dc      	bls.n	800443e <sensors_set_bias+0x66>

		headingTotal += read_mag_angle(); //heading bias
 8004484:	f7ff fd98 	bl	8003fb8 <read_mag_angle>
 8004488:	eeb0 7a40 	vmov.f32	s14, s0
 800448c:	edd7 7a0b 	vldr	s15, [r7, #44]	; 0x2c
 8004490:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004494:	edc7 7a0b 	vstr	s15, [r7, #44]	; 0x2c
	for (i = 0; i < count; i++) {
 8004498:	8efb      	ldrh	r3, [r7, #54]	; 0x36
 800449a:	3301      	adds	r3, #1
 800449c:	86fb      	strh	r3, [r7, #54]	; 0x36
 800449e:	8efa      	ldrh	r2, [r7, #54]	; 0x36
 80044a0:	88fb      	ldrh	r3, [r7, #6]
 80044a2:	429a      	cmp	r2, r3
 80044a4:	d3af      	bcc.n	8004406 <sensors_set_bias+0x2e>
	}

	sensors_ptr->gyroZ_bias = gyroZTotal / count;
 80044a6:	88fb      	ldrh	r3, [r7, #6]
 80044a8:	ee07 3a90 	vmov	s15, r3
 80044ac:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80044b0:	4b25      	ldr	r3, [pc, #148]	; (8004548 <sensors_set_bias+0x170>)
 80044b2:	681b      	ldr	r3, [r3, #0]
 80044b4:	edd7 6a0c 	vldr	s13, [r7, #48]	; 0x30
 80044b8:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80044bc:	edc3 7a07 	vstr	s15, [r3, #28]

	for (i = 0; i < 3; i++) sensors_ptr->accel_bias[i] = accelTotal[i] / count;
 80044c0:	2300      	movs	r3, #0
 80044c2:	86fb      	strh	r3, [r7, #54]	; 0x36
 80044c4:	e018      	b.n	80044f8 <sensors_set_bias+0x120>
 80044c6:	8efb      	ldrh	r3, [r7, #54]	; 0x36
 80044c8:	009b      	lsls	r3, r3, #2
 80044ca:	3338      	adds	r3, #56	; 0x38
 80044cc:	443b      	add	r3, r7
 80044ce:	3b20      	subs	r3, #32
 80044d0:	edd3 6a00 	vldr	s13, [r3]
 80044d4:	88fb      	ldrh	r3, [r7, #6]
 80044d6:	ee07 3a90 	vmov	s15, r3
 80044da:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80044de:	4b1a      	ldr	r3, [pc, #104]	; (8004548 <sensors_set_bias+0x170>)
 80044e0:	681a      	ldr	r2, [r3, #0]
 80044e2:	8efb      	ldrh	r3, [r7, #54]	; 0x36
 80044e4:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80044e8:	3308      	adds	r3, #8
 80044ea:	009b      	lsls	r3, r3, #2
 80044ec:	4413      	add	r3, r2
 80044ee:	edc3 7a00 	vstr	s15, [r3]
 80044f2:	8efb      	ldrh	r3, [r7, #54]	; 0x36
 80044f4:	3301      	adds	r3, #1
 80044f6:	86fb      	strh	r3, [r7, #54]	; 0x36
 80044f8:	8efb      	ldrh	r3, [r7, #54]	; 0x36
 80044fa:	2b02      	cmp	r3, #2
 80044fc:	d9e3      	bls.n	80044c6 <sensors_set_bias+0xee>
	sensors_ptr->accel_bias[2] -= GRAVITY; //normally z accelerometer should read gravity.
 80044fe:	4b12      	ldr	r3, [pc, #72]	; (8004548 <sensors_set_bias+0x170>)
 8004500:	681b      	ldr	r3, [r3, #0]
 8004502:	edd3 7a0a 	vldr	s15, [r3, #40]	; 0x28
 8004506:	4b10      	ldr	r3, [pc, #64]	; (8004548 <sensors_set_bias+0x170>)
 8004508:	681b      	ldr	r3, [r3, #0]
 800450a:	ed9f 7a10 	vldr	s14, [pc, #64]	; 800454c <sensors_set_bias+0x174>
 800450e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8004512:	edc3 7a0a 	vstr	s15, [r3, #40]	; 0x28

	float heading_bias = headingTotal / count;
 8004516:	88fb      	ldrh	r3, [r7, #6]
 8004518:	ee07 3a90 	vmov	s15, r3
 800451c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8004520:	edd7 6a0b 	vldr	s13, [r7, #44]	; 0x2c
 8004524:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8004528:	edc7 7a0a 	vstr	s15, [r7, #40]	; 0x28
	sensors_ptr->heading_bias = heading_bias;
 800452c:	4b06      	ldr	r3, [pc, #24]	; (8004548 <sensors_set_bias+0x170>)
 800452e:	681b      	ldr	r3, [r3, #0]
 8004530:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8004532:	62da      	str	r2, [r3, #44]	; 0x2c
	angle_reset(heading_bias);
 8004534:	ed97 0a0a 	vldr	s0, [r7, #40]	; 0x28
 8004538:	f7fd f878 	bl	800162c <angle_reset>
}
 800453c:	bf00      	nop
 800453e:	3738      	adds	r7, #56	; 0x38
 8004540:	46bd      	mov	sp, r7
 8004542:	bd80      	pop	{r7, pc}
 8004544:	200009c8 	.word	0x200009c8
 8004548:	200009d4 	.word	0x200009d4
 800454c:	3a8089a8 	.word	0x3a8089a8

08004550 <servo_init>:
#include "servo.h"

static TIM_HandleTypeDef *pwm_tim;

void servo_init(TIM_HandleTypeDef *pwm) {
 8004550:	b580      	push	{r7, lr}
 8004552:	b082      	sub	sp, #8
 8004554:	af00      	add	r7, sp, #0
 8004556:	6078      	str	r0, [r7, #4]
	pwm_tim = pwm;
 8004558:	4a05      	ldr	r2, [pc, #20]	; (8004570 <servo_init+0x20>)
 800455a:	687b      	ldr	r3, [r7, #4]
 800455c:	6013      	str	r3, [r2, #0]
	HAL_TIM_PWM_Start(pwm, SERVO_PWM_CHANNEL);
 800455e:	2100      	movs	r1, #0
 8004560:	6878      	ldr	r0, [r7, #4]
 8004562:	f003 fa63 	bl	8007a2c <HAL_TIM_PWM_Start>
}
 8004566:	bf00      	nop
 8004568:	3708      	adds	r7, #8
 800456a:	46bd      	mov	sp, r7
 800456c:	bd80      	pop	{r7, pc}
 800456e:	bf00      	nop
 8004570:	200009d8 	.word	0x200009d8

08004574 <setServoVal>:

static void setServoVal(uint32_t val) {
 8004574:	b480      	push	{r7}
 8004576:	b083      	sub	sp, #12
 8004578:	af00      	add	r7, sp, #0
 800457a:	6078      	str	r0, [r7, #4]
	pwm_tim->Instance->CCR1 = val;
 800457c:	4b05      	ldr	r3, [pc, #20]	; (8004594 <setServoVal+0x20>)
 800457e:	681b      	ldr	r3, [r3, #0]
 8004580:	681b      	ldr	r3, [r3, #0]
 8004582:	687a      	ldr	r2, [r7, #4]
 8004584:	635a      	str	r2, [r3, #52]	; 0x34
}
 8004586:	bf00      	nop
 8004588:	370c      	adds	r7, #12
 800458a:	46bd      	mov	sp, r7
 800458c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004590:	4770      	bx	lr
 8004592:	bf00      	nop
 8004594:	200009d8 	.word	0x200009d8

08004598 <servo_setAngle>:

void servo_setAngle(float angle) {
 8004598:	b580      	push	{r7, lr}
 800459a:	b084      	sub	sp, #16
 800459c:	af00      	add	r7, sp, #0
 800459e:	ed87 0a01 	vstr	s0, [r7, #4]
	//clamp angle to within width.
	if (angle < -SERVO_WIDTH) angle = -SERVO_WIDTH;
 80045a2:	edd7 7a01 	vldr	s15, [r7, #4]
 80045a6:	eebb 7a09 	vmov.f32	s14, #185	; 0xc1c80000 -25.0
 80045aa:	eef4 7ac7 	vcmpe.f32	s15, s14
 80045ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80045b2:	d502      	bpl.n	80045ba <servo_setAngle+0x22>
 80045b4:	4b21      	ldr	r3, [pc, #132]	; (800463c <servo_setAngle+0xa4>)
 80045b6:	607b      	str	r3, [r7, #4]
 80045b8:	e00a      	b.n	80045d0 <servo_setAngle+0x38>
	else if (angle > SERVO_WIDTH) angle = SERVO_WIDTH;
 80045ba:	edd7 7a01 	vldr	s15, [r7, #4]
 80045be:	eeb3 7a09 	vmov.f32	s14, #57	; 0x41c80000  25.0
 80045c2:	eef4 7ac7 	vcmpe.f32	s15, s14
 80045c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80045ca:	dd01      	ble.n	80045d0 <servo_setAngle+0x38>
 80045cc:	4b1c      	ldr	r3, [pc, #112]	; (8004640 <servo_setAngle+0xa8>)
 80045ce:	607b      	str	r3, [r7, #4]

	uint32_t val;
	if (angle < 0) {
 80045d0:	edd7 7a01 	vldr	s15, [r7, #4]
 80045d4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80045d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80045dc:	d513      	bpl.n	8004606 <servo_setAngle+0x6e>
		val = SERVO_PULSE_0 + (SERVO_PULSE_0 - SERVO_PULSE_L) * angle / SERVO_WIDTH;
 80045de:	edd7 7a01 	vldr	s15, [r7, #4]
 80045e2:	ed9f 7a18 	vldr	s14, [pc, #96]	; 8004644 <servo_setAngle+0xac>
 80045e6:	ee27 7a87 	vmul.f32	s14, s15, s14
 80045ea:	eef3 6a09 	vmov.f32	s13, #57	; 0x41c80000  25.0
 80045ee:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80045f2:	ed9f 7a15 	vldr	s14, [pc, #84]	; 8004648 <servo_setAngle+0xb0>
 80045f6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80045fa:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80045fe:	ee17 3a90 	vmov	r3, s15
 8004602:	60fb      	str	r3, [r7, #12]
 8004604:	e012      	b.n	800462c <servo_setAngle+0x94>
	} else {
		val = SERVO_PULSE_0 + (SERVO_PULSE_R - SERVO_PULSE_0) * angle / SERVO_WIDTH;
 8004606:	edd7 7a01 	vldr	s15, [r7, #4]
 800460a:	ed9f 7a10 	vldr	s14, [pc, #64]	; 800464c <servo_setAngle+0xb4>
 800460e:	ee27 7a87 	vmul.f32	s14, s15, s14
 8004612:	eef3 6a09 	vmov.f32	s13, #57	; 0x41c80000  25.0
 8004616:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800461a:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8004648 <servo_setAngle+0xb0>
 800461e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004622:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8004626:	ee17 3a90 	vmov	r3, s15
 800462a:	60fb      	str	r3, [r7, #12]
	}

	setServoVal(val);
 800462c:	68f8      	ldr	r0, [r7, #12]
 800462e:	f7ff ffa1 	bl	8004574 <setServoVal>
}
 8004632:	bf00      	nop
 8004634:	3710      	adds	r7, #16
 8004636:	46bd      	mov	sp, r7
 8004638:	bd80      	pop	{r7, pc}
 800463a:	bf00      	nop
 800463c:	c1c80000 	.word	0xc1c80000
 8004640:	41c80000 	.word	0x41c80000
 8004644:	449c4000 	.word	0x449c4000
 8004648:	45979000 	.word	0x45979000
 800464c:	4512e000 	.word	0x4512e000

08004650 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8004650:	b480      	push	{r7}
 8004652:	b083      	sub	sp, #12
 8004654:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8004656:	2300      	movs	r3, #0
 8004658:	607b      	str	r3, [r7, #4]
 800465a:	4b10      	ldr	r3, [pc, #64]	; (800469c <HAL_MspInit+0x4c>)
 800465c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800465e:	4a0f      	ldr	r2, [pc, #60]	; (800469c <HAL_MspInit+0x4c>)
 8004660:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8004664:	6453      	str	r3, [r2, #68]	; 0x44
 8004666:	4b0d      	ldr	r3, [pc, #52]	; (800469c <HAL_MspInit+0x4c>)
 8004668:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800466a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800466e:	607b      	str	r3, [r7, #4]
 8004670:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8004672:	2300      	movs	r3, #0
 8004674:	603b      	str	r3, [r7, #0]
 8004676:	4b09      	ldr	r3, [pc, #36]	; (800469c <HAL_MspInit+0x4c>)
 8004678:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800467a:	4a08      	ldr	r2, [pc, #32]	; (800469c <HAL_MspInit+0x4c>)
 800467c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8004680:	6413      	str	r3, [r2, #64]	; 0x40
 8004682:	4b06      	ldr	r3, [pc, #24]	; (800469c <HAL_MspInit+0x4c>)
 8004684:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004686:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800468a:	603b      	str	r3, [r7, #0]
 800468c:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800468e:	bf00      	nop
 8004690:	370c      	adds	r7, #12
 8004692:	46bd      	mov	sp, r7
 8004694:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004698:	4770      	bx	lr
 800469a:	bf00      	nop
 800469c:	40023800 	.word	0x40023800

080046a0 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 80046a0:	b580      	push	{r7, lr}
 80046a2:	b08a      	sub	sp, #40	; 0x28
 80046a4:	af00      	add	r7, sp, #0
 80046a6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80046a8:	f107 0314 	add.w	r3, r7, #20
 80046ac:	2200      	movs	r2, #0
 80046ae:	601a      	str	r2, [r3, #0]
 80046b0:	605a      	str	r2, [r3, #4]
 80046b2:	609a      	str	r2, [r3, #8]
 80046b4:	60da      	str	r2, [r3, #12]
 80046b6:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 80046b8:	687b      	ldr	r3, [r7, #4]
 80046ba:	681b      	ldr	r3, [r3, #0]
 80046bc:	4a17      	ldr	r2, [pc, #92]	; (800471c <HAL_ADC_MspInit+0x7c>)
 80046be:	4293      	cmp	r3, r2
 80046c0:	d127      	bne.n	8004712 <HAL_ADC_MspInit+0x72>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 80046c2:	2300      	movs	r3, #0
 80046c4:	613b      	str	r3, [r7, #16]
 80046c6:	4b16      	ldr	r3, [pc, #88]	; (8004720 <HAL_ADC_MspInit+0x80>)
 80046c8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80046ca:	4a15      	ldr	r2, [pc, #84]	; (8004720 <HAL_ADC_MspInit+0x80>)
 80046cc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80046d0:	6453      	str	r3, [r2, #68]	; 0x44
 80046d2:	4b13      	ldr	r3, [pc, #76]	; (8004720 <HAL_ADC_MspInit+0x80>)
 80046d4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80046d6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80046da:	613b      	str	r3, [r7, #16]
 80046dc:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 80046de:	2300      	movs	r3, #0
 80046e0:	60fb      	str	r3, [r7, #12]
 80046e2:	4b0f      	ldr	r3, [pc, #60]	; (8004720 <HAL_ADC_MspInit+0x80>)
 80046e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80046e6:	4a0e      	ldr	r2, [pc, #56]	; (8004720 <HAL_ADC_MspInit+0x80>)
 80046e8:	f043 0304 	orr.w	r3, r3, #4
 80046ec:	6313      	str	r3, [r2, #48]	; 0x30
 80046ee:	4b0c      	ldr	r3, [pc, #48]	; (8004720 <HAL_ADC_MspInit+0x80>)
 80046f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80046f2:	f003 0304 	and.w	r3, r3, #4
 80046f6:	60fb      	str	r3, [r7, #12]
 80046f8:	68fb      	ldr	r3, [r7, #12]
    /**ADC1 GPIO Configuration
    PC3     ------> ADC1_IN13
    */
    GPIO_InitStruct.Pin = IR_V0_Pin;
 80046fa:	2308      	movs	r3, #8
 80046fc:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80046fe:	2303      	movs	r3, #3
 8004700:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004702:	2300      	movs	r3, #0
 8004704:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(IR_V0_GPIO_Port, &GPIO_InitStruct);
 8004706:	f107 0314 	add.w	r3, r7, #20
 800470a:	4619      	mov	r1, r3
 800470c:	4805      	ldr	r0, [pc, #20]	; (8004724 <HAL_ADC_MspInit+0x84>)
 800470e:	f001 f9b1 	bl	8005a74 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 8004712:	bf00      	nop
 8004714:	3728      	adds	r7, #40	; 0x28
 8004716:	46bd      	mov	sp, r7
 8004718:	bd80      	pop	{r7, pc}
 800471a:	bf00      	nop
 800471c:	40012000 	.word	0x40012000
 8004720:	40023800 	.word	0x40023800
 8004724:	40020800 	.word	0x40020800

08004728 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8004728:	b580      	push	{r7, lr}
 800472a:	b08a      	sub	sp, #40	; 0x28
 800472c:	af00      	add	r7, sp, #0
 800472e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8004730:	f107 0314 	add.w	r3, r7, #20
 8004734:	2200      	movs	r2, #0
 8004736:	601a      	str	r2, [r3, #0]
 8004738:	605a      	str	r2, [r3, #4]
 800473a:	609a      	str	r2, [r3, #8]
 800473c:	60da      	str	r2, [r3, #12]
 800473e:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C1)
 8004740:	687b      	ldr	r3, [r7, #4]
 8004742:	681b      	ldr	r3, [r3, #0]
 8004744:	4a19      	ldr	r2, [pc, #100]	; (80047ac <HAL_I2C_MspInit+0x84>)
 8004746:	4293      	cmp	r3, r2
 8004748:	d12c      	bne.n	80047a4 <HAL_I2C_MspInit+0x7c>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 800474a:	2300      	movs	r3, #0
 800474c:	613b      	str	r3, [r7, #16]
 800474e:	4b18      	ldr	r3, [pc, #96]	; (80047b0 <HAL_I2C_MspInit+0x88>)
 8004750:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004752:	4a17      	ldr	r2, [pc, #92]	; (80047b0 <HAL_I2C_MspInit+0x88>)
 8004754:	f043 0302 	orr.w	r3, r3, #2
 8004758:	6313      	str	r3, [r2, #48]	; 0x30
 800475a:	4b15      	ldr	r3, [pc, #84]	; (80047b0 <HAL_I2C_MspInit+0x88>)
 800475c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800475e:	f003 0302 	and.w	r3, r3, #2
 8004762:	613b      	str	r3, [r7, #16]
 8004764:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = ICM_SCL_Pin|ICM_SDA_Pin;
 8004766:	f44f 7340 	mov.w	r3, #768	; 0x300
 800476a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 800476c:	2312      	movs	r3, #18
 800476e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004770:	2300      	movs	r3, #0
 8004772:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8004774:	2303      	movs	r3, #3
 8004776:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8004778:	2304      	movs	r3, #4
 800477a:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800477c:	f107 0314 	add.w	r3, r7, #20
 8004780:	4619      	mov	r1, r3
 8004782:	480c      	ldr	r0, [pc, #48]	; (80047b4 <HAL_I2C_MspInit+0x8c>)
 8004784:	f001 f976 	bl	8005a74 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8004788:	2300      	movs	r3, #0
 800478a:	60fb      	str	r3, [r7, #12]
 800478c:	4b08      	ldr	r3, [pc, #32]	; (80047b0 <HAL_I2C_MspInit+0x88>)
 800478e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004790:	4a07      	ldr	r2, [pc, #28]	; (80047b0 <HAL_I2C_MspInit+0x88>)
 8004792:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8004796:	6413      	str	r3, [r2, #64]	; 0x40
 8004798:	4b05      	ldr	r3, [pc, #20]	; (80047b0 <HAL_I2C_MspInit+0x88>)
 800479a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800479c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80047a0:	60fb      	str	r3, [r7, #12]
 80047a2:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 80047a4:	bf00      	nop
 80047a6:	3728      	adds	r7, #40	; 0x28
 80047a8:	46bd      	mov	sp, r7
 80047aa:	bd80      	pop	{r7, pc}
 80047ac:	40005400 	.word	0x40005400
 80047b0:	40023800 	.word	0x40023800
 80047b4:	40020400 	.word	0x40020400

080047b8 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 80047b8:	b580      	push	{r7, lr}
 80047ba:	b08e      	sub	sp, #56	; 0x38
 80047bc:	af00      	add	r7, sp, #0
 80047be:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80047c0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80047c4:	2200      	movs	r2, #0
 80047c6:	601a      	str	r2, [r3, #0]
 80047c8:	605a      	str	r2, [r3, #4]
 80047ca:	609a      	str	r2, [r3, #8]
 80047cc:	60da      	str	r2, [r3, #12]
 80047ce:	611a      	str	r2, [r3, #16]
  if(htim_base->Instance==TIM1)
 80047d0:	687b      	ldr	r3, [r7, #4]
 80047d2:	681b      	ldr	r3, [r3, #0]
 80047d4:	4a4d      	ldr	r2, [pc, #308]	; (800490c <HAL_TIM_Base_MspInit+0x154>)
 80047d6:	4293      	cmp	r3, r2
 80047d8:	d116      	bne.n	8004808 <HAL_TIM_Base_MspInit+0x50>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 80047da:	2300      	movs	r3, #0
 80047dc:	623b      	str	r3, [r7, #32]
 80047de:	4b4c      	ldr	r3, [pc, #304]	; (8004910 <HAL_TIM_Base_MspInit+0x158>)
 80047e0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80047e2:	4a4b      	ldr	r2, [pc, #300]	; (8004910 <HAL_TIM_Base_MspInit+0x158>)
 80047e4:	f043 0301 	orr.w	r3, r3, #1
 80047e8:	6453      	str	r3, [r2, #68]	; 0x44
 80047ea:	4b49      	ldr	r3, [pc, #292]	; (8004910 <HAL_TIM_Base_MspInit+0x158>)
 80047ec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80047ee:	f003 0301 	and.w	r3, r3, #1
 80047f2:	623b      	str	r3, [r7, #32]
 80047f4:	6a3b      	ldr	r3, [r7, #32]
    /* TIM1 interrupt Init */
    HAL_NVIC_SetPriority(TIM1_CC_IRQn, 0, 0);
 80047f6:	2200      	movs	r2, #0
 80047f8:	2100      	movs	r1, #0
 80047fa:	201b      	movs	r0, #27
 80047fc:	f001 f871 	bl	80058e2 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_CC_IRQn);
 8004800:	201b      	movs	r0, #27
 8004802:	f001 f88a 	bl	800591a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM8_MspInit 1 */

  /* USER CODE END TIM8_MspInit 1 */
  }

}
 8004806:	e07d      	b.n	8004904 <HAL_TIM_Base_MspInit+0x14c>
  else if(htim_base->Instance==TIM4)
 8004808:	687b      	ldr	r3, [r7, #4]
 800480a:	681b      	ldr	r3, [r3, #0]
 800480c:	4a41      	ldr	r2, [pc, #260]	; (8004914 <HAL_TIM_Base_MspInit+0x15c>)
 800480e:	4293      	cmp	r3, r2
 8004810:	d135      	bne.n	800487e <HAL_TIM_Base_MspInit+0xc6>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8004812:	2300      	movs	r3, #0
 8004814:	61fb      	str	r3, [r7, #28]
 8004816:	4b3e      	ldr	r3, [pc, #248]	; (8004910 <HAL_TIM_Base_MspInit+0x158>)
 8004818:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800481a:	4a3d      	ldr	r2, [pc, #244]	; (8004910 <HAL_TIM_Base_MspInit+0x158>)
 800481c:	f043 0304 	orr.w	r3, r3, #4
 8004820:	6413      	str	r3, [r2, #64]	; 0x40
 8004822:	4b3b      	ldr	r3, [pc, #236]	; (8004910 <HAL_TIM_Base_MspInit+0x158>)
 8004824:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004826:	f003 0304 	and.w	r3, r3, #4
 800482a:	61fb      	str	r3, [r7, #28]
 800482c:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 800482e:	2300      	movs	r3, #0
 8004830:	61bb      	str	r3, [r7, #24]
 8004832:	4b37      	ldr	r3, [pc, #220]	; (8004910 <HAL_TIM_Base_MspInit+0x158>)
 8004834:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004836:	4a36      	ldr	r2, [pc, #216]	; (8004910 <HAL_TIM_Base_MspInit+0x158>)
 8004838:	f043 0308 	orr.w	r3, r3, #8
 800483c:	6313      	str	r3, [r2, #48]	; 0x30
 800483e:	4b34      	ldr	r3, [pc, #208]	; (8004910 <HAL_TIM_Base_MspInit+0x158>)
 8004840:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004842:	f003 0308 	and.w	r3, r3, #8
 8004846:	61bb      	str	r3, [r7, #24]
 8004848:	69bb      	ldr	r3, [r7, #24]
    GPIO_InitStruct.Pin = GPIO_PIN_12;
 800484a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800484e:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004850:	2302      	movs	r3, #2
 8004852:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004854:	2300      	movs	r3, #0
 8004856:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8004858:	2300      	movs	r3, #0
 800485a:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 800485c:	2302      	movs	r3, #2
 800485e:	637b      	str	r3, [r7, #52]	; 0x34
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8004860:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004864:	4619      	mov	r1, r3
 8004866:	482c      	ldr	r0, [pc, #176]	; (8004918 <HAL_TIM_Base_MspInit+0x160>)
 8004868:	f001 f904 	bl	8005a74 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(TIM4_IRQn, 0, 0);
 800486c:	2200      	movs	r2, #0
 800486e:	2100      	movs	r1, #0
 8004870:	201e      	movs	r0, #30
 8004872:	f001 f836 	bl	80058e2 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM4_IRQn);
 8004876:	201e      	movs	r0, #30
 8004878:	f001 f84f 	bl	800591a <HAL_NVIC_EnableIRQ>
}
 800487c:	e042      	b.n	8004904 <HAL_TIM_Base_MspInit+0x14c>
  else if(htim_base->Instance==TIM6)
 800487e:	687b      	ldr	r3, [r7, #4]
 8004880:	681b      	ldr	r3, [r3, #0]
 8004882:	4a26      	ldr	r2, [pc, #152]	; (800491c <HAL_TIM_Base_MspInit+0x164>)
 8004884:	4293      	cmp	r3, r2
 8004886:	d10e      	bne.n	80048a6 <HAL_TIM_Base_MspInit+0xee>
    __HAL_RCC_TIM6_CLK_ENABLE();
 8004888:	2300      	movs	r3, #0
 800488a:	617b      	str	r3, [r7, #20]
 800488c:	4b20      	ldr	r3, [pc, #128]	; (8004910 <HAL_TIM_Base_MspInit+0x158>)
 800488e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004890:	4a1f      	ldr	r2, [pc, #124]	; (8004910 <HAL_TIM_Base_MspInit+0x158>)
 8004892:	f043 0310 	orr.w	r3, r3, #16
 8004896:	6413      	str	r3, [r2, #64]	; 0x40
 8004898:	4b1d      	ldr	r3, [pc, #116]	; (8004910 <HAL_TIM_Base_MspInit+0x158>)
 800489a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800489c:	f003 0310 	and.w	r3, r3, #16
 80048a0:	617b      	str	r3, [r7, #20]
 80048a2:	697b      	ldr	r3, [r7, #20]
}
 80048a4:	e02e      	b.n	8004904 <HAL_TIM_Base_MspInit+0x14c>
  else if(htim_base->Instance==TIM7)
 80048a6:	687b      	ldr	r3, [r7, #4]
 80048a8:	681b      	ldr	r3, [r3, #0]
 80048aa:	4a1d      	ldr	r2, [pc, #116]	; (8004920 <HAL_TIM_Base_MspInit+0x168>)
 80048ac:	4293      	cmp	r3, r2
 80048ae:	d116      	bne.n	80048de <HAL_TIM_Base_MspInit+0x126>
    __HAL_RCC_TIM7_CLK_ENABLE();
 80048b0:	2300      	movs	r3, #0
 80048b2:	613b      	str	r3, [r7, #16]
 80048b4:	4b16      	ldr	r3, [pc, #88]	; (8004910 <HAL_TIM_Base_MspInit+0x158>)
 80048b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80048b8:	4a15      	ldr	r2, [pc, #84]	; (8004910 <HAL_TIM_Base_MspInit+0x158>)
 80048ba:	f043 0320 	orr.w	r3, r3, #32
 80048be:	6413      	str	r3, [r2, #64]	; 0x40
 80048c0:	4b13      	ldr	r3, [pc, #76]	; (8004910 <HAL_TIM_Base_MspInit+0x158>)
 80048c2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80048c4:	f003 0320 	and.w	r3, r3, #32
 80048c8:	613b      	str	r3, [r7, #16]
 80048ca:	693b      	ldr	r3, [r7, #16]
    HAL_NVIC_SetPriority(TIM7_IRQn, 0, 0);
 80048cc:	2200      	movs	r2, #0
 80048ce:	2100      	movs	r1, #0
 80048d0:	2037      	movs	r0, #55	; 0x37
 80048d2:	f001 f806 	bl	80058e2 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 80048d6:	2037      	movs	r0, #55	; 0x37
 80048d8:	f001 f81f 	bl	800591a <HAL_NVIC_EnableIRQ>
}
 80048dc:	e012      	b.n	8004904 <HAL_TIM_Base_MspInit+0x14c>
  else if(htim_base->Instance==TIM8)
 80048de:	687b      	ldr	r3, [r7, #4]
 80048e0:	681b      	ldr	r3, [r3, #0]
 80048e2:	4a10      	ldr	r2, [pc, #64]	; (8004924 <HAL_TIM_Base_MspInit+0x16c>)
 80048e4:	4293      	cmp	r3, r2
 80048e6:	d10d      	bne.n	8004904 <HAL_TIM_Base_MspInit+0x14c>
    __HAL_RCC_TIM8_CLK_ENABLE();
 80048e8:	2300      	movs	r3, #0
 80048ea:	60fb      	str	r3, [r7, #12]
 80048ec:	4b08      	ldr	r3, [pc, #32]	; (8004910 <HAL_TIM_Base_MspInit+0x158>)
 80048ee:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80048f0:	4a07      	ldr	r2, [pc, #28]	; (8004910 <HAL_TIM_Base_MspInit+0x158>)
 80048f2:	f043 0302 	orr.w	r3, r3, #2
 80048f6:	6453      	str	r3, [r2, #68]	; 0x44
 80048f8:	4b05      	ldr	r3, [pc, #20]	; (8004910 <HAL_TIM_Base_MspInit+0x158>)
 80048fa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80048fc:	f003 0302 	and.w	r3, r3, #2
 8004900:	60fb      	str	r3, [r7, #12]
 8004902:	68fb      	ldr	r3, [r7, #12]
}
 8004904:	bf00      	nop
 8004906:	3738      	adds	r7, #56	; 0x38
 8004908:	46bd      	mov	sp, r7
 800490a:	bd80      	pop	{r7, pc}
 800490c:	40010000 	.word	0x40010000
 8004910:	40023800 	.word	0x40023800
 8004914:	40000800 	.word	0x40000800
 8004918:	40020c00 	.word	0x40020c00
 800491c:	40001000 	.word	0x40001000
 8004920:	40001400 	.word	0x40001400
 8004924:	40010400 	.word	0x40010400

08004928 <HAL_TIM_Encoder_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_encoder: TIM_Encoder handle pointer
* @retval None
*/
void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* htim_encoder)
{
 8004928:	b580      	push	{r7, lr}
 800492a:	b08c      	sub	sp, #48	; 0x30
 800492c:	af00      	add	r7, sp, #0
 800492e:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8004930:	f107 031c 	add.w	r3, r7, #28
 8004934:	2200      	movs	r2, #0
 8004936:	601a      	str	r2, [r3, #0]
 8004938:	605a      	str	r2, [r3, #4]
 800493a:	609a      	str	r2, [r3, #8]
 800493c:	60da      	str	r2, [r3, #12]
 800493e:	611a      	str	r2, [r3, #16]
  if(htim_encoder->Instance==TIM2)
 8004940:	687b      	ldr	r3, [r7, #4]
 8004942:	681b      	ldr	r3, [r3, #0]
 8004944:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8004948:	d14b      	bne.n	80049e2 <HAL_TIM_Encoder_MspInit+0xba>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 800494a:	2300      	movs	r3, #0
 800494c:	61bb      	str	r3, [r7, #24]
 800494e:	4b3f      	ldr	r3, [pc, #252]	; (8004a4c <HAL_TIM_Encoder_MspInit+0x124>)
 8004950:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004952:	4a3e      	ldr	r2, [pc, #248]	; (8004a4c <HAL_TIM_Encoder_MspInit+0x124>)
 8004954:	f043 0301 	orr.w	r3, r3, #1
 8004958:	6413      	str	r3, [r2, #64]	; 0x40
 800495a:	4b3c      	ldr	r3, [pc, #240]	; (8004a4c <HAL_TIM_Encoder_MspInit+0x124>)
 800495c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800495e:	f003 0301 	and.w	r3, r3, #1
 8004962:	61bb      	str	r3, [r7, #24]
 8004964:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8004966:	2300      	movs	r3, #0
 8004968:	617b      	str	r3, [r7, #20]
 800496a:	4b38      	ldr	r3, [pc, #224]	; (8004a4c <HAL_TIM_Encoder_MspInit+0x124>)
 800496c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800496e:	4a37      	ldr	r2, [pc, #220]	; (8004a4c <HAL_TIM_Encoder_MspInit+0x124>)
 8004970:	f043 0301 	orr.w	r3, r3, #1
 8004974:	6313      	str	r3, [r2, #48]	; 0x30
 8004976:	4b35      	ldr	r3, [pc, #212]	; (8004a4c <HAL_TIM_Encoder_MspInit+0x124>)
 8004978:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800497a:	f003 0301 	and.w	r3, r3, #1
 800497e:	617b      	str	r3, [r7, #20]
 8004980:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8004982:	2300      	movs	r3, #0
 8004984:	613b      	str	r3, [r7, #16]
 8004986:	4b31      	ldr	r3, [pc, #196]	; (8004a4c <HAL_TIM_Encoder_MspInit+0x124>)
 8004988:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800498a:	4a30      	ldr	r2, [pc, #192]	; (8004a4c <HAL_TIM_Encoder_MspInit+0x124>)
 800498c:	f043 0302 	orr.w	r3, r3, #2
 8004990:	6313      	str	r3, [r2, #48]	; 0x30
 8004992:	4b2e      	ldr	r3, [pc, #184]	; (8004a4c <HAL_TIM_Encoder_MspInit+0x124>)
 8004994:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004996:	f003 0302 	and.w	r3, r3, #2
 800499a:	613b      	str	r3, [r7, #16]
 800499c:	693b      	ldr	r3, [r7, #16]
    /**TIM2 GPIO Configuration
    PA15     ------> TIM2_CH1
    PB3     ------> TIM2_CH2
    */
    GPIO_InitStruct.Pin = MOTORA_CH1_Pin;
 800499e:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80049a2:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80049a4:	2302      	movs	r3, #2
 80049a6:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80049a8:	2300      	movs	r3, #0
 80049aa:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80049ac:	2300      	movs	r3, #0
 80049ae:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 80049b0:	2301      	movs	r3, #1
 80049b2:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(MOTORA_CH1_GPIO_Port, &GPIO_InitStruct);
 80049b4:	f107 031c 	add.w	r3, r7, #28
 80049b8:	4619      	mov	r1, r3
 80049ba:	4825      	ldr	r0, [pc, #148]	; (8004a50 <HAL_TIM_Encoder_MspInit+0x128>)
 80049bc:	f001 f85a 	bl	8005a74 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = MOTORA_CH2_Pin;
 80049c0:	2308      	movs	r3, #8
 80049c2:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80049c4:	2302      	movs	r3, #2
 80049c6:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80049c8:	2300      	movs	r3, #0
 80049ca:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80049cc:	2300      	movs	r3, #0
 80049ce:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 80049d0:	2301      	movs	r3, #1
 80049d2:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(MOTORA_CH2_GPIO_Port, &GPIO_InitStruct);
 80049d4:	f107 031c 	add.w	r3, r7, #28
 80049d8:	4619      	mov	r1, r3
 80049da:	481e      	ldr	r0, [pc, #120]	; (8004a54 <HAL_TIM_Encoder_MspInit+0x12c>)
 80049dc:	f001 f84a 	bl	8005a74 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }

}
 80049e0:	e030      	b.n	8004a44 <HAL_TIM_Encoder_MspInit+0x11c>
  else if(htim_encoder->Instance==TIM3)
 80049e2:	687b      	ldr	r3, [r7, #4]
 80049e4:	681b      	ldr	r3, [r3, #0]
 80049e6:	4a1c      	ldr	r2, [pc, #112]	; (8004a58 <HAL_TIM_Encoder_MspInit+0x130>)
 80049e8:	4293      	cmp	r3, r2
 80049ea:	d12b      	bne.n	8004a44 <HAL_TIM_Encoder_MspInit+0x11c>
    __HAL_RCC_TIM3_CLK_ENABLE();
 80049ec:	2300      	movs	r3, #0
 80049ee:	60fb      	str	r3, [r7, #12]
 80049f0:	4b16      	ldr	r3, [pc, #88]	; (8004a4c <HAL_TIM_Encoder_MspInit+0x124>)
 80049f2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80049f4:	4a15      	ldr	r2, [pc, #84]	; (8004a4c <HAL_TIM_Encoder_MspInit+0x124>)
 80049f6:	f043 0302 	orr.w	r3, r3, #2
 80049fa:	6413      	str	r3, [r2, #64]	; 0x40
 80049fc:	4b13      	ldr	r3, [pc, #76]	; (8004a4c <HAL_TIM_Encoder_MspInit+0x124>)
 80049fe:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004a00:	f003 0302 	and.w	r3, r3, #2
 8004a04:	60fb      	str	r3, [r7, #12]
 8004a06:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8004a08:	2300      	movs	r3, #0
 8004a0a:	60bb      	str	r3, [r7, #8]
 8004a0c:	4b0f      	ldr	r3, [pc, #60]	; (8004a4c <HAL_TIM_Encoder_MspInit+0x124>)
 8004a0e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004a10:	4a0e      	ldr	r2, [pc, #56]	; (8004a4c <HAL_TIM_Encoder_MspInit+0x124>)
 8004a12:	f043 0301 	orr.w	r3, r3, #1
 8004a16:	6313      	str	r3, [r2, #48]	; 0x30
 8004a18:	4b0c      	ldr	r3, [pc, #48]	; (8004a4c <HAL_TIM_Encoder_MspInit+0x124>)
 8004a1a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004a1c:	f003 0301 	and.w	r3, r3, #1
 8004a20:	60bb      	str	r3, [r7, #8]
 8004a22:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = MOTORB_CH1_Pin|MOTORB_CH2_Pin;
 8004a24:	23c0      	movs	r3, #192	; 0xc0
 8004a26:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004a28:	2302      	movs	r3, #2
 8004a2a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004a2c:	2300      	movs	r3, #0
 8004a2e:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8004a30:	2300      	movs	r3, #0
 8004a32:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 8004a34:	2302      	movs	r3, #2
 8004a36:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8004a38:	f107 031c 	add.w	r3, r7, #28
 8004a3c:	4619      	mov	r1, r3
 8004a3e:	4804      	ldr	r0, [pc, #16]	; (8004a50 <HAL_TIM_Encoder_MspInit+0x128>)
 8004a40:	f001 f818 	bl	8005a74 <HAL_GPIO_Init>
}
 8004a44:	bf00      	nop
 8004a46:	3730      	adds	r7, #48	; 0x30
 8004a48:	46bd      	mov	sp, r7
 8004a4a:	bd80      	pop	{r7, pc}
 8004a4c:	40023800 	.word	0x40023800
 8004a50:	40020000 	.word	0x40020000
 8004a54:	40020400 	.word	0x40020400
 8004a58:	40000400 	.word	0x40000400

08004a5c <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8004a5c:	b580      	push	{r7, lr}
 8004a5e:	b08a      	sub	sp, #40	; 0x28
 8004a60:	af00      	add	r7, sp, #0
 8004a62:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8004a64:	f107 0314 	add.w	r3, r7, #20
 8004a68:	2200      	movs	r2, #0
 8004a6a:	601a      	str	r2, [r3, #0]
 8004a6c:	605a      	str	r2, [r3, #4]
 8004a6e:	609a      	str	r2, [r3, #8]
 8004a70:	60da      	str	r2, [r3, #12]
 8004a72:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM1)
 8004a74:	687b      	ldr	r3, [r7, #4]
 8004a76:	681b      	ldr	r3, [r3, #0]
 8004a78:	4a24      	ldr	r2, [pc, #144]	; (8004b0c <HAL_TIM_MspPostInit+0xb0>)
 8004a7a:	4293      	cmp	r3, r2
 8004a7c:	d11f      	bne.n	8004abe <HAL_TIM_MspPostInit+0x62>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8004a7e:	2300      	movs	r3, #0
 8004a80:	613b      	str	r3, [r7, #16]
 8004a82:	4b23      	ldr	r3, [pc, #140]	; (8004b10 <HAL_TIM_MspPostInit+0xb4>)
 8004a84:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004a86:	4a22      	ldr	r2, [pc, #136]	; (8004b10 <HAL_TIM_MspPostInit+0xb4>)
 8004a88:	f043 0310 	orr.w	r3, r3, #16
 8004a8c:	6313      	str	r3, [r2, #48]	; 0x30
 8004a8e:	4b20      	ldr	r3, [pc, #128]	; (8004b10 <HAL_TIM_MspPostInit+0xb4>)
 8004a90:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004a92:	f003 0310 	and.w	r3, r3, #16
 8004a96:	613b      	str	r3, [r7, #16]
 8004a98:	693b      	ldr	r3, [r7, #16]
    /**TIM1 GPIO Configuration
    PE9     ------> TIM1_CH1
    */
    GPIO_InitStruct.Pin = SERVO_PWM_Pin;
 8004a9a:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004a9e:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004aa0:	2302      	movs	r3, #2
 8004aa2:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004aa4:	2300      	movs	r3, #0
 8004aa6:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8004aa8:	2300      	movs	r3, #0
 8004aaa:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 8004aac:	2301      	movs	r3, #1
 8004aae:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(SERVO_PWM_GPIO_Port, &GPIO_InitStruct);
 8004ab0:	f107 0314 	add.w	r3, r7, #20
 8004ab4:	4619      	mov	r1, r3
 8004ab6:	4817      	ldr	r0, [pc, #92]	; (8004b14 <HAL_TIM_MspPostInit+0xb8>)
 8004ab8:	f000 ffdc 	bl	8005a74 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM8_MspPostInit 1 */

  /* USER CODE END TIM8_MspPostInit 1 */
  }

}
 8004abc:	e022      	b.n	8004b04 <HAL_TIM_MspPostInit+0xa8>
  else if(htim->Instance==TIM8)
 8004abe:	687b      	ldr	r3, [r7, #4]
 8004ac0:	681b      	ldr	r3, [r3, #0]
 8004ac2:	4a15      	ldr	r2, [pc, #84]	; (8004b18 <HAL_TIM_MspPostInit+0xbc>)
 8004ac4:	4293      	cmp	r3, r2
 8004ac6:	d11d      	bne.n	8004b04 <HAL_TIM_MspPostInit+0xa8>
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8004ac8:	2300      	movs	r3, #0
 8004aca:	60fb      	str	r3, [r7, #12]
 8004acc:	4b10      	ldr	r3, [pc, #64]	; (8004b10 <HAL_TIM_MspPostInit+0xb4>)
 8004ace:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004ad0:	4a0f      	ldr	r2, [pc, #60]	; (8004b10 <HAL_TIM_MspPostInit+0xb4>)
 8004ad2:	f043 0304 	orr.w	r3, r3, #4
 8004ad6:	6313      	str	r3, [r2, #48]	; 0x30
 8004ad8:	4b0d      	ldr	r3, [pc, #52]	; (8004b10 <HAL_TIM_MspPostInit+0xb4>)
 8004ada:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004adc:	f003 0304 	and.w	r3, r3, #4
 8004ae0:	60fb      	str	r3, [r7, #12]
 8004ae2:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = MOTORA_PWM_Pin|MOTORB_PWM_Pin;
 8004ae4:	23c0      	movs	r3, #192	; 0xc0
 8004ae6:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004ae8:	2302      	movs	r3, #2
 8004aea:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004aec:	2300      	movs	r3, #0
 8004aee:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8004af0:	2300      	movs	r3, #0
 8004af2:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF3_TIM8;
 8004af4:	2303      	movs	r3, #3
 8004af6:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8004af8:	f107 0314 	add.w	r3, r7, #20
 8004afc:	4619      	mov	r1, r3
 8004afe:	4807      	ldr	r0, [pc, #28]	; (8004b1c <HAL_TIM_MspPostInit+0xc0>)
 8004b00:	f000 ffb8 	bl	8005a74 <HAL_GPIO_Init>
}
 8004b04:	bf00      	nop
 8004b06:	3728      	adds	r7, #40	; 0x28
 8004b08:	46bd      	mov	sp, r7
 8004b0a:	bd80      	pop	{r7, pc}
 8004b0c:	40010000 	.word	0x40010000
 8004b10:	40023800 	.word	0x40023800
 8004b14:	40021000 	.word	0x40021000
 8004b18:	40010400 	.word	0x40010400
 8004b1c:	40020800 	.word	0x40020800

08004b20 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8004b20:	b580      	push	{r7, lr}
 8004b22:	b08a      	sub	sp, #40	; 0x28
 8004b24:	af00      	add	r7, sp, #0
 8004b26:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8004b28:	f107 0314 	add.w	r3, r7, #20
 8004b2c:	2200      	movs	r2, #0
 8004b2e:	601a      	str	r2, [r3, #0]
 8004b30:	605a      	str	r2, [r3, #4]
 8004b32:	609a      	str	r2, [r3, #8]
 8004b34:	60da      	str	r2, [r3, #12]
 8004b36:	611a      	str	r2, [r3, #16]
  if(huart->Instance==USART3)
 8004b38:	687b      	ldr	r3, [r7, #4]
 8004b3a:	681b      	ldr	r3, [r3, #0]
 8004b3c:	4a1d      	ldr	r2, [pc, #116]	; (8004bb4 <HAL_UART_MspInit+0x94>)
 8004b3e:	4293      	cmp	r3, r2
 8004b40:	d134      	bne.n	8004bac <HAL_UART_MspInit+0x8c>
  {
  /* USER CODE BEGIN USART3_MspInit 0 */

  /* USER CODE END USART3_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART3_CLK_ENABLE();
 8004b42:	2300      	movs	r3, #0
 8004b44:	613b      	str	r3, [r7, #16]
 8004b46:	4b1c      	ldr	r3, [pc, #112]	; (8004bb8 <HAL_UART_MspInit+0x98>)
 8004b48:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004b4a:	4a1b      	ldr	r2, [pc, #108]	; (8004bb8 <HAL_UART_MspInit+0x98>)
 8004b4c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8004b50:	6413      	str	r3, [r2, #64]	; 0x40
 8004b52:	4b19      	ldr	r3, [pc, #100]	; (8004bb8 <HAL_UART_MspInit+0x98>)
 8004b54:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004b56:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8004b5a:	613b      	str	r3, [r7, #16]
 8004b5c:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8004b5e:	2300      	movs	r3, #0
 8004b60:	60fb      	str	r3, [r7, #12]
 8004b62:	4b15      	ldr	r3, [pc, #84]	; (8004bb8 <HAL_UART_MspInit+0x98>)
 8004b64:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b66:	4a14      	ldr	r2, [pc, #80]	; (8004bb8 <HAL_UART_MspInit+0x98>)
 8004b68:	f043 0304 	orr.w	r3, r3, #4
 8004b6c:	6313      	str	r3, [r2, #48]	; 0x30
 8004b6e:	4b12      	ldr	r3, [pc, #72]	; (8004bb8 <HAL_UART_MspInit+0x98>)
 8004b70:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004b72:	f003 0304 	and.w	r3, r3, #4
 8004b76:	60fb      	str	r3, [r7, #12]
 8004b78:	68fb      	ldr	r3, [r7, #12]
    /**USART3 GPIO Configuration
    PC10     ------> USART3_TX
    PC11     ------> USART3_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
 8004b7a:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8004b7e:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004b80:	2302      	movs	r3, #2
 8004b82:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004b84:	2300      	movs	r3, #0
 8004b86:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8004b88:	2303      	movs	r3, #3
 8004b8a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 8004b8c:	2307      	movs	r3, #7
 8004b8e:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8004b90:	f107 0314 	add.w	r3, r7, #20
 8004b94:	4619      	mov	r1, r3
 8004b96:	4809      	ldr	r0, [pc, #36]	; (8004bbc <HAL_UART_MspInit+0x9c>)
 8004b98:	f000 ff6c 	bl	8005a74 <HAL_GPIO_Init>

    /* USART3 interrupt Init */
    HAL_NVIC_SetPriority(USART3_IRQn, 0, 0);
 8004b9c:	2200      	movs	r2, #0
 8004b9e:	2100      	movs	r1, #0
 8004ba0:	2027      	movs	r0, #39	; 0x27
 8004ba2:	f000 fe9e 	bl	80058e2 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART3_IRQn);
 8004ba6:	2027      	movs	r0, #39	; 0x27
 8004ba8:	f000 feb7 	bl	800591a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART3_MspInit 1 */

  /* USER CODE END USART3_MspInit 1 */
  }

}
 8004bac:	bf00      	nop
 8004bae:	3728      	adds	r7, #40	; 0x28
 8004bb0:	46bd      	mov	sp, r7
 8004bb2:	bd80      	pop	{r7, pc}
 8004bb4:	40004800 	.word	0x40004800
 8004bb8:	40023800 	.word	0x40023800
 8004bbc:	40020800 	.word	0x40020800

08004bc0 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8004bc0:	b480      	push	{r7}
 8004bc2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8004bc4:	e7fe      	b.n	8004bc4 <NMI_Handler+0x4>

08004bc6 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8004bc6:	b480      	push	{r7}
 8004bc8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8004bca:	e7fe      	b.n	8004bca <HardFault_Handler+0x4>

08004bcc <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8004bcc:	b480      	push	{r7}
 8004bce:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8004bd0:	e7fe      	b.n	8004bd0 <MemManage_Handler+0x4>

08004bd2 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8004bd2:	b480      	push	{r7}
 8004bd4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8004bd6:	e7fe      	b.n	8004bd6 <BusFault_Handler+0x4>

08004bd8 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8004bd8:	b480      	push	{r7}
 8004bda:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8004bdc:	e7fe      	b.n	8004bdc <UsageFault_Handler+0x4>

08004bde <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8004bde:	b480      	push	{r7}
 8004be0:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8004be2:	bf00      	nop
 8004be4:	46bd      	mov	sp, r7
 8004be6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004bea:	4770      	bx	lr

08004bec <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8004bec:	b480      	push	{r7}
 8004bee:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8004bf0:	bf00      	nop
 8004bf2:	46bd      	mov	sp, r7
 8004bf4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004bf8:	4770      	bx	lr

08004bfa <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8004bfa:	b480      	push	{r7}
 8004bfc:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8004bfe:	bf00      	nop
 8004c00:	46bd      	mov	sp, r7
 8004c02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c06:	4770      	bx	lr

08004c08 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8004c08:	b580      	push	{r7, lr}
 8004c0a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8004c0c:	f000 f97e 	bl	8004f0c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8004c10:	bf00      	nop
 8004c12:	bd80      	pop	{r7, pc}

08004c14 <TIM1_CC_IRQHandler>:

/**
  * @brief This function handles TIM1 capture compare interrupt.
  */
void TIM1_CC_IRQHandler(void)
{
 8004c14:	b580      	push	{r7, lr}
 8004c16:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_CC_IRQn 0 */

  /* USER CODE END TIM1_CC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 8004c18:	4802      	ldr	r0, [pc, #8]	; (8004c24 <TIM1_CC_IRQHandler+0x10>)
 8004c1a:	f003 faa5 	bl	8008168 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_CC_IRQn 1 */

  /* USER CODE END TIM1_CC_IRQn 1 */
}
 8004c1e:	bf00      	nop
 8004c20:	bd80      	pop	{r7, pc}
 8004c22:	bf00      	nop
 8004c24:	200002d4 	.word	0x200002d4

08004c28 <TIM4_IRQHandler>:

/**
  * @brief This function handles TIM4 global interrupt.
  */
void TIM4_IRQHandler(void)
{
 8004c28:	b580      	push	{r7, lr}
 8004c2a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM4_IRQn 0 */

  /* USER CODE END TIM4_IRQn 0 */
  HAL_TIM_IRQHandler(&htim4);
 8004c2c:	4802      	ldr	r0, [pc, #8]	; (8004c38 <TIM4_IRQHandler+0x10>)
 8004c2e:	f003 fa9b 	bl	8008168 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM4_IRQn 1 */

  /* USER CODE END TIM4_IRQn 1 */
}
 8004c32:	bf00      	nop
 8004c34:	bd80      	pop	{r7, pc}
 8004c36:	bf00      	nop
 8004c38:	200003ac 	.word	0x200003ac

08004c3c <USART3_IRQHandler>:

/**
  * @brief This function handles USART3 global interrupt.
  */
void USART3_IRQHandler(void)
{
 8004c3c:	b580      	push	{r7, lr}
 8004c3e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART3_IRQn 0 */

  /* USER CODE END USART3_IRQn 0 */
  HAL_UART_IRQHandler(&huart3);
 8004c40:	4802      	ldr	r0, [pc, #8]	; (8004c4c <USART3_IRQHandler+0x10>)
 8004c42:	f004 fc31 	bl	80094a8 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART3_IRQn 1 */

  /* USER CODE END USART3_IRQn 1 */
}
 8004c46:	bf00      	nop
 8004c48:	bd80      	pop	{r7, pc}
 8004c4a:	bf00      	nop
 8004c4c:	200004cc 	.word	0x200004cc

08004c50 <TIM7_IRQHandler>:

/**
  * @brief This function handles TIM7 global interrupt.
  */
void TIM7_IRQHandler(void)
{
 8004c50:	b580      	push	{r7, lr}
 8004c52:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM7_IRQn 0 */

  /* USER CODE END TIM7_IRQn 0 */
  HAL_TIM_IRQHandler(&htim7);
 8004c54:	4802      	ldr	r0, [pc, #8]	; (8004c60 <TIM7_IRQHandler+0x10>)
 8004c56:	f003 fa87 	bl	8008168 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM7_IRQn 1 */

  /* USER CODE END TIM7_IRQn 1 */
}
 8004c5a:	bf00      	nop
 8004c5c:	bd80      	pop	{r7, pc}
 8004c5e:	bf00      	nop
 8004c60:	2000043c 	.word	0x2000043c

08004c64 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8004c64:	b480      	push	{r7}
 8004c66:	af00      	add	r7, sp, #0
  return 1;
 8004c68:	2301      	movs	r3, #1
}
 8004c6a:	4618      	mov	r0, r3
 8004c6c:	46bd      	mov	sp, r7
 8004c6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c72:	4770      	bx	lr

08004c74 <_kill>:

int _kill(int pid, int sig)
{
 8004c74:	b580      	push	{r7, lr}
 8004c76:	b082      	sub	sp, #8
 8004c78:	af00      	add	r7, sp, #0
 8004c7a:	6078      	str	r0, [r7, #4]
 8004c7c:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8004c7e:	f006 fc57 	bl	800b530 <__errno>
 8004c82:	4603      	mov	r3, r0
 8004c84:	2216      	movs	r2, #22
 8004c86:	601a      	str	r2, [r3, #0]
  return -1;
 8004c88:	f04f 33ff 	mov.w	r3, #4294967295
}
 8004c8c:	4618      	mov	r0, r3
 8004c8e:	3708      	adds	r7, #8
 8004c90:	46bd      	mov	sp, r7
 8004c92:	bd80      	pop	{r7, pc}

08004c94 <_exit>:

void _exit (int status)
{
 8004c94:	b580      	push	{r7, lr}
 8004c96:	b082      	sub	sp, #8
 8004c98:	af00      	add	r7, sp, #0
 8004c9a:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8004c9c:	f04f 31ff 	mov.w	r1, #4294967295
 8004ca0:	6878      	ldr	r0, [r7, #4]
 8004ca2:	f7ff ffe7 	bl	8004c74 <_kill>
  while (1) {}    /* Make sure we hang here */
 8004ca6:	e7fe      	b.n	8004ca6 <_exit+0x12>

08004ca8 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8004ca8:	b580      	push	{r7, lr}
 8004caa:	b086      	sub	sp, #24
 8004cac:	af00      	add	r7, sp, #0
 8004cae:	60f8      	str	r0, [r7, #12]
 8004cb0:	60b9      	str	r1, [r7, #8]
 8004cb2:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004cb4:	2300      	movs	r3, #0
 8004cb6:	617b      	str	r3, [r7, #20]
 8004cb8:	e00a      	b.n	8004cd0 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8004cba:	f3af 8000 	nop.w
 8004cbe:	4601      	mov	r1, r0
 8004cc0:	68bb      	ldr	r3, [r7, #8]
 8004cc2:	1c5a      	adds	r2, r3, #1
 8004cc4:	60ba      	str	r2, [r7, #8]
 8004cc6:	b2ca      	uxtb	r2, r1
 8004cc8:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004cca:	697b      	ldr	r3, [r7, #20]
 8004ccc:	3301      	adds	r3, #1
 8004cce:	617b      	str	r3, [r7, #20]
 8004cd0:	697a      	ldr	r2, [r7, #20]
 8004cd2:	687b      	ldr	r3, [r7, #4]
 8004cd4:	429a      	cmp	r2, r3
 8004cd6:	dbf0      	blt.n	8004cba <_read+0x12>
  }

  return len;
 8004cd8:	687b      	ldr	r3, [r7, #4]
}
 8004cda:	4618      	mov	r0, r3
 8004cdc:	3718      	adds	r7, #24
 8004cde:	46bd      	mov	sp, r7
 8004ce0:	bd80      	pop	{r7, pc}

08004ce2 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8004ce2:	b580      	push	{r7, lr}
 8004ce4:	b086      	sub	sp, #24
 8004ce6:	af00      	add	r7, sp, #0
 8004ce8:	60f8      	str	r0, [r7, #12]
 8004cea:	60b9      	str	r1, [r7, #8]
 8004cec:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004cee:	2300      	movs	r3, #0
 8004cf0:	617b      	str	r3, [r7, #20]
 8004cf2:	e009      	b.n	8004d08 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8004cf4:	68bb      	ldr	r3, [r7, #8]
 8004cf6:	1c5a      	adds	r2, r3, #1
 8004cf8:	60ba      	str	r2, [r7, #8]
 8004cfa:	781b      	ldrb	r3, [r3, #0]
 8004cfc:	4618      	mov	r0, r3
 8004cfe:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004d02:	697b      	ldr	r3, [r7, #20]
 8004d04:	3301      	adds	r3, #1
 8004d06:	617b      	str	r3, [r7, #20]
 8004d08:	697a      	ldr	r2, [r7, #20]
 8004d0a:	687b      	ldr	r3, [r7, #4]
 8004d0c:	429a      	cmp	r2, r3
 8004d0e:	dbf1      	blt.n	8004cf4 <_write+0x12>
  }
  return len;
 8004d10:	687b      	ldr	r3, [r7, #4]
}
 8004d12:	4618      	mov	r0, r3
 8004d14:	3718      	adds	r7, #24
 8004d16:	46bd      	mov	sp, r7
 8004d18:	bd80      	pop	{r7, pc}

08004d1a <_close>:

int _close(int file)
{
 8004d1a:	b480      	push	{r7}
 8004d1c:	b083      	sub	sp, #12
 8004d1e:	af00      	add	r7, sp, #0
 8004d20:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8004d22:	f04f 33ff 	mov.w	r3, #4294967295
}
 8004d26:	4618      	mov	r0, r3
 8004d28:	370c      	adds	r7, #12
 8004d2a:	46bd      	mov	sp, r7
 8004d2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d30:	4770      	bx	lr

08004d32 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8004d32:	b480      	push	{r7}
 8004d34:	b083      	sub	sp, #12
 8004d36:	af00      	add	r7, sp, #0
 8004d38:	6078      	str	r0, [r7, #4]
 8004d3a:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8004d3c:	683b      	ldr	r3, [r7, #0]
 8004d3e:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8004d42:	605a      	str	r2, [r3, #4]
  return 0;
 8004d44:	2300      	movs	r3, #0
}
 8004d46:	4618      	mov	r0, r3
 8004d48:	370c      	adds	r7, #12
 8004d4a:	46bd      	mov	sp, r7
 8004d4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d50:	4770      	bx	lr

08004d52 <_isatty>:

int _isatty(int file)
{
 8004d52:	b480      	push	{r7}
 8004d54:	b083      	sub	sp, #12
 8004d56:	af00      	add	r7, sp, #0
 8004d58:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8004d5a:	2301      	movs	r3, #1
}
 8004d5c:	4618      	mov	r0, r3
 8004d5e:	370c      	adds	r7, #12
 8004d60:	46bd      	mov	sp, r7
 8004d62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d66:	4770      	bx	lr

08004d68 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8004d68:	b480      	push	{r7}
 8004d6a:	b085      	sub	sp, #20
 8004d6c:	af00      	add	r7, sp, #0
 8004d6e:	60f8      	str	r0, [r7, #12]
 8004d70:	60b9      	str	r1, [r7, #8]
 8004d72:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8004d74:	2300      	movs	r3, #0
}
 8004d76:	4618      	mov	r0, r3
 8004d78:	3714      	adds	r7, #20
 8004d7a:	46bd      	mov	sp, r7
 8004d7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004d80:	4770      	bx	lr
	...

08004d84 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8004d84:	b580      	push	{r7, lr}
 8004d86:	b086      	sub	sp, #24
 8004d88:	af00      	add	r7, sp, #0
 8004d8a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8004d8c:	4a14      	ldr	r2, [pc, #80]	; (8004de0 <_sbrk+0x5c>)
 8004d8e:	4b15      	ldr	r3, [pc, #84]	; (8004de4 <_sbrk+0x60>)
 8004d90:	1ad3      	subs	r3, r2, r3
 8004d92:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8004d94:	697b      	ldr	r3, [r7, #20]
 8004d96:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8004d98:	4b13      	ldr	r3, [pc, #76]	; (8004de8 <_sbrk+0x64>)
 8004d9a:	681b      	ldr	r3, [r3, #0]
 8004d9c:	2b00      	cmp	r3, #0
 8004d9e:	d102      	bne.n	8004da6 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8004da0:	4b11      	ldr	r3, [pc, #68]	; (8004de8 <_sbrk+0x64>)
 8004da2:	4a12      	ldr	r2, [pc, #72]	; (8004dec <_sbrk+0x68>)
 8004da4:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8004da6:	4b10      	ldr	r3, [pc, #64]	; (8004de8 <_sbrk+0x64>)
 8004da8:	681a      	ldr	r2, [r3, #0]
 8004daa:	687b      	ldr	r3, [r7, #4]
 8004dac:	4413      	add	r3, r2
 8004dae:	693a      	ldr	r2, [r7, #16]
 8004db0:	429a      	cmp	r2, r3
 8004db2:	d207      	bcs.n	8004dc4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8004db4:	f006 fbbc 	bl	800b530 <__errno>
 8004db8:	4603      	mov	r3, r0
 8004dba:	220c      	movs	r2, #12
 8004dbc:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8004dbe:	f04f 33ff 	mov.w	r3, #4294967295
 8004dc2:	e009      	b.n	8004dd8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8004dc4:	4b08      	ldr	r3, [pc, #32]	; (8004de8 <_sbrk+0x64>)
 8004dc6:	681b      	ldr	r3, [r3, #0]
 8004dc8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8004dca:	4b07      	ldr	r3, [pc, #28]	; (8004de8 <_sbrk+0x64>)
 8004dcc:	681a      	ldr	r2, [r3, #0]
 8004dce:	687b      	ldr	r3, [r7, #4]
 8004dd0:	4413      	add	r3, r2
 8004dd2:	4a05      	ldr	r2, [pc, #20]	; (8004de8 <_sbrk+0x64>)
 8004dd4:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8004dd6:	68fb      	ldr	r3, [r7, #12]
}
 8004dd8:	4618      	mov	r0, r3
 8004dda:	3718      	adds	r7, #24
 8004ddc:	46bd      	mov	sp, r7
 8004dde:	bd80      	pop	{r7, pc}
 8004de0:	20020000 	.word	0x20020000
 8004de4:	00000400 	.word	0x00000400
 8004de8:	200009dc 	.word	0x200009dc
 8004dec:	20000b30 	.word	0x20000b30

08004df0 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8004df0:	b480      	push	{r7}
 8004df2:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8004df4:	4b06      	ldr	r3, [pc, #24]	; (8004e10 <SystemInit+0x20>)
 8004df6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004dfa:	4a05      	ldr	r2, [pc, #20]	; (8004e10 <SystemInit+0x20>)
 8004dfc:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8004e00:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8004e04:	bf00      	nop
 8004e06:	46bd      	mov	sp, r7
 8004e08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e0c:	4770      	bx	lr
 8004e0e:	bf00      	nop
 8004e10:	e000ed00 	.word	0xe000ed00

08004e14 <Reset_Handler>:
 8004e14:	f8df d034 	ldr.w	sp, [pc, #52]	; 8004e4c <LoopFillZerobss+0xe>
 8004e18:	f7ff ffea 	bl	8004df0 <SystemInit>
 8004e1c:	480c      	ldr	r0, [pc, #48]	; (8004e50 <LoopFillZerobss+0x12>)
 8004e1e:	490d      	ldr	r1, [pc, #52]	; (8004e54 <LoopFillZerobss+0x16>)
 8004e20:	4a0d      	ldr	r2, [pc, #52]	; (8004e58 <LoopFillZerobss+0x1a>)
 8004e22:	2300      	movs	r3, #0
 8004e24:	e002      	b.n	8004e2c <LoopCopyDataInit>

08004e26 <CopyDataInit>:
 8004e26:	58d4      	ldr	r4, [r2, r3]
 8004e28:	50c4      	str	r4, [r0, r3]
 8004e2a:	3304      	adds	r3, #4

08004e2c <LoopCopyDataInit>:
 8004e2c:	18c4      	adds	r4, r0, r3
 8004e2e:	428c      	cmp	r4, r1
 8004e30:	d3f9      	bcc.n	8004e26 <CopyDataInit>
 8004e32:	4a0a      	ldr	r2, [pc, #40]	; (8004e5c <LoopFillZerobss+0x1e>)
 8004e34:	4c0a      	ldr	r4, [pc, #40]	; (8004e60 <LoopFillZerobss+0x22>)
 8004e36:	2300      	movs	r3, #0
 8004e38:	e001      	b.n	8004e3e <LoopFillZerobss>

08004e3a <FillZerobss>:
 8004e3a:	6013      	str	r3, [r2, #0]
 8004e3c:	3204      	adds	r2, #4

08004e3e <LoopFillZerobss>:
 8004e3e:	42a2      	cmp	r2, r4
 8004e40:	d3fb      	bcc.n	8004e3a <FillZerobss>
 8004e42:	f006 fb7b 	bl	800b53c <__libc_init_array>
 8004e46:	f7fd fb53 	bl	80024f0 <main>
 8004e4a:	4770      	bx	lr
 8004e4c:	20020000 	.word	0x20020000
 8004e50:	20000000 	.word	0x20000000
 8004e54:	200001e8 	.word	0x200001e8
 8004e58:	080124a0 	.word	0x080124a0
 8004e5c:	200001e8 	.word	0x200001e8
 8004e60:	20000b30 	.word	0x20000b30

08004e64 <ADC_IRQHandler>:
 8004e64:	e7fe      	b.n	8004e64 <ADC_IRQHandler>
	...

08004e68 <HAL_Init>:
 8004e68:	b580      	push	{r7, lr}
 8004e6a:	af00      	add	r7, sp, #0
 8004e6c:	4b0e      	ldr	r3, [pc, #56]	; (8004ea8 <HAL_Init+0x40>)
 8004e6e:	681b      	ldr	r3, [r3, #0]
 8004e70:	4a0d      	ldr	r2, [pc, #52]	; (8004ea8 <HAL_Init+0x40>)
 8004e72:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004e76:	6013      	str	r3, [r2, #0]
 8004e78:	4b0b      	ldr	r3, [pc, #44]	; (8004ea8 <HAL_Init+0x40>)
 8004e7a:	681b      	ldr	r3, [r3, #0]
 8004e7c:	4a0a      	ldr	r2, [pc, #40]	; (8004ea8 <HAL_Init+0x40>)
 8004e7e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8004e82:	6013      	str	r3, [r2, #0]
 8004e84:	4b08      	ldr	r3, [pc, #32]	; (8004ea8 <HAL_Init+0x40>)
 8004e86:	681b      	ldr	r3, [r3, #0]
 8004e88:	4a07      	ldr	r2, [pc, #28]	; (8004ea8 <HAL_Init+0x40>)
 8004e8a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004e8e:	6013      	str	r3, [r2, #0]
 8004e90:	2003      	movs	r0, #3
 8004e92:	f000 fd1b 	bl	80058cc <HAL_NVIC_SetPriorityGrouping>
 8004e96:	200f      	movs	r0, #15
 8004e98:	f000 f808 	bl	8004eac <HAL_InitTick>
 8004e9c:	f7ff fbd8 	bl	8004650 <HAL_MspInit>
 8004ea0:	2300      	movs	r3, #0
 8004ea2:	4618      	mov	r0, r3
 8004ea4:	bd80      	pop	{r7, pc}
 8004ea6:	bf00      	nop
 8004ea8:	40023c00 	.word	0x40023c00

08004eac <HAL_InitTick>:
 8004eac:	b580      	push	{r7, lr}
 8004eae:	b082      	sub	sp, #8
 8004eb0:	af00      	add	r7, sp, #0
 8004eb2:	6078      	str	r0, [r7, #4]
 8004eb4:	4b12      	ldr	r3, [pc, #72]	; (8004f00 <HAL_InitTick+0x54>)
 8004eb6:	681a      	ldr	r2, [r3, #0]
 8004eb8:	4b12      	ldr	r3, [pc, #72]	; (8004f04 <HAL_InitTick+0x58>)
 8004eba:	781b      	ldrb	r3, [r3, #0]
 8004ebc:	4619      	mov	r1, r3
 8004ebe:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8004ec2:	fbb3 f3f1 	udiv	r3, r3, r1
 8004ec6:	fbb2 f3f3 	udiv	r3, r2, r3
 8004eca:	4618      	mov	r0, r3
 8004ecc:	f000 fd33 	bl	8005936 <HAL_SYSTICK_Config>
 8004ed0:	4603      	mov	r3, r0
 8004ed2:	2b00      	cmp	r3, #0
 8004ed4:	d001      	beq.n	8004eda <HAL_InitTick+0x2e>
 8004ed6:	2301      	movs	r3, #1
 8004ed8:	e00e      	b.n	8004ef8 <HAL_InitTick+0x4c>
 8004eda:	687b      	ldr	r3, [r7, #4]
 8004edc:	2b0f      	cmp	r3, #15
 8004ede:	d80a      	bhi.n	8004ef6 <HAL_InitTick+0x4a>
 8004ee0:	2200      	movs	r2, #0
 8004ee2:	6879      	ldr	r1, [r7, #4]
 8004ee4:	f04f 30ff 	mov.w	r0, #4294967295
 8004ee8:	f000 fcfb 	bl	80058e2 <HAL_NVIC_SetPriority>
 8004eec:	4a06      	ldr	r2, [pc, #24]	; (8004f08 <HAL_InitTick+0x5c>)
 8004eee:	687b      	ldr	r3, [r7, #4]
 8004ef0:	6013      	str	r3, [r2, #0]
 8004ef2:	2300      	movs	r3, #0
 8004ef4:	e000      	b.n	8004ef8 <HAL_InitTick+0x4c>
 8004ef6:	2301      	movs	r3, #1
 8004ef8:	4618      	mov	r0, r3
 8004efa:	3708      	adds	r7, #8
 8004efc:	46bd      	mov	sp, r7
 8004efe:	bd80      	pop	{r7, pc}
 8004f00:	20000000 	.word	0x20000000
 8004f04:	20000008 	.word	0x20000008
 8004f08:	20000004 	.word	0x20000004

08004f0c <HAL_IncTick>:
 8004f0c:	b480      	push	{r7}
 8004f0e:	af00      	add	r7, sp, #0
 8004f10:	4b06      	ldr	r3, [pc, #24]	; (8004f2c <HAL_IncTick+0x20>)
 8004f12:	781b      	ldrb	r3, [r3, #0]
 8004f14:	461a      	mov	r2, r3
 8004f16:	4b06      	ldr	r3, [pc, #24]	; (8004f30 <HAL_IncTick+0x24>)
 8004f18:	681b      	ldr	r3, [r3, #0]
 8004f1a:	4413      	add	r3, r2
 8004f1c:	4a04      	ldr	r2, [pc, #16]	; (8004f30 <HAL_IncTick+0x24>)
 8004f1e:	6013      	str	r3, [r2, #0]
 8004f20:	bf00      	nop
 8004f22:	46bd      	mov	sp, r7
 8004f24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f28:	4770      	bx	lr
 8004f2a:	bf00      	nop
 8004f2c:	20000008 	.word	0x20000008
 8004f30:	200009e0 	.word	0x200009e0

08004f34 <HAL_GetTick>:
 8004f34:	b480      	push	{r7}
 8004f36:	af00      	add	r7, sp, #0
 8004f38:	4b03      	ldr	r3, [pc, #12]	; (8004f48 <HAL_GetTick+0x14>)
 8004f3a:	681b      	ldr	r3, [r3, #0]
 8004f3c:	4618      	mov	r0, r3
 8004f3e:	46bd      	mov	sp, r7
 8004f40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004f44:	4770      	bx	lr
 8004f46:	bf00      	nop
 8004f48:	200009e0 	.word	0x200009e0

08004f4c <HAL_Delay>:
 8004f4c:	b580      	push	{r7, lr}
 8004f4e:	b084      	sub	sp, #16
 8004f50:	af00      	add	r7, sp, #0
 8004f52:	6078      	str	r0, [r7, #4]
 8004f54:	f7ff ffee 	bl	8004f34 <HAL_GetTick>
 8004f58:	60b8      	str	r0, [r7, #8]
 8004f5a:	687b      	ldr	r3, [r7, #4]
 8004f5c:	60fb      	str	r3, [r7, #12]
 8004f5e:	68fb      	ldr	r3, [r7, #12]
 8004f60:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004f64:	d005      	beq.n	8004f72 <HAL_Delay+0x26>
 8004f66:	4b0a      	ldr	r3, [pc, #40]	; (8004f90 <HAL_Delay+0x44>)
 8004f68:	781b      	ldrb	r3, [r3, #0]
 8004f6a:	461a      	mov	r2, r3
 8004f6c:	68fb      	ldr	r3, [r7, #12]
 8004f6e:	4413      	add	r3, r2
 8004f70:	60fb      	str	r3, [r7, #12]
 8004f72:	bf00      	nop
 8004f74:	f7ff ffde 	bl	8004f34 <HAL_GetTick>
 8004f78:	4602      	mov	r2, r0
 8004f7a:	68bb      	ldr	r3, [r7, #8]
 8004f7c:	1ad3      	subs	r3, r2, r3
 8004f7e:	68fa      	ldr	r2, [r7, #12]
 8004f80:	429a      	cmp	r2, r3
 8004f82:	d8f7      	bhi.n	8004f74 <HAL_Delay+0x28>
 8004f84:	bf00      	nop
 8004f86:	bf00      	nop
 8004f88:	3710      	adds	r7, #16
 8004f8a:	46bd      	mov	sp, r7
 8004f8c:	bd80      	pop	{r7, pc}
 8004f8e:	bf00      	nop
 8004f90:	20000008 	.word	0x20000008

08004f94 <HAL_ADC_Init>:
 8004f94:	b580      	push	{r7, lr}
 8004f96:	b084      	sub	sp, #16
 8004f98:	af00      	add	r7, sp, #0
 8004f9a:	6078      	str	r0, [r7, #4]
 8004f9c:	2300      	movs	r3, #0
 8004f9e:	73fb      	strb	r3, [r7, #15]
 8004fa0:	687b      	ldr	r3, [r7, #4]
 8004fa2:	2b00      	cmp	r3, #0
 8004fa4:	d101      	bne.n	8004faa <HAL_ADC_Init+0x16>
 8004fa6:	2301      	movs	r3, #1
 8004fa8:	e033      	b.n	8005012 <HAL_ADC_Init+0x7e>
 8004faa:	687b      	ldr	r3, [r7, #4]
 8004fac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004fae:	2b00      	cmp	r3, #0
 8004fb0:	d109      	bne.n	8004fc6 <HAL_ADC_Init+0x32>
 8004fb2:	6878      	ldr	r0, [r7, #4]
 8004fb4:	f7ff fb74 	bl	80046a0 <HAL_ADC_MspInit>
 8004fb8:	687b      	ldr	r3, [r7, #4]
 8004fba:	2200      	movs	r2, #0
 8004fbc:	645a      	str	r2, [r3, #68]	; 0x44
 8004fbe:	687b      	ldr	r3, [r7, #4]
 8004fc0:	2200      	movs	r2, #0
 8004fc2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8004fc6:	687b      	ldr	r3, [r7, #4]
 8004fc8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004fca:	f003 0310 	and.w	r3, r3, #16
 8004fce:	2b00      	cmp	r3, #0
 8004fd0:	d118      	bne.n	8005004 <HAL_ADC_Init+0x70>
 8004fd2:	687b      	ldr	r3, [r7, #4]
 8004fd4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004fd6:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8004fda:	f023 0302 	bic.w	r3, r3, #2
 8004fde:	f043 0202 	orr.w	r2, r3, #2
 8004fe2:	687b      	ldr	r3, [r7, #4]
 8004fe4:	641a      	str	r2, [r3, #64]	; 0x40
 8004fe6:	6878      	ldr	r0, [r7, #4]
 8004fe8:	f000 faa4 	bl	8005534 <ADC_Init>
 8004fec:	687b      	ldr	r3, [r7, #4]
 8004fee:	2200      	movs	r2, #0
 8004ff0:	645a      	str	r2, [r3, #68]	; 0x44
 8004ff2:	687b      	ldr	r3, [r7, #4]
 8004ff4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004ff6:	f023 0303 	bic.w	r3, r3, #3
 8004ffa:	f043 0201 	orr.w	r2, r3, #1
 8004ffe:	687b      	ldr	r3, [r7, #4]
 8005000:	641a      	str	r2, [r3, #64]	; 0x40
 8005002:	e001      	b.n	8005008 <HAL_ADC_Init+0x74>
 8005004:	2301      	movs	r3, #1
 8005006:	73fb      	strb	r3, [r7, #15]
 8005008:	687b      	ldr	r3, [r7, #4]
 800500a:	2200      	movs	r2, #0
 800500c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005010:	7bfb      	ldrb	r3, [r7, #15]
 8005012:	4618      	mov	r0, r3
 8005014:	3710      	adds	r7, #16
 8005016:	46bd      	mov	sp, r7
 8005018:	bd80      	pop	{r7, pc}
	...

0800501c <HAL_ADC_Start>:
 800501c:	b480      	push	{r7}
 800501e:	b085      	sub	sp, #20
 8005020:	af00      	add	r7, sp, #0
 8005022:	6078      	str	r0, [r7, #4]
 8005024:	2300      	movs	r3, #0
 8005026:	60bb      	str	r3, [r7, #8]
 8005028:	687b      	ldr	r3, [r7, #4]
 800502a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800502e:	2b01      	cmp	r3, #1
 8005030:	d101      	bne.n	8005036 <HAL_ADC_Start+0x1a>
 8005032:	2302      	movs	r3, #2
 8005034:	e0b2      	b.n	800519c <HAL_ADC_Start+0x180>
 8005036:	687b      	ldr	r3, [r7, #4]
 8005038:	2201      	movs	r2, #1
 800503a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800503e:	687b      	ldr	r3, [r7, #4]
 8005040:	681b      	ldr	r3, [r3, #0]
 8005042:	689b      	ldr	r3, [r3, #8]
 8005044:	f003 0301 	and.w	r3, r3, #1
 8005048:	2b01      	cmp	r3, #1
 800504a:	d018      	beq.n	800507e <HAL_ADC_Start+0x62>
 800504c:	687b      	ldr	r3, [r7, #4]
 800504e:	681b      	ldr	r3, [r3, #0]
 8005050:	689a      	ldr	r2, [r3, #8]
 8005052:	687b      	ldr	r3, [r7, #4]
 8005054:	681b      	ldr	r3, [r3, #0]
 8005056:	f042 0201 	orr.w	r2, r2, #1
 800505a:	609a      	str	r2, [r3, #8]
 800505c:	4b52      	ldr	r3, [pc, #328]	; (80051a8 <HAL_ADC_Start+0x18c>)
 800505e:	681b      	ldr	r3, [r3, #0]
 8005060:	4a52      	ldr	r2, [pc, #328]	; (80051ac <HAL_ADC_Start+0x190>)
 8005062:	fba2 2303 	umull	r2, r3, r2, r3
 8005066:	0c9a      	lsrs	r2, r3, #18
 8005068:	4613      	mov	r3, r2
 800506a:	005b      	lsls	r3, r3, #1
 800506c:	4413      	add	r3, r2
 800506e:	60bb      	str	r3, [r7, #8]
 8005070:	e002      	b.n	8005078 <HAL_ADC_Start+0x5c>
 8005072:	68bb      	ldr	r3, [r7, #8]
 8005074:	3b01      	subs	r3, #1
 8005076:	60bb      	str	r3, [r7, #8]
 8005078:	68bb      	ldr	r3, [r7, #8]
 800507a:	2b00      	cmp	r3, #0
 800507c:	d1f9      	bne.n	8005072 <HAL_ADC_Start+0x56>
 800507e:	687b      	ldr	r3, [r7, #4]
 8005080:	681b      	ldr	r3, [r3, #0]
 8005082:	689b      	ldr	r3, [r3, #8]
 8005084:	f003 0301 	and.w	r3, r3, #1
 8005088:	2b01      	cmp	r3, #1
 800508a:	d17a      	bne.n	8005182 <HAL_ADC_Start+0x166>
 800508c:	687b      	ldr	r3, [r7, #4]
 800508e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005090:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8005094:	f023 0301 	bic.w	r3, r3, #1
 8005098:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 800509c:	687b      	ldr	r3, [r7, #4]
 800509e:	641a      	str	r2, [r3, #64]	; 0x40
 80050a0:	687b      	ldr	r3, [r7, #4]
 80050a2:	681b      	ldr	r3, [r3, #0]
 80050a4:	685b      	ldr	r3, [r3, #4]
 80050a6:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80050aa:	2b00      	cmp	r3, #0
 80050ac:	d007      	beq.n	80050be <HAL_ADC_Start+0xa2>
 80050ae:	687b      	ldr	r3, [r7, #4]
 80050b0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80050b2:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 80050b6:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 80050ba:	687b      	ldr	r3, [r7, #4]
 80050bc:	641a      	str	r2, [r3, #64]	; 0x40
 80050be:	687b      	ldr	r3, [r7, #4]
 80050c0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80050c2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80050c6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80050ca:	d106      	bne.n	80050da <HAL_ADC_Start+0xbe>
 80050cc:	687b      	ldr	r3, [r7, #4]
 80050ce:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80050d0:	f023 0206 	bic.w	r2, r3, #6
 80050d4:	687b      	ldr	r3, [r7, #4]
 80050d6:	645a      	str	r2, [r3, #68]	; 0x44
 80050d8:	e002      	b.n	80050e0 <HAL_ADC_Start+0xc4>
 80050da:	687b      	ldr	r3, [r7, #4]
 80050dc:	2200      	movs	r2, #0
 80050de:	645a      	str	r2, [r3, #68]	; 0x44
 80050e0:	687b      	ldr	r3, [r7, #4]
 80050e2:	2200      	movs	r2, #0
 80050e4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80050e8:	4b31      	ldr	r3, [pc, #196]	; (80051b0 <HAL_ADC_Start+0x194>)
 80050ea:	60fb      	str	r3, [r7, #12]
 80050ec:	687b      	ldr	r3, [r7, #4]
 80050ee:	681b      	ldr	r3, [r3, #0]
 80050f0:	f06f 0222 	mvn.w	r2, #34	; 0x22
 80050f4:	601a      	str	r2, [r3, #0]
 80050f6:	68fb      	ldr	r3, [r7, #12]
 80050f8:	685b      	ldr	r3, [r3, #4]
 80050fa:	f003 031f 	and.w	r3, r3, #31
 80050fe:	2b00      	cmp	r3, #0
 8005100:	d12a      	bne.n	8005158 <HAL_ADC_Start+0x13c>
 8005102:	687b      	ldr	r3, [r7, #4]
 8005104:	681b      	ldr	r3, [r3, #0]
 8005106:	4a2b      	ldr	r2, [pc, #172]	; (80051b4 <HAL_ADC_Start+0x198>)
 8005108:	4293      	cmp	r3, r2
 800510a:	d015      	beq.n	8005138 <HAL_ADC_Start+0x11c>
 800510c:	687b      	ldr	r3, [r7, #4]
 800510e:	681b      	ldr	r3, [r3, #0]
 8005110:	4a29      	ldr	r2, [pc, #164]	; (80051b8 <HAL_ADC_Start+0x19c>)
 8005112:	4293      	cmp	r3, r2
 8005114:	d105      	bne.n	8005122 <HAL_ADC_Start+0x106>
 8005116:	4b26      	ldr	r3, [pc, #152]	; (80051b0 <HAL_ADC_Start+0x194>)
 8005118:	685b      	ldr	r3, [r3, #4]
 800511a:	f003 031f 	and.w	r3, r3, #31
 800511e:	2b00      	cmp	r3, #0
 8005120:	d00a      	beq.n	8005138 <HAL_ADC_Start+0x11c>
 8005122:	687b      	ldr	r3, [r7, #4]
 8005124:	681b      	ldr	r3, [r3, #0]
 8005126:	4a25      	ldr	r2, [pc, #148]	; (80051bc <HAL_ADC_Start+0x1a0>)
 8005128:	4293      	cmp	r3, r2
 800512a:	d136      	bne.n	800519a <HAL_ADC_Start+0x17e>
 800512c:	4b20      	ldr	r3, [pc, #128]	; (80051b0 <HAL_ADC_Start+0x194>)
 800512e:	685b      	ldr	r3, [r3, #4]
 8005130:	f003 0310 	and.w	r3, r3, #16
 8005134:	2b00      	cmp	r3, #0
 8005136:	d130      	bne.n	800519a <HAL_ADC_Start+0x17e>
 8005138:	687b      	ldr	r3, [r7, #4]
 800513a:	681b      	ldr	r3, [r3, #0]
 800513c:	689b      	ldr	r3, [r3, #8]
 800513e:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8005142:	2b00      	cmp	r3, #0
 8005144:	d129      	bne.n	800519a <HAL_ADC_Start+0x17e>
 8005146:	687b      	ldr	r3, [r7, #4]
 8005148:	681b      	ldr	r3, [r3, #0]
 800514a:	689a      	ldr	r2, [r3, #8]
 800514c:	687b      	ldr	r3, [r7, #4]
 800514e:	681b      	ldr	r3, [r3, #0]
 8005150:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8005154:	609a      	str	r2, [r3, #8]
 8005156:	e020      	b.n	800519a <HAL_ADC_Start+0x17e>
 8005158:	687b      	ldr	r3, [r7, #4]
 800515a:	681b      	ldr	r3, [r3, #0]
 800515c:	4a15      	ldr	r2, [pc, #84]	; (80051b4 <HAL_ADC_Start+0x198>)
 800515e:	4293      	cmp	r3, r2
 8005160:	d11b      	bne.n	800519a <HAL_ADC_Start+0x17e>
 8005162:	687b      	ldr	r3, [r7, #4]
 8005164:	681b      	ldr	r3, [r3, #0]
 8005166:	689b      	ldr	r3, [r3, #8]
 8005168:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 800516c:	2b00      	cmp	r3, #0
 800516e:	d114      	bne.n	800519a <HAL_ADC_Start+0x17e>
 8005170:	687b      	ldr	r3, [r7, #4]
 8005172:	681b      	ldr	r3, [r3, #0]
 8005174:	689a      	ldr	r2, [r3, #8]
 8005176:	687b      	ldr	r3, [r7, #4]
 8005178:	681b      	ldr	r3, [r3, #0]
 800517a:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 800517e:	609a      	str	r2, [r3, #8]
 8005180:	e00b      	b.n	800519a <HAL_ADC_Start+0x17e>
 8005182:	687b      	ldr	r3, [r7, #4]
 8005184:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005186:	f043 0210 	orr.w	r2, r3, #16
 800518a:	687b      	ldr	r3, [r7, #4]
 800518c:	641a      	str	r2, [r3, #64]	; 0x40
 800518e:	687b      	ldr	r3, [r7, #4]
 8005190:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005192:	f043 0201 	orr.w	r2, r3, #1
 8005196:	687b      	ldr	r3, [r7, #4]
 8005198:	645a      	str	r2, [r3, #68]	; 0x44
 800519a:	2300      	movs	r3, #0
 800519c:	4618      	mov	r0, r3
 800519e:	3714      	adds	r7, #20
 80051a0:	46bd      	mov	sp, r7
 80051a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80051a6:	4770      	bx	lr
 80051a8:	20000000 	.word	0x20000000
 80051ac:	431bde83 	.word	0x431bde83
 80051b0:	40012300 	.word	0x40012300
 80051b4:	40012000 	.word	0x40012000
 80051b8:	40012100 	.word	0x40012100
 80051bc:	40012200 	.word	0x40012200

080051c0 <HAL_ADC_PollForConversion>:
 80051c0:	b580      	push	{r7, lr}
 80051c2:	b084      	sub	sp, #16
 80051c4:	af00      	add	r7, sp, #0
 80051c6:	6078      	str	r0, [r7, #4]
 80051c8:	6039      	str	r1, [r7, #0]
 80051ca:	2300      	movs	r3, #0
 80051cc:	60fb      	str	r3, [r7, #12]
 80051ce:	687b      	ldr	r3, [r7, #4]
 80051d0:	681b      	ldr	r3, [r3, #0]
 80051d2:	689b      	ldr	r3, [r3, #8]
 80051d4:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80051d8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80051dc:	d113      	bne.n	8005206 <HAL_ADC_PollForConversion+0x46>
 80051de:	687b      	ldr	r3, [r7, #4]
 80051e0:	681b      	ldr	r3, [r3, #0]
 80051e2:	689b      	ldr	r3, [r3, #8]
 80051e4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80051e8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80051ec:	d10b      	bne.n	8005206 <HAL_ADC_PollForConversion+0x46>
 80051ee:	687b      	ldr	r3, [r7, #4]
 80051f0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80051f2:	f043 0220 	orr.w	r2, r3, #32
 80051f6:	687b      	ldr	r3, [r7, #4]
 80051f8:	641a      	str	r2, [r3, #64]	; 0x40
 80051fa:	687b      	ldr	r3, [r7, #4]
 80051fc:	2200      	movs	r2, #0
 80051fe:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005202:	2301      	movs	r3, #1
 8005204:	e063      	b.n	80052ce <HAL_ADC_PollForConversion+0x10e>
 8005206:	f7ff fe95 	bl	8004f34 <HAL_GetTick>
 800520a:	60f8      	str	r0, [r7, #12]
 800520c:	e021      	b.n	8005252 <HAL_ADC_PollForConversion+0x92>
 800520e:	683b      	ldr	r3, [r7, #0]
 8005210:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005214:	d01d      	beq.n	8005252 <HAL_ADC_PollForConversion+0x92>
 8005216:	683b      	ldr	r3, [r7, #0]
 8005218:	2b00      	cmp	r3, #0
 800521a:	d007      	beq.n	800522c <HAL_ADC_PollForConversion+0x6c>
 800521c:	f7ff fe8a 	bl	8004f34 <HAL_GetTick>
 8005220:	4602      	mov	r2, r0
 8005222:	68fb      	ldr	r3, [r7, #12]
 8005224:	1ad3      	subs	r3, r2, r3
 8005226:	683a      	ldr	r2, [r7, #0]
 8005228:	429a      	cmp	r2, r3
 800522a:	d212      	bcs.n	8005252 <HAL_ADC_PollForConversion+0x92>
 800522c:	687b      	ldr	r3, [r7, #4]
 800522e:	681b      	ldr	r3, [r3, #0]
 8005230:	681b      	ldr	r3, [r3, #0]
 8005232:	f003 0302 	and.w	r3, r3, #2
 8005236:	2b02      	cmp	r3, #2
 8005238:	d00b      	beq.n	8005252 <HAL_ADC_PollForConversion+0x92>
 800523a:	687b      	ldr	r3, [r7, #4]
 800523c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800523e:	f043 0204 	orr.w	r2, r3, #4
 8005242:	687b      	ldr	r3, [r7, #4]
 8005244:	641a      	str	r2, [r3, #64]	; 0x40
 8005246:	687b      	ldr	r3, [r7, #4]
 8005248:	2200      	movs	r2, #0
 800524a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800524e:	2303      	movs	r3, #3
 8005250:	e03d      	b.n	80052ce <HAL_ADC_PollForConversion+0x10e>
 8005252:	687b      	ldr	r3, [r7, #4]
 8005254:	681b      	ldr	r3, [r3, #0]
 8005256:	681b      	ldr	r3, [r3, #0]
 8005258:	f003 0302 	and.w	r3, r3, #2
 800525c:	2b02      	cmp	r3, #2
 800525e:	d1d6      	bne.n	800520e <HAL_ADC_PollForConversion+0x4e>
 8005260:	687b      	ldr	r3, [r7, #4]
 8005262:	681b      	ldr	r3, [r3, #0]
 8005264:	f06f 0212 	mvn.w	r2, #18
 8005268:	601a      	str	r2, [r3, #0]
 800526a:	687b      	ldr	r3, [r7, #4]
 800526c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800526e:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 8005272:	687b      	ldr	r3, [r7, #4]
 8005274:	641a      	str	r2, [r3, #64]	; 0x40
 8005276:	687b      	ldr	r3, [r7, #4]
 8005278:	681b      	ldr	r3, [r3, #0]
 800527a:	689b      	ldr	r3, [r3, #8]
 800527c:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8005280:	2b00      	cmp	r3, #0
 8005282:	d123      	bne.n	80052cc <HAL_ADC_PollForConversion+0x10c>
 8005284:	687b      	ldr	r3, [r7, #4]
 8005286:	7e1b      	ldrb	r3, [r3, #24]
 8005288:	2b00      	cmp	r3, #0
 800528a:	d11f      	bne.n	80052cc <HAL_ADC_PollForConversion+0x10c>
 800528c:	687b      	ldr	r3, [r7, #4]
 800528e:	681b      	ldr	r3, [r3, #0]
 8005290:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005292:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
 8005296:	2b00      	cmp	r3, #0
 8005298:	d006      	beq.n	80052a8 <HAL_ADC_PollForConversion+0xe8>
 800529a:	687b      	ldr	r3, [r7, #4]
 800529c:	681b      	ldr	r3, [r3, #0]
 800529e:	689b      	ldr	r3, [r3, #8]
 80052a0:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80052a4:	2b00      	cmp	r3, #0
 80052a6:	d111      	bne.n	80052cc <HAL_ADC_PollForConversion+0x10c>
 80052a8:	687b      	ldr	r3, [r7, #4]
 80052aa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80052ac:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 80052b0:	687b      	ldr	r3, [r7, #4]
 80052b2:	641a      	str	r2, [r3, #64]	; 0x40
 80052b4:	687b      	ldr	r3, [r7, #4]
 80052b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80052b8:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80052bc:	2b00      	cmp	r3, #0
 80052be:	d105      	bne.n	80052cc <HAL_ADC_PollForConversion+0x10c>
 80052c0:	687b      	ldr	r3, [r7, #4]
 80052c2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80052c4:	f043 0201 	orr.w	r2, r3, #1
 80052c8:	687b      	ldr	r3, [r7, #4]
 80052ca:	641a      	str	r2, [r3, #64]	; 0x40
 80052cc:	2300      	movs	r3, #0
 80052ce:	4618      	mov	r0, r3
 80052d0:	3710      	adds	r7, #16
 80052d2:	46bd      	mov	sp, r7
 80052d4:	bd80      	pop	{r7, pc}

080052d6 <HAL_ADC_GetValue>:
 80052d6:	b480      	push	{r7}
 80052d8:	b083      	sub	sp, #12
 80052da:	af00      	add	r7, sp, #0
 80052dc:	6078      	str	r0, [r7, #4]
 80052de:	687b      	ldr	r3, [r7, #4]
 80052e0:	681b      	ldr	r3, [r3, #0]
 80052e2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80052e4:	4618      	mov	r0, r3
 80052e6:	370c      	adds	r7, #12
 80052e8:	46bd      	mov	sp, r7
 80052ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052ee:	4770      	bx	lr

080052f0 <HAL_ADC_ConfigChannel>:
 80052f0:	b480      	push	{r7}
 80052f2:	b085      	sub	sp, #20
 80052f4:	af00      	add	r7, sp, #0
 80052f6:	6078      	str	r0, [r7, #4]
 80052f8:	6039      	str	r1, [r7, #0]
 80052fa:	2300      	movs	r3, #0
 80052fc:	60bb      	str	r3, [r7, #8]
 80052fe:	687b      	ldr	r3, [r7, #4]
 8005300:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8005304:	2b01      	cmp	r3, #1
 8005306:	d101      	bne.n	800530c <HAL_ADC_ConfigChannel+0x1c>
 8005308:	2302      	movs	r3, #2
 800530a:	e105      	b.n	8005518 <HAL_ADC_ConfigChannel+0x228>
 800530c:	687b      	ldr	r3, [r7, #4]
 800530e:	2201      	movs	r2, #1
 8005310:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005314:	683b      	ldr	r3, [r7, #0]
 8005316:	681b      	ldr	r3, [r3, #0]
 8005318:	2b09      	cmp	r3, #9
 800531a:	d925      	bls.n	8005368 <HAL_ADC_ConfigChannel+0x78>
 800531c:	687b      	ldr	r3, [r7, #4]
 800531e:	681b      	ldr	r3, [r3, #0]
 8005320:	68d9      	ldr	r1, [r3, #12]
 8005322:	683b      	ldr	r3, [r7, #0]
 8005324:	681b      	ldr	r3, [r3, #0]
 8005326:	b29b      	uxth	r3, r3
 8005328:	461a      	mov	r2, r3
 800532a:	4613      	mov	r3, r2
 800532c:	005b      	lsls	r3, r3, #1
 800532e:	4413      	add	r3, r2
 8005330:	3b1e      	subs	r3, #30
 8005332:	2207      	movs	r2, #7
 8005334:	fa02 f303 	lsl.w	r3, r2, r3
 8005338:	43da      	mvns	r2, r3
 800533a:	687b      	ldr	r3, [r7, #4]
 800533c:	681b      	ldr	r3, [r3, #0]
 800533e:	400a      	ands	r2, r1
 8005340:	60da      	str	r2, [r3, #12]
 8005342:	687b      	ldr	r3, [r7, #4]
 8005344:	681b      	ldr	r3, [r3, #0]
 8005346:	68d9      	ldr	r1, [r3, #12]
 8005348:	683b      	ldr	r3, [r7, #0]
 800534a:	689a      	ldr	r2, [r3, #8]
 800534c:	683b      	ldr	r3, [r7, #0]
 800534e:	681b      	ldr	r3, [r3, #0]
 8005350:	b29b      	uxth	r3, r3
 8005352:	4618      	mov	r0, r3
 8005354:	4603      	mov	r3, r0
 8005356:	005b      	lsls	r3, r3, #1
 8005358:	4403      	add	r3, r0
 800535a:	3b1e      	subs	r3, #30
 800535c:	409a      	lsls	r2, r3
 800535e:	687b      	ldr	r3, [r7, #4]
 8005360:	681b      	ldr	r3, [r3, #0]
 8005362:	430a      	orrs	r2, r1
 8005364:	60da      	str	r2, [r3, #12]
 8005366:	e022      	b.n	80053ae <HAL_ADC_ConfigChannel+0xbe>
 8005368:	687b      	ldr	r3, [r7, #4]
 800536a:	681b      	ldr	r3, [r3, #0]
 800536c:	6919      	ldr	r1, [r3, #16]
 800536e:	683b      	ldr	r3, [r7, #0]
 8005370:	681b      	ldr	r3, [r3, #0]
 8005372:	b29b      	uxth	r3, r3
 8005374:	461a      	mov	r2, r3
 8005376:	4613      	mov	r3, r2
 8005378:	005b      	lsls	r3, r3, #1
 800537a:	4413      	add	r3, r2
 800537c:	2207      	movs	r2, #7
 800537e:	fa02 f303 	lsl.w	r3, r2, r3
 8005382:	43da      	mvns	r2, r3
 8005384:	687b      	ldr	r3, [r7, #4]
 8005386:	681b      	ldr	r3, [r3, #0]
 8005388:	400a      	ands	r2, r1
 800538a:	611a      	str	r2, [r3, #16]
 800538c:	687b      	ldr	r3, [r7, #4]
 800538e:	681b      	ldr	r3, [r3, #0]
 8005390:	6919      	ldr	r1, [r3, #16]
 8005392:	683b      	ldr	r3, [r7, #0]
 8005394:	689a      	ldr	r2, [r3, #8]
 8005396:	683b      	ldr	r3, [r7, #0]
 8005398:	681b      	ldr	r3, [r3, #0]
 800539a:	b29b      	uxth	r3, r3
 800539c:	4618      	mov	r0, r3
 800539e:	4603      	mov	r3, r0
 80053a0:	005b      	lsls	r3, r3, #1
 80053a2:	4403      	add	r3, r0
 80053a4:	409a      	lsls	r2, r3
 80053a6:	687b      	ldr	r3, [r7, #4]
 80053a8:	681b      	ldr	r3, [r3, #0]
 80053aa:	430a      	orrs	r2, r1
 80053ac:	611a      	str	r2, [r3, #16]
 80053ae:	683b      	ldr	r3, [r7, #0]
 80053b0:	685b      	ldr	r3, [r3, #4]
 80053b2:	2b06      	cmp	r3, #6
 80053b4:	d824      	bhi.n	8005400 <HAL_ADC_ConfigChannel+0x110>
 80053b6:	687b      	ldr	r3, [r7, #4]
 80053b8:	681b      	ldr	r3, [r3, #0]
 80053ba:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80053bc:	683b      	ldr	r3, [r7, #0]
 80053be:	685a      	ldr	r2, [r3, #4]
 80053c0:	4613      	mov	r3, r2
 80053c2:	009b      	lsls	r3, r3, #2
 80053c4:	4413      	add	r3, r2
 80053c6:	3b05      	subs	r3, #5
 80053c8:	221f      	movs	r2, #31
 80053ca:	fa02 f303 	lsl.w	r3, r2, r3
 80053ce:	43da      	mvns	r2, r3
 80053d0:	687b      	ldr	r3, [r7, #4]
 80053d2:	681b      	ldr	r3, [r3, #0]
 80053d4:	400a      	ands	r2, r1
 80053d6:	635a      	str	r2, [r3, #52]	; 0x34
 80053d8:	687b      	ldr	r3, [r7, #4]
 80053da:	681b      	ldr	r3, [r3, #0]
 80053dc:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80053de:	683b      	ldr	r3, [r7, #0]
 80053e0:	681b      	ldr	r3, [r3, #0]
 80053e2:	b29b      	uxth	r3, r3
 80053e4:	4618      	mov	r0, r3
 80053e6:	683b      	ldr	r3, [r7, #0]
 80053e8:	685a      	ldr	r2, [r3, #4]
 80053ea:	4613      	mov	r3, r2
 80053ec:	009b      	lsls	r3, r3, #2
 80053ee:	4413      	add	r3, r2
 80053f0:	3b05      	subs	r3, #5
 80053f2:	fa00 f203 	lsl.w	r2, r0, r3
 80053f6:	687b      	ldr	r3, [r7, #4]
 80053f8:	681b      	ldr	r3, [r3, #0]
 80053fa:	430a      	orrs	r2, r1
 80053fc:	635a      	str	r2, [r3, #52]	; 0x34
 80053fe:	e04c      	b.n	800549a <HAL_ADC_ConfigChannel+0x1aa>
 8005400:	683b      	ldr	r3, [r7, #0]
 8005402:	685b      	ldr	r3, [r3, #4]
 8005404:	2b0c      	cmp	r3, #12
 8005406:	d824      	bhi.n	8005452 <HAL_ADC_ConfigChannel+0x162>
 8005408:	687b      	ldr	r3, [r7, #4]
 800540a:	681b      	ldr	r3, [r3, #0]
 800540c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800540e:	683b      	ldr	r3, [r7, #0]
 8005410:	685a      	ldr	r2, [r3, #4]
 8005412:	4613      	mov	r3, r2
 8005414:	009b      	lsls	r3, r3, #2
 8005416:	4413      	add	r3, r2
 8005418:	3b23      	subs	r3, #35	; 0x23
 800541a:	221f      	movs	r2, #31
 800541c:	fa02 f303 	lsl.w	r3, r2, r3
 8005420:	43da      	mvns	r2, r3
 8005422:	687b      	ldr	r3, [r7, #4]
 8005424:	681b      	ldr	r3, [r3, #0]
 8005426:	400a      	ands	r2, r1
 8005428:	631a      	str	r2, [r3, #48]	; 0x30
 800542a:	687b      	ldr	r3, [r7, #4]
 800542c:	681b      	ldr	r3, [r3, #0]
 800542e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8005430:	683b      	ldr	r3, [r7, #0]
 8005432:	681b      	ldr	r3, [r3, #0]
 8005434:	b29b      	uxth	r3, r3
 8005436:	4618      	mov	r0, r3
 8005438:	683b      	ldr	r3, [r7, #0]
 800543a:	685a      	ldr	r2, [r3, #4]
 800543c:	4613      	mov	r3, r2
 800543e:	009b      	lsls	r3, r3, #2
 8005440:	4413      	add	r3, r2
 8005442:	3b23      	subs	r3, #35	; 0x23
 8005444:	fa00 f203 	lsl.w	r2, r0, r3
 8005448:	687b      	ldr	r3, [r7, #4]
 800544a:	681b      	ldr	r3, [r3, #0]
 800544c:	430a      	orrs	r2, r1
 800544e:	631a      	str	r2, [r3, #48]	; 0x30
 8005450:	e023      	b.n	800549a <HAL_ADC_ConfigChannel+0x1aa>
 8005452:	687b      	ldr	r3, [r7, #4]
 8005454:	681b      	ldr	r3, [r3, #0]
 8005456:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8005458:	683b      	ldr	r3, [r7, #0]
 800545a:	685a      	ldr	r2, [r3, #4]
 800545c:	4613      	mov	r3, r2
 800545e:	009b      	lsls	r3, r3, #2
 8005460:	4413      	add	r3, r2
 8005462:	3b41      	subs	r3, #65	; 0x41
 8005464:	221f      	movs	r2, #31
 8005466:	fa02 f303 	lsl.w	r3, r2, r3
 800546a:	43da      	mvns	r2, r3
 800546c:	687b      	ldr	r3, [r7, #4]
 800546e:	681b      	ldr	r3, [r3, #0]
 8005470:	400a      	ands	r2, r1
 8005472:	62da      	str	r2, [r3, #44]	; 0x2c
 8005474:	687b      	ldr	r3, [r7, #4]
 8005476:	681b      	ldr	r3, [r3, #0]
 8005478:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800547a:	683b      	ldr	r3, [r7, #0]
 800547c:	681b      	ldr	r3, [r3, #0]
 800547e:	b29b      	uxth	r3, r3
 8005480:	4618      	mov	r0, r3
 8005482:	683b      	ldr	r3, [r7, #0]
 8005484:	685a      	ldr	r2, [r3, #4]
 8005486:	4613      	mov	r3, r2
 8005488:	009b      	lsls	r3, r3, #2
 800548a:	4413      	add	r3, r2
 800548c:	3b41      	subs	r3, #65	; 0x41
 800548e:	fa00 f203 	lsl.w	r2, r0, r3
 8005492:	687b      	ldr	r3, [r7, #4]
 8005494:	681b      	ldr	r3, [r3, #0]
 8005496:	430a      	orrs	r2, r1
 8005498:	62da      	str	r2, [r3, #44]	; 0x2c
 800549a:	4b22      	ldr	r3, [pc, #136]	; (8005524 <HAL_ADC_ConfigChannel+0x234>)
 800549c:	60fb      	str	r3, [r7, #12]
 800549e:	687b      	ldr	r3, [r7, #4]
 80054a0:	681b      	ldr	r3, [r3, #0]
 80054a2:	4a21      	ldr	r2, [pc, #132]	; (8005528 <HAL_ADC_ConfigChannel+0x238>)
 80054a4:	4293      	cmp	r3, r2
 80054a6:	d109      	bne.n	80054bc <HAL_ADC_ConfigChannel+0x1cc>
 80054a8:	683b      	ldr	r3, [r7, #0]
 80054aa:	681b      	ldr	r3, [r3, #0]
 80054ac:	2b12      	cmp	r3, #18
 80054ae:	d105      	bne.n	80054bc <HAL_ADC_ConfigChannel+0x1cc>
 80054b0:	68fb      	ldr	r3, [r7, #12]
 80054b2:	685b      	ldr	r3, [r3, #4]
 80054b4:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 80054b8:	68fb      	ldr	r3, [r7, #12]
 80054ba:	605a      	str	r2, [r3, #4]
 80054bc:	687b      	ldr	r3, [r7, #4]
 80054be:	681b      	ldr	r3, [r3, #0]
 80054c0:	4a19      	ldr	r2, [pc, #100]	; (8005528 <HAL_ADC_ConfigChannel+0x238>)
 80054c2:	4293      	cmp	r3, r2
 80054c4:	d123      	bne.n	800550e <HAL_ADC_ConfigChannel+0x21e>
 80054c6:	683b      	ldr	r3, [r7, #0]
 80054c8:	681b      	ldr	r3, [r3, #0]
 80054ca:	2b10      	cmp	r3, #16
 80054cc:	d003      	beq.n	80054d6 <HAL_ADC_ConfigChannel+0x1e6>
 80054ce:	683b      	ldr	r3, [r7, #0]
 80054d0:	681b      	ldr	r3, [r3, #0]
 80054d2:	2b11      	cmp	r3, #17
 80054d4:	d11b      	bne.n	800550e <HAL_ADC_ConfigChannel+0x21e>
 80054d6:	68fb      	ldr	r3, [r7, #12]
 80054d8:	685b      	ldr	r3, [r3, #4]
 80054da:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 80054de:	68fb      	ldr	r3, [r7, #12]
 80054e0:	605a      	str	r2, [r3, #4]
 80054e2:	683b      	ldr	r3, [r7, #0]
 80054e4:	681b      	ldr	r3, [r3, #0]
 80054e6:	2b10      	cmp	r3, #16
 80054e8:	d111      	bne.n	800550e <HAL_ADC_ConfigChannel+0x21e>
 80054ea:	4b10      	ldr	r3, [pc, #64]	; (800552c <HAL_ADC_ConfigChannel+0x23c>)
 80054ec:	681b      	ldr	r3, [r3, #0]
 80054ee:	4a10      	ldr	r2, [pc, #64]	; (8005530 <HAL_ADC_ConfigChannel+0x240>)
 80054f0:	fba2 2303 	umull	r2, r3, r2, r3
 80054f4:	0c9a      	lsrs	r2, r3, #18
 80054f6:	4613      	mov	r3, r2
 80054f8:	009b      	lsls	r3, r3, #2
 80054fa:	4413      	add	r3, r2
 80054fc:	005b      	lsls	r3, r3, #1
 80054fe:	60bb      	str	r3, [r7, #8]
 8005500:	e002      	b.n	8005508 <HAL_ADC_ConfigChannel+0x218>
 8005502:	68bb      	ldr	r3, [r7, #8]
 8005504:	3b01      	subs	r3, #1
 8005506:	60bb      	str	r3, [r7, #8]
 8005508:	68bb      	ldr	r3, [r7, #8]
 800550a:	2b00      	cmp	r3, #0
 800550c:	d1f9      	bne.n	8005502 <HAL_ADC_ConfigChannel+0x212>
 800550e:	687b      	ldr	r3, [r7, #4]
 8005510:	2200      	movs	r2, #0
 8005512:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005516:	2300      	movs	r3, #0
 8005518:	4618      	mov	r0, r3
 800551a:	3714      	adds	r7, #20
 800551c:	46bd      	mov	sp, r7
 800551e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005522:	4770      	bx	lr
 8005524:	40012300 	.word	0x40012300
 8005528:	40012000 	.word	0x40012000
 800552c:	20000000 	.word	0x20000000
 8005530:	431bde83 	.word	0x431bde83

08005534 <ADC_Init>:
 8005534:	b480      	push	{r7}
 8005536:	b085      	sub	sp, #20
 8005538:	af00      	add	r7, sp, #0
 800553a:	6078      	str	r0, [r7, #4]
 800553c:	4b79      	ldr	r3, [pc, #484]	; (8005724 <ADC_Init+0x1f0>)
 800553e:	60fb      	str	r3, [r7, #12]
 8005540:	68fb      	ldr	r3, [r7, #12]
 8005542:	685b      	ldr	r3, [r3, #4]
 8005544:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8005548:	68fb      	ldr	r3, [r7, #12]
 800554a:	605a      	str	r2, [r3, #4]
 800554c:	68fb      	ldr	r3, [r7, #12]
 800554e:	685a      	ldr	r2, [r3, #4]
 8005550:	687b      	ldr	r3, [r7, #4]
 8005552:	685b      	ldr	r3, [r3, #4]
 8005554:	431a      	orrs	r2, r3
 8005556:	68fb      	ldr	r3, [r7, #12]
 8005558:	605a      	str	r2, [r3, #4]
 800555a:	687b      	ldr	r3, [r7, #4]
 800555c:	681b      	ldr	r3, [r3, #0]
 800555e:	685a      	ldr	r2, [r3, #4]
 8005560:	687b      	ldr	r3, [r7, #4]
 8005562:	681b      	ldr	r3, [r3, #0]
 8005564:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8005568:	605a      	str	r2, [r3, #4]
 800556a:	687b      	ldr	r3, [r7, #4]
 800556c:	681b      	ldr	r3, [r3, #0]
 800556e:	6859      	ldr	r1, [r3, #4]
 8005570:	687b      	ldr	r3, [r7, #4]
 8005572:	691b      	ldr	r3, [r3, #16]
 8005574:	021a      	lsls	r2, r3, #8
 8005576:	687b      	ldr	r3, [r7, #4]
 8005578:	681b      	ldr	r3, [r3, #0]
 800557a:	430a      	orrs	r2, r1
 800557c:	605a      	str	r2, [r3, #4]
 800557e:	687b      	ldr	r3, [r7, #4]
 8005580:	681b      	ldr	r3, [r3, #0]
 8005582:	685a      	ldr	r2, [r3, #4]
 8005584:	687b      	ldr	r3, [r7, #4]
 8005586:	681b      	ldr	r3, [r3, #0]
 8005588:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 800558c:	605a      	str	r2, [r3, #4]
 800558e:	687b      	ldr	r3, [r7, #4]
 8005590:	681b      	ldr	r3, [r3, #0]
 8005592:	6859      	ldr	r1, [r3, #4]
 8005594:	687b      	ldr	r3, [r7, #4]
 8005596:	689a      	ldr	r2, [r3, #8]
 8005598:	687b      	ldr	r3, [r7, #4]
 800559a:	681b      	ldr	r3, [r3, #0]
 800559c:	430a      	orrs	r2, r1
 800559e:	605a      	str	r2, [r3, #4]
 80055a0:	687b      	ldr	r3, [r7, #4]
 80055a2:	681b      	ldr	r3, [r3, #0]
 80055a4:	689a      	ldr	r2, [r3, #8]
 80055a6:	687b      	ldr	r3, [r7, #4]
 80055a8:	681b      	ldr	r3, [r3, #0]
 80055aa:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80055ae:	609a      	str	r2, [r3, #8]
 80055b0:	687b      	ldr	r3, [r7, #4]
 80055b2:	681b      	ldr	r3, [r3, #0]
 80055b4:	6899      	ldr	r1, [r3, #8]
 80055b6:	687b      	ldr	r3, [r7, #4]
 80055b8:	68da      	ldr	r2, [r3, #12]
 80055ba:	687b      	ldr	r3, [r7, #4]
 80055bc:	681b      	ldr	r3, [r3, #0]
 80055be:	430a      	orrs	r2, r1
 80055c0:	609a      	str	r2, [r3, #8]
 80055c2:	687b      	ldr	r3, [r7, #4]
 80055c4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80055c6:	4a58      	ldr	r2, [pc, #352]	; (8005728 <ADC_Init+0x1f4>)
 80055c8:	4293      	cmp	r3, r2
 80055ca:	d022      	beq.n	8005612 <ADC_Init+0xde>
 80055cc:	687b      	ldr	r3, [r7, #4]
 80055ce:	681b      	ldr	r3, [r3, #0]
 80055d0:	689a      	ldr	r2, [r3, #8]
 80055d2:	687b      	ldr	r3, [r7, #4]
 80055d4:	681b      	ldr	r3, [r3, #0]
 80055d6:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 80055da:	609a      	str	r2, [r3, #8]
 80055dc:	687b      	ldr	r3, [r7, #4]
 80055de:	681b      	ldr	r3, [r3, #0]
 80055e0:	6899      	ldr	r1, [r3, #8]
 80055e2:	687b      	ldr	r3, [r7, #4]
 80055e4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 80055e6:	687b      	ldr	r3, [r7, #4]
 80055e8:	681b      	ldr	r3, [r3, #0]
 80055ea:	430a      	orrs	r2, r1
 80055ec:	609a      	str	r2, [r3, #8]
 80055ee:	687b      	ldr	r3, [r7, #4]
 80055f0:	681b      	ldr	r3, [r3, #0]
 80055f2:	689a      	ldr	r2, [r3, #8]
 80055f4:	687b      	ldr	r3, [r7, #4]
 80055f6:	681b      	ldr	r3, [r3, #0]
 80055f8:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 80055fc:	609a      	str	r2, [r3, #8]
 80055fe:	687b      	ldr	r3, [r7, #4]
 8005600:	681b      	ldr	r3, [r3, #0]
 8005602:	6899      	ldr	r1, [r3, #8]
 8005604:	687b      	ldr	r3, [r7, #4]
 8005606:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005608:	687b      	ldr	r3, [r7, #4]
 800560a:	681b      	ldr	r3, [r3, #0]
 800560c:	430a      	orrs	r2, r1
 800560e:	609a      	str	r2, [r3, #8]
 8005610:	e00f      	b.n	8005632 <ADC_Init+0xfe>
 8005612:	687b      	ldr	r3, [r7, #4]
 8005614:	681b      	ldr	r3, [r3, #0]
 8005616:	689a      	ldr	r2, [r3, #8]
 8005618:	687b      	ldr	r3, [r7, #4]
 800561a:	681b      	ldr	r3, [r3, #0]
 800561c:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8005620:	609a      	str	r2, [r3, #8]
 8005622:	687b      	ldr	r3, [r7, #4]
 8005624:	681b      	ldr	r3, [r3, #0]
 8005626:	689a      	ldr	r2, [r3, #8]
 8005628:	687b      	ldr	r3, [r7, #4]
 800562a:	681b      	ldr	r3, [r3, #0]
 800562c:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8005630:	609a      	str	r2, [r3, #8]
 8005632:	687b      	ldr	r3, [r7, #4]
 8005634:	681b      	ldr	r3, [r3, #0]
 8005636:	689a      	ldr	r2, [r3, #8]
 8005638:	687b      	ldr	r3, [r7, #4]
 800563a:	681b      	ldr	r3, [r3, #0]
 800563c:	f022 0202 	bic.w	r2, r2, #2
 8005640:	609a      	str	r2, [r3, #8]
 8005642:	687b      	ldr	r3, [r7, #4]
 8005644:	681b      	ldr	r3, [r3, #0]
 8005646:	6899      	ldr	r1, [r3, #8]
 8005648:	687b      	ldr	r3, [r7, #4]
 800564a:	7e1b      	ldrb	r3, [r3, #24]
 800564c:	005a      	lsls	r2, r3, #1
 800564e:	687b      	ldr	r3, [r7, #4]
 8005650:	681b      	ldr	r3, [r3, #0]
 8005652:	430a      	orrs	r2, r1
 8005654:	609a      	str	r2, [r3, #8]
 8005656:	687b      	ldr	r3, [r7, #4]
 8005658:	f893 3020 	ldrb.w	r3, [r3, #32]
 800565c:	2b00      	cmp	r3, #0
 800565e:	d01b      	beq.n	8005698 <ADC_Init+0x164>
 8005660:	687b      	ldr	r3, [r7, #4]
 8005662:	681b      	ldr	r3, [r3, #0]
 8005664:	685a      	ldr	r2, [r3, #4]
 8005666:	687b      	ldr	r3, [r7, #4]
 8005668:	681b      	ldr	r3, [r3, #0]
 800566a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800566e:	605a      	str	r2, [r3, #4]
 8005670:	687b      	ldr	r3, [r7, #4]
 8005672:	681b      	ldr	r3, [r3, #0]
 8005674:	685a      	ldr	r2, [r3, #4]
 8005676:	687b      	ldr	r3, [r7, #4]
 8005678:	681b      	ldr	r3, [r3, #0]
 800567a:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 800567e:	605a      	str	r2, [r3, #4]
 8005680:	687b      	ldr	r3, [r7, #4]
 8005682:	681b      	ldr	r3, [r3, #0]
 8005684:	6859      	ldr	r1, [r3, #4]
 8005686:	687b      	ldr	r3, [r7, #4]
 8005688:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800568a:	3b01      	subs	r3, #1
 800568c:	035a      	lsls	r2, r3, #13
 800568e:	687b      	ldr	r3, [r7, #4]
 8005690:	681b      	ldr	r3, [r3, #0]
 8005692:	430a      	orrs	r2, r1
 8005694:	605a      	str	r2, [r3, #4]
 8005696:	e007      	b.n	80056a8 <ADC_Init+0x174>
 8005698:	687b      	ldr	r3, [r7, #4]
 800569a:	681b      	ldr	r3, [r3, #0]
 800569c:	685a      	ldr	r2, [r3, #4]
 800569e:	687b      	ldr	r3, [r7, #4]
 80056a0:	681b      	ldr	r3, [r3, #0]
 80056a2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80056a6:	605a      	str	r2, [r3, #4]
 80056a8:	687b      	ldr	r3, [r7, #4]
 80056aa:	681b      	ldr	r3, [r3, #0]
 80056ac:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80056ae:	687b      	ldr	r3, [r7, #4]
 80056b0:	681b      	ldr	r3, [r3, #0]
 80056b2:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 80056b6:	62da      	str	r2, [r3, #44]	; 0x2c
 80056b8:	687b      	ldr	r3, [r7, #4]
 80056ba:	681b      	ldr	r3, [r3, #0]
 80056bc:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80056be:	687b      	ldr	r3, [r7, #4]
 80056c0:	69db      	ldr	r3, [r3, #28]
 80056c2:	3b01      	subs	r3, #1
 80056c4:	051a      	lsls	r2, r3, #20
 80056c6:	687b      	ldr	r3, [r7, #4]
 80056c8:	681b      	ldr	r3, [r3, #0]
 80056ca:	430a      	orrs	r2, r1
 80056cc:	62da      	str	r2, [r3, #44]	; 0x2c
 80056ce:	687b      	ldr	r3, [r7, #4]
 80056d0:	681b      	ldr	r3, [r3, #0]
 80056d2:	689a      	ldr	r2, [r3, #8]
 80056d4:	687b      	ldr	r3, [r7, #4]
 80056d6:	681b      	ldr	r3, [r3, #0]
 80056d8:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 80056dc:	609a      	str	r2, [r3, #8]
 80056de:	687b      	ldr	r3, [r7, #4]
 80056e0:	681b      	ldr	r3, [r3, #0]
 80056e2:	6899      	ldr	r1, [r3, #8]
 80056e4:	687b      	ldr	r3, [r7, #4]
 80056e6:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 80056ea:	025a      	lsls	r2, r3, #9
 80056ec:	687b      	ldr	r3, [r7, #4]
 80056ee:	681b      	ldr	r3, [r3, #0]
 80056f0:	430a      	orrs	r2, r1
 80056f2:	609a      	str	r2, [r3, #8]
 80056f4:	687b      	ldr	r3, [r7, #4]
 80056f6:	681b      	ldr	r3, [r3, #0]
 80056f8:	689a      	ldr	r2, [r3, #8]
 80056fa:	687b      	ldr	r3, [r7, #4]
 80056fc:	681b      	ldr	r3, [r3, #0]
 80056fe:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005702:	609a      	str	r2, [r3, #8]
 8005704:	687b      	ldr	r3, [r7, #4]
 8005706:	681b      	ldr	r3, [r3, #0]
 8005708:	6899      	ldr	r1, [r3, #8]
 800570a:	687b      	ldr	r3, [r7, #4]
 800570c:	695b      	ldr	r3, [r3, #20]
 800570e:	029a      	lsls	r2, r3, #10
 8005710:	687b      	ldr	r3, [r7, #4]
 8005712:	681b      	ldr	r3, [r3, #0]
 8005714:	430a      	orrs	r2, r1
 8005716:	609a      	str	r2, [r3, #8]
 8005718:	bf00      	nop
 800571a:	3714      	adds	r7, #20
 800571c:	46bd      	mov	sp, r7
 800571e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005722:	4770      	bx	lr
 8005724:	40012300 	.word	0x40012300
 8005728:	0f000001 	.word	0x0f000001

0800572c <__NVIC_SetPriorityGrouping>:
 800572c:	b480      	push	{r7}
 800572e:	b085      	sub	sp, #20
 8005730:	af00      	add	r7, sp, #0
 8005732:	6078      	str	r0, [r7, #4]
 8005734:	687b      	ldr	r3, [r7, #4]
 8005736:	f003 0307 	and.w	r3, r3, #7
 800573a:	60fb      	str	r3, [r7, #12]
 800573c:	4b0c      	ldr	r3, [pc, #48]	; (8005770 <__NVIC_SetPriorityGrouping+0x44>)
 800573e:	68db      	ldr	r3, [r3, #12]
 8005740:	60bb      	str	r3, [r7, #8]
 8005742:	68ba      	ldr	r2, [r7, #8]
 8005744:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8005748:	4013      	ands	r3, r2
 800574a:	60bb      	str	r3, [r7, #8]
 800574c:	68fb      	ldr	r3, [r7, #12]
 800574e:	021a      	lsls	r2, r3, #8
 8005750:	68bb      	ldr	r3, [r7, #8]
 8005752:	4313      	orrs	r3, r2
 8005754:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8005758:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800575c:	60bb      	str	r3, [r7, #8]
 800575e:	4a04      	ldr	r2, [pc, #16]	; (8005770 <__NVIC_SetPriorityGrouping+0x44>)
 8005760:	68bb      	ldr	r3, [r7, #8]
 8005762:	60d3      	str	r3, [r2, #12]
 8005764:	bf00      	nop
 8005766:	3714      	adds	r7, #20
 8005768:	46bd      	mov	sp, r7
 800576a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800576e:	4770      	bx	lr
 8005770:	e000ed00 	.word	0xe000ed00

08005774 <__NVIC_GetPriorityGrouping>:
 8005774:	b480      	push	{r7}
 8005776:	af00      	add	r7, sp, #0
 8005778:	4b04      	ldr	r3, [pc, #16]	; (800578c <__NVIC_GetPriorityGrouping+0x18>)
 800577a:	68db      	ldr	r3, [r3, #12]
 800577c:	0a1b      	lsrs	r3, r3, #8
 800577e:	f003 0307 	and.w	r3, r3, #7
 8005782:	4618      	mov	r0, r3
 8005784:	46bd      	mov	sp, r7
 8005786:	f85d 7b04 	ldr.w	r7, [sp], #4
 800578a:	4770      	bx	lr
 800578c:	e000ed00 	.word	0xe000ed00

08005790 <__NVIC_EnableIRQ>:
 8005790:	b480      	push	{r7}
 8005792:	b083      	sub	sp, #12
 8005794:	af00      	add	r7, sp, #0
 8005796:	4603      	mov	r3, r0
 8005798:	71fb      	strb	r3, [r7, #7]
 800579a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800579e:	2b00      	cmp	r3, #0
 80057a0:	db0b      	blt.n	80057ba <__NVIC_EnableIRQ+0x2a>
 80057a2:	79fb      	ldrb	r3, [r7, #7]
 80057a4:	f003 021f 	and.w	r2, r3, #31
 80057a8:	4907      	ldr	r1, [pc, #28]	; (80057c8 <__NVIC_EnableIRQ+0x38>)
 80057aa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80057ae:	095b      	lsrs	r3, r3, #5
 80057b0:	2001      	movs	r0, #1
 80057b2:	fa00 f202 	lsl.w	r2, r0, r2
 80057b6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80057ba:	bf00      	nop
 80057bc:	370c      	adds	r7, #12
 80057be:	46bd      	mov	sp, r7
 80057c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80057c4:	4770      	bx	lr
 80057c6:	bf00      	nop
 80057c8:	e000e100 	.word	0xe000e100

080057cc <__NVIC_SetPriority>:
 80057cc:	b480      	push	{r7}
 80057ce:	b083      	sub	sp, #12
 80057d0:	af00      	add	r7, sp, #0
 80057d2:	4603      	mov	r3, r0
 80057d4:	6039      	str	r1, [r7, #0]
 80057d6:	71fb      	strb	r3, [r7, #7]
 80057d8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80057dc:	2b00      	cmp	r3, #0
 80057de:	db0a      	blt.n	80057f6 <__NVIC_SetPriority+0x2a>
 80057e0:	683b      	ldr	r3, [r7, #0]
 80057e2:	b2da      	uxtb	r2, r3
 80057e4:	490c      	ldr	r1, [pc, #48]	; (8005818 <__NVIC_SetPriority+0x4c>)
 80057e6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80057ea:	0112      	lsls	r2, r2, #4
 80057ec:	b2d2      	uxtb	r2, r2
 80057ee:	440b      	add	r3, r1
 80057f0:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80057f4:	e00a      	b.n	800580c <__NVIC_SetPriority+0x40>
 80057f6:	683b      	ldr	r3, [r7, #0]
 80057f8:	b2da      	uxtb	r2, r3
 80057fa:	4908      	ldr	r1, [pc, #32]	; (800581c <__NVIC_SetPriority+0x50>)
 80057fc:	79fb      	ldrb	r3, [r7, #7]
 80057fe:	f003 030f 	and.w	r3, r3, #15
 8005802:	3b04      	subs	r3, #4
 8005804:	0112      	lsls	r2, r2, #4
 8005806:	b2d2      	uxtb	r2, r2
 8005808:	440b      	add	r3, r1
 800580a:	761a      	strb	r2, [r3, #24]
 800580c:	bf00      	nop
 800580e:	370c      	adds	r7, #12
 8005810:	46bd      	mov	sp, r7
 8005812:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005816:	4770      	bx	lr
 8005818:	e000e100 	.word	0xe000e100
 800581c:	e000ed00 	.word	0xe000ed00

08005820 <NVIC_EncodePriority>:
 8005820:	b480      	push	{r7}
 8005822:	b089      	sub	sp, #36	; 0x24
 8005824:	af00      	add	r7, sp, #0
 8005826:	60f8      	str	r0, [r7, #12]
 8005828:	60b9      	str	r1, [r7, #8]
 800582a:	607a      	str	r2, [r7, #4]
 800582c:	68fb      	ldr	r3, [r7, #12]
 800582e:	f003 0307 	and.w	r3, r3, #7
 8005832:	61fb      	str	r3, [r7, #28]
 8005834:	69fb      	ldr	r3, [r7, #28]
 8005836:	f1c3 0307 	rsb	r3, r3, #7
 800583a:	2b04      	cmp	r3, #4
 800583c:	bf28      	it	cs
 800583e:	2304      	movcs	r3, #4
 8005840:	61bb      	str	r3, [r7, #24]
 8005842:	69fb      	ldr	r3, [r7, #28]
 8005844:	3304      	adds	r3, #4
 8005846:	2b06      	cmp	r3, #6
 8005848:	d902      	bls.n	8005850 <NVIC_EncodePriority+0x30>
 800584a:	69fb      	ldr	r3, [r7, #28]
 800584c:	3b03      	subs	r3, #3
 800584e:	e000      	b.n	8005852 <NVIC_EncodePriority+0x32>
 8005850:	2300      	movs	r3, #0
 8005852:	617b      	str	r3, [r7, #20]
 8005854:	f04f 32ff 	mov.w	r2, #4294967295
 8005858:	69bb      	ldr	r3, [r7, #24]
 800585a:	fa02 f303 	lsl.w	r3, r2, r3
 800585e:	43da      	mvns	r2, r3
 8005860:	68bb      	ldr	r3, [r7, #8]
 8005862:	401a      	ands	r2, r3
 8005864:	697b      	ldr	r3, [r7, #20]
 8005866:	409a      	lsls	r2, r3
 8005868:	f04f 31ff 	mov.w	r1, #4294967295
 800586c:	697b      	ldr	r3, [r7, #20]
 800586e:	fa01 f303 	lsl.w	r3, r1, r3
 8005872:	43d9      	mvns	r1, r3
 8005874:	687b      	ldr	r3, [r7, #4]
 8005876:	400b      	ands	r3, r1
 8005878:	4313      	orrs	r3, r2
 800587a:	4618      	mov	r0, r3
 800587c:	3724      	adds	r7, #36	; 0x24
 800587e:	46bd      	mov	sp, r7
 8005880:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005884:	4770      	bx	lr
	...

08005888 <SysTick_Config>:
 8005888:	b580      	push	{r7, lr}
 800588a:	b082      	sub	sp, #8
 800588c:	af00      	add	r7, sp, #0
 800588e:	6078      	str	r0, [r7, #4]
 8005890:	687b      	ldr	r3, [r7, #4]
 8005892:	3b01      	subs	r3, #1
 8005894:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8005898:	d301      	bcc.n	800589e <SysTick_Config+0x16>
 800589a:	2301      	movs	r3, #1
 800589c:	e00f      	b.n	80058be <SysTick_Config+0x36>
 800589e:	4a0a      	ldr	r2, [pc, #40]	; (80058c8 <SysTick_Config+0x40>)
 80058a0:	687b      	ldr	r3, [r7, #4]
 80058a2:	3b01      	subs	r3, #1
 80058a4:	6053      	str	r3, [r2, #4]
 80058a6:	210f      	movs	r1, #15
 80058a8:	f04f 30ff 	mov.w	r0, #4294967295
 80058ac:	f7ff ff8e 	bl	80057cc <__NVIC_SetPriority>
 80058b0:	4b05      	ldr	r3, [pc, #20]	; (80058c8 <SysTick_Config+0x40>)
 80058b2:	2200      	movs	r2, #0
 80058b4:	609a      	str	r2, [r3, #8]
 80058b6:	4b04      	ldr	r3, [pc, #16]	; (80058c8 <SysTick_Config+0x40>)
 80058b8:	2207      	movs	r2, #7
 80058ba:	601a      	str	r2, [r3, #0]
 80058bc:	2300      	movs	r3, #0
 80058be:	4618      	mov	r0, r3
 80058c0:	3708      	adds	r7, #8
 80058c2:	46bd      	mov	sp, r7
 80058c4:	bd80      	pop	{r7, pc}
 80058c6:	bf00      	nop
 80058c8:	e000e010 	.word	0xe000e010

080058cc <HAL_NVIC_SetPriorityGrouping>:
 80058cc:	b580      	push	{r7, lr}
 80058ce:	b082      	sub	sp, #8
 80058d0:	af00      	add	r7, sp, #0
 80058d2:	6078      	str	r0, [r7, #4]
 80058d4:	6878      	ldr	r0, [r7, #4]
 80058d6:	f7ff ff29 	bl	800572c <__NVIC_SetPriorityGrouping>
 80058da:	bf00      	nop
 80058dc:	3708      	adds	r7, #8
 80058de:	46bd      	mov	sp, r7
 80058e0:	bd80      	pop	{r7, pc}

080058e2 <HAL_NVIC_SetPriority>:
 80058e2:	b580      	push	{r7, lr}
 80058e4:	b086      	sub	sp, #24
 80058e6:	af00      	add	r7, sp, #0
 80058e8:	4603      	mov	r3, r0
 80058ea:	60b9      	str	r1, [r7, #8]
 80058ec:	607a      	str	r2, [r7, #4]
 80058ee:	73fb      	strb	r3, [r7, #15]
 80058f0:	2300      	movs	r3, #0
 80058f2:	617b      	str	r3, [r7, #20]
 80058f4:	f7ff ff3e 	bl	8005774 <__NVIC_GetPriorityGrouping>
 80058f8:	6178      	str	r0, [r7, #20]
 80058fa:	687a      	ldr	r2, [r7, #4]
 80058fc:	68b9      	ldr	r1, [r7, #8]
 80058fe:	6978      	ldr	r0, [r7, #20]
 8005900:	f7ff ff8e 	bl	8005820 <NVIC_EncodePriority>
 8005904:	4602      	mov	r2, r0
 8005906:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800590a:	4611      	mov	r1, r2
 800590c:	4618      	mov	r0, r3
 800590e:	f7ff ff5d 	bl	80057cc <__NVIC_SetPriority>
 8005912:	bf00      	nop
 8005914:	3718      	adds	r7, #24
 8005916:	46bd      	mov	sp, r7
 8005918:	bd80      	pop	{r7, pc}

0800591a <HAL_NVIC_EnableIRQ>:
 800591a:	b580      	push	{r7, lr}
 800591c:	b082      	sub	sp, #8
 800591e:	af00      	add	r7, sp, #0
 8005920:	4603      	mov	r3, r0
 8005922:	71fb      	strb	r3, [r7, #7]
 8005924:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8005928:	4618      	mov	r0, r3
 800592a:	f7ff ff31 	bl	8005790 <__NVIC_EnableIRQ>
 800592e:	bf00      	nop
 8005930:	3708      	adds	r7, #8
 8005932:	46bd      	mov	sp, r7
 8005934:	bd80      	pop	{r7, pc}

08005936 <HAL_SYSTICK_Config>:
 8005936:	b580      	push	{r7, lr}
 8005938:	b082      	sub	sp, #8
 800593a:	af00      	add	r7, sp, #0
 800593c:	6078      	str	r0, [r7, #4]
 800593e:	6878      	ldr	r0, [r7, #4]
 8005940:	f7ff ffa2 	bl	8005888 <SysTick_Config>
 8005944:	4603      	mov	r3, r0
 8005946:	4618      	mov	r0, r3
 8005948:	3708      	adds	r7, #8
 800594a:	46bd      	mov	sp, r7
 800594c:	bd80      	pop	{r7, pc}

0800594e <HAL_DMA_Abort>:
 800594e:	b580      	push	{r7, lr}
 8005950:	b084      	sub	sp, #16
 8005952:	af00      	add	r7, sp, #0
 8005954:	6078      	str	r0, [r7, #4]
 8005956:	687b      	ldr	r3, [r7, #4]
 8005958:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800595a:	60fb      	str	r3, [r7, #12]
 800595c:	f7ff faea 	bl	8004f34 <HAL_GetTick>
 8005960:	60b8      	str	r0, [r7, #8]
 8005962:	687b      	ldr	r3, [r7, #4]
 8005964:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8005968:	b2db      	uxtb	r3, r3
 800596a:	2b02      	cmp	r3, #2
 800596c:	d008      	beq.n	8005980 <HAL_DMA_Abort+0x32>
 800596e:	687b      	ldr	r3, [r7, #4]
 8005970:	2280      	movs	r2, #128	; 0x80
 8005972:	655a      	str	r2, [r3, #84]	; 0x54
 8005974:	687b      	ldr	r3, [r7, #4]
 8005976:	2200      	movs	r2, #0
 8005978:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800597c:	2301      	movs	r3, #1
 800597e:	e052      	b.n	8005a26 <HAL_DMA_Abort+0xd8>
 8005980:	687b      	ldr	r3, [r7, #4]
 8005982:	681b      	ldr	r3, [r3, #0]
 8005984:	681a      	ldr	r2, [r3, #0]
 8005986:	687b      	ldr	r3, [r7, #4]
 8005988:	681b      	ldr	r3, [r3, #0]
 800598a:	f022 0216 	bic.w	r2, r2, #22
 800598e:	601a      	str	r2, [r3, #0]
 8005990:	687b      	ldr	r3, [r7, #4]
 8005992:	681b      	ldr	r3, [r3, #0]
 8005994:	695a      	ldr	r2, [r3, #20]
 8005996:	687b      	ldr	r3, [r7, #4]
 8005998:	681b      	ldr	r3, [r3, #0]
 800599a:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800599e:	615a      	str	r2, [r3, #20]
 80059a0:	687b      	ldr	r3, [r7, #4]
 80059a2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80059a4:	2b00      	cmp	r3, #0
 80059a6:	d103      	bne.n	80059b0 <HAL_DMA_Abort+0x62>
 80059a8:	687b      	ldr	r3, [r7, #4]
 80059aa:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80059ac:	2b00      	cmp	r3, #0
 80059ae:	d007      	beq.n	80059c0 <HAL_DMA_Abort+0x72>
 80059b0:	687b      	ldr	r3, [r7, #4]
 80059b2:	681b      	ldr	r3, [r3, #0]
 80059b4:	681a      	ldr	r2, [r3, #0]
 80059b6:	687b      	ldr	r3, [r7, #4]
 80059b8:	681b      	ldr	r3, [r3, #0]
 80059ba:	f022 0208 	bic.w	r2, r2, #8
 80059be:	601a      	str	r2, [r3, #0]
 80059c0:	687b      	ldr	r3, [r7, #4]
 80059c2:	681b      	ldr	r3, [r3, #0]
 80059c4:	681a      	ldr	r2, [r3, #0]
 80059c6:	687b      	ldr	r3, [r7, #4]
 80059c8:	681b      	ldr	r3, [r3, #0]
 80059ca:	f022 0201 	bic.w	r2, r2, #1
 80059ce:	601a      	str	r2, [r3, #0]
 80059d0:	e013      	b.n	80059fa <HAL_DMA_Abort+0xac>
 80059d2:	f7ff faaf 	bl	8004f34 <HAL_GetTick>
 80059d6:	4602      	mov	r2, r0
 80059d8:	68bb      	ldr	r3, [r7, #8]
 80059da:	1ad3      	subs	r3, r2, r3
 80059dc:	2b05      	cmp	r3, #5
 80059de:	d90c      	bls.n	80059fa <HAL_DMA_Abort+0xac>
 80059e0:	687b      	ldr	r3, [r7, #4]
 80059e2:	2220      	movs	r2, #32
 80059e4:	655a      	str	r2, [r3, #84]	; 0x54
 80059e6:	687b      	ldr	r3, [r7, #4]
 80059e8:	2203      	movs	r2, #3
 80059ea:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80059ee:	687b      	ldr	r3, [r7, #4]
 80059f0:	2200      	movs	r2, #0
 80059f2:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80059f6:	2303      	movs	r3, #3
 80059f8:	e015      	b.n	8005a26 <HAL_DMA_Abort+0xd8>
 80059fa:	687b      	ldr	r3, [r7, #4]
 80059fc:	681b      	ldr	r3, [r3, #0]
 80059fe:	681b      	ldr	r3, [r3, #0]
 8005a00:	f003 0301 	and.w	r3, r3, #1
 8005a04:	2b00      	cmp	r3, #0
 8005a06:	d1e4      	bne.n	80059d2 <HAL_DMA_Abort+0x84>
 8005a08:	687b      	ldr	r3, [r7, #4]
 8005a0a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005a0c:	223f      	movs	r2, #63	; 0x3f
 8005a0e:	409a      	lsls	r2, r3
 8005a10:	68fb      	ldr	r3, [r7, #12]
 8005a12:	609a      	str	r2, [r3, #8]
 8005a14:	687b      	ldr	r3, [r7, #4]
 8005a16:	2201      	movs	r2, #1
 8005a18:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8005a1c:	687b      	ldr	r3, [r7, #4]
 8005a1e:	2200      	movs	r2, #0
 8005a20:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8005a24:	2300      	movs	r3, #0
 8005a26:	4618      	mov	r0, r3
 8005a28:	3710      	adds	r7, #16
 8005a2a:	46bd      	mov	sp, r7
 8005a2c:	bd80      	pop	{r7, pc}

08005a2e <HAL_DMA_Abort_IT>:
 8005a2e:	b480      	push	{r7}
 8005a30:	b083      	sub	sp, #12
 8005a32:	af00      	add	r7, sp, #0
 8005a34:	6078      	str	r0, [r7, #4]
 8005a36:	687b      	ldr	r3, [r7, #4]
 8005a38:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8005a3c:	b2db      	uxtb	r3, r3
 8005a3e:	2b02      	cmp	r3, #2
 8005a40:	d004      	beq.n	8005a4c <HAL_DMA_Abort_IT+0x1e>
 8005a42:	687b      	ldr	r3, [r7, #4]
 8005a44:	2280      	movs	r2, #128	; 0x80
 8005a46:	655a      	str	r2, [r3, #84]	; 0x54
 8005a48:	2301      	movs	r3, #1
 8005a4a:	e00c      	b.n	8005a66 <HAL_DMA_Abort_IT+0x38>
 8005a4c:	687b      	ldr	r3, [r7, #4]
 8005a4e:	2205      	movs	r2, #5
 8005a50:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8005a54:	687b      	ldr	r3, [r7, #4]
 8005a56:	681b      	ldr	r3, [r3, #0]
 8005a58:	681a      	ldr	r2, [r3, #0]
 8005a5a:	687b      	ldr	r3, [r7, #4]
 8005a5c:	681b      	ldr	r3, [r3, #0]
 8005a5e:	f022 0201 	bic.w	r2, r2, #1
 8005a62:	601a      	str	r2, [r3, #0]
 8005a64:	2300      	movs	r3, #0
 8005a66:	4618      	mov	r0, r3
 8005a68:	370c      	adds	r7, #12
 8005a6a:	46bd      	mov	sp, r7
 8005a6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a70:	4770      	bx	lr
	...

08005a74 <HAL_GPIO_Init>:
 8005a74:	b480      	push	{r7}
 8005a76:	b089      	sub	sp, #36	; 0x24
 8005a78:	af00      	add	r7, sp, #0
 8005a7a:	6078      	str	r0, [r7, #4]
 8005a7c:	6039      	str	r1, [r7, #0]
 8005a7e:	2300      	movs	r3, #0
 8005a80:	617b      	str	r3, [r7, #20]
 8005a82:	2300      	movs	r3, #0
 8005a84:	613b      	str	r3, [r7, #16]
 8005a86:	2300      	movs	r3, #0
 8005a88:	61bb      	str	r3, [r7, #24]
 8005a8a:	2300      	movs	r3, #0
 8005a8c:	61fb      	str	r3, [r7, #28]
 8005a8e:	e16b      	b.n	8005d68 <HAL_GPIO_Init+0x2f4>
 8005a90:	2201      	movs	r2, #1
 8005a92:	69fb      	ldr	r3, [r7, #28]
 8005a94:	fa02 f303 	lsl.w	r3, r2, r3
 8005a98:	617b      	str	r3, [r7, #20]
 8005a9a:	683b      	ldr	r3, [r7, #0]
 8005a9c:	681b      	ldr	r3, [r3, #0]
 8005a9e:	697a      	ldr	r2, [r7, #20]
 8005aa0:	4013      	ands	r3, r2
 8005aa2:	613b      	str	r3, [r7, #16]
 8005aa4:	693a      	ldr	r2, [r7, #16]
 8005aa6:	697b      	ldr	r3, [r7, #20]
 8005aa8:	429a      	cmp	r2, r3
 8005aaa:	f040 815a 	bne.w	8005d62 <HAL_GPIO_Init+0x2ee>
 8005aae:	683b      	ldr	r3, [r7, #0]
 8005ab0:	685b      	ldr	r3, [r3, #4]
 8005ab2:	f003 0303 	and.w	r3, r3, #3
 8005ab6:	2b01      	cmp	r3, #1
 8005ab8:	d005      	beq.n	8005ac6 <HAL_GPIO_Init+0x52>
 8005aba:	683b      	ldr	r3, [r7, #0]
 8005abc:	685b      	ldr	r3, [r3, #4]
 8005abe:	f003 0303 	and.w	r3, r3, #3
 8005ac2:	2b02      	cmp	r3, #2
 8005ac4:	d130      	bne.n	8005b28 <HAL_GPIO_Init+0xb4>
 8005ac6:	687b      	ldr	r3, [r7, #4]
 8005ac8:	689b      	ldr	r3, [r3, #8]
 8005aca:	61bb      	str	r3, [r7, #24]
 8005acc:	69fb      	ldr	r3, [r7, #28]
 8005ace:	005b      	lsls	r3, r3, #1
 8005ad0:	2203      	movs	r2, #3
 8005ad2:	fa02 f303 	lsl.w	r3, r2, r3
 8005ad6:	43db      	mvns	r3, r3
 8005ad8:	69ba      	ldr	r2, [r7, #24]
 8005ada:	4013      	ands	r3, r2
 8005adc:	61bb      	str	r3, [r7, #24]
 8005ade:	683b      	ldr	r3, [r7, #0]
 8005ae0:	68da      	ldr	r2, [r3, #12]
 8005ae2:	69fb      	ldr	r3, [r7, #28]
 8005ae4:	005b      	lsls	r3, r3, #1
 8005ae6:	fa02 f303 	lsl.w	r3, r2, r3
 8005aea:	69ba      	ldr	r2, [r7, #24]
 8005aec:	4313      	orrs	r3, r2
 8005aee:	61bb      	str	r3, [r7, #24]
 8005af0:	687b      	ldr	r3, [r7, #4]
 8005af2:	69ba      	ldr	r2, [r7, #24]
 8005af4:	609a      	str	r2, [r3, #8]
 8005af6:	687b      	ldr	r3, [r7, #4]
 8005af8:	685b      	ldr	r3, [r3, #4]
 8005afa:	61bb      	str	r3, [r7, #24]
 8005afc:	2201      	movs	r2, #1
 8005afe:	69fb      	ldr	r3, [r7, #28]
 8005b00:	fa02 f303 	lsl.w	r3, r2, r3
 8005b04:	43db      	mvns	r3, r3
 8005b06:	69ba      	ldr	r2, [r7, #24]
 8005b08:	4013      	ands	r3, r2
 8005b0a:	61bb      	str	r3, [r7, #24]
 8005b0c:	683b      	ldr	r3, [r7, #0]
 8005b0e:	685b      	ldr	r3, [r3, #4]
 8005b10:	091b      	lsrs	r3, r3, #4
 8005b12:	f003 0201 	and.w	r2, r3, #1
 8005b16:	69fb      	ldr	r3, [r7, #28]
 8005b18:	fa02 f303 	lsl.w	r3, r2, r3
 8005b1c:	69ba      	ldr	r2, [r7, #24]
 8005b1e:	4313      	orrs	r3, r2
 8005b20:	61bb      	str	r3, [r7, #24]
 8005b22:	687b      	ldr	r3, [r7, #4]
 8005b24:	69ba      	ldr	r2, [r7, #24]
 8005b26:	605a      	str	r2, [r3, #4]
 8005b28:	683b      	ldr	r3, [r7, #0]
 8005b2a:	685b      	ldr	r3, [r3, #4]
 8005b2c:	f003 0303 	and.w	r3, r3, #3
 8005b30:	2b03      	cmp	r3, #3
 8005b32:	d017      	beq.n	8005b64 <HAL_GPIO_Init+0xf0>
 8005b34:	687b      	ldr	r3, [r7, #4]
 8005b36:	68db      	ldr	r3, [r3, #12]
 8005b38:	61bb      	str	r3, [r7, #24]
 8005b3a:	69fb      	ldr	r3, [r7, #28]
 8005b3c:	005b      	lsls	r3, r3, #1
 8005b3e:	2203      	movs	r2, #3
 8005b40:	fa02 f303 	lsl.w	r3, r2, r3
 8005b44:	43db      	mvns	r3, r3
 8005b46:	69ba      	ldr	r2, [r7, #24]
 8005b48:	4013      	ands	r3, r2
 8005b4a:	61bb      	str	r3, [r7, #24]
 8005b4c:	683b      	ldr	r3, [r7, #0]
 8005b4e:	689a      	ldr	r2, [r3, #8]
 8005b50:	69fb      	ldr	r3, [r7, #28]
 8005b52:	005b      	lsls	r3, r3, #1
 8005b54:	fa02 f303 	lsl.w	r3, r2, r3
 8005b58:	69ba      	ldr	r2, [r7, #24]
 8005b5a:	4313      	orrs	r3, r2
 8005b5c:	61bb      	str	r3, [r7, #24]
 8005b5e:	687b      	ldr	r3, [r7, #4]
 8005b60:	69ba      	ldr	r2, [r7, #24]
 8005b62:	60da      	str	r2, [r3, #12]
 8005b64:	683b      	ldr	r3, [r7, #0]
 8005b66:	685b      	ldr	r3, [r3, #4]
 8005b68:	f003 0303 	and.w	r3, r3, #3
 8005b6c:	2b02      	cmp	r3, #2
 8005b6e:	d123      	bne.n	8005bb8 <HAL_GPIO_Init+0x144>
 8005b70:	69fb      	ldr	r3, [r7, #28]
 8005b72:	08da      	lsrs	r2, r3, #3
 8005b74:	687b      	ldr	r3, [r7, #4]
 8005b76:	3208      	adds	r2, #8
 8005b78:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8005b7c:	61bb      	str	r3, [r7, #24]
 8005b7e:	69fb      	ldr	r3, [r7, #28]
 8005b80:	f003 0307 	and.w	r3, r3, #7
 8005b84:	009b      	lsls	r3, r3, #2
 8005b86:	220f      	movs	r2, #15
 8005b88:	fa02 f303 	lsl.w	r3, r2, r3
 8005b8c:	43db      	mvns	r3, r3
 8005b8e:	69ba      	ldr	r2, [r7, #24]
 8005b90:	4013      	ands	r3, r2
 8005b92:	61bb      	str	r3, [r7, #24]
 8005b94:	683b      	ldr	r3, [r7, #0]
 8005b96:	691a      	ldr	r2, [r3, #16]
 8005b98:	69fb      	ldr	r3, [r7, #28]
 8005b9a:	f003 0307 	and.w	r3, r3, #7
 8005b9e:	009b      	lsls	r3, r3, #2
 8005ba0:	fa02 f303 	lsl.w	r3, r2, r3
 8005ba4:	69ba      	ldr	r2, [r7, #24]
 8005ba6:	4313      	orrs	r3, r2
 8005ba8:	61bb      	str	r3, [r7, #24]
 8005baa:	69fb      	ldr	r3, [r7, #28]
 8005bac:	08da      	lsrs	r2, r3, #3
 8005bae:	687b      	ldr	r3, [r7, #4]
 8005bb0:	3208      	adds	r2, #8
 8005bb2:	69b9      	ldr	r1, [r7, #24]
 8005bb4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8005bb8:	687b      	ldr	r3, [r7, #4]
 8005bba:	681b      	ldr	r3, [r3, #0]
 8005bbc:	61bb      	str	r3, [r7, #24]
 8005bbe:	69fb      	ldr	r3, [r7, #28]
 8005bc0:	005b      	lsls	r3, r3, #1
 8005bc2:	2203      	movs	r2, #3
 8005bc4:	fa02 f303 	lsl.w	r3, r2, r3
 8005bc8:	43db      	mvns	r3, r3
 8005bca:	69ba      	ldr	r2, [r7, #24]
 8005bcc:	4013      	ands	r3, r2
 8005bce:	61bb      	str	r3, [r7, #24]
 8005bd0:	683b      	ldr	r3, [r7, #0]
 8005bd2:	685b      	ldr	r3, [r3, #4]
 8005bd4:	f003 0203 	and.w	r2, r3, #3
 8005bd8:	69fb      	ldr	r3, [r7, #28]
 8005bda:	005b      	lsls	r3, r3, #1
 8005bdc:	fa02 f303 	lsl.w	r3, r2, r3
 8005be0:	69ba      	ldr	r2, [r7, #24]
 8005be2:	4313      	orrs	r3, r2
 8005be4:	61bb      	str	r3, [r7, #24]
 8005be6:	687b      	ldr	r3, [r7, #4]
 8005be8:	69ba      	ldr	r2, [r7, #24]
 8005bea:	601a      	str	r2, [r3, #0]
 8005bec:	683b      	ldr	r3, [r7, #0]
 8005bee:	685b      	ldr	r3, [r3, #4]
 8005bf0:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8005bf4:	2b00      	cmp	r3, #0
 8005bf6:	f000 80b4 	beq.w	8005d62 <HAL_GPIO_Init+0x2ee>
 8005bfa:	2300      	movs	r3, #0
 8005bfc:	60fb      	str	r3, [r7, #12]
 8005bfe:	4b60      	ldr	r3, [pc, #384]	; (8005d80 <HAL_GPIO_Init+0x30c>)
 8005c00:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005c02:	4a5f      	ldr	r2, [pc, #380]	; (8005d80 <HAL_GPIO_Init+0x30c>)
 8005c04:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8005c08:	6453      	str	r3, [r2, #68]	; 0x44
 8005c0a:	4b5d      	ldr	r3, [pc, #372]	; (8005d80 <HAL_GPIO_Init+0x30c>)
 8005c0c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005c0e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8005c12:	60fb      	str	r3, [r7, #12]
 8005c14:	68fb      	ldr	r3, [r7, #12]
 8005c16:	4a5b      	ldr	r2, [pc, #364]	; (8005d84 <HAL_GPIO_Init+0x310>)
 8005c18:	69fb      	ldr	r3, [r7, #28]
 8005c1a:	089b      	lsrs	r3, r3, #2
 8005c1c:	3302      	adds	r3, #2
 8005c1e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8005c22:	61bb      	str	r3, [r7, #24]
 8005c24:	69fb      	ldr	r3, [r7, #28]
 8005c26:	f003 0303 	and.w	r3, r3, #3
 8005c2a:	009b      	lsls	r3, r3, #2
 8005c2c:	220f      	movs	r2, #15
 8005c2e:	fa02 f303 	lsl.w	r3, r2, r3
 8005c32:	43db      	mvns	r3, r3
 8005c34:	69ba      	ldr	r2, [r7, #24]
 8005c36:	4013      	ands	r3, r2
 8005c38:	61bb      	str	r3, [r7, #24]
 8005c3a:	687b      	ldr	r3, [r7, #4]
 8005c3c:	4a52      	ldr	r2, [pc, #328]	; (8005d88 <HAL_GPIO_Init+0x314>)
 8005c3e:	4293      	cmp	r3, r2
 8005c40:	d02b      	beq.n	8005c9a <HAL_GPIO_Init+0x226>
 8005c42:	687b      	ldr	r3, [r7, #4]
 8005c44:	4a51      	ldr	r2, [pc, #324]	; (8005d8c <HAL_GPIO_Init+0x318>)
 8005c46:	4293      	cmp	r3, r2
 8005c48:	d025      	beq.n	8005c96 <HAL_GPIO_Init+0x222>
 8005c4a:	687b      	ldr	r3, [r7, #4]
 8005c4c:	4a50      	ldr	r2, [pc, #320]	; (8005d90 <HAL_GPIO_Init+0x31c>)
 8005c4e:	4293      	cmp	r3, r2
 8005c50:	d01f      	beq.n	8005c92 <HAL_GPIO_Init+0x21e>
 8005c52:	687b      	ldr	r3, [r7, #4]
 8005c54:	4a4f      	ldr	r2, [pc, #316]	; (8005d94 <HAL_GPIO_Init+0x320>)
 8005c56:	4293      	cmp	r3, r2
 8005c58:	d019      	beq.n	8005c8e <HAL_GPIO_Init+0x21a>
 8005c5a:	687b      	ldr	r3, [r7, #4]
 8005c5c:	4a4e      	ldr	r2, [pc, #312]	; (8005d98 <HAL_GPIO_Init+0x324>)
 8005c5e:	4293      	cmp	r3, r2
 8005c60:	d013      	beq.n	8005c8a <HAL_GPIO_Init+0x216>
 8005c62:	687b      	ldr	r3, [r7, #4]
 8005c64:	4a4d      	ldr	r2, [pc, #308]	; (8005d9c <HAL_GPIO_Init+0x328>)
 8005c66:	4293      	cmp	r3, r2
 8005c68:	d00d      	beq.n	8005c86 <HAL_GPIO_Init+0x212>
 8005c6a:	687b      	ldr	r3, [r7, #4]
 8005c6c:	4a4c      	ldr	r2, [pc, #304]	; (8005da0 <HAL_GPIO_Init+0x32c>)
 8005c6e:	4293      	cmp	r3, r2
 8005c70:	d007      	beq.n	8005c82 <HAL_GPIO_Init+0x20e>
 8005c72:	687b      	ldr	r3, [r7, #4]
 8005c74:	4a4b      	ldr	r2, [pc, #300]	; (8005da4 <HAL_GPIO_Init+0x330>)
 8005c76:	4293      	cmp	r3, r2
 8005c78:	d101      	bne.n	8005c7e <HAL_GPIO_Init+0x20a>
 8005c7a:	2307      	movs	r3, #7
 8005c7c:	e00e      	b.n	8005c9c <HAL_GPIO_Init+0x228>
 8005c7e:	2308      	movs	r3, #8
 8005c80:	e00c      	b.n	8005c9c <HAL_GPIO_Init+0x228>
 8005c82:	2306      	movs	r3, #6
 8005c84:	e00a      	b.n	8005c9c <HAL_GPIO_Init+0x228>
 8005c86:	2305      	movs	r3, #5
 8005c88:	e008      	b.n	8005c9c <HAL_GPIO_Init+0x228>
 8005c8a:	2304      	movs	r3, #4
 8005c8c:	e006      	b.n	8005c9c <HAL_GPIO_Init+0x228>
 8005c8e:	2303      	movs	r3, #3
 8005c90:	e004      	b.n	8005c9c <HAL_GPIO_Init+0x228>
 8005c92:	2302      	movs	r3, #2
 8005c94:	e002      	b.n	8005c9c <HAL_GPIO_Init+0x228>
 8005c96:	2301      	movs	r3, #1
 8005c98:	e000      	b.n	8005c9c <HAL_GPIO_Init+0x228>
 8005c9a:	2300      	movs	r3, #0
 8005c9c:	69fa      	ldr	r2, [r7, #28]
 8005c9e:	f002 0203 	and.w	r2, r2, #3
 8005ca2:	0092      	lsls	r2, r2, #2
 8005ca4:	4093      	lsls	r3, r2
 8005ca6:	69ba      	ldr	r2, [r7, #24]
 8005ca8:	4313      	orrs	r3, r2
 8005caa:	61bb      	str	r3, [r7, #24]
 8005cac:	4935      	ldr	r1, [pc, #212]	; (8005d84 <HAL_GPIO_Init+0x310>)
 8005cae:	69fb      	ldr	r3, [r7, #28]
 8005cb0:	089b      	lsrs	r3, r3, #2
 8005cb2:	3302      	adds	r3, #2
 8005cb4:	69ba      	ldr	r2, [r7, #24]
 8005cb6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8005cba:	4b3b      	ldr	r3, [pc, #236]	; (8005da8 <HAL_GPIO_Init+0x334>)
 8005cbc:	689b      	ldr	r3, [r3, #8]
 8005cbe:	61bb      	str	r3, [r7, #24]
 8005cc0:	693b      	ldr	r3, [r7, #16]
 8005cc2:	43db      	mvns	r3, r3
 8005cc4:	69ba      	ldr	r2, [r7, #24]
 8005cc6:	4013      	ands	r3, r2
 8005cc8:	61bb      	str	r3, [r7, #24]
 8005cca:	683b      	ldr	r3, [r7, #0]
 8005ccc:	685b      	ldr	r3, [r3, #4]
 8005cce:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8005cd2:	2b00      	cmp	r3, #0
 8005cd4:	d003      	beq.n	8005cde <HAL_GPIO_Init+0x26a>
 8005cd6:	69ba      	ldr	r2, [r7, #24]
 8005cd8:	693b      	ldr	r3, [r7, #16]
 8005cda:	4313      	orrs	r3, r2
 8005cdc:	61bb      	str	r3, [r7, #24]
 8005cde:	4a32      	ldr	r2, [pc, #200]	; (8005da8 <HAL_GPIO_Init+0x334>)
 8005ce0:	69bb      	ldr	r3, [r7, #24]
 8005ce2:	6093      	str	r3, [r2, #8]
 8005ce4:	4b30      	ldr	r3, [pc, #192]	; (8005da8 <HAL_GPIO_Init+0x334>)
 8005ce6:	68db      	ldr	r3, [r3, #12]
 8005ce8:	61bb      	str	r3, [r7, #24]
 8005cea:	693b      	ldr	r3, [r7, #16]
 8005cec:	43db      	mvns	r3, r3
 8005cee:	69ba      	ldr	r2, [r7, #24]
 8005cf0:	4013      	ands	r3, r2
 8005cf2:	61bb      	str	r3, [r7, #24]
 8005cf4:	683b      	ldr	r3, [r7, #0]
 8005cf6:	685b      	ldr	r3, [r3, #4]
 8005cf8:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8005cfc:	2b00      	cmp	r3, #0
 8005cfe:	d003      	beq.n	8005d08 <HAL_GPIO_Init+0x294>
 8005d00:	69ba      	ldr	r2, [r7, #24]
 8005d02:	693b      	ldr	r3, [r7, #16]
 8005d04:	4313      	orrs	r3, r2
 8005d06:	61bb      	str	r3, [r7, #24]
 8005d08:	4a27      	ldr	r2, [pc, #156]	; (8005da8 <HAL_GPIO_Init+0x334>)
 8005d0a:	69bb      	ldr	r3, [r7, #24]
 8005d0c:	60d3      	str	r3, [r2, #12]
 8005d0e:	4b26      	ldr	r3, [pc, #152]	; (8005da8 <HAL_GPIO_Init+0x334>)
 8005d10:	685b      	ldr	r3, [r3, #4]
 8005d12:	61bb      	str	r3, [r7, #24]
 8005d14:	693b      	ldr	r3, [r7, #16]
 8005d16:	43db      	mvns	r3, r3
 8005d18:	69ba      	ldr	r2, [r7, #24]
 8005d1a:	4013      	ands	r3, r2
 8005d1c:	61bb      	str	r3, [r7, #24]
 8005d1e:	683b      	ldr	r3, [r7, #0]
 8005d20:	685b      	ldr	r3, [r3, #4]
 8005d22:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005d26:	2b00      	cmp	r3, #0
 8005d28:	d003      	beq.n	8005d32 <HAL_GPIO_Init+0x2be>
 8005d2a:	69ba      	ldr	r2, [r7, #24]
 8005d2c:	693b      	ldr	r3, [r7, #16]
 8005d2e:	4313      	orrs	r3, r2
 8005d30:	61bb      	str	r3, [r7, #24]
 8005d32:	4a1d      	ldr	r2, [pc, #116]	; (8005da8 <HAL_GPIO_Init+0x334>)
 8005d34:	69bb      	ldr	r3, [r7, #24]
 8005d36:	6053      	str	r3, [r2, #4]
 8005d38:	4b1b      	ldr	r3, [pc, #108]	; (8005da8 <HAL_GPIO_Init+0x334>)
 8005d3a:	681b      	ldr	r3, [r3, #0]
 8005d3c:	61bb      	str	r3, [r7, #24]
 8005d3e:	693b      	ldr	r3, [r7, #16]
 8005d40:	43db      	mvns	r3, r3
 8005d42:	69ba      	ldr	r2, [r7, #24]
 8005d44:	4013      	ands	r3, r2
 8005d46:	61bb      	str	r3, [r7, #24]
 8005d48:	683b      	ldr	r3, [r7, #0]
 8005d4a:	685b      	ldr	r3, [r3, #4]
 8005d4c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8005d50:	2b00      	cmp	r3, #0
 8005d52:	d003      	beq.n	8005d5c <HAL_GPIO_Init+0x2e8>
 8005d54:	69ba      	ldr	r2, [r7, #24]
 8005d56:	693b      	ldr	r3, [r7, #16]
 8005d58:	4313      	orrs	r3, r2
 8005d5a:	61bb      	str	r3, [r7, #24]
 8005d5c:	4a12      	ldr	r2, [pc, #72]	; (8005da8 <HAL_GPIO_Init+0x334>)
 8005d5e:	69bb      	ldr	r3, [r7, #24]
 8005d60:	6013      	str	r3, [r2, #0]
 8005d62:	69fb      	ldr	r3, [r7, #28]
 8005d64:	3301      	adds	r3, #1
 8005d66:	61fb      	str	r3, [r7, #28]
 8005d68:	69fb      	ldr	r3, [r7, #28]
 8005d6a:	2b0f      	cmp	r3, #15
 8005d6c:	f67f ae90 	bls.w	8005a90 <HAL_GPIO_Init+0x1c>
 8005d70:	bf00      	nop
 8005d72:	bf00      	nop
 8005d74:	3724      	adds	r7, #36	; 0x24
 8005d76:	46bd      	mov	sp, r7
 8005d78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005d7c:	4770      	bx	lr
 8005d7e:	bf00      	nop
 8005d80:	40023800 	.word	0x40023800
 8005d84:	40013800 	.word	0x40013800
 8005d88:	40020000 	.word	0x40020000
 8005d8c:	40020400 	.word	0x40020400
 8005d90:	40020800 	.word	0x40020800
 8005d94:	40020c00 	.word	0x40020c00
 8005d98:	40021000 	.word	0x40021000
 8005d9c:	40021400 	.word	0x40021400
 8005da0:	40021800 	.word	0x40021800
 8005da4:	40021c00 	.word	0x40021c00
 8005da8:	40013c00 	.word	0x40013c00

08005dac <HAL_GPIO_WritePin>:
 8005dac:	b480      	push	{r7}
 8005dae:	b083      	sub	sp, #12
 8005db0:	af00      	add	r7, sp, #0
 8005db2:	6078      	str	r0, [r7, #4]
 8005db4:	460b      	mov	r3, r1
 8005db6:	807b      	strh	r3, [r7, #2]
 8005db8:	4613      	mov	r3, r2
 8005dba:	707b      	strb	r3, [r7, #1]
 8005dbc:	787b      	ldrb	r3, [r7, #1]
 8005dbe:	2b00      	cmp	r3, #0
 8005dc0:	d003      	beq.n	8005dca <HAL_GPIO_WritePin+0x1e>
 8005dc2:	887a      	ldrh	r2, [r7, #2]
 8005dc4:	687b      	ldr	r3, [r7, #4]
 8005dc6:	619a      	str	r2, [r3, #24]
 8005dc8:	e003      	b.n	8005dd2 <HAL_GPIO_WritePin+0x26>
 8005dca:	887b      	ldrh	r3, [r7, #2]
 8005dcc:	041a      	lsls	r2, r3, #16
 8005dce:	687b      	ldr	r3, [r7, #4]
 8005dd0:	619a      	str	r2, [r3, #24]
 8005dd2:	bf00      	nop
 8005dd4:	370c      	adds	r7, #12
 8005dd6:	46bd      	mov	sp, r7
 8005dd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ddc:	4770      	bx	lr
	...

08005de0 <HAL_I2C_Init>:
 8005de0:	b580      	push	{r7, lr}
 8005de2:	b084      	sub	sp, #16
 8005de4:	af00      	add	r7, sp, #0
 8005de6:	6078      	str	r0, [r7, #4]
 8005de8:	687b      	ldr	r3, [r7, #4]
 8005dea:	2b00      	cmp	r3, #0
 8005dec:	d101      	bne.n	8005df2 <HAL_I2C_Init+0x12>
 8005dee:	2301      	movs	r3, #1
 8005df0:	e12b      	b.n	800604a <HAL_I2C_Init+0x26a>
 8005df2:	687b      	ldr	r3, [r7, #4]
 8005df4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8005df8:	b2db      	uxtb	r3, r3
 8005dfa:	2b00      	cmp	r3, #0
 8005dfc:	d106      	bne.n	8005e0c <HAL_I2C_Init+0x2c>
 8005dfe:	687b      	ldr	r3, [r7, #4]
 8005e00:	2200      	movs	r2, #0
 8005e02:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8005e06:	6878      	ldr	r0, [r7, #4]
 8005e08:	f7fe fc8e 	bl	8004728 <HAL_I2C_MspInit>
 8005e0c:	687b      	ldr	r3, [r7, #4]
 8005e0e:	2224      	movs	r2, #36	; 0x24
 8005e10:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8005e14:	687b      	ldr	r3, [r7, #4]
 8005e16:	681b      	ldr	r3, [r3, #0]
 8005e18:	681a      	ldr	r2, [r3, #0]
 8005e1a:	687b      	ldr	r3, [r7, #4]
 8005e1c:	681b      	ldr	r3, [r3, #0]
 8005e1e:	f022 0201 	bic.w	r2, r2, #1
 8005e22:	601a      	str	r2, [r3, #0]
 8005e24:	687b      	ldr	r3, [r7, #4]
 8005e26:	681b      	ldr	r3, [r3, #0]
 8005e28:	681a      	ldr	r2, [r3, #0]
 8005e2a:	687b      	ldr	r3, [r7, #4]
 8005e2c:	681b      	ldr	r3, [r3, #0]
 8005e2e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8005e32:	601a      	str	r2, [r3, #0]
 8005e34:	687b      	ldr	r3, [r7, #4]
 8005e36:	681b      	ldr	r3, [r3, #0]
 8005e38:	681a      	ldr	r2, [r3, #0]
 8005e3a:	687b      	ldr	r3, [r7, #4]
 8005e3c:	681b      	ldr	r3, [r3, #0]
 8005e3e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8005e42:	601a      	str	r2, [r3, #0]
 8005e44:	f001 fc48 	bl	80076d8 <HAL_RCC_GetPCLK1Freq>
 8005e48:	60f8      	str	r0, [r7, #12]
 8005e4a:	687b      	ldr	r3, [r7, #4]
 8005e4c:	685b      	ldr	r3, [r3, #4]
 8005e4e:	4a81      	ldr	r2, [pc, #516]	; (8006054 <HAL_I2C_Init+0x274>)
 8005e50:	4293      	cmp	r3, r2
 8005e52:	d807      	bhi.n	8005e64 <HAL_I2C_Init+0x84>
 8005e54:	68fb      	ldr	r3, [r7, #12]
 8005e56:	4a80      	ldr	r2, [pc, #512]	; (8006058 <HAL_I2C_Init+0x278>)
 8005e58:	4293      	cmp	r3, r2
 8005e5a:	bf94      	ite	ls
 8005e5c:	2301      	movls	r3, #1
 8005e5e:	2300      	movhi	r3, #0
 8005e60:	b2db      	uxtb	r3, r3
 8005e62:	e006      	b.n	8005e72 <HAL_I2C_Init+0x92>
 8005e64:	68fb      	ldr	r3, [r7, #12]
 8005e66:	4a7d      	ldr	r2, [pc, #500]	; (800605c <HAL_I2C_Init+0x27c>)
 8005e68:	4293      	cmp	r3, r2
 8005e6a:	bf94      	ite	ls
 8005e6c:	2301      	movls	r3, #1
 8005e6e:	2300      	movhi	r3, #0
 8005e70:	b2db      	uxtb	r3, r3
 8005e72:	2b00      	cmp	r3, #0
 8005e74:	d001      	beq.n	8005e7a <HAL_I2C_Init+0x9a>
 8005e76:	2301      	movs	r3, #1
 8005e78:	e0e7      	b.n	800604a <HAL_I2C_Init+0x26a>
 8005e7a:	68fb      	ldr	r3, [r7, #12]
 8005e7c:	4a78      	ldr	r2, [pc, #480]	; (8006060 <HAL_I2C_Init+0x280>)
 8005e7e:	fba2 2303 	umull	r2, r3, r2, r3
 8005e82:	0c9b      	lsrs	r3, r3, #18
 8005e84:	60bb      	str	r3, [r7, #8]
 8005e86:	687b      	ldr	r3, [r7, #4]
 8005e88:	681b      	ldr	r3, [r3, #0]
 8005e8a:	685b      	ldr	r3, [r3, #4]
 8005e8c:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8005e90:	687b      	ldr	r3, [r7, #4]
 8005e92:	681b      	ldr	r3, [r3, #0]
 8005e94:	68ba      	ldr	r2, [r7, #8]
 8005e96:	430a      	orrs	r2, r1
 8005e98:	605a      	str	r2, [r3, #4]
 8005e9a:	687b      	ldr	r3, [r7, #4]
 8005e9c:	681b      	ldr	r3, [r3, #0]
 8005e9e:	6a1b      	ldr	r3, [r3, #32]
 8005ea0:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 8005ea4:	687b      	ldr	r3, [r7, #4]
 8005ea6:	685b      	ldr	r3, [r3, #4]
 8005ea8:	4a6a      	ldr	r2, [pc, #424]	; (8006054 <HAL_I2C_Init+0x274>)
 8005eaa:	4293      	cmp	r3, r2
 8005eac:	d802      	bhi.n	8005eb4 <HAL_I2C_Init+0xd4>
 8005eae:	68bb      	ldr	r3, [r7, #8]
 8005eb0:	3301      	adds	r3, #1
 8005eb2:	e009      	b.n	8005ec8 <HAL_I2C_Init+0xe8>
 8005eb4:	68bb      	ldr	r3, [r7, #8]
 8005eb6:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8005eba:	fb02 f303 	mul.w	r3, r2, r3
 8005ebe:	4a69      	ldr	r2, [pc, #420]	; (8006064 <HAL_I2C_Init+0x284>)
 8005ec0:	fba2 2303 	umull	r2, r3, r2, r3
 8005ec4:	099b      	lsrs	r3, r3, #6
 8005ec6:	3301      	adds	r3, #1
 8005ec8:	687a      	ldr	r2, [r7, #4]
 8005eca:	6812      	ldr	r2, [r2, #0]
 8005ecc:	430b      	orrs	r3, r1
 8005ece:	6213      	str	r3, [r2, #32]
 8005ed0:	687b      	ldr	r3, [r7, #4]
 8005ed2:	681b      	ldr	r3, [r3, #0]
 8005ed4:	69db      	ldr	r3, [r3, #28]
 8005ed6:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 8005eda:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8005ede:	687b      	ldr	r3, [r7, #4]
 8005ee0:	685b      	ldr	r3, [r3, #4]
 8005ee2:	495c      	ldr	r1, [pc, #368]	; (8006054 <HAL_I2C_Init+0x274>)
 8005ee4:	428b      	cmp	r3, r1
 8005ee6:	d819      	bhi.n	8005f1c <HAL_I2C_Init+0x13c>
 8005ee8:	68fb      	ldr	r3, [r7, #12]
 8005eea:	1e59      	subs	r1, r3, #1
 8005eec:	687b      	ldr	r3, [r7, #4]
 8005eee:	685b      	ldr	r3, [r3, #4]
 8005ef0:	005b      	lsls	r3, r3, #1
 8005ef2:	fbb1 f3f3 	udiv	r3, r1, r3
 8005ef6:	1c59      	adds	r1, r3, #1
 8005ef8:	f640 73fc 	movw	r3, #4092	; 0xffc
 8005efc:	400b      	ands	r3, r1
 8005efe:	2b00      	cmp	r3, #0
 8005f00:	d00a      	beq.n	8005f18 <HAL_I2C_Init+0x138>
 8005f02:	68fb      	ldr	r3, [r7, #12]
 8005f04:	1e59      	subs	r1, r3, #1
 8005f06:	687b      	ldr	r3, [r7, #4]
 8005f08:	685b      	ldr	r3, [r3, #4]
 8005f0a:	005b      	lsls	r3, r3, #1
 8005f0c:	fbb1 f3f3 	udiv	r3, r1, r3
 8005f10:	3301      	adds	r3, #1
 8005f12:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005f16:	e051      	b.n	8005fbc <HAL_I2C_Init+0x1dc>
 8005f18:	2304      	movs	r3, #4
 8005f1a:	e04f      	b.n	8005fbc <HAL_I2C_Init+0x1dc>
 8005f1c:	687b      	ldr	r3, [r7, #4]
 8005f1e:	689b      	ldr	r3, [r3, #8]
 8005f20:	2b00      	cmp	r3, #0
 8005f22:	d111      	bne.n	8005f48 <HAL_I2C_Init+0x168>
 8005f24:	68fb      	ldr	r3, [r7, #12]
 8005f26:	1e58      	subs	r0, r3, #1
 8005f28:	687b      	ldr	r3, [r7, #4]
 8005f2a:	6859      	ldr	r1, [r3, #4]
 8005f2c:	460b      	mov	r3, r1
 8005f2e:	005b      	lsls	r3, r3, #1
 8005f30:	440b      	add	r3, r1
 8005f32:	fbb0 f3f3 	udiv	r3, r0, r3
 8005f36:	3301      	adds	r3, #1
 8005f38:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005f3c:	2b00      	cmp	r3, #0
 8005f3e:	bf0c      	ite	eq
 8005f40:	2301      	moveq	r3, #1
 8005f42:	2300      	movne	r3, #0
 8005f44:	b2db      	uxtb	r3, r3
 8005f46:	e012      	b.n	8005f6e <HAL_I2C_Init+0x18e>
 8005f48:	68fb      	ldr	r3, [r7, #12]
 8005f4a:	1e58      	subs	r0, r3, #1
 8005f4c:	687b      	ldr	r3, [r7, #4]
 8005f4e:	6859      	ldr	r1, [r3, #4]
 8005f50:	460b      	mov	r3, r1
 8005f52:	009b      	lsls	r3, r3, #2
 8005f54:	440b      	add	r3, r1
 8005f56:	0099      	lsls	r1, r3, #2
 8005f58:	440b      	add	r3, r1
 8005f5a:	fbb0 f3f3 	udiv	r3, r0, r3
 8005f5e:	3301      	adds	r3, #1
 8005f60:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005f64:	2b00      	cmp	r3, #0
 8005f66:	bf0c      	ite	eq
 8005f68:	2301      	moveq	r3, #1
 8005f6a:	2300      	movne	r3, #0
 8005f6c:	b2db      	uxtb	r3, r3
 8005f6e:	2b00      	cmp	r3, #0
 8005f70:	d001      	beq.n	8005f76 <HAL_I2C_Init+0x196>
 8005f72:	2301      	movs	r3, #1
 8005f74:	e022      	b.n	8005fbc <HAL_I2C_Init+0x1dc>
 8005f76:	687b      	ldr	r3, [r7, #4]
 8005f78:	689b      	ldr	r3, [r3, #8]
 8005f7a:	2b00      	cmp	r3, #0
 8005f7c:	d10e      	bne.n	8005f9c <HAL_I2C_Init+0x1bc>
 8005f7e:	68fb      	ldr	r3, [r7, #12]
 8005f80:	1e58      	subs	r0, r3, #1
 8005f82:	687b      	ldr	r3, [r7, #4]
 8005f84:	6859      	ldr	r1, [r3, #4]
 8005f86:	460b      	mov	r3, r1
 8005f88:	005b      	lsls	r3, r3, #1
 8005f8a:	440b      	add	r3, r1
 8005f8c:	fbb0 f3f3 	udiv	r3, r0, r3
 8005f90:	3301      	adds	r3, #1
 8005f92:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005f96:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8005f9a:	e00f      	b.n	8005fbc <HAL_I2C_Init+0x1dc>
 8005f9c:	68fb      	ldr	r3, [r7, #12]
 8005f9e:	1e58      	subs	r0, r3, #1
 8005fa0:	687b      	ldr	r3, [r7, #4]
 8005fa2:	6859      	ldr	r1, [r3, #4]
 8005fa4:	460b      	mov	r3, r1
 8005fa6:	009b      	lsls	r3, r3, #2
 8005fa8:	440b      	add	r3, r1
 8005faa:	0099      	lsls	r1, r3, #2
 8005fac:	440b      	add	r3, r1
 8005fae:	fbb0 f3f3 	udiv	r3, r0, r3
 8005fb2:	3301      	adds	r3, #1
 8005fb4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005fb8:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8005fbc:	6879      	ldr	r1, [r7, #4]
 8005fbe:	6809      	ldr	r1, [r1, #0]
 8005fc0:	4313      	orrs	r3, r2
 8005fc2:	61cb      	str	r3, [r1, #28]
 8005fc4:	687b      	ldr	r3, [r7, #4]
 8005fc6:	681b      	ldr	r3, [r3, #0]
 8005fc8:	681b      	ldr	r3, [r3, #0]
 8005fca:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 8005fce:	687b      	ldr	r3, [r7, #4]
 8005fd0:	69da      	ldr	r2, [r3, #28]
 8005fd2:	687b      	ldr	r3, [r7, #4]
 8005fd4:	6a1b      	ldr	r3, [r3, #32]
 8005fd6:	431a      	orrs	r2, r3
 8005fd8:	687b      	ldr	r3, [r7, #4]
 8005fda:	681b      	ldr	r3, [r3, #0]
 8005fdc:	430a      	orrs	r2, r1
 8005fde:	601a      	str	r2, [r3, #0]
 8005fe0:	687b      	ldr	r3, [r7, #4]
 8005fe2:	681b      	ldr	r3, [r3, #0]
 8005fe4:	689b      	ldr	r3, [r3, #8]
 8005fe6:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 8005fea:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8005fee:	687a      	ldr	r2, [r7, #4]
 8005ff0:	6911      	ldr	r1, [r2, #16]
 8005ff2:	687a      	ldr	r2, [r7, #4]
 8005ff4:	68d2      	ldr	r2, [r2, #12]
 8005ff6:	4311      	orrs	r1, r2
 8005ff8:	687a      	ldr	r2, [r7, #4]
 8005ffa:	6812      	ldr	r2, [r2, #0]
 8005ffc:	430b      	orrs	r3, r1
 8005ffe:	6093      	str	r3, [r2, #8]
 8006000:	687b      	ldr	r3, [r7, #4]
 8006002:	681b      	ldr	r3, [r3, #0]
 8006004:	68db      	ldr	r3, [r3, #12]
 8006006:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 800600a:	687b      	ldr	r3, [r7, #4]
 800600c:	695a      	ldr	r2, [r3, #20]
 800600e:	687b      	ldr	r3, [r7, #4]
 8006010:	699b      	ldr	r3, [r3, #24]
 8006012:	431a      	orrs	r2, r3
 8006014:	687b      	ldr	r3, [r7, #4]
 8006016:	681b      	ldr	r3, [r3, #0]
 8006018:	430a      	orrs	r2, r1
 800601a:	60da      	str	r2, [r3, #12]
 800601c:	687b      	ldr	r3, [r7, #4]
 800601e:	681b      	ldr	r3, [r3, #0]
 8006020:	681a      	ldr	r2, [r3, #0]
 8006022:	687b      	ldr	r3, [r7, #4]
 8006024:	681b      	ldr	r3, [r3, #0]
 8006026:	f042 0201 	orr.w	r2, r2, #1
 800602a:	601a      	str	r2, [r3, #0]
 800602c:	687b      	ldr	r3, [r7, #4]
 800602e:	2200      	movs	r2, #0
 8006030:	641a      	str	r2, [r3, #64]	; 0x40
 8006032:	687b      	ldr	r3, [r7, #4]
 8006034:	2220      	movs	r2, #32
 8006036:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800603a:	687b      	ldr	r3, [r7, #4]
 800603c:	2200      	movs	r2, #0
 800603e:	631a      	str	r2, [r3, #48]	; 0x30
 8006040:	687b      	ldr	r3, [r7, #4]
 8006042:	2200      	movs	r2, #0
 8006044:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006048:	2300      	movs	r3, #0
 800604a:	4618      	mov	r0, r3
 800604c:	3710      	adds	r7, #16
 800604e:	46bd      	mov	sp, r7
 8006050:	bd80      	pop	{r7, pc}
 8006052:	bf00      	nop
 8006054:	000186a0 	.word	0x000186a0
 8006058:	001e847f 	.word	0x001e847f
 800605c:	003d08ff 	.word	0x003d08ff
 8006060:	431bde83 	.word	0x431bde83
 8006064:	10624dd3 	.word	0x10624dd3

08006068 <HAL_I2C_Mem_Write>:
 8006068:	b580      	push	{r7, lr}
 800606a:	b088      	sub	sp, #32
 800606c:	af02      	add	r7, sp, #8
 800606e:	60f8      	str	r0, [r7, #12]
 8006070:	4608      	mov	r0, r1
 8006072:	4611      	mov	r1, r2
 8006074:	461a      	mov	r2, r3
 8006076:	4603      	mov	r3, r0
 8006078:	817b      	strh	r3, [r7, #10]
 800607a:	460b      	mov	r3, r1
 800607c:	813b      	strh	r3, [r7, #8]
 800607e:	4613      	mov	r3, r2
 8006080:	80fb      	strh	r3, [r7, #6]
 8006082:	f7fe ff57 	bl	8004f34 <HAL_GetTick>
 8006086:	6178      	str	r0, [r7, #20]
 8006088:	68fb      	ldr	r3, [r7, #12]
 800608a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800608e:	b2db      	uxtb	r3, r3
 8006090:	2b20      	cmp	r3, #32
 8006092:	f040 80d9 	bne.w	8006248 <HAL_I2C_Mem_Write+0x1e0>
 8006096:	697b      	ldr	r3, [r7, #20]
 8006098:	9300      	str	r3, [sp, #0]
 800609a:	2319      	movs	r3, #25
 800609c:	2201      	movs	r2, #1
 800609e:	496d      	ldr	r1, [pc, #436]	; (8006254 <HAL_I2C_Mem_Write+0x1ec>)
 80060a0:	68f8      	ldr	r0, [r7, #12]
 80060a2:	f000 fc8b 	bl	80069bc <I2C_WaitOnFlagUntilTimeout>
 80060a6:	4603      	mov	r3, r0
 80060a8:	2b00      	cmp	r3, #0
 80060aa:	d001      	beq.n	80060b0 <HAL_I2C_Mem_Write+0x48>
 80060ac:	2302      	movs	r3, #2
 80060ae:	e0cc      	b.n	800624a <HAL_I2C_Mem_Write+0x1e2>
 80060b0:	68fb      	ldr	r3, [r7, #12]
 80060b2:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80060b6:	2b01      	cmp	r3, #1
 80060b8:	d101      	bne.n	80060be <HAL_I2C_Mem_Write+0x56>
 80060ba:	2302      	movs	r3, #2
 80060bc:	e0c5      	b.n	800624a <HAL_I2C_Mem_Write+0x1e2>
 80060be:	68fb      	ldr	r3, [r7, #12]
 80060c0:	2201      	movs	r2, #1
 80060c2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80060c6:	68fb      	ldr	r3, [r7, #12]
 80060c8:	681b      	ldr	r3, [r3, #0]
 80060ca:	681b      	ldr	r3, [r3, #0]
 80060cc:	f003 0301 	and.w	r3, r3, #1
 80060d0:	2b01      	cmp	r3, #1
 80060d2:	d007      	beq.n	80060e4 <HAL_I2C_Mem_Write+0x7c>
 80060d4:	68fb      	ldr	r3, [r7, #12]
 80060d6:	681b      	ldr	r3, [r3, #0]
 80060d8:	681a      	ldr	r2, [r3, #0]
 80060da:	68fb      	ldr	r3, [r7, #12]
 80060dc:	681b      	ldr	r3, [r3, #0]
 80060de:	f042 0201 	orr.w	r2, r2, #1
 80060e2:	601a      	str	r2, [r3, #0]
 80060e4:	68fb      	ldr	r3, [r7, #12]
 80060e6:	681b      	ldr	r3, [r3, #0]
 80060e8:	681a      	ldr	r2, [r3, #0]
 80060ea:	68fb      	ldr	r3, [r7, #12]
 80060ec:	681b      	ldr	r3, [r3, #0]
 80060ee:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80060f2:	601a      	str	r2, [r3, #0]
 80060f4:	68fb      	ldr	r3, [r7, #12]
 80060f6:	2221      	movs	r2, #33	; 0x21
 80060f8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80060fc:	68fb      	ldr	r3, [r7, #12]
 80060fe:	2240      	movs	r2, #64	; 0x40
 8006100:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006104:	68fb      	ldr	r3, [r7, #12]
 8006106:	2200      	movs	r2, #0
 8006108:	641a      	str	r2, [r3, #64]	; 0x40
 800610a:	68fb      	ldr	r3, [r7, #12]
 800610c:	6a3a      	ldr	r2, [r7, #32]
 800610e:	625a      	str	r2, [r3, #36]	; 0x24
 8006110:	68fb      	ldr	r3, [r7, #12]
 8006112:	8cba      	ldrh	r2, [r7, #36]	; 0x24
 8006114:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006116:	68fb      	ldr	r3, [r7, #12]
 8006118:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800611a:	b29a      	uxth	r2, r3
 800611c:	68fb      	ldr	r3, [r7, #12]
 800611e:	851a      	strh	r2, [r3, #40]	; 0x28
 8006120:	68fb      	ldr	r3, [r7, #12]
 8006122:	4a4d      	ldr	r2, [pc, #308]	; (8006258 <HAL_I2C_Mem_Write+0x1f0>)
 8006124:	62da      	str	r2, [r3, #44]	; 0x2c
 8006126:	88f8      	ldrh	r0, [r7, #6]
 8006128:	893a      	ldrh	r2, [r7, #8]
 800612a:	8979      	ldrh	r1, [r7, #10]
 800612c:	697b      	ldr	r3, [r7, #20]
 800612e:	9301      	str	r3, [sp, #4]
 8006130:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006132:	9300      	str	r3, [sp, #0]
 8006134:	4603      	mov	r3, r0
 8006136:	68f8      	ldr	r0, [r7, #12]
 8006138:	f000 fac2 	bl	80066c0 <I2C_RequestMemoryWrite>
 800613c:	4603      	mov	r3, r0
 800613e:	2b00      	cmp	r3, #0
 8006140:	d052      	beq.n	80061e8 <HAL_I2C_Mem_Write+0x180>
 8006142:	2301      	movs	r3, #1
 8006144:	e081      	b.n	800624a <HAL_I2C_Mem_Write+0x1e2>
 8006146:	697a      	ldr	r2, [r7, #20]
 8006148:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800614a:	68f8      	ldr	r0, [r7, #12]
 800614c:	f000 fd50 	bl	8006bf0 <I2C_WaitOnTXEFlagUntilTimeout>
 8006150:	4603      	mov	r3, r0
 8006152:	2b00      	cmp	r3, #0
 8006154:	d00d      	beq.n	8006172 <HAL_I2C_Mem_Write+0x10a>
 8006156:	68fb      	ldr	r3, [r7, #12]
 8006158:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800615a:	2b04      	cmp	r3, #4
 800615c:	d107      	bne.n	800616e <HAL_I2C_Mem_Write+0x106>
 800615e:	68fb      	ldr	r3, [r7, #12]
 8006160:	681b      	ldr	r3, [r3, #0]
 8006162:	681a      	ldr	r2, [r3, #0]
 8006164:	68fb      	ldr	r3, [r7, #12]
 8006166:	681b      	ldr	r3, [r3, #0]
 8006168:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800616c:	601a      	str	r2, [r3, #0]
 800616e:	2301      	movs	r3, #1
 8006170:	e06b      	b.n	800624a <HAL_I2C_Mem_Write+0x1e2>
 8006172:	68fb      	ldr	r3, [r7, #12]
 8006174:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006176:	781a      	ldrb	r2, [r3, #0]
 8006178:	68fb      	ldr	r3, [r7, #12]
 800617a:	681b      	ldr	r3, [r3, #0]
 800617c:	611a      	str	r2, [r3, #16]
 800617e:	68fb      	ldr	r3, [r7, #12]
 8006180:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006182:	1c5a      	adds	r2, r3, #1
 8006184:	68fb      	ldr	r3, [r7, #12]
 8006186:	625a      	str	r2, [r3, #36]	; 0x24
 8006188:	68fb      	ldr	r3, [r7, #12]
 800618a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800618c:	3b01      	subs	r3, #1
 800618e:	b29a      	uxth	r2, r3
 8006190:	68fb      	ldr	r3, [r7, #12]
 8006192:	851a      	strh	r2, [r3, #40]	; 0x28
 8006194:	68fb      	ldr	r3, [r7, #12]
 8006196:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006198:	b29b      	uxth	r3, r3
 800619a:	3b01      	subs	r3, #1
 800619c:	b29a      	uxth	r2, r3
 800619e:	68fb      	ldr	r3, [r7, #12]
 80061a0:	855a      	strh	r2, [r3, #42]	; 0x2a
 80061a2:	68fb      	ldr	r3, [r7, #12]
 80061a4:	681b      	ldr	r3, [r3, #0]
 80061a6:	695b      	ldr	r3, [r3, #20]
 80061a8:	f003 0304 	and.w	r3, r3, #4
 80061ac:	2b04      	cmp	r3, #4
 80061ae:	d11b      	bne.n	80061e8 <HAL_I2C_Mem_Write+0x180>
 80061b0:	68fb      	ldr	r3, [r7, #12]
 80061b2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80061b4:	2b00      	cmp	r3, #0
 80061b6:	d017      	beq.n	80061e8 <HAL_I2C_Mem_Write+0x180>
 80061b8:	68fb      	ldr	r3, [r7, #12]
 80061ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80061bc:	781a      	ldrb	r2, [r3, #0]
 80061be:	68fb      	ldr	r3, [r7, #12]
 80061c0:	681b      	ldr	r3, [r3, #0]
 80061c2:	611a      	str	r2, [r3, #16]
 80061c4:	68fb      	ldr	r3, [r7, #12]
 80061c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80061c8:	1c5a      	adds	r2, r3, #1
 80061ca:	68fb      	ldr	r3, [r7, #12]
 80061cc:	625a      	str	r2, [r3, #36]	; 0x24
 80061ce:	68fb      	ldr	r3, [r7, #12]
 80061d0:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80061d2:	3b01      	subs	r3, #1
 80061d4:	b29a      	uxth	r2, r3
 80061d6:	68fb      	ldr	r3, [r7, #12]
 80061d8:	851a      	strh	r2, [r3, #40]	; 0x28
 80061da:	68fb      	ldr	r3, [r7, #12]
 80061dc:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80061de:	b29b      	uxth	r3, r3
 80061e0:	3b01      	subs	r3, #1
 80061e2:	b29a      	uxth	r2, r3
 80061e4:	68fb      	ldr	r3, [r7, #12]
 80061e6:	855a      	strh	r2, [r3, #42]	; 0x2a
 80061e8:	68fb      	ldr	r3, [r7, #12]
 80061ea:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80061ec:	2b00      	cmp	r3, #0
 80061ee:	d1aa      	bne.n	8006146 <HAL_I2C_Mem_Write+0xde>
 80061f0:	697a      	ldr	r2, [r7, #20]
 80061f2:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 80061f4:	68f8      	ldr	r0, [r7, #12]
 80061f6:	f000 fd43 	bl	8006c80 <I2C_WaitOnBTFFlagUntilTimeout>
 80061fa:	4603      	mov	r3, r0
 80061fc:	2b00      	cmp	r3, #0
 80061fe:	d00d      	beq.n	800621c <HAL_I2C_Mem_Write+0x1b4>
 8006200:	68fb      	ldr	r3, [r7, #12]
 8006202:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006204:	2b04      	cmp	r3, #4
 8006206:	d107      	bne.n	8006218 <HAL_I2C_Mem_Write+0x1b0>
 8006208:	68fb      	ldr	r3, [r7, #12]
 800620a:	681b      	ldr	r3, [r3, #0]
 800620c:	681a      	ldr	r2, [r3, #0]
 800620e:	68fb      	ldr	r3, [r7, #12]
 8006210:	681b      	ldr	r3, [r3, #0]
 8006212:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006216:	601a      	str	r2, [r3, #0]
 8006218:	2301      	movs	r3, #1
 800621a:	e016      	b.n	800624a <HAL_I2C_Mem_Write+0x1e2>
 800621c:	68fb      	ldr	r3, [r7, #12]
 800621e:	681b      	ldr	r3, [r3, #0]
 8006220:	681a      	ldr	r2, [r3, #0]
 8006222:	68fb      	ldr	r3, [r7, #12]
 8006224:	681b      	ldr	r3, [r3, #0]
 8006226:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800622a:	601a      	str	r2, [r3, #0]
 800622c:	68fb      	ldr	r3, [r7, #12]
 800622e:	2220      	movs	r2, #32
 8006230:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006234:	68fb      	ldr	r3, [r7, #12]
 8006236:	2200      	movs	r2, #0
 8006238:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800623c:	68fb      	ldr	r3, [r7, #12]
 800623e:	2200      	movs	r2, #0
 8006240:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006244:	2300      	movs	r3, #0
 8006246:	e000      	b.n	800624a <HAL_I2C_Mem_Write+0x1e2>
 8006248:	2302      	movs	r3, #2
 800624a:	4618      	mov	r0, r3
 800624c:	3718      	adds	r7, #24
 800624e:	46bd      	mov	sp, r7
 8006250:	bd80      	pop	{r7, pc}
 8006252:	bf00      	nop
 8006254:	00100002 	.word	0x00100002
 8006258:	ffff0000 	.word	0xffff0000

0800625c <HAL_I2C_Mem_Read>:
 800625c:	b580      	push	{r7, lr}
 800625e:	b08c      	sub	sp, #48	; 0x30
 8006260:	af02      	add	r7, sp, #8
 8006262:	60f8      	str	r0, [r7, #12]
 8006264:	4608      	mov	r0, r1
 8006266:	4611      	mov	r1, r2
 8006268:	461a      	mov	r2, r3
 800626a:	4603      	mov	r3, r0
 800626c:	817b      	strh	r3, [r7, #10]
 800626e:	460b      	mov	r3, r1
 8006270:	813b      	strh	r3, [r7, #8]
 8006272:	4613      	mov	r3, r2
 8006274:	80fb      	strh	r3, [r7, #6]
 8006276:	f7fe fe5d 	bl	8004f34 <HAL_GetTick>
 800627a:	6278      	str	r0, [r7, #36]	; 0x24
 800627c:	68fb      	ldr	r3, [r7, #12]
 800627e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006282:	b2db      	uxtb	r3, r3
 8006284:	2b20      	cmp	r3, #32
 8006286:	f040 8214 	bne.w	80066b2 <HAL_I2C_Mem_Read+0x456>
 800628a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800628c:	9300      	str	r3, [sp, #0]
 800628e:	2319      	movs	r3, #25
 8006290:	2201      	movs	r2, #1
 8006292:	497b      	ldr	r1, [pc, #492]	; (8006480 <HAL_I2C_Mem_Read+0x224>)
 8006294:	68f8      	ldr	r0, [r7, #12]
 8006296:	f000 fb91 	bl	80069bc <I2C_WaitOnFlagUntilTimeout>
 800629a:	4603      	mov	r3, r0
 800629c:	2b00      	cmp	r3, #0
 800629e:	d001      	beq.n	80062a4 <HAL_I2C_Mem_Read+0x48>
 80062a0:	2302      	movs	r3, #2
 80062a2:	e207      	b.n	80066b4 <HAL_I2C_Mem_Read+0x458>
 80062a4:	68fb      	ldr	r3, [r7, #12]
 80062a6:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80062aa:	2b01      	cmp	r3, #1
 80062ac:	d101      	bne.n	80062b2 <HAL_I2C_Mem_Read+0x56>
 80062ae:	2302      	movs	r3, #2
 80062b0:	e200      	b.n	80066b4 <HAL_I2C_Mem_Read+0x458>
 80062b2:	68fb      	ldr	r3, [r7, #12]
 80062b4:	2201      	movs	r2, #1
 80062b6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80062ba:	68fb      	ldr	r3, [r7, #12]
 80062bc:	681b      	ldr	r3, [r3, #0]
 80062be:	681b      	ldr	r3, [r3, #0]
 80062c0:	f003 0301 	and.w	r3, r3, #1
 80062c4:	2b01      	cmp	r3, #1
 80062c6:	d007      	beq.n	80062d8 <HAL_I2C_Mem_Read+0x7c>
 80062c8:	68fb      	ldr	r3, [r7, #12]
 80062ca:	681b      	ldr	r3, [r3, #0]
 80062cc:	681a      	ldr	r2, [r3, #0]
 80062ce:	68fb      	ldr	r3, [r7, #12]
 80062d0:	681b      	ldr	r3, [r3, #0]
 80062d2:	f042 0201 	orr.w	r2, r2, #1
 80062d6:	601a      	str	r2, [r3, #0]
 80062d8:	68fb      	ldr	r3, [r7, #12]
 80062da:	681b      	ldr	r3, [r3, #0]
 80062dc:	681a      	ldr	r2, [r3, #0]
 80062de:	68fb      	ldr	r3, [r7, #12]
 80062e0:	681b      	ldr	r3, [r3, #0]
 80062e2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80062e6:	601a      	str	r2, [r3, #0]
 80062e8:	68fb      	ldr	r3, [r7, #12]
 80062ea:	2222      	movs	r2, #34	; 0x22
 80062ec:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80062f0:	68fb      	ldr	r3, [r7, #12]
 80062f2:	2240      	movs	r2, #64	; 0x40
 80062f4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80062f8:	68fb      	ldr	r3, [r7, #12]
 80062fa:	2200      	movs	r2, #0
 80062fc:	641a      	str	r2, [r3, #64]	; 0x40
 80062fe:	68fb      	ldr	r3, [r7, #12]
 8006300:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8006302:	625a      	str	r2, [r3, #36]	; 0x24
 8006304:	68fb      	ldr	r3, [r7, #12]
 8006306:	8eba      	ldrh	r2, [r7, #52]	; 0x34
 8006308:	855a      	strh	r2, [r3, #42]	; 0x2a
 800630a:	68fb      	ldr	r3, [r7, #12]
 800630c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800630e:	b29a      	uxth	r2, r3
 8006310:	68fb      	ldr	r3, [r7, #12]
 8006312:	851a      	strh	r2, [r3, #40]	; 0x28
 8006314:	68fb      	ldr	r3, [r7, #12]
 8006316:	4a5b      	ldr	r2, [pc, #364]	; (8006484 <HAL_I2C_Mem_Read+0x228>)
 8006318:	62da      	str	r2, [r3, #44]	; 0x2c
 800631a:	88f8      	ldrh	r0, [r7, #6]
 800631c:	893a      	ldrh	r2, [r7, #8]
 800631e:	8979      	ldrh	r1, [r7, #10]
 8006320:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006322:	9301      	str	r3, [sp, #4]
 8006324:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006326:	9300      	str	r3, [sp, #0]
 8006328:	4603      	mov	r3, r0
 800632a:	68f8      	ldr	r0, [r7, #12]
 800632c:	f000 fa5e 	bl	80067ec <I2C_RequestMemoryRead>
 8006330:	4603      	mov	r3, r0
 8006332:	2b00      	cmp	r3, #0
 8006334:	d001      	beq.n	800633a <HAL_I2C_Mem_Read+0xde>
 8006336:	2301      	movs	r3, #1
 8006338:	e1bc      	b.n	80066b4 <HAL_I2C_Mem_Read+0x458>
 800633a:	68fb      	ldr	r3, [r7, #12]
 800633c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800633e:	2b00      	cmp	r3, #0
 8006340:	d113      	bne.n	800636a <HAL_I2C_Mem_Read+0x10e>
 8006342:	2300      	movs	r3, #0
 8006344:	623b      	str	r3, [r7, #32]
 8006346:	68fb      	ldr	r3, [r7, #12]
 8006348:	681b      	ldr	r3, [r3, #0]
 800634a:	695b      	ldr	r3, [r3, #20]
 800634c:	623b      	str	r3, [r7, #32]
 800634e:	68fb      	ldr	r3, [r7, #12]
 8006350:	681b      	ldr	r3, [r3, #0]
 8006352:	699b      	ldr	r3, [r3, #24]
 8006354:	623b      	str	r3, [r7, #32]
 8006356:	6a3b      	ldr	r3, [r7, #32]
 8006358:	68fb      	ldr	r3, [r7, #12]
 800635a:	681b      	ldr	r3, [r3, #0]
 800635c:	681a      	ldr	r2, [r3, #0]
 800635e:	68fb      	ldr	r3, [r7, #12]
 8006360:	681b      	ldr	r3, [r3, #0]
 8006362:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006366:	601a      	str	r2, [r3, #0]
 8006368:	e190      	b.n	800668c <HAL_I2C_Mem_Read+0x430>
 800636a:	68fb      	ldr	r3, [r7, #12]
 800636c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800636e:	2b01      	cmp	r3, #1
 8006370:	d11b      	bne.n	80063aa <HAL_I2C_Mem_Read+0x14e>
 8006372:	68fb      	ldr	r3, [r7, #12]
 8006374:	681b      	ldr	r3, [r3, #0]
 8006376:	681a      	ldr	r2, [r3, #0]
 8006378:	68fb      	ldr	r3, [r7, #12]
 800637a:	681b      	ldr	r3, [r3, #0]
 800637c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006380:	601a      	str	r2, [r3, #0]
 8006382:	2300      	movs	r3, #0
 8006384:	61fb      	str	r3, [r7, #28]
 8006386:	68fb      	ldr	r3, [r7, #12]
 8006388:	681b      	ldr	r3, [r3, #0]
 800638a:	695b      	ldr	r3, [r3, #20]
 800638c:	61fb      	str	r3, [r7, #28]
 800638e:	68fb      	ldr	r3, [r7, #12]
 8006390:	681b      	ldr	r3, [r3, #0]
 8006392:	699b      	ldr	r3, [r3, #24]
 8006394:	61fb      	str	r3, [r7, #28]
 8006396:	69fb      	ldr	r3, [r7, #28]
 8006398:	68fb      	ldr	r3, [r7, #12]
 800639a:	681b      	ldr	r3, [r3, #0]
 800639c:	681a      	ldr	r2, [r3, #0]
 800639e:	68fb      	ldr	r3, [r7, #12]
 80063a0:	681b      	ldr	r3, [r3, #0]
 80063a2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80063a6:	601a      	str	r2, [r3, #0]
 80063a8:	e170      	b.n	800668c <HAL_I2C_Mem_Read+0x430>
 80063aa:	68fb      	ldr	r3, [r7, #12]
 80063ac:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80063ae:	2b02      	cmp	r3, #2
 80063b0:	d11b      	bne.n	80063ea <HAL_I2C_Mem_Read+0x18e>
 80063b2:	68fb      	ldr	r3, [r7, #12]
 80063b4:	681b      	ldr	r3, [r3, #0]
 80063b6:	681a      	ldr	r2, [r3, #0]
 80063b8:	68fb      	ldr	r3, [r7, #12]
 80063ba:	681b      	ldr	r3, [r3, #0]
 80063bc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80063c0:	601a      	str	r2, [r3, #0]
 80063c2:	68fb      	ldr	r3, [r7, #12]
 80063c4:	681b      	ldr	r3, [r3, #0]
 80063c6:	681a      	ldr	r2, [r3, #0]
 80063c8:	68fb      	ldr	r3, [r7, #12]
 80063ca:	681b      	ldr	r3, [r3, #0]
 80063cc:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80063d0:	601a      	str	r2, [r3, #0]
 80063d2:	2300      	movs	r3, #0
 80063d4:	61bb      	str	r3, [r7, #24]
 80063d6:	68fb      	ldr	r3, [r7, #12]
 80063d8:	681b      	ldr	r3, [r3, #0]
 80063da:	695b      	ldr	r3, [r3, #20]
 80063dc:	61bb      	str	r3, [r7, #24]
 80063de:	68fb      	ldr	r3, [r7, #12]
 80063e0:	681b      	ldr	r3, [r3, #0]
 80063e2:	699b      	ldr	r3, [r3, #24]
 80063e4:	61bb      	str	r3, [r7, #24]
 80063e6:	69bb      	ldr	r3, [r7, #24]
 80063e8:	e150      	b.n	800668c <HAL_I2C_Mem_Read+0x430>
 80063ea:	2300      	movs	r3, #0
 80063ec:	617b      	str	r3, [r7, #20]
 80063ee:	68fb      	ldr	r3, [r7, #12]
 80063f0:	681b      	ldr	r3, [r3, #0]
 80063f2:	695b      	ldr	r3, [r3, #20]
 80063f4:	617b      	str	r3, [r7, #20]
 80063f6:	68fb      	ldr	r3, [r7, #12]
 80063f8:	681b      	ldr	r3, [r3, #0]
 80063fa:	699b      	ldr	r3, [r3, #24]
 80063fc:	617b      	str	r3, [r7, #20]
 80063fe:	697b      	ldr	r3, [r7, #20]
 8006400:	e144      	b.n	800668c <HAL_I2C_Mem_Read+0x430>
 8006402:	68fb      	ldr	r3, [r7, #12]
 8006404:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8006406:	2b03      	cmp	r3, #3
 8006408:	f200 80f1 	bhi.w	80065ee <HAL_I2C_Mem_Read+0x392>
 800640c:	68fb      	ldr	r3, [r7, #12]
 800640e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8006410:	2b01      	cmp	r3, #1
 8006412:	d123      	bne.n	800645c <HAL_I2C_Mem_Read+0x200>
 8006414:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006416:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8006418:	68f8      	ldr	r0, [r7, #12]
 800641a:	f000 fc79 	bl	8006d10 <I2C_WaitOnRXNEFlagUntilTimeout>
 800641e:	4603      	mov	r3, r0
 8006420:	2b00      	cmp	r3, #0
 8006422:	d001      	beq.n	8006428 <HAL_I2C_Mem_Read+0x1cc>
 8006424:	2301      	movs	r3, #1
 8006426:	e145      	b.n	80066b4 <HAL_I2C_Mem_Read+0x458>
 8006428:	68fb      	ldr	r3, [r7, #12]
 800642a:	681b      	ldr	r3, [r3, #0]
 800642c:	691a      	ldr	r2, [r3, #16]
 800642e:	68fb      	ldr	r3, [r7, #12]
 8006430:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006432:	b2d2      	uxtb	r2, r2
 8006434:	701a      	strb	r2, [r3, #0]
 8006436:	68fb      	ldr	r3, [r7, #12]
 8006438:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800643a:	1c5a      	adds	r2, r3, #1
 800643c:	68fb      	ldr	r3, [r7, #12]
 800643e:	625a      	str	r2, [r3, #36]	; 0x24
 8006440:	68fb      	ldr	r3, [r7, #12]
 8006442:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8006444:	3b01      	subs	r3, #1
 8006446:	b29a      	uxth	r2, r3
 8006448:	68fb      	ldr	r3, [r7, #12]
 800644a:	851a      	strh	r2, [r3, #40]	; 0x28
 800644c:	68fb      	ldr	r3, [r7, #12]
 800644e:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006450:	b29b      	uxth	r3, r3
 8006452:	3b01      	subs	r3, #1
 8006454:	b29a      	uxth	r2, r3
 8006456:	68fb      	ldr	r3, [r7, #12]
 8006458:	855a      	strh	r2, [r3, #42]	; 0x2a
 800645a:	e117      	b.n	800668c <HAL_I2C_Mem_Read+0x430>
 800645c:	68fb      	ldr	r3, [r7, #12]
 800645e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8006460:	2b02      	cmp	r3, #2
 8006462:	d14e      	bne.n	8006502 <HAL_I2C_Mem_Read+0x2a6>
 8006464:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006466:	9300      	str	r3, [sp, #0]
 8006468:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800646a:	2200      	movs	r2, #0
 800646c:	4906      	ldr	r1, [pc, #24]	; (8006488 <HAL_I2C_Mem_Read+0x22c>)
 800646e:	68f8      	ldr	r0, [r7, #12]
 8006470:	f000 faa4 	bl	80069bc <I2C_WaitOnFlagUntilTimeout>
 8006474:	4603      	mov	r3, r0
 8006476:	2b00      	cmp	r3, #0
 8006478:	d008      	beq.n	800648c <HAL_I2C_Mem_Read+0x230>
 800647a:	2301      	movs	r3, #1
 800647c:	e11a      	b.n	80066b4 <HAL_I2C_Mem_Read+0x458>
 800647e:	bf00      	nop
 8006480:	00100002 	.word	0x00100002
 8006484:	ffff0000 	.word	0xffff0000
 8006488:	00010004 	.word	0x00010004
 800648c:	68fb      	ldr	r3, [r7, #12]
 800648e:	681b      	ldr	r3, [r3, #0]
 8006490:	681a      	ldr	r2, [r3, #0]
 8006492:	68fb      	ldr	r3, [r7, #12]
 8006494:	681b      	ldr	r3, [r3, #0]
 8006496:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800649a:	601a      	str	r2, [r3, #0]
 800649c:	68fb      	ldr	r3, [r7, #12]
 800649e:	681b      	ldr	r3, [r3, #0]
 80064a0:	691a      	ldr	r2, [r3, #16]
 80064a2:	68fb      	ldr	r3, [r7, #12]
 80064a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80064a6:	b2d2      	uxtb	r2, r2
 80064a8:	701a      	strb	r2, [r3, #0]
 80064aa:	68fb      	ldr	r3, [r7, #12]
 80064ac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80064ae:	1c5a      	adds	r2, r3, #1
 80064b0:	68fb      	ldr	r3, [r7, #12]
 80064b2:	625a      	str	r2, [r3, #36]	; 0x24
 80064b4:	68fb      	ldr	r3, [r7, #12]
 80064b6:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80064b8:	3b01      	subs	r3, #1
 80064ba:	b29a      	uxth	r2, r3
 80064bc:	68fb      	ldr	r3, [r7, #12]
 80064be:	851a      	strh	r2, [r3, #40]	; 0x28
 80064c0:	68fb      	ldr	r3, [r7, #12]
 80064c2:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80064c4:	b29b      	uxth	r3, r3
 80064c6:	3b01      	subs	r3, #1
 80064c8:	b29a      	uxth	r2, r3
 80064ca:	68fb      	ldr	r3, [r7, #12]
 80064cc:	855a      	strh	r2, [r3, #42]	; 0x2a
 80064ce:	68fb      	ldr	r3, [r7, #12]
 80064d0:	681b      	ldr	r3, [r3, #0]
 80064d2:	691a      	ldr	r2, [r3, #16]
 80064d4:	68fb      	ldr	r3, [r7, #12]
 80064d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80064d8:	b2d2      	uxtb	r2, r2
 80064da:	701a      	strb	r2, [r3, #0]
 80064dc:	68fb      	ldr	r3, [r7, #12]
 80064de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80064e0:	1c5a      	adds	r2, r3, #1
 80064e2:	68fb      	ldr	r3, [r7, #12]
 80064e4:	625a      	str	r2, [r3, #36]	; 0x24
 80064e6:	68fb      	ldr	r3, [r7, #12]
 80064e8:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80064ea:	3b01      	subs	r3, #1
 80064ec:	b29a      	uxth	r2, r3
 80064ee:	68fb      	ldr	r3, [r7, #12]
 80064f0:	851a      	strh	r2, [r3, #40]	; 0x28
 80064f2:	68fb      	ldr	r3, [r7, #12]
 80064f4:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80064f6:	b29b      	uxth	r3, r3
 80064f8:	3b01      	subs	r3, #1
 80064fa:	b29a      	uxth	r2, r3
 80064fc:	68fb      	ldr	r3, [r7, #12]
 80064fe:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006500:	e0c4      	b.n	800668c <HAL_I2C_Mem_Read+0x430>
 8006502:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006504:	9300      	str	r3, [sp, #0]
 8006506:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006508:	2200      	movs	r2, #0
 800650a:	496c      	ldr	r1, [pc, #432]	; (80066bc <HAL_I2C_Mem_Read+0x460>)
 800650c:	68f8      	ldr	r0, [r7, #12]
 800650e:	f000 fa55 	bl	80069bc <I2C_WaitOnFlagUntilTimeout>
 8006512:	4603      	mov	r3, r0
 8006514:	2b00      	cmp	r3, #0
 8006516:	d001      	beq.n	800651c <HAL_I2C_Mem_Read+0x2c0>
 8006518:	2301      	movs	r3, #1
 800651a:	e0cb      	b.n	80066b4 <HAL_I2C_Mem_Read+0x458>
 800651c:	68fb      	ldr	r3, [r7, #12]
 800651e:	681b      	ldr	r3, [r3, #0]
 8006520:	681a      	ldr	r2, [r3, #0]
 8006522:	68fb      	ldr	r3, [r7, #12]
 8006524:	681b      	ldr	r3, [r3, #0]
 8006526:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800652a:	601a      	str	r2, [r3, #0]
 800652c:	68fb      	ldr	r3, [r7, #12]
 800652e:	681b      	ldr	r3, [r3, #0]
 8006530:	691a      	ldr	r2, [r3, #16]
 8006532:	68fb      	ldr	r3, [r7, #12]
 8006534:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006536:	b2d2      	uxtb	r2, r2
 8006538:	701a      	strb	r2, [r3, #0]
 800653a:	68fb      	ldr	r3, [r7, #12]
 800653c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800653e:	1c5a      	adds	r2, r3, #1
 8006540:	68fb      	ldr	r3, [r7, #12]
 8006542:	625a      	str	r2, [r3, #36]	; 0x24
 8006544:	68fb      	ldr	r3, [r7, #12]
 8006546:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8006548:	3b01      	subs	r3, #1
 800654a:	b29a      	uxth	r2, r3
 800654c:	68fb      	ldr	r3, [r7, #12]
 800654e:	851a      	strh	r2, [r3, #40]	; 0x28
 8006550:	68fb      	ldr	r3, [r7, #12]
 8006552:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006554:	b29b      	uxth	r3, r3
 8006556:	3b01      	subs	r3, #1
 8006558:	b29a      	uxth	r2, r3
 800655a:	68fb      	ldr	r3, [r7, #12]
 800655c:	855a      	strh	r2, [r3, #42]	; 0x2a
 800655e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006560:	9300      	str	r3, [sp, #0]
 8006562:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8006564:	2200      	movs	r2, #0
 8006566:	4955      	ldr	r1, [pc, #340]	; (80066bc <HAL_I2C_Mem_Read+0x460>)
 8006568:	68f8      	ldr	r0, [r7, #12]
 800656a:	f000 fa27 	bl	80069bc <I2C_WaitOnFlagUntilTimeout>
 800656e:	4603      	mov	r3, r0
 8006570:	2b00      	cmp	r3, #0
 8006572:	d001      	beq.n	8006578 <HAL_I2C_Mem_Read+0x31c>
 8006574:	2301      	movs	r3, #1
 8006576:	e09d      	b.n	80066b4 <HAL_I2C_Mem_Read+0x458>
 8006578:	68fb      	ldr	r3, [r7, #12]
 800657a:	681b      	ldr	r3, [r3, #0]
 800657c:	681a      	ldr	r2, [r3, #0]
 800657e:	68fb      	ldr	r3, [r7, #12]
 8006580:	681b      	ldr	r3, [r3, #0]
 8006582:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006586:	601a      	str	r2, [r3, #0]
 8006588:	68fb      	ldr	r3, [r7, #12]
 800658a:	681b      	ldr	r3, [r3, #0]
 800658c:	691a      	ldr	r2, [r3, #16]
 800658e:	68fb      	ldr	r3, [r7, #12]
 8006590:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006592:	b2d2      	uxtb	r2, r2
 8006594:	701a      	strb	r2, [r3, #0]
 8006596:	68fb      	ldr	r3, [r7, #12]
 8006598:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800659a:	1c5a      	adds	r2, r3, #1
 800659c:	68fb      	ldr	r3, [r7, #12]
 800659e:	625a      	str	r2, [r3, #36]	; 0x24
 80065a0:	68fb      	ldr	r3, [r7, #12]
 80065a2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80065a4:	3b01      	subs	r3, #1
 80065a6:	b29a      	uxth	r2, r3
 80065a8:	68fb      	ldr	r3, [r7, #12]
 80065aa:	851a      	strh	r2, [r3, #40]	; 0x28
 80065ac:	68fb      	ldr	r3, [r7, #12]
 80065ae:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80065b0:	b29b      	uxth	r3, r3
 80065b2:	3b01      	subs	r3, #1
 80065b4:	b29a      	uxth	r2, r3
 80065b6:	68fb      	ldr	r3, [r7, #12]
 80065b8:	855a      	strh	r2, [r3, #42]	; 0x2a
 80065ba:	68fb      	ldr	r3, [r7, #12]
 80065bc:	681b      	ldr	r3, [r3, #0]
 80065be:	691a      	ldr	r2, [r3, #16]
 80065c0:	68fb      	ldr	r3, [r7, #12]
 80065c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80065c4:	b2d2      	uxtb	r2, r2
 80065c6:	701a      	strb	r2, [r3, #0]
 80065c8:	68fb      	ldr	r3, [r7, #12]
 80065ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80065cc:	1c5a      	adds	r2, r3, #1
 80065ce:	68fb      	ldr	r3, [r7, #12]
 80065d0:	625a      	str	r2, [r3, #36]	; 0x24
 80065d2:	68fb      	ldr	r3, [r7, #12]
 80065d4:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 80065d6:	3b01      	subs	r3, #1
 80065d8:	b29a      	uxth	r2, r3
 80065da:	68fb      	ldr	r3, [r7, #12]
 80065dc:	851a      	strh	r2, [r3, #40]	; 0x28
 80065de:	68fb      	ldr	r3, [r7, #12]
 80065e0:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 80065e2:	b29b      	uxth	r3, r3
 80065e4:	3b01      	subs	r3, #1
 80065e6:	b29a      	uxth	r2, r3
 80065e8:	68fb      	ldr	r3, [r7, #12]
 80065ea:	855a      	strh	r2, [r3, #42]	; 0x2a
 80065ec:	e04e      	b.n	800668c <HAL_I2C_Mem_Read+0x430>
 80065ee:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80065f0:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 80065f2:	68f8      	ldr	r0, [r7, #12]
 80065f4:	f000 fb8c 	bl	8006d10 <I2C_WaitOnRXNEFlagUntilTimeout>
 80065f8:	4603      	mov	r3, r0
 80065fa:	2b00      	cmp	r3, #0
 80065fc:	d001      	beq.n	8006602 <HAL_I2C_Mem_Read+0x3a6>
 80065fe:	2301      	movs	r3, #1
 8006600:	e058      	b.n	80066b4 <HAL_I2C_Mem_Read+0x458>
 8006602:	68fb      	ldr	r3, [r7, #12]
 8006604:	681b      	ldr	r3, [r3, #0]
 8006606:	691a      	ldr	r2, [r3, #16]
 8006608:	68fb      	ldr	r3, [r7, #12]
 800660a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800660c:	b2d2      	uxtb	r2, r2
 800660e:	701a      	strb	r2, [r3, #0]
 8006610:	68fb      	ldr	r3, [r7, #12]
 8006612:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006614:	1c5a      	adds	r2, r3, #1
 8006616:	68fb      	ldr	r3, [r7, #12]
 8006618:	625a      	str	r2, [r3, #36]	; 0x24
 800661a:	68fb      	ldr	r3, [r7, #12]
 800661c:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 800661e:	3b01      	subs	r3, #1
 8006620:	b29a      	uxth	r2, r3
 8006622:	68fb      	ldr	r3, [r7, #12]
 8006624:	851a      	strh	r2, [r3, #40]	; 0x28
 8006626:	68fb      	ldr	r3, [r7, #12]
 8006628:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 800662a:	b29b      	uxth	r3, r3
 800662c:	3b01      	subs	r3, #1
 800662e:	b29a      	uxth	r2, r3
 8006630:	68fb      	ldr	r3, [r7, #12]
 8006632:	855a      	strh	r2, [r3, #42]	; 0x2a
 8006634:	68fb      	ldr	r3, [r7, #12]
 8006636:	681b      	ldr	r3, [r3, #0]
 8006638:	695b      	ldr	r3, [r3, #20]
 800663a:	f003 0304 	and.w	r3, r3, #4
 800663e:	2b04      	cmp	r3, #4
 8006640:	d124      	bne.n	800668c <HAL_I2C_Mem_Read+0x430>
 8006642:	68fb      	ldr	r3, [r7, #12]
 8006644:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8006646:	2b03      	cmp	r3, #3
 8006648:	d107      	bne.n	800665a <HAL_I2C_Mem_Read+0x3fe>
 800664a:	68fb      	ldr	r3, [r7, #12]
 800664c:	681b      	ldr	r3, [r3, #0]
 800664e:	681a      	ldr	r2, [r3, #0]
 8006650:	68fb      	ldr	r3, [r7, #12]
 8006652:	681b      	ldr	r3, [r3, #0]
 8006654:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006658:	601a      	str	r2, [r3, #0]
 800665a:	68fb      	ldr	r3, [r7, #12]
 800665c:	681b      	ldr	r3, [r3, #0]
 800665e:	691a      	ldr	r2, [r3, #16]
 8006660:	68fb      	ldr	r3, [r7, #12]
 8006662:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006664:	b2d2      	uxtb	r2, r2
 8006666:	701a      	strb	r2, [r3, #0]
 8006668:	68fb      	ldr	r3, [r7, #12]
 800666a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800666c:	1c5a      	adds	r2, r3, #1
 800666e:	68fb      	ldr	r3, [r7, #12]
 8006670:	625a      	str	r2, [r3, #36]	; 0x24
 8006672:	68fb      	ldr	r3, [r7, #12]
 8006674:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8006676:	3b01      	subs	r3, #1
 8006678:	b29a      	uxth	r2, r3
 800667a:	68fb      	ldr	r3, [r7, #12]
 800667c:	851a      	strh	r2, [r3, #40]	; 0x28
 800667e:	68fb      	ldr	r3, [r7, #12]
 8006680:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 8006682:	b29b      	uxth	r3, r3
 8006684:	3b01      	subs	r3, #1
 8006686:	b29a      	uxth	r2, r3
 8006688:	68fb      	ldr	r3, [r7, #12]
 800668a:	855a      	strh	r2, [r3, #42]	; 0x2a
 800668c:	68fb      	ldr	r3, [r7, #12]
 800668e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 8006690:	2b00      	cmp	r3, #0
 8006692:	f47f aeb6 	bne.w	8006402 <HAL_I2C_Mem_Read+0x1a6>
 8006696:	68fb      	ldr	r3, [r7, #12]
 8006698:	2220      	movs	r2, #32
 800669a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800669e:	68fb      	ldr	r3, [r7, #12]
 80066a0:	2200      	movs	r2, #0
 80066a2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80066a6:	68fb      	ldr	r3, [r7, #12]
 80066a8:	2200      	movs	r2, #0
 80066aa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80066ae:	2300      	movs	r3, #0
 80066b0:	e000      	b.n	80066b4 <HAL_I2C_Mem_Read+0x458>
 80066b2:	2302      	movs	r3, #2
 80066b4:	4618      	mov	r0, r3
 80066b6:	3728      	adds	r7, #40	; 0x28
 80066b8:	46bd      	mov	sp, r7
 80066ba:	bd80      	pop	{r7, pc}
 80066bc:	00010004 	.word	0x00010004

080066c0 <I2C_RequestMemoryWrite>:
 80066c0:	b580      	push	{r7, lr}
 80066c2:	b088      	sub	sp, #32
 80066c4:	af02      	add	r7, sp, #8
 80066c6:	60f8      	str	r0, [r7, #12]
 80066c8:	4608      	mov	r0, r1
 80066ca:	4611      	mov	r1, r2
 80066cc:	461a      	mov	r2, r3
 80066ce:	4603      	mov	r3, r0
 80066d0:	817b      	strh	r3, [r7, #10]
 80066d2:	460b      	mov	r3, r1
 80066d4:	813b      	strh	r3, [r7, #8]
 80066d6:	4613      	mov	r3, r2
 80066d8:	80fb      	strh	r3, [r7, #6]
 80066da:	68fb      	ldr	r3, [r7, #12]
 80066dc:	681b      	ldr	r3, [r3, #0]
 80066de:	681a      	ldr	r2, [r3, #0]
 80066e0:	68fb      	ldr	r3, [r7, #12]
 80066e2:	681b      	ldr	r3, [r3, #0]
 80066e4:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80066e8:	601a      	str	r2, [r3, #0]
 80066ea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80066ec:	9300      	str	r3, [sp, #0]
 80066ee:	6a3b      	ldr	r3, [r7, #32]
 80066f0:	2200      	movs	r2, #0
 80066f2:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80066f6:	68f8      	ldr	r0, [r7, #12]
 80066f8:	f000 f960 	bl	80069bc <I2C_WaitOnFlagUntilTimeout>
 80066fc:	4603      	mov	r3, r0
 80066fe:	2b00      	cmp	r3, #0
 8006700:	d00d      	beq.n	800671e <I2C_RequestMemoryWrite+0x5e>
 8006702:	68fb      	ldr	r3, [r7, #12]
 8006704:	681b      	ldr	r3, [r3, #0]
 8006706:	681b      	ldr	r3, [r3, #0]
 8006708:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800670c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8006710:	d103      	bne.n	800671a <I2C_RequestMemoryWrite+0x5a>
 8006712:	68fb      	ldr	r3, [r7, #12]
 8006714:	f44f 7200 	mov.w	r2, #512	; 0x200
 8006718:	641a      	str	r2, [r3, #64]	; 0x40
 800671a:	2303      	movs	r3, #3
 800671c:	e05f      	b.n	80067de <I2C_RequestMemoryWrite+0x11e>
 800671e:	897b      	ldrh	r3, [r7, #10]
 8006720:	b2db      	uxtb	r3, r3
 8006722:	461a      	mov	r2, r3
 8006724:	68fb      	ldr	r3, [r7, #12]
 8006726:	681b      	ldr	r3, [r3, #0]
 8006728:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 800672c:	611a      	str	r2, [r3, #16]
 800672e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006730:	6a3a      	ldr	r2, [r7, #32]
 8006732:	492d      	ldr	r1, [pc, #180]	; (80067e8 <I2C_RequestMemoryWrite+0x128>)
 8006734:	68f8      	ldr	r0, [r7, #12]
 8006736:	f000 f9bb 	bl	8006ab0 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800673a:	4603      	mov	r3, r0
 800673c:	2b00      	cmp	r3, #0
 800673e:	d001      	beq.n	8006744 <I2C_RequestMemoryWrite+0x84>
 8006740:	2301      	movs	r3, #1
 8006742:	e04c      	b.n	80067de <I2C_RequestMemoryWrite+0x11e>
 8006744:	2300      	movs	r3, #0
 8006746:	617b      	str	r3, [r7, #20]
 8006748:	68fb      	ldr	r3, [r7, #12]
 800674a:	681b      	ldr	r3, [r3, #0]
 800674c:	695b      	ldr	r3, [r3, #20]
 800674e:	617b      	str	r3, [r7, #20]
 8006750:	68fb      	ldr	r3, [r7, #12]
 8006752:	681b      	ldr	r3, [r3, #0]
 8006754:	699b      	ldr	r3, [r3, #24]
 8006756:	617b      	str	r3, [r7, #20]
 8006758:	697b      	ldr	r3, [r7, #20]
 800675a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800675c:	6a39      	ldr	r1, [r7, #32]
 800675e:	68f8      	ldr	r0, [r7, #12]
 8006760:	f000 fa46 	bl	8006bf0 <I2C_WaitOnTXEFlagUntilTimeout>
 8006764:	4603      	mov	r3, r0
 8006766:	2b00      	cmp	r3, #0
 8006768:	d00d      	beq.n	8006786 <I2C_RequestMemoryWrite+0xc6>
 800676a:	68fb      	ldr	r3, [r7, #12]
 800676c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800676e:	2b04      	cmp	r3, #4
 8006770:	d107      	bne.n	8006782 <I2C_RequestMemoryWrite+0xc2>
 8006772:	68fb      	ldr	r3, [r7, #12]
 8006774:	681b      	ldr	r3, [r3, #0]
 8006776:	681a      	ldr	r2, [r3, #0]
 8006778:	68fb      	ldr	r3, [r7, #12]
 800677a:	681b      	ldr	r3, [r3, #0]
 800677c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006780:	601a      	str	r2, [r3, #0]
 8006782:	2301      	movs	r3, #1
 8006784:	e02b      	b.n	80067de <I2C_RequestMemoryWrite+0x11e>
 8006786:	88fb      	ldrh	r3, [r7, #6]
 8006788:	2b01      	cmp	r3, #1
 800678a:	d105      	bne.n	8006798 <I2C_RequestMemoryWrite+0xd8>
 800678c:	893b      	ldrh	r3, [r7, #8]
 800678e:	b2da      	uxtb	r2, r3
 8006790:	68fb      	ldr	r3, [r7, #12]
 8006792:	681b      	ldr	r3, [r3, #0]
 8006794:	611a      	str	r2, [r3, #16]
 8006796:	e021      	b.n	80067dc <I2C_RequestMemoryWrite+0x11c>
 8006798:	893b      	ldrh	r3, [r7, #8]
 800679a:	0a1b      	lsrs	r3, r3, #8
 800679c:	b29b      	uxth	r3, r3
 800679e:	b2da      	uxtb	r2, r3
 80067a0:	68fb      	ldr	r3, [r7, #12]
 80067a2:	681b      	ldr	r3, [r3, #0]
 80067a4:	611a      	str	r2, [r3, #16]
 80067a6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80067a8:	6a39      	ldr	r1, [r7, #32]
 80067aa:	68f8      	ldr	r0, [r7, #12]
 80067ac:	f000 fa20 	bl	8006bf0 <I2C_WaitOnTXEFlagUntilTimeout>
 80067b0:	4603      	mov	r3, r0
 80067b2:	2b00      	cmp	r3, #0
 80067b4:	d00d      	beq.n	80067d2 <I2C_RequestMemoryWrite+0x112>
 80067b6:	68fb      	ldr	r3, [r7, #12]
 80067b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80067ba:	2b04      	cmp	r3, #4
 80067bc:	d107      	bne.n	80067ce <I2C_RequestMemoryWrite+0x10e>
 80067be:	68fb      	ldr	r3, [r7, #12]
 80067c0:	681b      	ldr	r3, [r3, #0]
 80067c2:	681a      	ldr	r2, [r3, #0]
 80067c4:	68fb      	ldr	r3, [r7, #12]
 80067c6:	681b      	ldr	r3, [r3, #0]
 80067c8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80067cc:	601a      	str	r2, [r3, #0]
 80067ce:	2301      	movs	r3, #1
 80067d0:	e005      	b.n	80067de <I2C_RequestMemoryWrite+0x11e>
 80067d2:	893b      	ldrh	r3, [r7, #8]
 80067d4:	b2da      	uxtb	r2, r3
 80067d6:	68fb      	ldr	r3, [r7, #12]
 80067d8:	681b      	ldr	r3, [r3, #0]
 80067da:	611a      	str	r2, [r3, #16]
 80067dc:	2300      	movs	r3, #0
 80067de:	4618      	mov	r0, r3
 80067e0:	3718      	adds	r7, #24
 80067e2:	46bd      	mov	sp, r7
 80067e4:	bd80      	pop	{r7, pc}
 80067e6:	bf00      	nop
 80067e8:	00010002 	.word	0x00010002

080067ec <I2C_RequestMemoryRead>:
 80067ec:	b580      	push	{r7, lr}
 80067ee:	b088      	sub	sp, #32
 80067f0:	af02      	add	r7, sp, #8
 80067f2:	60f8      	str	r0, [r7, #12]
 80067f4:	4608      	mov	r0, r1
 80067f6:	4611      	mov	r1, r2
 80067f8:	461a      	mov	r2, r3
 80067fa:	4603      	mov	r3, r0
 80067fc:	817b      	strh	r3, [r7, #10]
 80067fe:	460b      	mov	r3, r1
 8006800:	813b      	strh	r3, [r7, #8]
 8006802:	4613      	mov	r3, r2
 8006804:	80fb      	strh	r3, [r7, #6]
 8006806:	68fb      	ldr	r3, [r7, #12]
 8006808:	681b      	ldr	r3, [r3, #0]
 800680a:	681a      	ldr	r2, [r3, #0]
 800680c:	68fb      	ldr	r3, [r7, #12]
 800680e:	681b      	ldr	r3, [r3, #0]
 8006810:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8006814:	601a      	str	r2, [r3, #0]
 8006816:	68fb      	ldr	r3, [r7, #12]
 8006818:	681b      	ldr	r3, [r3, #0]
 800681a:	681a      	ldr	r2, [r3, #0]
 800681c:	68fb      	ldr	r3, [r7, #12]
 800681e:	681b      	ldr	r3, [r3, #0]
 8006820:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006824:	601a      	str	r2, [r3, #0]
 8006826:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006828:	9300      	str	r3, [sp, #0]
 800682a:	6a3b      	ldr	r3, [r7, #32]
 800682c:	2200      	movs	r2, #0
 800682e:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8006832:	68f8      	ldr	r0, [r7, #12]
 8006834:	f000 f8c2 	bl	80069bc <I2C_WaitOnFlagUntilTimeout>
 8006838:	4603      	mov	r3, r0
 800683a:	2b00      	cmp	r3, #0
 800683c:	d00d      	beq.n	800685a <I2C_RequestMemoryRead+0x6e>
 800683e:	68fb      	ldr	r3, [r7, #12]
 8006840:	681b      	ldr	r3, [r3, #0]
 8006842:	681b      	ldr	r3, [r3, #0]
 8006844:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006848:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800684c:	d103      	bne.n	8006856 <I2C_RequestMemoryRead+0x6a>
 800684e:	68fb      	ldr	r3, [r7, #12]
 8006850:	f44f 7200 	mov.w	r2, #512	; 0x200
 8006854:	641a      	str	r2, [r3, #64]	; 0x40
 8006856:	2303      	movs	r3, #3
 8006858:	e0aa      	b.n	80069b0 <I2C_RequestMemoryRead+0x1c4>
 800685a:	897b      	ldrh	r3, [r7, #10]
 800685c:	b2db      	uxtb	r3, r3
 800685e:	461a      	mov	r2, r3
 8006860:	68fb      	ldr	r3, [r7, #12]
 8006862:	681b      	ldr	r3, [r3, #0]
 8006864:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 8006868:	611a      	str	r2, [r3, #16]
 800686a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800686c:	6a3a      	ldr	r2, [r7, #32]
 800686e:	4952      	ldr	r1, [pc, #328]	; (80069b8 <I2C_RequestMemoryRead+0x1cc>)
 8006870:	68f8      	ldr	r0, [r7, #12]
 8006872:	f000 f91d 	bl	8006ab0 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006876:	4603      	mov	r3, r0
 8006878:	2b00      	cmp	r3, #0
 800687a:	d001      	beq.n	8006880 <I2C_RequestMemoryRead+0x94>
 800687c:	2301      	movs	r3, #1
 800687e:	e097      	b.n	80069b0 <I2C_RequestMemoryRead+0x1c4>
 8006880:	2300      	movs	r3, #0
 8006882:	617b      	str	r3, [r7, #20]
 8006884:	68fb      	ldr	r3, [r7, #12]
 8006886:	681b      	ldr	r3, [r3, #0]
 8006888:	695b      	ldr	r3, [r3, #20]
 800688a:	617b      	str	r3, [r7, #20]
 800688c:	68fb      	ldr	r3, [r7, #12]
 800688e:	681b      	ldr	r3, [r3, #0]
 8006890:	699b      	ldr	r3, [r3, #24]
 8006892:	617b      	str	r3, [r7, #20]
 8006894:	697b      	ldr	r3, [r7, #20]
 8006896:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006898:	6a39      	ldr	r1, [r7, #32]
 800689a:	68f8      	ldr	r0, [r7, #12]
 800689c:	f000 f9a8 	bl	8006bf0 <I2C_WaitOnTXEFlagUntilTimeout>
 80068a0:	4603      	mov	r3, r0
 80068a2:	2b00      	cmp	r3, #0
 80068a4:	d00d      	beq.n	80068c2 <I2C_RequestMemoryRead+0xd6>
 80068a6:	68fb      	ldr	r3, [r7, #12]
 80068a8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80068aa:	2b04      	cmp	r3, #4
 80068ac:	d107      	bne.n	80068be <I2C_RequestMemoryRead+0xd2>
 80068ae:	68fb      	ldr	r3, [r7, #12]
 80068b0:	681b      	ldr	r3, [r3, #0]
 80068b2:	681a      	ldr	r2, [r3, #0]
 80068b4:	68fb      	ldr	r3, [r7, #12]
 80068b6:	681b      	ldr	r3, [r3, #0]
 80068b8:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80068bc:	601a      	str	r2, [r3, #0]
 80068be:	2301      	movs	r3, #1
 80068c0:	e076      	b.n	80069b0 <I2C_RequestMemoryRead+0x1c4>
 80068c2:	88fb      	ldrh	r3, [r7, #6]
 80068c4:	2b01      	cmp	r3, #1
 80068c6:	d105      	bne.n	80068d4 <I2C_RequestMemoryRead+0xe8>
 80068c8:	893b      	ldrh	r3, [r7, #8]
 80068ca:	b2da      	uxtb	r2, r3
 80068cc:	68fb      	ldr	r3, [r7, #12]
 80068ce:	681b      	ldr	r3, [r3, #0]
 80068d0:	611a      	str	r2, [r3, #16]
 80068d2:	e021      	b.n	8006918 <I2C_RequestMemoryRead+0x12c>
 80068d4:	893b      	ldrh	r3, [r7, #8]
 80068d6:	0a1b      	lsrs	r3, r3, #8
 80068d8:	b29b      	uxth	r3, r3
 80068da:	b2da      	uxtb	r2, r3
 80068dc:	68fb      	ldr	r3, [r7, #12]
 80068de:	681b      	ldr	r3, [r3, #0]
 80068e0:	611a      	str	r2, [r3, #16]
 80068e2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80068e4:	6a39      	ldr	r1, [r7, #32]
 80068e6:	68f8      	ldr	r0, [r7, #12]
 80068e8:	f000 f982 	bl	8006bf0 <I2C_WaitOnTXEFlagUntilTimeout>
 80068ec:	4603      	mov	r3, r0
 80068ee:	2b00      	cmp	r3, #0
 80068f0:	d00d      	beq.n	800690e <I2C_RequestMemoryRead+0x122>
 80068f2:	68fb      	ldr	r3, [r7, #12]
 80068f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80068f6:	2b04      	cmp	r3, #4
 80068f8:	d107      	bne.n	800690a <I2C_RequestMemoryRead+0x11e>
 80068fa:	68fb      	ldr	r3, [r7, #12]
 80068fc:	681b      	ldr	r3, [r3, #0]
 80068fe:	681a      	ldr	r2, [r3, #0]
 8006900:	68fb      	ldr	r3, [r7, #12]
 8006902:	681b      	ldr	r3, [r3, #0]
 8006904:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006908:	601a      	str	r2, [r3, #0]
 800690a:	2301      	movs	r3, #1
 800690c:	e050      	b.n	80069b0 <I2C_RequestMemoryRead+0x1c4>
 800690e:	893b      	ldrh	r3, [r7, #8]
 8006910:	b2da      	uxtb	r2, r3
 8006912:	68fb      	ldr	r3, [r7, #12]
 8006914:	681b      	ldr	r3, [r3, #0]
 8006916:	611a      	str	r2, [r3, #16]
 8006918:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800691a:	6a39      	ldr	r1, [r7, #32]
 800691c:	68f8      	ldr	r0, [r7, #12]
 800691e:	f000 f967 	bl	8006bf0 <I2C_WaitOnTXEFlagUntilTimeout>
 8006922:	4603      	mov	r3, r0
 8006924:	2b00      	cmp	r3, #0
 8006926:	d00d      	beq.n	8006944 <I2C_RequestMemoryRead+0x158>
 8006928:	68fb      	ldr	r3, [r7, #12]
 800692a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800692c:	2b04      	cmp	r3, #4
 800692e:	d107      	bne.n	8006940 <I2C_RequestMemoryRead+0x154>
 8006930:	68fb      	ldr	r3, [r7, #12]
 8006932:	681b      	ldr	r3, [r3, #0]
 8006934:	681a      	ldr	r2, [r3, #0]
 8006936:	68fb      	ldr	r3, [r7, #12]
 8006938:	681b      	ldr	r3, [r3, #0]
 800693a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800693e:	601a      	str	r2, [r3, #0]
 8006940:	2301      	movs	r3, #1
 8006942:	e035      	b.n	80069b0 <I2C_RequestMemoryRead+0x1c4>
 8006944:	68fb      	ldr	r3, [r7, #12]
 8006946:	681b      	ldr	r3, [r3, #0]
 8006948:	681a      	ldr	r2, [r3, #0]
 800694a:	68fb      	ldr	r3, [r7, #12]
 800694c:	681b      	ldr	r3, [r3, #0]
 800694e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006952:	601a      	str	r2, [r3, #0]
 8006954:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8006956:	9300      	str	r3, [sp, #0]
 8006958:	6a3b      	ldr	r3, [r7, #32]
 800695a:	2200      	movs	r2, #0
 800695c:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8006960:	68f8      	ldr	r0, [r7, #12]
 8006962:	f000 f82b 	bl	80069bc <I2C_WaitOnFlagUntilTimeout>
 8006966:	4603      	mov	r3, r0
 8006968:	2b00      	cmp	r3, #0
 800696a:	d00d      	beq.n	8006988 <I2C_RequestMemoryRead+0x19c>
 800696c:	68fb      	ldr	r3, [r7, #12]
 800696e:	681b      	ldr	r3, [r3, #0]
 8006970:	681b      	ldr	r3, [r3, #0]
 8006972:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006976:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800697a:	d103      	bne.n	8006984 <I2C_RequestMemoryRead+0x198>
 800697c:	68fb      	ldr	r3, [r7, #12]
 800697e:	f44f 7200 	mov.w	r2, #512	; 0x200
 8006982:	641a      	str	r2, [r3, #64]	; 0x40
 8006984:	2303      	movs	r3, #3
 8006986:	e013      	b.n	80069b0 <I2C_RequestMemoryRead+0x1c4>
 8006988:	897b      	ldrh	r3, [r7, #10]
 800698a:	b2db      	uxtb	r3, r3
 800698c:	f043 0301 	orr.w	r3, r3, #1
 8006990:	b2da      	uxtb	r2, r3
 8006992:	68fb      	ldr	r3, [r7, #12]
 8006994:	681b      	ldr	r3, [r3, #0]
 8006996:	611a      	str	r2, [r3, #16]
 8006998:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800699a:	6a3a      	ldr	r2, [r7, #32]
 800699c:	4906      	ldr	r1, [pc, #24]	; (80069b8 <I2C_RequestMemoryRead+0x1cc>)
 800699e:	68f8      	ldr	r0, [r7, #12]
 80069a0:	f000 f886 	bl	8006ab0 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80069a4:	4603      	mov	r3, r0
 80069a6:	2b00      	cmp	r3, #0
 80069a8:	d001      	beq.n	80069ae <I2C_RequestMemoryRead+0x1c2>
 80069aa:	2301      	movs	r3, #1
 80069ac:	e000      	b.n	80069b0 <I2C_RequestMemoryRead+0x1c4>
 80069ae:	2300      	movs	r3, #0
 80069b0:	4618      	mov	r0, r3
 80069b2:	3718      	adds	r7, #24
 80069b4:	46bd      	mov	sp, r7
 80069b6:	bd80      	pop	{r7, pc}
 80069b8:	00010002 	.word	0x00010002

080069bc <I2C_WaitOnFlagUntilTimeout>:
 80069bc:	b580      	push	{r7, lr}
 80069be:	b084      	sub	sp, #16
 80069c0:	af00      	add	r7, sp, #0
 80069c2:	60f8      	str	r0, [r7, #12]
 80069c4:	60b9      	str	r1, [r7, #8]
 80069c6:	603b      	str	r3, [r7, #0]
 80069c8:	4613      	mov	r3, r2
 80069ca:	71fb      	strb	r3, [r7, #7]
 80069cc:	e048      	b.n	8006a60 <I2C_WaitOnFlagUntilTimeout+0xa4>
 80069ce:	683b      	ldr	r3, [r7, #0]
 80069d0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80069d4:	d044      	beq.n	8006a60 <I2C_WaitOnFlagUntilTimeout+0xa4>
 80069d6:	f7fe faad 	bl	8004f34 <HAL_GetTick>
 80069da:	4602      	mov	r2, r0
 80069dc:	69bb      	ldr	r3, [r7, #24]
 80069de:	1ad3      	subs	r3, r2, r3
 80069e0:	683a      	ldr	r2, [r7, #0]
 80069e2:	429a      	cmp	r2, r3
 80069e4:	d302      	bcc.n	80069ec <I2C_WaitOnFlagUntilTimeout+0x30>
 80069e6:	683b      	ldr	r3, [r7, #0]
 80069e8:	2b00      	cmp	r3, #0
 80069ea:	d139      	bne.n	8006a60 <I2C_WaitOnFlagUntilTimeout+0xa4>
 80069ec:	68bb      	ldr	r3, [r7, #8]
 80069ee:	0c1b      	lsrs	r3, r3, #16
 80069f0:	b2db      	uxtb	r3, r3
 80069f2:	2b01      	cmp	r3, #1
 80069f4:	d10d      	bne.n	8006a12 <I2C_WaitOnFlagUntilTimeout+0x56>
 80069f6:	68fb      	ldr	r3, [r7, #12]
 80069f8:	681b      	ldr	r3, [r3, #0]
 80069fa:	695b      	ldr	r3, [r3, #20]
 80069fc:	43da      	mvns	r2, r3
 80069fe:	68bb      	ldr	r3, [r7, #8]
 8006a00:	4013      	ands	r3, r2
 8006a02:	b29b      	uxth	r3, r3
 8006a04:	2b00      	cmp	r3, #0
 8006a06:	bf0c      	ite	eq
 8006a08:	2301      	moveq	r3, #1
 8006a0a:	2300      	movne	r3, #0
 8006a0c:	b2db      	uxtb	r3, r3
 8006a0e:	461a      	mov	r2, r3
 8006a10:	e00c      	b.n	8006a2c <I2C_WaitOnFlagUntilTimeout+0x70>
 8006a12:	68fb      	ldr	r3, [r7, #12]
 8006a14:	681b      	ldr	r3, [r3, #0]
 8006a16:	699b      	ldr	r3, [r3, #24]
 8006a18:	43da      	mvns	r2, r3
 8006a1a:	68bb      	ldr	r3, [r7, #8]
 8006a1c:	4013      	ands	r3, r2
 8006a1e:	b29b      	uxth	r3, r3
 8006a20:	2b00      	cmp	r3, #0
 8006a22:	bf0c      	ite	eq
 8006a24:	2301      	moveq	r3, #1
 8006a26:	2300      	movne	r3, #0
 8006a28:	b2db      	uxtb	r3, r3
 8006a2a:	461a      	mov	r2, r3
 8006a2c:	79fb      	ldrb	r3, [r7, #7]
 8006a2e:	429a      	cmp	r2, r3
 8006a30:	d116      	bne.n	8006a60 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8006a32:	68fb      	ldr	r3, [r7, #12]
 8006a34:	2200      	movs	r2, #0
 8006a36:	631a      	str	r2, [r3, #48]	; 0x30
 8006a38:	68fb      	ldr	r3, [r7, #12]
 8006a3a:	2220      	movs	r2, #32
 8006a3c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006a40:	68fb      	ldr	r3, [r7, #12]
 8006a42:	2200      	movs	r2, #0
 8006a44:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006a48:	68fb      	ldr	r3, [r7, #12]
 8006a4a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006a4c:	f043 0220 	orr.w	r2, r3, #32
 8006a50:	68fb      	ldr	r3, [r7, #12]
 8006a52:	641a      	str	r2, [r3, #64]	; 0x40
 8006a54:	68fb      	ldr	r3, [r7, #12]
 8006a56:	2200      	movs	r2, #0
 8006a58:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006a5c:	2301      	movs	r3, #1
 8006a5e:	e023      	b.n	8006aa8 <I2C_WaitOnFlagUntilTimeout+0xec>
 8006a60:	68bb      	ldr	r3, [r7, #8]
 8006a62:	0c1b      	lsrs	r3, r3, #16
 8006a64:	b2db      	uxtb	r3, r3
 8006a66:	2b01      	cmp	r3, #1
 8006a68:	d10d      	bne.n	8006a86 <I2C_WaitOnFlagUntilTimeout+0xca>
 8006a6a:	68fb      	ldr	r3, [r7, #12]
 8006a6c:	681b      	ldr	r3, [r3, #0]
 8006a6e:	695b      	ldr	r3, [r3, #20]
 8006a70:	43da      	mvns	r2, r3
 8006a72:	68bb      	ldr	r3, [r7, #8]
 8006a74:	4013      	ands	r3, r2
 8006a76:	b29b      	uxth	r3, r3
 8006a78:	2b00      	cmp	r3, #0
 8006a7a:	bf0c      	ite	eq
 8006a7c:	2301      	moveq	r3, #1
 8006a7e:	2300      	movne	r3, #0
 8006a80:	b2db      	uxtb	r3, r3
 8006a82:	461a      	mov	r2, r3
 8006a84:	e00c      	b.n	8006aa0 <I2C_WaitOnFlagUntilTimeout+0xe4>
 8006a86:	68fb      	ldr	r3, [r7, #12]
 8006a88:	681b      	ldr	r3, [r3, #0]
 8006a8a:	699b      	ldr	r3, [r3, #24]
 8006a8c:	43da      	mvns	r2, r3
 8006a8e:	68bb      	ldr	r3, [r7, #8]
 8006a90:	4013      	ands	r3, r2
 8006a92:	b29b      	uxth	r3, r3
 8006a94:	2b00      	cmp	r3, #0
 8006a96:	bf0c      	ite	eq
 8006a98:	2301      	moveq	r3, #1
 8006a9a:	2300      	movne	r3, #0
 8006a9c:	b2db      	uxtb	r3, r3
 8006a9e:	461a      	mov	r2, r3
 8006aa0:	79fb      	ldrb	r3, [r7, #7]
 8006aa2:	429a      	cmp	r2, r3
 8006aa4:	d093      	beq.n	80069ce <I2C_WaitOnFlagUntilTimeout+0x12>
 8006aa6:	2300      	movs	r3, #0
 8006aa8:	4618      	mov	r0, r3
 8006aaa:	3710      	adds	r7, #16
 8006aac:	46bd      	mov	sp, r7
 8006aae:	bd80      	pop	{r7, pc}

08006ab0 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 8006ab0:	b580      	push	{r7, lr}
 8006ab2:	b084      	sub	sp, #16
 8006ab4:	af00      	add	r7, sp, #0
 8006ab6:	60f8      	str	r0, [r7, #12]
 8006ab8:	60b9      	str	r1, [r7, #8]
 8006aba:	607a      	str	r2, [r7, #4]
 8006abc:	603b      	str	r3, [r7, #0]
 8006abe:	e071      	b.n	8006ba4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8006ac0:	68fb      	ldr	r3, [r7, #12]
 8006ac2:	681b      	ldr	r3, [r3, #0]
 8006ac4:	695b      	ldr	r3, [r3, #20]
 8006ac6:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8006aca:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8006ace:	d123      	bne.n	8006b18 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 8006ad0:	68fb      	ldr	r3, [r7, #12]
 8006ad2:	681b      	ldr	r3, [r3, #0]
 8006ad4:	681a      	ldr	r2, [r3, #0]
 8006ad6:	68fb      	ldr	r3, [r7, #12]
 8006ad8:	681b      	ldr	r3, [r3, #0]
 8006ada:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006ade:	601a      	str	r2, [r3, #0]
 8006ae0:	68fb      	ldr	r3, [r7, #12]
 8006ae2:	681b      	ldr	r3, [r3, #0]
 8006ae4:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8006ae8:	615a      	str	r2, [r3, #20]
 8006aea:	68fb      	ldr	r3, [r7, #12]
 8006aec:	2200      	movs	r2, #0
 8006aee:	631a      	str	r2, [r3, #48]	; 0x30
 8006af0:	68fb      	ldr	r3, [r7, #12]
 8006af2:	2220      	movs	r2, #32
 8006af4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006af8:	68fb      	ldr	r3, [r7, #12]
 8006afa:	2200      	movs	r2, #0
 8006afc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006b00:	68fb      	ldr	r3, [r7, #12]
 8006b02:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006b04:	f043 0204 	orr.w	r2, r3, #4
 8006b08:	68fb      	ldr	r3, [r7, #12]
 8006b0a:	641a      	str	r2, [r3, #64]	; 0x40
 8006b0c:	68fb      	ldr	r3, [r7, #12]
 8006b0e:	2200      	movs	r2, #0
 8006b10:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006b14:	2301      	movs	r3, #1
 8006b16:	e067      	b.n	8006be8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8006b18:	687b      	ldr	r3, [r7, #4]
 8006b1a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006b1e:	d041      	beq.n	8006ba4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8006b20:	f7fe fa08 	bl	8004f34 <HAL_GetTick>
 8006b24:	4602      	mov	r2, r0
 8006b26:	683b      	ldr	r3, [r7, #0]
 8006b28:	1ad3      	subs	r3, r2, r3
 8006b2a:	687a      	ldr	r2, [r7, #4]
 8006b2c:	429a      	cmp	r2, r3
 8006b2e:	d302      	bcc.n	8006b36 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8006b30:	687b      	ldr	r3, [r7, #4]
 8006b32:	2b00      	cmp	r3, #0
 8006b34:	d136      	bne.n	8006ba4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8006b36:	68bb      	ldr	r3, [r7, #8]
 8006b38:	0c1b      	lsrs	r3, r3, #16
 8006b3a:	b2db      	uxtb	r3, r3
 8006b3c:	2b01      	cmp	r3, #1
 8006b3e:	d10c      	bne.n	8006b5a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 8006b40:	68fb      	ldr	r3, [r7, #12]
 8006b42:	681b      	ldr	r3, [r3, #0]
 8006b44:	695b      	ldr	r3, [r3, #20]
 8006b46:	43da      	mvns	r2, r3
 8006b48:	68bb      	ldr	r3, [r7, #8]
 8006b4a:	4013      	ands	r3, r2
 8006b4c:	b29b      	uxth	r3, r3
 8006b4e:	2b00      	cmp	r3, #0
 8006b50:	bf14      	ite	ne
 8006b52:	2301      	movne	r3, #1
 8006b54:	2300      	moveq	r3, #0
 8006b56:	b2db      	uxtb	r3, r3
 8006b58:	e00b      	b.n	8006b72 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 8006b5a:	68fb      	ldr	r3, [r7, #12]
 8006b5c:	681b      	ldr	r3, [r3, #0]
 8006b5e:	699b      	ldr	r3, [r3, #24]
 8006b60:	43da      	mvns	r2, r3
 8006b62:	68bb      	ldr	r3, [r7, #8]
 8006b64:	4013      	ands	r3, r2
 8006b66:	b29b      	uxth	r3, r3
 8006b68:	2b00      	cmp	r3, #0
 8006b6a:	bf14      	ite	ne
 8006b6c:	2301      	movne	r3, #1
 8006b6e:	2300      	moveq	r3, #0
 8006b70:	b2db      	uxtb	r3, r3
 8006b72:	2b00      	cmp	r3, #0
 8006b74:	d016      	beq.n	8006ba4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8006b76:	68fb      	ldr	r3, [r7, #12]
 8006b78:	2200      	movs	r2, #0
 8006b7a:	631a      	str	r2, [r3, #48]	; 0x30
 8006b7c:	68fb      	ldr	r3, [r7, #12]
 8006b7e:	2220      	movs	r2, #32
 8006b80:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006b84:	68fb      	ldr	r3, [r7, #12]
 8006b86:	2200      	movs	r2, #0
 8006b88:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006b8c:	68fb      	ldr	r3, [r7, #12]
 8006b8e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006b90:	f043 0220 	orr.w	r2, r3, #32
 8006b94:	68fb      	ldr	r3, [r7, #12]
 8006b96:	641a      	str	r2, [r3, #64]	; 0x40
 8006b98:	68fb      	ldr	r3, [r7, #12]
 8006b9a:	2200      	movs	r2, #0
 8006b9c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006ba0:	2301      	movs	r3, #1
 8006ba2:	e021      	b.n	8006be8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8006ba4:	68bb      	ldr	r3, [r7, #8]
 8006ba6:	0c1b      	lsrs	r3, r3, #16
 8006ba8:	b2db      	uxtb	r3, r3
 8006baa:	2b01      	cmp	r3, #1
 8006bac:	d10c      	bne.n	8006bc8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 8006bae:	68fb      	ldr	r3, [r7, #12]
 8006bb0:	681b      	ldr	r3, [r3, #0]
 8006bb2:	695b      	ldr	r3, [r3, #20]
 8006bb4:	43da      	mvns	r2, r3
 8006bb6:	68bb      	ldr	r3, [r7, #8]
 8006bb8:	4013      	ands	r3, r2
 8006bba:	b29b      	uxth	r3, r3
 8006bbc:	2b00      	cmp	r3, #0
 8006bbe:	bf14      	ite	ne
 8006bc0:	2301      	movne	r3, #1
 8006bc2:	2300      	moveq	r3, #0
 8006bc4:	b2db      	uxtb	r3, r3
 8006bc6:	e00b      	b.n	8006be0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 8006bc8:	68fb      	ldr	r3, [r7, #12]
 8006bca:	681b      	ldr	r3, [r3, #0]
 8006bcc:	699b      	ldr	r3, [r3, #24]
 8006bce:	43da      	mvns	r2, r3
 8006bd0:	68bb      	ldr	r3, [r7, #8]
 8006bd2:	4013      	ands	r3, r2
 8006bd4:	b29b      	uxth	r3, r3
 8006bd6:	2b00      	cmp	r3, #0
 8006bd8:	bf14      	ite	ne
 8006bda:	2301      	movne	r3, #1
 8006bdc:	2300      	moveq	r3, #0
 8006bde:	b2db      	uxtb	r3, r3
 8006be0:	2b00      	cmp	r3, #0
 8006be2:	f47f af6d 	bne.w	8006ac0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 8006be6:	2300      	movs	r3, #0
 8006be8:	4618      	mov	r0, r3
 8006bea:	3710      	adds	r7, #16
 8006bec:	46bd      	mov	sp, r7
 8006bee:	bd80      	pop	{r7, pc}

08006bf0 <I2C_WaitOnTXEFlagUntilTimeout>:
 8006bf0:	b580      	push	{r7, lr}
 8006bf2:	b084      	sub	sp, #16
 8006bf4:	af00      	add	r7, sp, #0
 8006bf6:	60f8      	str	r0, [r7, #12]
 8006bf8:	60b9      	str	r1, [r7, #8]
 8006bfa:	607a      	str	r2, [r7, #4]
 8006bfc:	e034      	b.n	8006c68 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8006bfe:	68f8      	ldr	r0, [r7, #12]
 8006c00:	f000 f8e3 	bl	8006dca <I2C_IsAcknowledgeFailed>
 8006c04:	4603      	mov	r3, r0
 8006c06:	2b00      	cmp	r3, #0
 8006c08:	d001      	beq.n	8006c0e <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 8006c0a:	2301      	movs	r3, #1
 8006c0c:	e034      	b.n	8006c78 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 8006c0e:	68bb      	ldr	r3, [r7, #8]
 8006c10:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006c14:	d028      	beq.n	8006c68 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8006c16:	f7fe f98d 	bl	8004f34 <HAL_GetTick>
 8006c1a:	4602      	mov	r2, r0
 8006c1c:	687b      	ldr	r3, [r7, #4]
 8006c1e:	1ad3      	subs	r3, r2, r3
 8006c20:	68ba      	ldr	r2, [r7, #8]
 8006c22:	429a      	cmp	r2, r3
 8006c24:	d302      	bcc.n	8006c2c <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8006c26:	68bb      	ldr	r3, [r7, #8]
 8006c28:	2b00      	cmp	r3, #0
 8006c2a:	d11d      	bne.n	8006c68 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8006c2c:	68fb      	ldr	r3, [r7, #12]
 8006c2e:	681b      	ldr	r3, [r3, #0]
 8006c30:	695b      	ldr	r3, [r3, #20]
 8006c32:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006c36:	2b80      	cmp	r3, #128	; 0x80
 8006c38:	d016      	beq.n	8006c68 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8006c3a:	68fb      	ldr	r3, [r7, #12]
 8006c3c:	2200      	movs	r2, #0
 8006c3e:	631a      	str	r2, [r3, #48]	; 0x30
 8006c40:	68fb      	ldr	r3, [r7, #12]
 8006c42:	2220      	movs	r2, #32
 8006c44:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006c48:	68fb      	ldr	r3, [r7, #12]
 8006c4a:	2200      	movs	r2, #0
 8006c4c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006c50:	68fb      	ldr	r3, [r7, #12]
 8006c52:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006c54:	f043 0220 	orr.w	r2, r3, #32
 8006c58:	68fb      	ldr	r3, [r7, #12]
 8006c5a:	641a      	str	r2, [r3, #64]	; 0x40
 8006c5c:	68fb      	ldr	r3, [r7, #12]
 8006c5e:	2200      	movs	r2, #0
 8006c60:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006c64:	2301      	movs	r3, #1
 8006c66:	e007      	b.n	8006c78 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 8006c68:	68fb      	ldr	r3, [r7, #12]
 8006c6a:	681b      	ldr	r3, [r3, #0]
 8006c6c:	695b      	ldr	r3, [r3, #20]
 8006c6e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006c72:	2b80      	cmp	r3, #128	; 0x80
 8006c74:	d1c3      	bne.n	8006bfe <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 8006c76:	2300      	movs	r3, #0
 8006c78:	4618      	mov	r0, r3
 8006c7a:	3710      	adds	r7, #16
 8006c7c:	46bd      	mov	sp, r7
 8006c7e:	bd80      	pop	{r7, pc}

08006c80 <I2C_WaitOnBTFFlagUntilTimeout>:
 8006c80:	b580      	push	{r7, lr}
 8006c82:	b084      	sub	sp, #16
 8006c84:	af00      	add	r7, sp, #0
 8006c86:	60f8      	str	r0, [r7, #12]
 8006c88:	60b9      	str	r1, [r7, #8]
 8006c8a:	607a      	str	r2, [r7, #4]
 8006c8c:	e034      	b.n	8006cf8 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8006c8e:	68f8      	ldr	r0, [r7, #12]
 8006c90:	f000 f89b 	bl	8006dca <I2C_IsAcknowledgeFailed>
 8006c94:	4603      	mov	r3, r0
 8006c96:	2b00      	cmp	r3, #0
 8006c98:	d001      	beq.n	8006c9e <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 8006c9a:	2301      	movs	r3, #1
 8006c9c:	e034      	b.n	8006d08 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8006c9e:	68bb      	ldr	r3, [r7, #8]
 8006ca0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006ca4:	d028      	beq.n	8006cf8 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8006ca6:	f7fe f945 	bl	8004f34 <HAL_GetTick>
 8006caa:	4602      	mov	r2, r0
 8006cac:	687b      	ldr	r3, [r7, #4]
 8006cae:	1ad3      	subs	r3, r2, r3
 8006cb0:	68ba      	ldr	r2, [r7, #8]
 8006cb2:	429a      	cmp	r2, r3
 8006cb4:	d302      	bcc.n	8006cbc <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 8006cb6:	68bb      	ldr	r3, [r7, #8]
 8006cb8:	2b00      	cmp	r3, #0
 8006cba:	d11d      	bne.n	8006cf8 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8006cbc:	68fb      	ldr	r3, [r7, #12]
 8006cbe:	681b      	ldr	r3, [r3, #0]
 8006cc0:	695b      	ldr	r3, [r3, #20]
 8006cc2:	f003 0304 	and.w	r3, r3, #4
 8006cc6:	2b04      	cmp	r3, #4
 8006cc8:	d016      	beq.n	8006cf8 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8006cca:	68fb      	ldr	r3, [r7, #12]
 8006ccc:	2200      	movs	r2, #0
 8006cce:	631a      	str	r2, [r3, #48]	; 0x30
 8006cd0:	68fb      	ldr	r3, [r7, #12]
 8006cd2:	2220      	movs	r2, #32
 8006cd4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006cd8:	68fb      	ldr	r3, [r7, #12]
 8006cda:	2200      	movs	r2, #0
 8006cdc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006ce0:	68fb      	ldr	r3, [r7, #12]
 8006ce2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006ce4:	f043 0220 	orr.w	r2, r3, #32
 8006ce8:	68fb      	ldr	r3, [r7, #12]
 8006cea:	641a      	str	r2, [r3, #64]	; 0x40
 8006cec:	68fb      	ldr	r3, [r7, #12]
 8006cee:	2200      	movs	r2, #0
 8006cf0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006cf4:	2301      	movs	r3, #1
 8006cf6:	e007      	b.n	8006d08 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 8006cf8:	68fb      	ldr	r3, [r7, #12]
 8006cfa:	681b      	ldr	r3, [r3, #0]
 8006cfc:	695b      	ldr	r3, [r3, #20]
 8006cfe:	f003 0304 	and.w	r3, r3, #4
 8006d02:	2b04      	cmp	r3, #4
 8006d04:	d1c3      	bne.n	8006c8e <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 8006d06:	2300      	movs	r3, #0
 8006d08:	4618      	mov	r0, r3
 8006d0a:	3710      	adds	r7, #16
 8006d0c:	46bd      	mov	sp, r7
 8006d0e:	bd80      	pop	{r7, pc}

08006d10 <I2C_WaitOnRXNEFlagUntilTimeout>:
 8006d10:	b580      	push	{r7, lr}
 8006d12:	b084      	sub	sp, #16
 8006d14:	af00      	add	r7, sp, #0
 8006d16:	60f8      	str	r0, [r7, #12]
 8006d18:	60b9      	str	r1, [r7, #8]
 8006d1a:	607a      	str	r2, [r7, #4]
 8006d1c:	e049      	b.n	8006db2 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8006d1e:	68fb      	ldr	r3, [r7, #12]
 8006d20:	681b      	ldr	r3, [r3, #0]
 8006d22:	695b      	ldr	r3, [r3, #20]
 8006d24:	f003 0310 	and.w	r3, r3, #16
 8006d28:	2b10      	cmp	r3, #16
 8006d2a:	d119      	bne.n	8006d60 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
 8006d2c:	68fb      	ldr	r3, [r7, #12]
 8006d2e:	681b      	ldr	r3, [r3, #0]
 8006d30:	f06f 0210 	mvn.w	r2, #16
 8006d34:	615a      	str	r2, [r3, #20]
 8006d36:	68fb      	ldr	r3, [r7, #12]
 8006d38:	2200      	movs	r2, #0
 8006d3a:	631a      	str	r2, [r3, #48]	; 0x30
 8006d3c:	68fb      	ldr	r3, [r7, #12]
 8006d3e:	2220      	movs	r2, #32
 8006d40:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006d44:	68fb      	ldr	r3, [r7, #12]
 8006d46:	2200      	movs	r2, #0
 8006d48:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006d4c:	68fb      	ldr	r3, [r7, #12]
 8006d4e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006d50:	68fb      	ldr	r3, [r7, #12]
 8006d52:	641a      	str	r2, [r3, #64]	; 0x40
 8006d54:	68fb      	ldr	r3, [r7, #12]
 8006d56:	2200      	movs	r2, #0
 8006d58:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006d5c:	2301      	movs	r3, #1
 8006d5e:	e030      	b.n	8006dc2 <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 8006d60:	f7fe f8e8 	bl	8004f34 <HAL_GetTick>
 8006d64:	4602      	mov	r2, r0
 8006d66:	687b      	ldr	r3, [r7, #4]
 8006d68:	1ad3      	subs	r3, r2, r3
 8006d6a:	68ba      	ldr	r2, [r7, #8]
 8006d6c:	429a      	cmp	r2, r3
 8006d6e:	d302      	bcc.n	8006d76 <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 8006d70:	68bb      	ldr	r3, [r7, #8]
 8006d72:	2b00      	cmp	r3, #0
 8006d74:	d11d      	bne.n	8006db2 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8006d76:	68fb      	ldr	r3, [r7, #12]
 8006d78:	681b      	ldr	r3, [r3, #0]
 8006d7a:	695b      	ldr	r3, [r3, #20]
 8006d7c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006d80:	2b40      	cmp	r3, #64	; 0x40
 8006d82:	d016      	beq.n	8006db2 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
 8006d84:	68fb      	ldr	r3, [r7, #12]
 8006d86:	2200      	movs	r2, #0
 8006d88:	631a      	str	r2, [r3, #48]	; 0x30
 8006d8a:	68fb      	ldr	r3, [r7, #12]
 8006d8c:	2220      	movs	r2, #32
 8006d8e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006d92:	68fb      	ldr	r3, [r7, #12]
 8006d94:	2200      	movs	r2, #0
 8006d96:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006d9a:	68fb      	ldr	r3, [r7, #12]
 8006d9c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006d9e:	f043 0220 	orr.w	r2, r3, #32
 8006da2:	68fb      	ldr	r3, [r7, #12]
 8006da4:	641a      	str	r2, [r3, #64]	; 0x40
 8006da6:	68fb      	ldr	r3, [r7, #12]
 8006da8:	2200      	movs	r2, #0
 8006daa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006dae:	2301      	movs	r3, #1
 8006db0:	e007      	b.n	8006dc2 <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
 8006db2:	68fb      	ldr	r3, [r7, #12]
 8006db4:	681b      	ldr	r3, [r3, #0]
 8006db6:	695b      	ldr	r3, [r3, #20]
 8006db8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006dbc:	2b40      	cmp	r3, #64	; 0x40
 8006dbe:	d1ae      	bne.n	8006d1e <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
 8006dc0:	2300      	movs	r3, #0
 8006dc2:	4618      	mov	r0, r3
 8006dc4:	3710      	adds	r7, #16
 8006dc6:	46bd      	mov	sp, r7
 8006dc8:	bd80      	pop	{r7, pc}

08006dca <I2C_IsAcknowledgeFailed>:
 8006dca:	b480      	push	{r7}
 8006dcc:	b083      	sub	sp, #12
 8006dce:	af00      	add	r7, sp, #0
 8006dd0:	6078      	str	r0, [r7, #4]
 8006dd2:	687b      	ldr	r3, [r7, #4]
 8006dd4:	681b      	ldr	r3, [r3, #0]
 8006dd6:	695b      	ldr	r3, [r3, #20]
 8006dd8:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8006ddc:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8006de0:	d11b      	bne.n	8006e1a <I2C_IsAcknowledgeFailed+0x50>
 8006de2:	687b      	ldr	r3, [r7, #4]
 8006de4:	681b      	ldr	r3, [r3, #0]
 8006de6:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 8006dea:	615a      	str	r2, [r3, #20]
 8006dec:	687b      	ldr	r3, [r7, #4]
 8006dee:	2200      	movs	r2, #0
 8006df0:	631a      	str	r2, [r3, #48]	; 0x30
 8006df2:	687b      	ldr	r3, [r7, #4]
 8006df4:	2220      	movs	r2, #32
 8006df6:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006dfa:	687b      	ldr	r3, [r7, #4]
 8006dfc:	2200      	movs	r2, #0
 8006dfe:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006e02:	687b      	ldr	r3, [r7, #4]
 8006e04:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006e06:	f043 0204 	orr.w	r2, r3, #4
 8006e0a:	687b      	ldr	r3, [r7, #4]
 8006e0c:	641a      	str	r2, [r3, #64]	; 0x40
 8006e0e:	687b      	ldr	r3, [r7, #4]
 8006e10:	2200      	movs	r2, #0
 8006e12:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006e16:	2301      	movs	r3, #1
 8006e18:	e000      	b.n	8006e1c <I2C_IsAcknowledgeFailed+0x52>
 8006e1a:	2300      	movs	r3, #0
 8006e1c:	4618      	mov	r0, r3
 8006e1e:	370c      	adds	r7, #12
 8006e20:	46bd      	mov	sp, r7
 8006e22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e26:	4770      	bx	lr

08006e28 <HAL_PWR_EnableBkUpAccess>:
 8006e28:	b480      	push	{r7}
 8006e2a:	b083      	sub	sp, #12
 8006e2c:	af00      	add	r7, sp, #0
 8006e2e:	4b06      	ldr	r3, [pc, #24]	; (8006e48 <HAL_PWR_EnableBkUpAccess+0x20>)
 8006e30:	2201      	movs	r2, #1
 8006e32:	601a      	str	r2, [r3, #0]
 8006e34:	4b05      	ldr	r3, [pc, #20]	; (8006e4c <HAL_PWR_EnableBkUpAccess+0x24>)
 8006e36:	681b      	ldr	r3, [r3, #0]
 8006e38:	607b      	str	r3, [r7, #4]
 8006e3a:	687b      	ldr	r3, [r7, #4]
 8006e3c:	bf00      	nop
 8006e3e:	370c      	adds	r7, #12
 8006e40:	46bd      	mov	sp, r7
 8006e42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e46:	4770      	bx	lr
 8006e48:	420e0020 	.word	0x420e0020
 8006e4c:	40007000 	.word	0x40007000

08006e50 <HAL_PWR_DisableBkUpAccess>:
 8006e50:	b480      	push	{r7}
 8006e52:	b083      	sub	sp, #12
 8006e54:	af00      	add	r7, sp, #0
 8006e56:	4b06      	ldr	r3, [pc, #24]	; (8006e70 <HAL_PWR_DisableBkUpAccess+0x20>)
 8006e58:	2200      	movs	r2, #0
 8006e5a:	601a      	str	r2, [r3, #0]
 8006e5c:	4b05      	ldr	r3, [pc, #20]	; (8006e74 <HAL_PWR_DisableBkUpAccess+0x24>)
 8006e5e:	681b      	ldr	r3, [r3, #0]
 8006e60:	607b      	str	r3, [r7, #4]
 8006e62:	687b      	ldr	r3, [r7, #4]
 8006e64:	bf00      	nop
 8006e66:	370c      	adds	r7, #12
 8006e68:	46bd      	mov	sp, r7
 8006e6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e6e:	4770      	bx	lr
 8006e70:	420e0020 	.word	0x420e0020
 8006e74:	40007000 	.word	0x40007000

08006e78 <HAL_RCC_OscConfig>:
 8006e78:	b580      	push	{r7, lr}
 8006e7a:	b086      	sub	sp, #24
 8006e7c:	af00      	add	r7, sp, #0
 8006e7e:	6078      	str	r0, [r7, #4]
 8006e80:	687b      	ldr	r3, [r7, #4]
 8006e82:	2b00      	cmp	r3, #0
 8006e84:	d101      	bne.n	8006e8a <HAL_RCC_OscConfig+0x12>
 8006e86:	2301      	movs	r3, #1
 8006e88:	e267      	b.n	800735a <HAL_RCC_OscConfig+0x4e2>
 8006e8a:	687b      	ldr	r3, [r7, #4]
 8006e8c:	681b      	ldr	r3, [r3, #0]
 8006e8e:	f003 0301 	and.w	r3, r3, #1
 8006e92:	2b00      	cmp	r3, #0
 8006e94:	d075      	beq.n	8006f82 <HAL_RCC_OscConfig+0x10a>
 8006e96:	4b88      	ldr	r3, [pc, #544]	; (80070b8 <HAL_RCC_OscConfig+0x240>)
 8006e98:	689b      	ldr	r3, [r3, #8]
 8006e9a:	f003 030c 	and.w	r3, r3, #12
 8006e9e:	2b04      	cmp	r3, #4
 8006ea0:	d00c      	beq.n	8006ebc <HAL_RCC_OscConfig+0x44>
 8006ea2:	4b85      	ldr	r3, [pc, #532]	; (80070b8 <HAL_RCC_OscConfig+0x240>)
 8006ea4:	689b      	ldr	r3, [r3, #8]
 8006ea6:	f003 030c 	and.w	r3, r3, #12
 8006eaa:	2b08      	cmp	r3, #8
 8006eac:	d112      	bne.n	8006ed4 <HAL_RCC_OscConfig+0x5c>
 8006eae:	4b82      	ldr	r3, [pc, #520]	; (80070b8 <HAL_RCC_OscConfig+0x240>)
 8006eb0:	685b      	ldr	r3, [r3, #4]
 8006eb2:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8006eb6:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8006eba:	d10b      	bne.n	8006ed4 <HAL_RCC_OscConfig+0x5c>
 8006ebc:	4b7e      	ldr	r3, [pc, #504]	; (80070b8 <HAL_RCC_OscConfig+0x240>)
 8006ebe:	681b      	ldr	r3, [r3, #0]
 8006ec0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006ec4:	2b00      	cmp	r3, #0
 8006ec6:	d05b      	beq.n	8006f80 <HAL_RCC_OscConfig+0x108>
 8006ec8:	687b      	ldr	r3, [r7, #4]
 8006eca:	685b      	ldr	r3, [r3, #4]
 8006ecc:	2b00      	cmp	r3, #0
 8006ece:	d157      	bne.n	8006f80 <HAL_RCC_OscConfig+0x108>
 8006ed0:	2301      	movs	r3, #1
 8006ed2:	e242      	b.n	800735a <HAL_RCC_OscConfig+0x4e2>
 8006ed4:	687b      	ldr	r3, [r7, #4]
 8006ed6:	685b      	ldr	r3, [r3, #4]
 8006ed8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8006edc:	d106      	bne.n	8006eec <HAL_RCC_OscConfig+0x74>
 8006ede:	4b76      	ldr	r3, [pc, #472]	; (80070b8 <HAL_RCC_OscConfig+0x240>)
 8006ee0:	681b      	ldr	r3, [r3, #0]
 8006ee2:	4a75      	ldr	r2, [pc, #468]	; (80070b8 <HAL_RCC_OscConfig+0x240>)
 8006ee4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006ee8:	6013      	str	r3, [r2, #0]
 8006eea:	e01d      	b.n	8006f28 <HAL_RCC_OscConfig+0xb0>
 8006eec:	687b      	ldr	r3, [r7, #4]
 8006eee:	685b      	ldr	r3, [r3, #4]
 8006ef0:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8006ef4:	d10c      	bne.n	8006f10 <HAL_RCC_OscConfig+0x98>
 8006ef6:	4b70      	ldr	r3, [pc, #448]	; (80070b8 <HAL_RCC_OscConfig+0x240>)
 8006ef8:	681b      	ldr	r3, [r3, #0]
 8006efa:	4a6f      	ldr	r2, [pc, #444]	; (80070b8 <HAL_RCC_OscConfig+0x240>)
 8006efc:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8006f00:	6013      	str	r3, [r2, #0]
 8006f02:	4b6d      	ldr	r3, [pc, #436]	; (80070b8 <HAL_RCC_OscConfig+0x240>)
 8006f04:	681b      	ldr	r3, [r3, #0]
 8006f06:	4a6c      	ldr	r2, [pc, #432]	; (80070b8 <HAL_RCC_OscConfig+0x240>)
 8006f08:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8006f0c:	6013      	str	r3, [r2, #0]
 8006f0e:	e00b      	b.n	8006f28 <HAL_RCC_OscConfig+0xb0>
 8006f10:	4b69      	ldr	r3, [pc, #420]	; (80070b8 <HAL_RCC_OscConfig+0x240>)
 8006f12:	681b      	ldr	r3, [r3, #0]
 8006f14:	4a68      	ldr	r2, [pc, #416]	; (80070b8 <HAL_RCC_OscConfig+0x240>)
 8006f16:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8006f1a:	6013      	str	r3, [r2, #0]
 8006f1c:	4b66      	ldr	r3, [pc, #408]	; (80070b8 <HAL_RCC_OscConfig+0x240>)
 8006f1e:	681b      	ldr	r3, [r3, #0]
 8006f20:	4a65      	ldr	r2, [pc, #404]	; (80070b8 <HAL_RCC_OscConfig+0x240>)
 8006f22:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8006f26:	6013      	str	r3, [r2, #0]
 8006f28:	687b      	ldr	r3, [r7, #4]
 8006f2a:	685b      	ldr	r3, [r3, #4]
 8006f2c:	2b00      	cmp	r3, #0
 8006f2e:	d013      	beq.n	8006f58 <HAL_RCC_OscConfig+0xe0>
 8006f30:	f7fe f800 	bl	8004f34 <HAL_GetTick>
 8006f34:	6138      	str	r0, [r7, #16]
 8006f36:	e008      	b.n	8006f4a <HAL_RCC_OscConfig+0xd2>
 8006f38:	f7fd fffc 	bl	8004f34 <HAL_GetTick>
 8006f3c:	4602      	mov	r2, r0
 8006f3e:	693b      	ldr	r3, [r7, #16]
 8006f40:	1ad3      	subs	r3, r2, r3
 8006f42:	2b64      	cmp	r3, #100	; 0x64
 8006f44:	d901      	bls.n	8006f4a <HAL_RCC_OscConfig+0xd2>
 8006f46:	2303      	movs	r3, #3
 8006f48:	e207      	b.n	800735a <HAL_RCC_OscConfig+0x4e2>
 8006f4a:	4b5b      	ldr	r3, [pc, #364]	; (80070b8 <HAL_RCC_OscConfig+0x240>)
 8006f4c:	681b      	ldr	r3, [r3, #0]
 8006f4e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006f52:	2b00      	cmp	r3, #0
 8006f54:	d0f0      	beq.n	8006f38 <HAL_RCC_OscConfig+0xc0>
 8006f56:	e014      	b.n	8006f82 <HAL_RCC_OscConfig+0x10a>
 8006f58:	f7fd ffec 	bl	8004f34 <HAL_GetTick>
 8006f5c:	6138      	str	r0, [r7, #16]
 8006f5e:	e008      	b.n	8006f72 <HAL_RCC_OscConfig+0xfa>
 8006f60:	f7fd ffe8 	bl	8004f34 <HAL_GetTick>
 8006f64:	4602      	mov	r2, r0
 8006f66:	693b      	ldr	r3, [r7, #16]
 8006f68:	1ad3      	subs	r3, r2, r3
 8006f6a:	2b64      	cmp	r3, #100	; 0x64
 8006f6c:	d901      	bls.n	8006f72 <HAL_RCC_OscConfig+0xfa>
 8006f6e:	2303      	movs	r3, #3
 8006f70:	e1f3      	b.n	800735a <HAL_RCC_OscConfig+0x4e2>
 8006f72:	4b51      	ldr	r3, [pc, #324]	; (80070b8 <HAL_RCC_OscConfig+0x240>)
 8006f74:	681b      	ldr	r3, [r3, #0]
 8006f76:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8006f7a:	2b00      	cmp	r3, #0
 8006f7c:	d1f0      	bne.n	8006f60 <HAL_RCC_OscConfig+0xe8>
 8006f7e:	e000      	b.n	8006f82 <HAL_RCC_OscConfig+0x10a>
 8006f80:	bf00      	nop
 8006f82:	687b      	ldr	r3, [r7, #4]
 8006f84:	681b      	ldr	r3, [r3, #0]
 8006f86:	f003 0302 	and.w	r3, r3, #2
 8006f8a:	2b00      	cmp	r3, #0
 8006f8c:	d063      	beq.n	8007056 <HAL_RCC_OscConfig+0x1de>
 8006f8e:	4b4a      	ldr	r3, [pc, #296]	; (80070b8 <HAL_RCC_OscConfig+0x240>)
 8006f90:	689b      	ldr	r3, [r3, #8]
 8006f92:	f003 030c 	and.w	r3, r3, #12
 8006f96:	2b00      	cmp	r3, #0
 8006f98:	d00b      	beq.n	8006fb2 <HAL_RCC_OscConfig+0x13a>
 8006f9a:	4b47      	ldr	r3, [pc, #284]	; (80070b8 <HAL_RCC_OscConfig+0x240>)
 8006f9c:	689b      	ldr	r3, [r3, #8]
 8006f9e:	f003 030c 	and.w	r3, r3, #12
 8006fa2:	2b08      	cmp	r3, #8
 8006fa4:	d11c      	bne.n	8006fe0 <HAL_RCC_OscConfig+0x168>
 8006fa6:	4b44      	ldr	r3, [pc, #272]	; (80070b8 <HAL_RCC_OscConfig+0x240>)
 8006fa8:	685b      	ldr	r3, [r3, #4]
 8006faa:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8006fae:	2b00      	cmp	r3, #0
 8006fb0:	d116      	bne.n	8006fe0 <HAL_RCC_OscConfig+0x168>
 8006fb2:	4b41      	ldr	r3, [pc, #260]	; (80070b8 <HAL_RCC_OscConfig+0x240>)
 8006fb4:	681b      	ldr	r3, [r3, #0]
 8006fb6:	f003 0302 	and.w	r3, r3, #2
 8006fba:	2b00      	cmp	r3, #0
 8006fbc:	d005      	beq.n	8006fca <HAL_RCC_OscConfig+0x152>
 8006fbe:	687b      	ldr	r3, [r7, #4]
 8006fc0:	68db      	ldr	r3, [r3, #12]
 8006fc2:	2b01      	cmp	r3, #1
 8006fc4:	d001      	beq.n	8006fca <HAL_RCC_OscConfig+0x152>
 8006fc6:	2301      	movs	r3, #1
 8006fc8:	e1c7      	b.n	800735a <HAL_RCC_OscConfig+0x4e2>
 8006fca:	4b3b      	ldr	r3, [pc, #236]	; (80070b8 <HAL_RCC_OscConfig+0x240>)
 8006fcc:	681b      	ldr	r3, [r3, #0]
 8006fce:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8006fd2:	687b      	ldr	r3, [r7, #4]
 8006fd4:	691b      	ldr	r3, [r3, #16]
 8006fd6:	00db      	lsls	r3, r3, #3
 8006fd8:	4937      	ldr	r1, [pc, #220]	; (80070b8 <HAL_RCC_OscConfig+0x240>)
 8006fda:	4313      	orrs	r3, r2
 8006fdc:	600b      	str	r3, [r1, #0]
 8006fde:	e03a      	b.n	8007056 <HAL_RCC_OscConfig+0x1de>
 8006fe0:	687b      	ldr	r3, [r7, #4]
 8006fe2:	68db      	ldr	r3, [r3, #12]
 8006fe4:	2b00      	cmp	r3, #0
 8006fe6:	d020      	beq.n	800702a <HAL_RCC_OscConfig+0x1b2>
 8006fe8:	4b34      	ldr	r3, [pc, #208]	; (80070bc <HAL_RCC_OscConfig+0x244>)
 8006fea:	2201      	movs	r2, #1
 8006fec:	601a      	str	r2, [r3, #0]
 8006fee:	f7fd ffa1 	bl	8004f34 <HAL_GetTick>
 8006ff2:	6138      	str	r0, [r7, #16]
 8006ff4:	e008      	b.n	8007008 <HAL_RCC_OscConfig+0x190>
 8006ff6:	f7fd ff9d 	bl	8004f34 <HAL_GetTick>
 8006ffa:	4602      	mov	r2, r0
 8006ffc:	693b      	ldr	r3, [r7, #16]
 8006ffe:	1ad3      	subs	r3, r2, r3
 8007000:	2b02      	cmp	r3, #2
 8007002:	d901      	bls.n	8007008 <HAL_RCC_OscConfig+0x190>
 8007004:	2303      	movs	r3, #3
 8007006:	e1a8      	b.n	800735a <HAL_RCC_OscConfig+0x4e2>
 8007008:	4b2b      	ldr	r3, [pc, #172]	; (80070b8 <HAL_RCC_OscConfig+0x240>)
 800700a:	681b      	ldr	r3, [r3, #0]
 800700c:	f003 0302 	and.w	r3, r3, #2
 8007010:	2b00      	cmp	r3, #0
 8007012:	d0f0      	beq.n	8006ff6 <HAL_RCC_OscConfig+0x17e>
 8007014:	4b28      	ldr	r3, [pc, #160]	; (80070b8 <HAL_RCC_OscConfig+0x240>)
 8007016:	681b      	ldr	r3, [r3, #0]
 8007018:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800701c:	687b      	ldr	r3, [r7, #4]
 800701e:	691b      	ldr	r3, [r3, #16]
 8007020:	00db      	lsls	r3, r3, #3
 8007022:	4925      	ldr	r1, [pc, #148]	; (80070b8 <HAL_RCC_OscConfig+0x240>)
 8007024:	4313      	orrs	r3, r2
 8007026:	600b      	str	r3, [r1, #0]
 8007028:	e015      	b.n	8007056 <HAL_RCC_OscConfig+0x1de>
 800702a:	4b24      	ldr	r3, [pc, #144]	; (80070bc <HAL_RCC_OscConfig+0x244>)
 800702c:	2200      	movs	r2, #0
 800702e:	601a      	str	r2, [r3, #0]
 8007030:	f7fd ff80 	bl	8004f34 <HAL_GetTick>
 8007034:	6138      	str	r0, [r7, #16]
 8007036:	e008      	b.n	800704a <HAL_RCC_OscConfig+0x1d2>
 8007038:	f7fd ff7c 	bl	8004f34 <HAL_GetTick>
 800703c:	4602      	mov	r2, r0
 800703e:	693b      	ldr	r3, [r7, #16]
 8007040:	1ad3      	subs	r3, r2, r3
 8007042:	2b02      	cmp	r3, #2
 8007044:	d901      	bls.n	800704a <HAL_RCC_OscConfig+0x1d2>
 8007046:	2303      	movs	r3, #3
 8007048:	e187      	b.n	800735a <HAL_RCC_OscConfig+0x4e2>
 800704a:	4b1b      	ldr	r3, [pc, #108]	; (80070b8 <HAL_RCC_OscConfig+0x240>)
 800704c:	681b      	ldr	r3, [r3, #0]
 800704e:	f003 0302 	and.w	r3, r3, #2
 8007052:	2b00      	cmp	r3, #0
 8007054:	d1f0      	bne.n	8007038 <HAL_RCC_OscConfig+0x1c0>
 8007056:	687b      	ldr	r3, [r7, #4]
 8007058:	681b      	ldr	r3, [r3, #0]
 800705a:	f003 0308 	and.w	r3, r3, #8
 800705e:	2b00      	cmp	r3, #0
 8007060:	d036      	beq.n	80070d0 <HAL_RCC_OscConfig+0x258>
 8007062:	687b      	ldr	r3, [r7, #4]
 8007064:	695b      	ldr	r3, [r3, #20]
 8007066:	2b00      	cmp	r3, #0
 8007068:	d016      	beq.n	8007098 <HAL_RCC_OscConfig+0x220>
 800706a:	4b15      	ldr	r3, [pc, #84]	; (80070c0 <HAL_RCC_OscConfig+0x248>)
 800706c:	2201      	movs	r2, #1
 800706e:	601a      	str	r2, [r3, #0]
 8007070:	f7fd ff60 	bl	8004f34 <HAL_GetTick>
 8007074:	6138      	str	r0, [r7, #16]
 8007076:	e008      	b.n	800708a <HAL_RCC_OscConfig+0x212>
 8007078:	f7fd ff5c 	bl	8004f34 <HAL_GetTick>
 800707c:	4602      	mov	r2, r0
 800707e:	693b      	ldr	r3, [r7, #16]
 8007080:	1ad3      	subs	r3, r2, r3
 8007082:	2b02      	cmp	r3, #2
 8007084:	d901      	bls.n	800708a <HAL_RCC_OscConfig+0x212>
 8007086:	2303      	movs	r3, #3
 8007088:	e167      	b.n	800735a <HAL_RCC_OscConfig+0x4e2>
 800708a:	4b0b      	ldr	r3, [pc, #44]	; (80070b8 <HAL_RCC_OscConfig+0x240>)
 800708c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800708e:	f003 0302 	and.w	r3, r3, #2
 8007092:	2b00      	cmp	r3, #0
 8007094:	d0f0      	beq.n	8007078 <HAL_RCC_OscConfig+0x200>
 8007096:	e01b      	b.n	80070d0 <HAL_RCC_OscConfig+0x258>
 8007098:	4b09      	ldr	r3, [pc, #36]	; (80070c0 <HAL_RCC_OscConfig+0x248>)
 800709a:	2200      	movs	r2, #0
 800709c:	601a      	str	r2, [r3, #0]
 800709e:	f7fd ff49 	bl	8004f34 <HAL_GetTick>
 80070a2:	6138      	str	r0, [r7, #16]
 80070a4:	e00e      	b.n	80070c4 <HAL_RCC_OscConfig+0x24c>
 80070a6:	f7fd ff45 	bl	8004f34 <HAL_GetTick>
 80070aa:	4602      	mov	r2, r0
 80070ac:	693b      	ldr	r3, [r7, #16]
 80070ae:	1ad3      	subs	r3, r2, r3
 80070b0:	2b02      	cmp	r3, #2
 80070b2:	d907      	bls.n	80070c4 <HAL_RCC_OscConfig+0x24c>
 80070b4:	2303      	movs	r3, #3
 80070b6:	e150      	b.n	800735a <HAL_RCC_OscConfig+0x4e2>
 80070b8:	40023800 	.word	0x40023800
 80070bc:	42470000 	.word	0x42470000
 80070c0:	42470e80 	.word	0x42470e80
 80070c4:	4b88      	ldr	r3, [pc, #544]	; (80072e8 <HAL_RCC_OscConfig+0x470>)
 80070c6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80070c8:	f003 0302 	and.w	r3, r3, #2
 80070cc:	2b00      	cmp	r3, #0
 80070ce:	d1ea      	bne.n	80070a6 <HAL_RCC_OscConfig+0x22e>
 80070d0:	687b      	ldr	r3, [r7, #4]
 80070d2:	681b      	ldr	r3, [r3, #0]
 80070d4:	f003 0304 	and.w	r3, r3, #4
 80070d8:	2b00      	cmp	r3, #0
 80070da:	f000 8097 	beq.w	800720c <HAL_RCC_OscConfig+0x394>
 80070de:	2300      	movs	r3, #0
 80070e0:	75fb      	strb	r3, [r7, #23]
 80070e2:	4b81      	ldr	r3, [pc, #516]	; (80072e8 <HAL_RCC_OscConfig+0x470>)
 80070e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80070e6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80070ea:	2b00      	cmp	r3, #0
 80070ec:	d10f      	bne.n	800710e <HAL_RCC_OscConfig+0x296>
 80070ee:	2300      	movs	r3, #0
 80070f0:	60bb      	str	r3, [r7, #8]
 80070f2:	4b7d      	ldr	r3, [pc, #500]	; (80072e8 <HAL_RCC_OscConfig+0x470>)
 80070f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80070f6:	4a7c      	ldr	r2, [pc, #496]	; (80072e8 <HAL_RCC_OscConfig+0x470>)
 80070f8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80070fc:	6413      	str	r3, [r2, #64]	; 0x40
 80070fe:	4b7a      	ldr	r3, [pc, #488]	; (80072e8 <HAL_RCC_OscConfig+0x470>)
 8007100:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007102:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007106:	60bb      	str	r3, [r7, #8]
 8007108:	68bb      	ldr	r3, [r7, #8]
 800710a:	2301      	movs	r3, #1
 800710c:	75fb      	strb	r3, [r7, #23]
 800710e:	4b77      	ldr	r3, [pc, #476]	; (80072ec <HAL_RCC_OscConfig+0x474>)
 8007110:	681b      	ldr	r3, [r3, #0]
 8007112:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007116:	2b00      	cmp	r3, #0
 8007118:	d118      	bne.n	800714c <HAL_RCC_OscConfig+0x2d4>
 800711a:	4b74      	ldr	r3, [pc, #464]	; (80072ec <HAL_RCC_OscConfig+0x474>)
 800711c:	681b      	ldr	r3, [r3, #0]
 800711e:	4a73      	ldr	r2, [pc, #460]	; (80072ec <HAL_RCC_OscConfig+0x474>)
 8007120:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007124:	6013      	str	r3, [r2, #0]
 8007126:	f7fd ff05 	bl	8004f34 <HAL_GetTick>
 800712a:	6138      	str	r0, [r7, #16]
 800712c:	e008      	b.n	8007140 <HAL_RCC_OscConfig+0x2c8>
 800712e:	f7fd ff01 	bl	8004f34 <HAL_GetTick>
 8007132:	4602      	mov	r2, r0
 8007134:	693b      	ldr	r3, [r7, #16]
 8007136:	1ad3      	subs	r3, r2, r3
 8007138:	2b02      	cmp	r3, #2
 800713a:	d901      	bls.n	8007140 <HAL_RCC_OscConfig+0x2c8>
 800713c:	2303      	movs	r3, #3
 800713e:	e10c      	b.n	800735a <HAL_RCC_OscConfig+0x4e2>
 8007140:	4b6a      	ldr	r3, [pc, #424]	; (80072ec <HAL_RCC_OscConfig+0x474>)
 8007142:	681b      	ldr	r3, [r3, #0]
 8007144:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007148:	2b00      	cmp	r3, #0
 800714a:	d0f0      	beq.n	800712e <HAL_RCC_OscConfig+0x2b6>
 800714c:	687b      	ldr	r3, [r7, #4]
 800714e:	689b      	ldr	r3, [r3, #8]
 8007150:	2b01      	cmp	r3, #1
 8007152:	d106      	bne.n	8007162 <HAL_RCC_OscConfig+0x2ea>
 8007154:	4b64      	ldr	r3, [pc, #400]	; (80072e8 <HAL_RCC_OscConfig+0x470>)
 8007156:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007158:	4a63      	ldr	r2, [pc, #396]	; (80072e8 <HAL_RCC_OscConfig+0x470>)
 800715a:	f043 0301 	orr.w	r3, r3, #1
 800715e:	6713      	str	r3, [r2, #112]	; 0x70
 8007160:	e01c      	b.n	800719c <HAL_RCC_OscConfig+0x324>
 8007162:	687b      	ldr	r3, [r7, #4]
 8007164:	689b      	ldr	r3, [r3, #8]
 8007166:	2b05      	cmp	r3, #5
 8007168:	d10c      	bne.n	8007184 <HAL_RCC_OscConfig+0x30c>
 800716a:	4b5f      	ldr	r3, [pc, #380]	; (80072e8 <HAL_RCC_OscConfig+0x470>)
 800716c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800716e:	4a5e      	ldr	r2, [pc, #376]	; (80072e8 <HAL_RCC_OscConfig+0x470>)
 8007170:	f043 0304 	orr.w	r3, r3, #4
 8007174:	6713      	str	r3, [r2, #112]	; 0x70
 8007176:	4b5c      	ldr	r3, [pc, #368]	; (80072e8 <HAL_RCC_OscConfig+0x470>)
 8007178:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800717a:	4a5b      	ldr	r2, [pc, #364]	; (80072e8 <HAL_RCC_OscConfig+0x470>)
 800717c:	f043 0301 	orr.w	r3, r3, #1
 8007180:	6713      	str	r3, [r2, #112]	; 0x70
 8007182:	e00b      	b.n	800719c <HAL_RCC_OscConfig+0x324>
 8007184:	4b58      	ldr	r3, [pc, #352]	; (80072e8 <HAL_RCC_OscConfig+0x470>)
 8007186:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007188:	4a57      	ldr	r2, [pc, #348]	; (80072e8 <HAL_RCC_OscConfig+0x470>)
 800718a:	f023 0301 	bic.w	r3, r3, #1
 800718e:	6713      	str	r3, [r2, #112]	; 0x70
 8007190:	4b55      	ldr	r3, [pc, #340]	; (80072e8 <HAL_RCC_OscConfig+0x470>)
 8007192:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8007194:	4a54      	ldr	r2, [pc, #336]	; (80072e8 <HAL_RCC_OscConfig+0x470>)
 8007196:	f023 0304 	bic.w	r3, r3, #4
 800719a:	6713      	str	r3, [r2, #112]	; 0x70
 800719c:	687b      	ldr	r3, [r7, #4]
 800719e:	689b      	ldr	r3, [r3, #8]
 80071a0:	2b00      	cmp	r3, #0
 80071a2:	d015      	beq.n	80071d0 <HAL_RCC_OscConfig+0x358>
 80071a4:	f7fd fec6 	bl	8004f34 <HAL_GetTick>
 80071a8:	6138      	str	r0, [r7, #16]
 80071aa:	e00a      	b.n	80071c2 <HAL_RCC_OscConfig+0x34a>
 80071ac:	f7fd fec2 	bl	8004f34 <HAL_GetTick>
 80071b0:	4602      	mov	r2, r0
 80071b2:	693b      	ldr	r3, [r7, #16]
 80071b4:	1ad3      	subs	r3, r2, r3
 80071b6:	f241 3288 	movw	r2, #5000	; 0x1388
 80071ba:	4293      	cmp	r3, r2
 80071bc:	d901      	bls.n	80071c2 <HAL_RCC_OscConfig+0x34a>
 80071be:	2303      	movs	r3, #3
 80071c0:	e0cb      	b.n	800735a <HAL_RCC_OscConfig+0x4e2>
 80071c2:	4b49      	ldr	r3, [pc, #292]	; (80072e8 <HAL_RCC_OscConfig+0x470>)
 80071c4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80071c6:	f003 0302 	and.w	r3, r3, #2
 80071ca:	2b00      	cmp	r3, #0
 80071cc:	d0ee      	beq.n	80071ac <HAL_RCC_OscConfig+0x334>
 80071ce:	e014      	b.n	80071fa <HAL_RCC_OscConfig+0x382>
 80071d0:	f7fd feb0 	bl	8004f34 <HAL_GetTick>
 80071d4:	6138      	str	r0, [r7, #16]
 80071d6:	e00a      	b.n	80071ee <HAL_RCC_OscConfig+0x376>
 80071d8:	f7fd feac 	bl	8004f34 <HAL_GetTick>
 80071dc:	4602      	mov	r2, r0
 80071de:	693b      	ldr	r3, [r7, #16]
 80071e0:	1ad3      	subs	r3, r2, r3
 80071e2:	f241 3288 	movw	r2, #5000	; 0x1388
 80071e6:	4293      	cmp	r3, r2
 80071e8:	d901      	bls.n	80071ee <HAL_RCC_OscConfig+0x376>
 80071ea:	2303      	movs	r3, #3
 80071ec:	e0b5      	b.n	800735a <HAL_RCC_OscConfig+0x4e2>
 80071ee:	4b3e      	ldr	r3, [pc, #248]	; (80072e8 <HAL_RCC_OscConfig+0x470>)
 80071f0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80071f2:	f003 0302 	and.w	r3, r3, #2
 80071f6:	2b00      	cmp	r3, #0
 80071f8:	d1ee      	bne.n	80071d8 <HAL_RCC_OscConfig+0x360>
 80071fa:	7dfb      	ldrb	r3, [r7, #23]
 80071fc:	2b01      	cmp	r3, #1
 80071fe:	d105      	bne.n	800720c <HAL_RCC_OscConfig+0x394>
 8007200:	4b39      	ldr	r3, [pc, #228]	; (80072e8 <HAL_RCC_OscConfig+0x470>)
 8007202:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007204:	4a38      	ldr	r2, [pc, #224]	; (80072e8 <HAL_RCC_OscConfig+0x470>)
 8007206:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800720a:	6413      	str	r3, [r2, #64]	; 0x40
 800720c:	687b      	ldr	r3, [r7, #4]
 800720e:	699b      	ldr	r3, [r3, #24]
 8007210:	2b00      	cmp	r3, #0
 8007212:	f000 80a1 	beq.w	8007358 <HAL_RCC_OscConfig+0x4e0>
 8007216:	4b34      	ldr	r3, [pc, #208]	; (80072e8 <HAL_RCC_OscConfig+0x470>)
 8007218:	689b      	ldr	r3, [r3, #8]
 800721a:	f003 030c 	and.w	r3, r3, #12
 800721e:	2b08      	cmp	r3, #8
 8007220:	d05c      	beq.n	80072dc <HAL_RCC_OscConfig+0x464>
 8007222:	687b      	ldr	r3, [r7, #4]
 8007224:	699b      	ldr	r3, [r3, #24]
 8007226:	2b02      	cmp	r3, #2
 8007228:	d141      	bne.n	80072ae <HAL_RCC_OscConfig+0x436>
 800722a:	4b31      	ldr	r3, [pc, #196]	; (80072f0 <HAL_RCC_OscConfig+0x478>)
 800722c:	2200      	movs	r2, #0
 800722e:	601a      	str	r2, [r3, #0]
 8007230:	f7fd fe80 	bl	8004f34 <HAL_GetTick>
 8007234:	6138      	str	r0, [r7, #16]
 8007236:	e008      	b.n	800724a <HAL_RCC_OscConfig+0x3d2>
 8007238:	f7fd fe7c 	bl	8004f34 <HAL_GetTick>
 800723c:	4602      	mov	r2, r0
 800723e:	693b      	ldr	r3, [r7, #16]
 8007240:	1ad3      	subs	r3, r2, r3
 8007242:	2b02      	cmp	r3, #2
 8007244:	d901      	bls.n	800724a <HAL_RCC_OscConfig+0x3d2>
 8007246:	2303      	movs	r3, #3
 8007248:	e087      	b.n	800735a <HAL_RCC_OscConfig+0x4e2>
 800724a:	4b27      	ldr	r3, [pc, #156]	; (80072e8 <HAL_RCC_OscConfig+0x470>)
 800724c:	681b      	ldr	r3, [r3, #0]
 800724e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8007252:	2b00      	cmp	r3, #0
 8007254:	d1f0      	bne.n	8007238 <HAL_RCC_OscConfig+0x3c0>
 8007256:	687b      	ldr	r3, [r7, #4]
 8007258:	69da      	ldr	r2, [r3, #28]
 800725a:	687b      	ldr	r3, [r7, #4]
 800725c:	6a1b      	ldr	r3, [r3, #32]
 800725e:	431a      	orrs	r2, r3
 8007260:	687b      	ldr	r3, [r7, #4]
 8007262:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8007264:	019b      	lsls	r3, r3, #6
 8007266:	431a      	orrs	r2, r3
 8007268:	687b      	ldr	r3, [r7, #4]
 800726a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800726c:	085b      	lsrs	r3, r3, #1
 800726e:	3b01      	subs	r3, #1
 8007270:	041b      	lsls	r3, r3, #16
 8007272:	431a      	orrs	r2, r3
 8007274:	687b      	ldr	r3, [r7, #4]
 8007276:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007278:	061b      	lsls	r3, r3, #24
 800727a:	491b      	ldr	r1, [pc, #108]	; (80072e8 <HAL_RCC_OscConfig+0x470>)
 800727c:	4313      	orrs	r3, r2
 800727e:	604b      	str	r3, [r1, #4]
 8007280:	4b1b      	ldr	r3, [pc, #108]	; (80072f0 <HAL_RCC_OscConfig+0x478>)
 8007282:	2201      	movs	r2, #1
 8007284:	601a      	str	r2, [r3, #0]
 8007286:	f7fd fe55 	bl	8004f34 <HAL_GetTick>
 800728a:	6138      	str	r0, [r7, #16]
 800728c:	e008      	b.n	80072a0 <HAL_RCC_OscConfig+0x428>
 800728e:	f7fd fe51 	bl	8004f34 <HAL_GetTick>
 8007292:	4602      	mov	r2, r0
 8007294:	693b      	ldr	r3, [r7, #16]
 8007296:	1ad3      	subs	r3, r2, r3
 8007298:	2b02      	cmp	r3, #2
 800729a:	d901      	bls.n	80072a0 <HAL_RCC_OscConfig+0x428>
 800729c:	2303      	movs	r3, #3
 800729e:	e05c      	b.n	800735a <HAL_RCC_OscConfig+0x4e2>
 80072a0:	4b11      	ldr	r3, [pc, #68]	; (80072e8 <HAL_RCC_OscConfig+0x470>)
 80072a2:	681b      	ldr	r3, [r3, #0]
 80072a4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80072a8:	2b00      	cmp	r3, #0
 80072aa:	d0f0      	beq.n	800728e <HAL_RCC_OscConfig+0x416>
 80072ac:	e054      	b.n	8007358 <HAL_RCC_OscConfig+0x4e0>
 80072ae:	4b10      	ldr	r3, [pc, #64]	; (80072f0 <HAL_RCC_OscConfig+0x478>)
 80072b0:	2200      	movs	r2, #0
 80072b2:	601a      	str	r2, [r3, #0]
 80072b4:	f7fd fe3e 	bl	8004f34 <HAL_GetTick>
 80072b8:	6138      	str	r0, [r7, #16]
 80072ba:	e008      	b.n	80072ce <HAL_RCC_OscConfig+0x456>
 80072bc:	f7fd fe3a 	bl	8004f34 <HAL_GetTick>
 80072c0:	4602      	mov	r2, r0
 80072c2:	693b      	ldr	r3, [r7, #16]
 80072c4:	1ad3      	subs	r3, r2, r3
 80072c6:	2b02      	cmp	r3, #2
 80072c8:	d901      	bls.n	80072ce <HAL_RCC_OscConfig+0x456>
 80072ca:	2303      	movs	r3, #3
 80072cc:	e045      	b.n	800735a <HAL_RCC_OscConfig+0x4e2>
 80072ce:	4b06      	ldr	r3, [pc, #24]	; (80072e8 <HAL_RCC_OscConfig+0x470>)
 80072d0:	681b      	ldr	r3, [r3, #0]
 80072d2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80072d6:	2b00      	cmp	r3, #0
 80072d8:	d1f0      	bne.n	80072bc <HAL_RCC_OscConfig+0x444>
 80072da:	e03d      	b.n	8007358 <HAL_RCC_OscConfig+0x4e0>
 80072dc:	687b      	ldr	r3, [r7, #4]
 80072de:	699b      	ldr	r3, [r3, #24]
 80072e0:	2b01      	cmp	r3, #1
 80072e2:	d107      	bne.n	80072f4 <HAL_RCC_OscConfig+0x47c>
 80072e4:	2301      	movs	r3, #1
 80072e6:	e038      	b.n	800735a <HAL_RCC_OscConfig+0x4e2>
 80072e8:	40023800 	.word	0x40023800
 80072ec:	40007000 	.word	0x40007000
 80072f0:	42470060 	.word	0x42470060
 80072f4:	4b1b      	ldr	r3, [pc, #108]	; (8007364 <HAL_RCC_OscConfig+0x4ec>)
 80072f6:	685b      	ldr	r3, [r3, #4]
 80072f8:	60fb      	str	r3, [r7, #12]
 80072fa:	687b      	ldr	r3, [r7, #4]
 80072fc:	699b      	ldr	r3, [r3, #24]
 80072fe:	2b01      	cmp	r3, #1
 8007300:	d028      	beq.n	8007354 <HAL_RCC_OscConfig+0x4dc>
 8007302:	68fb      	ldr	r3, [r7, #12]
 8007304:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8007308:	687b      	ldr	r3, [r7, #4]
 800730a:	69db      	ldr	r3, [r3, #28]
 800730c:	429a      	cmp	r2, r3
 800730e:	d121      	bne.n	8007354 <HAL_RCC_OscConfig+0x4dc>
 8007310:	68fb      	ldr	r3, [r7, #12]
 8007312:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8007316:	687b      	ldr	r3, [r7, #4]
 8007318:	6a1b      	ldr	r3, [r3, #32]
 800731a:	429a      	cmp	r2, r3
 800731c:	d11a      	bne.n	8007354 <HAL_RCC_OscConfig+0x4dc>
 800731e:	68fa      	ldr	r2, [r7, #12]
 8007320:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8007324:	4013      	ands	r3, r2
 8007326:	687a      	ldr	r2, [r7, #4]
 8007328:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800732a:	0192      	lsls	r2, r2, #6
 800732c:	4293      	cmp	r3, r2
 800732e:	d111      	bne.n	8007354 <HAL_RCC_OscConfig+0x4dc>
 8007330:	68fb      	ldr	r3, [r7, #12]
 8007332:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8007336:	687b      	ldr	r3, [r7, #4]
 8007338:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800733a:	085b      	lsrs	r3, r3, #1
 800733c:	3b01      	subs	r3, #1
 800733e:	041b      	lsls	r3, r3, #16
 8007340:	429a      	cmp	r2, r3
 8007342:	d107      	bne.n	8007354 <HAL_RCC_OscConfig+0x4dc>
 8007344:	68fb      	ldr	r3, [r7, #12]
 8007346:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 800734a:	687b      	ldr	r3, [r7, #4]
 800734c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800734e:	061b      	lsls	r3, r3, #24
 8007350:	429a      	cmp	r2, r3
 8007352:	d001      	beq.n	8007358 <HAL_RCC_OscConfig+0x4e0>
 8007354:	2301      	movs	r3, #1
 8007356:	e000      	b.n	800735a <HAL_RCC_OscConfig+0x4e2>
 8007358:	2300      	movs	r3, #0
 800735a:	4618      	mov	r0, r3
 800735c:	3718      	adds	r7, #24
 800735e:	46bd      	mov	sp, r7
 8007360:	bd80      	pop	{r7, pc}
 8007362:	bf00      	nop
 8007364:	40023800 	.word	0x40023800

08007368 <HAL_RCC_ClockConfig>:
 8007368:	b580      	push	{r7, lr}
 800736a:	b084      	sub	sp, #16
 800736c:	af00      	add	r7, sp, #0
 800736e:	6078      	str	r0, [r7, #4]
 8007370:	6039      	str	r1, [r7, #0]
 8007372:	687b      	ldr	r3, [r7, #4]
 8007374:	2b00      	cmp	r3, #0
 8007376:	d101      	bne.n	800737c <HAL_RCC_ClockConfig+0x14>
 8007378:	2301      	movs	r3, #1
 800737a:	e0cc      	b.n	8007516 <HAL_RCC_ClockConfig+0x1ae>
 800737c:	4b68      	ldr	r3, [pc, #416]	; (8007520 <HAL_RCC_ClockConfig+0x1b8>)
 800737e:	681b      	ldr	r3, [r3, #0]
 8007380:	f003 0307 	and.w	r3, r3, #7
 8007384:	683a      	ldr	r2, [r7, #0]
 8007386:	429a      	cmp	r2, r3
 8007388:	d90c      	bls.n	80073a4 <HAL_RCC_ClockConfig+0x3c>
 800738a:	4b65      	ldr	r3, [pc, #404]	; (8007520 <HAL_RCC_ClockConfig+0x1b8>)
 800738c:	683a      	ldr	r2, [r7, #0]
 800738e:	b2d2      	uxtb	r2, r2
 8007390:	701a      	strb	r2, [r3, #0]
 8007392:	4b63      	ldr	r3, [pc, #396]	; (8007520 <HAL_RCC_ClockConfig+0x1b8>)
 8007394:	681b      	ldr	r3, [r3, #0]
 8007396:	f003 0307 	and.w	r3, r3, #7
 800739a:	683a      	ldr	r2, [r7, #0]
 800739c:	429a      	cmp	r2, r3
 800739e:	d001      	beq.n	80073a4 <HAL_RCC_ClockConfig+0x3c>
 80073a0:	2301      	movs	r3, #1
 80073a2:	e0b8      	b.n	8007516 <HAL_RCC_ClockConfig+0x1ae>
 80073a4:	687b      	ldr	r3, [r7, #4]
 80073a6:	681b      	ldr	r3, [r3, #0]
 80073a8:	f003 0302 	and.w	r3, r3, #2
 80073ac:	2b00      	cmp	r3, #0
 80073ae:	d020      	beq.n	80073f2 <HAL_RCC_ClockConfig+0x8a>
 80073b0:	687b      	ldr	r3, [r7, #4]
 80073b2:	681b      	ldr	r3, [r3, #0]
 80073b4:	f003 0304 	and.w	r3, r3, #4
 80073b8:	2b00      	cmp	r3, #0
 80073ba:	d005      	beq.n	80073c8 <HAL_RCC_ClockConfig+0x60>
 80073bc:	4b59      	ldr	r3, [pc, #356]	; (8007524 <HAL_RCC_ClockConfig+0x1bc>)
 80073be:	689b      	ldr	r3, [r3, #8]
 80073c0:	4a58      	ldr	r2, [pc, #352]	; (8007524 <HAL_RCC_ClockConfig+0x1bc>)
 80073c2:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 80073c6:	6093      	str	r3, [r2, #8]
 80073c8:	687b      	ldr	r3, [r7, #4]
 80073ca:	681b      	ldr	r3, [r3, #0]
 80073cc:	f003 0308 	and.w	r3, r3, #8
 80073d0:	2b00      	cmp	r3, #0
 80073d2:	d005      	beq.n	80073e0 <HAL_RCC_ClockConfig+0x78>
 80073d4:	4b53      	ldr	r3, [pc, #332]	; (8007524 <HAL_RCC_ClockConfig+0x1bc>)
 80073d6:	689b      	ldr	r3, [r3, #8]
 80073d8:	4a52      	ldr	r2, [pc, #328]	; (8007524 <HAL_RCC_ClockConfig+0x1bc>)
 80073da:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 80073de:	6093      	str	r3, [r2, #8]
 80073e0:	4b50      	ldr	r3, [pc, #320]	; (8007524 <HAL_RCC_ClockConfig+0x1bc>)
 80073e2:	689b      	ldr	r3, [r3, #8]
 80073e4:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80073e8:	687b      	ldr	r3, [r7, #4]
 80073ea:	689b      	ldr	r3, [r3, #8]
 80073ec:	494d      	ldr	r1, [pc, #308]	; (8007524 <HAL_RCC_ClockConfig+0x1bc>)
 80073ee:	4313      	orrs	r3, r2
 80073f0:	608b      	str	r3, [r1, #8]
 80073f2:	687b      	ldr	r3, [r7, #4]
 80073f4:	681b      	ldr	r3, [r3, #0]
 80073f6:	f003 0301 	and.w	r3, r3, #1
 80073fa:	2b00      	cmp	r3, #0
 80073fc:	d044      	beq.n	8007488 <HAL_RCC_ClockConfig+0x120>
 80073fe:	687b      	ldr	r3, [r7, #4]
 8007400:	685b      	ldr	r3, [r3, #4]
 8007402:	2b01      	cmp	r3, #1
 8007404:	d107      	bne.n	8007416 <HAL_RCC_ClockConfig+0xae>
 8007406:	4b47      	ldr	r3, [pc, #284]	; (8007524 <HAL_RCC_ClockConfig+0x1bc>)
 8007408:	681b      	ldr	r3, [r3, #0]
 800740a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800740e:	2b00      	cmp	r3, #0
 8007410:	d119      	bne.n	8007446 <HAL_RCC_ClockConfig+0xde>
 8007412:	2301      	movs	r3, #1
 8007414:	e07f      	b.n	8007516 <HAL_RCC_ClockConfig+0x1ae>
 8007416:	687b      	ldr	r3, [r7, #4]
 8007418:	685b      	ldr	r3, [r3, #4]
 800741a:	2b02      	cmp	r3, #2
 800741c:	d003      	beq.n	8007426 <HAL_RCC_ClockConfig+0xbe>
 800741e:	687b      	ldr	r3, [r7, #4]
 8007420:	685b      	ldr	r3, [r3, #4]
 8007422:	2b03      	cmp	r3, #3
 8007424:	d107      	bne.n	8007436 <HAL_RCC_ClockConfig+0xce>
 8007426:	4b3f      	ldr	r3, [pc, #252]	; (8007524 <HAL_RCC_ClockConfig+0x1bc>)
 8007428:	681b      	ldr	r3, [r3, #0]
 800742a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800742e:	2b00      	cmp	r3, #0
 8007430:	d109      	bne.n	8007446 <HAL_RCC_ClockConfig+0xde>
 8007432:	2301      	movs	r3, #1
 8007434:	e06f      	b.n	8007516 <HAL_RCC_ClockConfig+0x1ae>
 8007436:	4b3b      	ldr	r3, [pc, #236]	; (8007524 <HAL_RCC_ClockConfig+0x1bc>)
 8007438:	681b      	ldr	r3, [r3, #0]
 800743a:	f003 0302 	and.w	r3, r3, #2
 800743e:	2b00      	cmp	r3, #0
 8007440:	d101      	bne.n	8007446 <HAL_RCC_ClockConfig+0xde>
 8007442:	2301      	movs	r3, #1
 8007444:	e067      	b.n	8007516 <HAL_RCC_ClockConfig+0x1ae>
 8007446:	4b37      	ldr	r3, [pc, #220]	; (8007524 <HAL_RCC_ClockConfig+0x1bc>)
 8007448:	689b      	ldr	r3, [r3, #8]
 800744a:	f023 0203 	bic.w	r2, r3, #3
 800744e:	687b      	ldr	r3, [r7, #4]
 8007450:	685b      	ldr	r3, [r3, #4]
 8007452:	4934      	ldr	r1, [pc, #208]	; (8007524 <HAL_RCC_ClockConfig+0x1bc>)
 8007454:	4313      	orrs	r3, r2
 8007456:	608b      	str	r3, [r1, #8]
 8007458:	f7fd fd6c 	bl	8004f34 <HAL_GetTick>
 800745c:	60f8      	str	r0, [r7, #12]
 800745e:	e00a      	b.n	8007476 <HAL_RCC_ClockConfig+0x10e>
 8007460:	f7fd fd68 	bl	8004f34 <HAL_GetTick>
 8007464:	4602      	mov	r2, r0
 8007466:	68fb      	ldr	r3, [r7, #12]
 8007468:	1ad3      	subs	r3, r2, r3
 800746a:	f241 3288 	movw	r2, #5000	; 0x1388
 800746e:	4293      	cmp	r3, r2
 8007470:	d901      	bls.n	8007476 <HAL_RCC_ClockConfig+0x10e>
 8007472:	2303      	movs	r3, #3
 8007474:	e04f      	b.n	8007516 <HAL_RCC_ClockConfig+0x1ae>
 8007476:	4b2b      	ldr	r3, [pc, #172]	; (8007524 <HAL_RCC_ClockConfig+0x1bc>)
 8007478:	689b      	ldr	r3, [r3, #8]
 800747a:	f003 020c 	and.w	r2, r3, #12
 800747e:	687b      	ldr	r3, [r7, #4]
 8007480:	685b      	ldr	r3, [r3, #4]
 8007482:	009b      	lsls	r3, r3, #2
 8007484:	429a      	cmp	r2, r3
 8007486:	d1eb      	bne.n	8007460 <HAL_RCC_ClockConfig+0xf8>
 8007488:	4b25      	ldr	r3, [pc, #148]	; (8007520 <HAL_RCC_ClockConfig+0x1b8>)
 800748a:	681b      	ldr	r3, [r3, #0]
 800748c:	f003 0307 	and.w	r3, r3, #7
 8007490:	683a      	ldr	r2, [r7, #0]
 8007492:	429a      	cmp	r2, r3
 8007494:	d20c      	bcs.n	80074b0 <HAL_RCC_ClockConfig+0x148>
 8007496:	4b22      	ldr	r3, [pc, #136]	; (8007520 <HAL_RCC_ClockConfig+0x1b8>)
 8007498:	683a      	ldr	r2, [r7, #0]
 800749a:	b2d2      	uxtb	r2, r2
 800749c:	701a      	strb	r2, [r3, #0]
 800749e:	4b20      	ldr	r3, [pc, #128]	; (8007520 <HAL_RCC_ClockConfig+0x1b8>)
 80074a0:	681b      	ldr	r3, [r3, #0]
 80074a2:	f003 0307 	and.w	r3, r3, #7
 80074a6:	683a      	ldr	r2, [r7, #0]
 80074a8:	429a      	cmp	r2, r3
 80074aa:	d001      	beq.n	80074b0 <HAL_RCC_ClockConfig+0x148>
 80074ac:	2301      	movs	r3, #1
 80074ae:	e032      	b.n	8007516 <HAL_RCC_ClockConfig+0x1ae>
 80074b0:	687b      	ldr	r3, [r7, #4]
 80074b2:	681b      	ldr	r3, [r3, #0]
 80074b4:	f003 0304 	and.w	r3, r3, #4
 80074b8:	2b00      	cmp	r3, #0
 80074ba:	d008      	beq.n	80074ce <HAL_RCC_ClockConfig+0x166>
 80074bc:	4b19      	ldr	r3, [pc, #100]	; (8007524 <HAL_RCC_ClockConfig+0x1bc>)
 80074be:	689b      	ldr	r3, [r3, #8]
 80074c0:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 80074c4:	687b      	ldr	r3, [r7, #4]
 80074c6:	68db      	ldr	r3, [r3, #12]
 80074c8:	4916      	ldr	r1, [pc, #88]	; (8007524 <HAL_RCC_ClockConfig+0x1bc>)
 80074ca:	4313      	orrs	r3, r2
 80074cc:	608b      	str	r3, [r1, #8]
 80074ce:	687b      	ldr	r3, [r7, #4]
 80074d0:	681b      	ldr	r3, [r3, #0]
 80074d2:	f003 0308 	and.w	r3, r3, #8
 80074d6:	2b00      	cmp	r3, #0
 80074d8:	d009      	beq.n	80074ee <HAL_RCC_ClockConfig+0x186>
 80074da:	4b12      	ldr	r3, [pc, #72]	; (8007524 <HAL_RCC_ClockConfig+0x1bc>)
 80074dc:	689b      	ldr	r3, [r3, #8]
 80074de:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 80074e2:	687b      	ldr	r3, [r7, #4]
 80074e4:	691b      	ldr	r3, [r3, #16]
 80074e6:	00db      	lsls	r3, r3, #3
 80074e8:	490e      	ldr	r1, [pc, #56]	; (8007524 <HAL_RCC_ClockConfig+0x1bc>)
 80074ea:	4313      	orrs	r3, r2
 80074ec:	608b      	str	r3, [r1, #8]
 80074ee:	f000 f821 	bl	8007534 <HAL_RCC_GetSysClockFreq>
 80074f2:	4602      	mov	r2, r0
 80074f4:	4b0b      	ldr	r3, [pc, #44]	; (8007524 <HAL_RCC_ClockConfig+0x1bc>)
 80074f6:	689b      	ldr	r3, [r3, #8]
 80074f8:	091b      	lsrs	r3, r3, #4
 80074fa:	f003 030f 	and.w	r3, r3, #15
 80074fe:	490a      	ldr	r1, [pc, #40]	; (8007528 <HAL_RCC_ClockConfig+0x1c0>)
 8007500:	5ccb      	ldrb	r3, [r1, r3]
 8007502:	fa22 f303 	lsr.w	r3, r2, r3
 8007506:	4a09      	ldr	r2, [pc, #36]	; (800752c <HAL_RCC_ClockConfig+0x1c4>)
 8007508:	6013      	str	r3, [r2, #0]
 800750a:	4b09      	ldr	r3, [pc, #36]	; (8007530 <HAL_RCC_ClockConfig+0x1c8>)
 800750c:	681b      	ldr	r3, [r3, #0]
 800750e:	4618      	mov	r0, r3
 8007510:	f7fd fccc 	bl	8004eac <HAL_InitTick>
 8007514:	2300      	movs	r3, #0
 8007516:	4618      	mov	r0, r3
 8007518:	3710      	adds	r7, #16
 800751a:	46bd      	mov	sp, r7
 800751c:	bd80      	pop	{r7, pc}
 800751e:	bf00      	nop
 8007520:	40023c00 	.word	0x40023c00
 8007524:	40023800 	.word	0x40023800
 8007528:	08011dd8 	.word	0x08011dd8
 800752c:	20000000 	.word	0x20000000
 8007530:	20000004 	.word	0x20000004

08007534 <HAL_RCC_GetSysClockFreq>:
 8007534:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8007538:	b090      	sub	sp, #64	; 0x40
 800753a:	af00      	add	r7, sp, #0
 800753c:	2300      	movs	r3, #0
 800753e:	637b      	str	r3, [r7, #52]	; 0x34
 8007540:	2300      	movs	r3, #0
 8007542:	63fb      	str	r3, [r7, #60]	; 0x3c
 8007544:	2300      	movs	r3, #0
 8007546:	633b      	str	r3, [r7, #48]	; 0x30
 8007548:	2300      	movs	r3, #0
 800754a:	63bb      	str	r3, [r7, #56]	; 0x38
 800754c:	4b59      	ldr	r3, [pc, #356]	; (80076b4 <HAL_RCC_GetSysClockFreq+0x180>)
 800754e:	689b      	ldr	r3, [r3, #8]
 8007550:	f003 030c 	and.w	r3, r3, #12
 8007554:	2b08      	cmp	r3, #8
 8007556:	d00d      	beq.n	8007574 <HAL_RCC_GetSysClockFreq+0x40>
 8007558:	2b08      	cmp	r3, #8
 800755a:	f200 80a1 	bhi.w	80076a0 <HAL_RCC_GetSysClockFreq+0x16c>
 800755e:	2b00      	cmp	r3, #0
 8007560:	d002      	beq.n	8007568 <HAL_RCC_GetSysClockFreq+0x34>
 8007562:	2b04      	cmp	r3, #4
 8007564:	d003      	beq.n	800756e <HAL_RCC_GetSysClockFreq+0x3a>
 8007566:	e09b      	b.n	80076a0 <HAL_RCC_GetSysClockFreq+0x16c>
 8007568:	4b53      	ldr	r3, [pc, #332]	; (80076b8 <HAL_RCC_GetSysClockFreq+0x184>)
 800756a:	63bb      	str	r3, [r7, #56]	; 0x38
 800756c:	e09b      	b.n	80076a6 <HAL_RCC_GetSysClockFreq+0x172>
 800756e:	4b53      	ldr	r3, [pc, #332]	; (80076bc <HAL_RCC_GetSysClockFreq+0x188>)
 8007570:	63bb      	str	r3, [r7, #56]	; 0x38
 8007572:	e098      	b.n	80076a6 <HAL_RCC_GetSysClockFreq+0x172>
 8007574:	4b4f      	ldr	r3, [pc, #316]	; (80076b4 <HAL_RCC_GetSysClockFreq+0x180>)
 8007576:	685b      	ldr	r3, [r3, #4]
 8007578:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800757c:	637b      	str	r3, [r7, #52]	; 0x34
 800757e:	4b4d      	ldr	r3, [pc, #308]	; (80076b4 <HAL_RCC_GetSysClockFreq+0x180>)
 8007580:	685b      	ldr	r3, [r3, #4]
 8007582:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8007586:	2b00      	cmp	r3, #0
 8007588:	d028      	beq.n	80075dc <HAL_RCC_GetSysClockFreq+0xa8>
 800758a:	4b4a      	ldr	r3, [pc, #296]	; (80076b4 <HAL_RCC_GetSysClockFreq+0x180>)
 800758c:	685b      	ldr	r3, [r3, #4]
 800758e:	099b      	lsrs	r3, r3, #6
 8007590:	2200      	movs	r2, #0
 8007592:	623b      	str	r3, [r7, #32]
 8007594:	627a      	str	r2, [r7, #36]	; 0x24
 8007596:	6a3b      	ldr	r3, [r7, #32]
 8007598:	f3c3 0008 	ubfx	r0, r3, #0, #9
 800759c:	2100      	movs	r1, #0
 800759e:	4b47      	ldr	r3, [pc, #284]	; (80076bc <HAL_RCC_GetSysClockFreq+0x188>)
 80075a0:	fb03 f201 	mul.w	r2, r3, r1
 80075a4:	2300      	movs	r3, #0
 80075a6:	fb00 f303 	mul.w	r3, r0, r3
 80075aa:	4413      	add	r3, r2
 80075ac:	4a43      	ldr	r2, [pc, #268]	; (80076bc <HAL_RCC_GetSysClockFreq+0x188>)
 80075ae:	fba0 1202 	umull	r1, r2, r0, r2
 80075b2:	62fa      	str	r2, [r7, #44]	; 0x2c
 80075b4:	460a      	mov	r2, r1
 80075b6:	62ba      	str	r2, [r7, #40]	; 0x28
 80075b8:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80075ba:	4413      	add	r3, r2
 80075bc:	62fb      	str	r3, [r7, #44]	; 0x2c
 80075be:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80075c0:	2200      	movs	r2, #0
 80075c2:	61bb      	str	r3, [r7, #24]
 80075c4:	61fa      	str	r2, [r7, #28]
 80075c6:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80075ca:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 80075ce:	f7f9 fb5b 	bl	8000c88 <__aeabi_uldivmod>
 80075d2:	4602      	mov	r2, r0
 80075d4:	460b      	mov	r3, r1
 80075d6:	4613      	mov	r3, r2
 80075d8:	63fb      	str	r3, [r7, #60]	; 0x3c
 80075da:	e053      	b.n	8007684 <HAL_RCC_GetSysClockFreq+0x150>
 80075dc:	4b35      	ldr	r3, [pc, #212]	; (80076b4 <HAL_RCC_GetSysClockFreq+0x180>)
 80075de:	685b      	ldr	r3, [r3, #4]
 80075e0:	099b      	lsrs	r3, r3, #6
 80075e2:	2200      	movs	r2, #0
 80075e4:	613b      	str	r3, [r7, #16]
 80075e6:	617a      	str	r2, [r7, #20]
 80075e8:	693b      	ldr	r3, [r7, #16]
 80075ea:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 80075ee:	f04f 0b00 	mov.w	fp, #0
 80075f2:	4652      	mov	r2, sl
 80075f4:	465b      	mov	r3, fp
 80075f6:	f04f 0000 	mov.w	r0, #0
 80075fa:	f04f 0100 	mov.w	r1, #0
 80075fe:	0159      	lsls	r1, r3, #5
 8007600:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8007604:	0150      	lsls	r0, r2, #5
 8007606:	4602      	mov	r2, r0
 8007608:	460b      	mov	r3, r1
 800760a:	ebb2 080a 	subs.w	r8, r2, sl
 800760e:	eb63 090b 	sbc.w	r9, r3, fp
 8007612:	f04f 0200 	mov.w	r2, #0
 8007616:	f04f 0300 	mov.w	r3, #0
 800761a:	ea4f 1389 	mov.w	r3, r9, lsl #6
 800761e:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 8007622:	ea4f 1288 	mov.w	r2, r8, lsl #6
 8007626:	ebb2 0408 	subs.w	r4, r2, r8
 800762a:	eb63 0509 	sbc.w	r5, r3, r9
 800762e:	f04f 0200 	mov.w	r2, #0
 8007632:	f04f 0300 	mov.w	r3, #0
 8007636:	00eb      	lsls	r3, r5, #3
 8007638:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800763c:	00e2      	lsls	r2, r4, #3
 800763e:	4614      	mov	r4, r2
 8007640:	461d      	mov	r5, r3
 8007642:	eb14 030a 	adds.w	r3, r4, sl
 8007646:	603b      	str	r3, [r7, #0]
 8007648:	eb45 030b 	adc.w	r3, r5, fp
 800764c:	607b      	str	r3, [r7, #4]
 800764e:	f04f 0200 	mov.w	r2, #0
 8007652:	f04f 0300 	mov.w	r3, #0
 8007656:	e9d7 4500 	ldrd	r4, r5, [r7]
 800765a:	4629      	mov	r1, r5
 800765c:	028b      	lsls	r3, r1, #10
 800765e:	4621      	mov	r1, r4
 8007660:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8007664:	4621      	mov	r1, r4
 8007666:	028a      	lsls	r2, r1, #10
 8007668:	4610      	mov	r0, r2
 800766a:	4619      	mov	r1, r3
 800766c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800766e:	2200      	movs	r2, #0
 8007670:	60bb      	str	r3, [r7, #8]
 8007672:	60fa      	str	r2, [r7, #12]
 8007674:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8007678:	f7f9 fb06 	bl	8000c88 <__aeabi_uldivmod>
 800767c:	4602      	mov	r2, r0
 800767e:	460b      	mov	r3, r1
 8007680:	4613      	mov	r3, r2
 8007682:	63fb      	str	r3, [r7, #60]	; 0x3c
 8007684:	4b0b      	ldr	r3, [pc, #44]	; (80076b4 <HAL_RCC_GetSysClockFreq+0x180>)
 8007686:	685b      	ldr	r3, [r3, #4]
 8007688:	0c1b      	lsrs	r3, r3, #16
 800768a:	f003 0303 	and.w	r3, r3, #3
 800768e:	3301      	adds	r3, #1
 8007690:	005b      	lsls	r3, r3, #1
 8007692:	633b      	str	r3, [r7, #48]	; 0x30
 8007694:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8007696:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007698:	fbb2 f3f3 	udiv	r3, r2, r3
 800769c:	63bb      	str	r3, [r7, #56]	; 0x38
 800769e:	e002      	b.n	80076a6 <HAL_RCC_GetSysClockFreq+0x172>
 80076a0:	4b05      	ldr	r3, [pc, #20]	; (80076b8 <HAL_RCC_GetSysClockFreq+0x184>)
 80076a2:	63bb      	str	r3, [r7, #56]	; 0x38
 80076a4:	bf00      	nop
 80076a6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80076a8:	4618      	mov	r0, r3
 80076aa:	3740      	adds	r7, #64	; 0x40
 80076ac:	46bd      	mov	sp, r7
 80076ae:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80076b2:	bf00      	nop
 80076b4:	40023800 	.word	0x40023800
 80076b8:	00f42400 	.word	0x00f42400
 80076bc:	017d7840 	.word	0x017d7840

080076c0 <HAL_RCC_GetHCLKFreq>:
 80076c0:	b480      	push	{r7}
 80076c2:	af00      	add	r7, sp, #0
 80076c4:	4b03      	ldr	r3, [pc, #12]	; (80076d4 <HAL_RCC_GetHCLKFreq+0x14>)
 80076c6:	681b      	ldr	r3, [r3, #0]
 80076c8:	4618      	mov	r0, r3
 80076ca:	46bd      	mov	sp, r7
 80076cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80076d0:	4770      	bx	lr
 80076d2:	bf00      	nop
 80076d4:	20000000 	.word	0x20000000

080076d8 <HAL_RCC_GetPCLK1Freq>:
 80076d8:	b580      	push	{r7, lr}
 80076da:	af00      	add	r7, sp, #0
 80076dc:	f7ff fff0 	bl	80076c0 <HAL_RCC_GetHCLKFreq>
 80076e0:	4602      	mov	r2, r0
 80076e2:	4b05      	ldr	r3, [pc, #20]	; (80076f8 <HAL_RCC_GetPCLK1Freq+0x20>)
 80076e4:	689b      	ldr	r3, [r3, #8]
 80076e6:	0a9b      	lsrs	r3, r3, #10
 80076e8:	f003 0307 	and.w	r3, r3, #7
 80076ec:	4903      	ldr	r1, [pc, #12]	; (80076fc <HAL_RCC_GetPCLK1Freq+0x24>)
 80076ee:	5ccb      	ldrb	r3, [r1, r3]
 80076f0:	fa22 f303 	lsr.w	r3, r2, r3
 80076f4:	4618      	mov	r0, r3
 80076f6:	bd80      	pop	{r7, pc}
 80076f8:	40023800 	.word	0x40023800
 80076fc:	08011de8 	.word	0x08011de8

08007700 <HAL_RCC_GetPCLK2Freq>:
 8007700:	b580      	push	{r7, lr}
 8007702:	af00      	add	r7, sp, #0
 8007704:	f7ff ffdc 	bl	80076c0 <HAL_RCC_GetHCLKFreq>
 8007708:	4602      	mov	r2, r0
 800770a:	4b05      	ldr	r3, [pc, #20]	; (8007720 <HAL_RCC_GetPCLK2Freq+0x20>)
 800770c:	689b      	ldr	r3, [r3, #8]
 800770e:	0b5b      	lsrs	r3, r3, #13
 8007710:	f003 0307 	and.w	r3, r3, #7
 8007714:	4903      	ldr	r1, [pc, #12]	; (8007724 <HAL_RCC_GetPCLK2Freq+0x24>)
 8007716:	5ccb      	ldrb	r3, [r1, r3]
 8007718:	fa22 f303 	lsr.w	r3, r2, r3
 800771c:	4618      	mov	r0, r3
 800771e:	bd80      	pop	{r7, pc}
 8007720:	40023800 	.word	0x40023800
 8007724:	08011de8 	.word	0x08011de8

08007728 <HAL_TIM_Base_Init>:
 8007728:	b580      	push	{r7, lr}
 800772a:	b082      	sub	sp, #8
 800772c:	af00      	add	r7, sp, #0
 800772e:	6078      	str	r0, [r7, #4]
 8007730:	687b      	ldr	r3, [r7, #4]
 8007732:	2b00      	cmp	r3, #0
 8007734:	d101      	bne.n	800773a <HAL_TIM_Base_Init+0x12>
 8007736:	2301      	movs	r3, #1
 8007738:	e041      	b.n	80077be <HAL_TIM_Base_Init+0x96>
 800773a:	687b      	ldr	r3, [r7, #4]
 800773c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007740:	b2db      	uxtb	r3, r3
 8007742:	2b00      	cmp	r3, #0
 8007744:	d106      	bne.n	8007754 <HAL_TIM_Base_Init+0x2c>
 8007746:	687b      	ldr	r3, [r7, #4]
 8007748:	2200      	movs	r2, #0
 800774a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800774e:	6878      	ldr	r0, [r7, #4]
 8007750:	f7fd f832 	bl	80047b8 <HAL_TIM_Base_MspInit>
 8007754:	687b      	ldr	r3, [r7, #4]
 8007756:	2202      	movs	r2, #2
 8007758:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800775c:	687b      	ldr	r3, [r7, #4]
 800775e:	681a      	ldr	r2, [r3, #0]
 8007760:	687b      	ldr	r3, [r7, #4]
 8007762:	3304      	adds	r3, #4
 8007764:	4619      	mov	r1, r3
 8007766:	4610      	mov	r0, r2
 8007768:	f001 f876 	bl	8008858 <TIM_Base_SetConfig>
 800776c:	687b      	ldr	r3, [r7, #4]
 800776e:	2201      	movs	r2, #1
 8007770:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8007774:	687b      	ldr	r3, [r7, #4]
 8007776:	2201      	movs	r2, #1
 8007778:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800777c:	687b      	ldr	r3, [r7, #4]
 800777e:	2201      	movs	r2, #1
 8007780:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8007784:	687b      	ldr	r3, [r7, #4]
 8007786:	2201      	movs	r2, #1
 8007788:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800778c:	687b      	ldr	r3, [r7, #4]
 800778e:	2201      	movs	r2, #1
 8007790:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8007794:	687b      	ldr	r3, [r7, #4]
 8007796:	2201      	movs	r2, #1
 8007798:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800779c:	687b      	ldr	r3, [r7, #4]
 800779e:	2201      	movs	r2, #1
 80077a0:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80077a4:	687b      	ldr	r3, [r7, #4]
 80077a6:	2201      	movs	r2, #1
 80077a8:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80077ac:	687b      	ldr	r3, [r7, #4]
 80077ae:	2201      	movs	r2, #1
 80077b0:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80077b4:	687b      	ldr	r3, [r7, #4]
 80077b6:	2201      	movs	r2, #1
 80077b8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80077bc:	2300      	movs	r3, #0
 80077be:	4618      	mov	r0, r3
 80077c0:	3708      	adds	r7, #8
 80077c2:	46bd      	mov	sp, r7
 80077c4:	bd80      	pop	{r7, pc}
	...

080077c8 <HAL_TIM_Base_Start>:
 80077c8:	b480      	push	{r7}
 80077ca:	b085      	sub	sp, #20
 80077cc:	af00      	add	r7, sp, #0
 80077ce:	6078      	str	r0, [r7, #4]
 80077d0:	687b      	ldr	r3, [r7, #4]
 80077d2:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80077d6:	b2db      	uxtb	r3, r3
 80077d8:	2b01      	cmp	r3, #1
 80077da:	d001      	beq.n	80077e0 <HAL_TIM_Base_Start+0x18>
 80077dc:	2301      	movs	r3, #1
 80077de:	e046      	b.n	800786e <HAL_TIM_Base_Start+0xa6>
 80077e0:	687b      	ldr	r3, [r7, #4]
 80077e2:	2202      	movs	r2, #2
 80077e4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80077e8:	687b      	ldr	r3, [r7, #4]
 80077ea:	681b      	ldr	r3, [r3, #0]
 80077ec:	4a23      	ldr	r2, [pc, #140]	; (800787c <HAL_TIM_Base_Start+0xb4>)
 80077ee:	4293      	cmp	r3, r2
 80077f0:	d022      	beq.n	8007838 <HAL_TIM_Base_Start+0x70>
 80077f2:	687b      	ldr	r3, [r7, #4]
 80077f4:	681b      	ldr	r3, [r3, #0]
 80077f6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80077fa:	d01d      	beq.n	8007838 <HAL_TIM_Base_Start+0x70>
 80077fc:	687b      	ldr	r3, [r7, #4]
 80077fe:	681b      	ldr	r3, [r3, #0]
 8007800:	4a1f      	ldr	r2, [pc, #124]	; (8007880 <HAL_TIM_Base_Start+0xb8>)
 8007802:	4293      	cmp	r3, r2
 8007804:	d018      	beq.n	8007838 <HAL_TIM_Base_Start+0x70>
 8007806:	687b      	ldr	r3, [r7, #4]
 8007808:	681b      	ldr	r3, [r3, #0]
 800780a:	4a1e      	ldr	r2, [pc, #120]	; (8007884 <HAL_TIM_Base_Start+0xbc>)
 800780c:	4293      	cmp	r3, r2
 800780e:	d013      	beq.n	8007838 <HAL_TIM_Base_Start+0x70>
 8007810:	687b      	ldr	r3, [r7, #4]
 8007812:	681b      	ldr	r3, [r3, #0]
 8007814:	4a1c      	ldr	r2, [pc, #112]	; (8007888 <HAL_TIM_Base_Start+0xc0>)
 8007816:	4293      	cmp	r3, r2
 8007818:	d00e      	beq.n	8007838 <HAL_TIM_Base_Start+0x70>
 800781a:	687b      	ldr	r3, [r7, #4]
 800781c:	681b      	ldr	r3, [r3, #0]
 800781e:	4a1b      	ldr	r2, [pc, #108]	; (800788c <HAL_TIM_Base_Start+0xc4>)
 8007820:	4293      	cmp	r3, r2
 8007822:	d009      	beq.n	8007838 <HAL_TIM_Base_Start+0x70>
 8007824:	687b      	ldr	r3, [r7, #4]
 8007826:	681b      	ldr	r3, [r3, #0]
 8007828:	4a19      	ldr	r2, [pc, #100]	; (8007890 <HAL_TIM_Base_Start+0xc8>)
 800782a:	4293      	cmp	r3, r2
 800782c:	d004      	beq.n	8007838 <HAL_TIM_Base_Start+0x70>
 800782e:	687b      	ldr	r3, [r7, #4]
 8007830:	681b      	ldr	r3, [r3, #0]
 8007832:	4a18      	ldr	r2, [pc, #96]	; (8007894 <HAL_TIM_Base_Start+0xcc>)
 8007834:	4293      	cmp	r3, r2
 8007836:	d111      	bne.n	800785c <HAL_TIM_Base_Start+0x94>
 8007838:	687b      	ldr	r3, [r7, #4]
 800783a:	681b      	ldr	r3, [r3, #0]
 800783c:	689b      	ldr	r3, [r3, #8]
 800783e:	f003 0307 	and.w	r3, r3, #7
 8007842:	60fb      	str	r3, [r7, #12]
 8007844:	68fb      	ldr	r3, [r7, #12]
 8007846:	2b06      	cmp	r3, #6
 8007848:	d010      	beq.n	800786c <HAL_TIM_Base_Start+0xa4>
 800784a:	687b      	ldr	r3, [r7, #4]
 800784c:	681b      	ldr	r3, [r3, #0]
 800784e:	681a      	ldr	r2, [r3, #0]
 8007850:	687b      	ldr	r3, [r7, #4]
 8007852:	681b      	ldr	r3, [r3, #0]
 8007854:	f042 0201 	orr.w	r2, r2, #1
 8007858:	601a      	str	r2, [r3, #0]
 800785a:	e007      	b.n	800786c <HAL_TIM_Base_Start+0xa4>
 800785c:	687b      	ldr	r3, [r7, #4]
 800785e:	681b      	ldr	r3, [r3, #0]
 8007860:	681a      	ldr	r2, [r3, #0]
 8007862:	687b      	ldr	r3, [r7, #4]
 8007864:	681b      	ldr	r3, [r3, #0]
 8007866:	f042 0201 	orr.w	r2, r2, #1
 800786a:	601a      	str	r2, [r3, #0]
 800786c:	2300      	movs	r3, #0
 800786e:	4618      	mov	r0, r3
 8007870:	3714      	adds	r7, #20
 8007872:	46bd      	mov	sp, r7
 8007874:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007878:	4770      	bx	lr
 800787a:	bf00      	nop
 800787c:	40010000 	.word	0x40010000
 8007880:	40000400 	.word	0x40000400
 8007884:	40000800 	.word	0x40000800
 8007888:	40000c00 	.word	0x40000c00
 800788c:	40010400 	.word	0x40010400
 8007890:	40014000 	.word	0x40014000
 8007894:	40001800 	.word	0x40001800

08007898 <HAL_TIM_Base_Start_IT>:
 8007898:	b480      	push	{r7}
 800789a:	b085      	sub	sp, #20
 800789c:	af00      	add	r7, sp, #0
 800789e:	6078      	str	r0, [r7, #4]
 80078a0:	687b      	ldr	r3, [r7, #4]
 80078a2:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80078a6:	b2db      	uxtb	r3, r3
 80078a8:	2b01      	cmp	r3, #1
 80078aa:	d001      	beq.n	80078b0 <HAL_TIM_Base_Start_IT+0x18>
 80078ac:	2301      	movs	r3, #1
 80078ae:	e04e      	b.n	800794e <HAL_TIM_Base_Start_IT+0xb6>
 80078b0:	687b      	ldr	r3, [r7, #4]
 80078b2:	2202      	movs	r2, #2
 80078b4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80078b8:	687b      	ldr	r3, [r7, #4]
 80078ba:	681b      	ldr	r3, [r3, #0]
 80078bc:	68da      	ldr	r2, [r3, #12]
 80078be:	687b      	ldr	r3, [r7, #4]
 80078c0:	681b      	ldr	r3, [r3, #0]
 80078c2:	f042 0201 	orr.w	r2, r2, #1
 80078c6:	60da      	str	r2, [r3, #12]
 80078c8:	687b      	ldr	r3, [r7, #4]
 80078ca:	681b      	ldr	r3, [r3, #0]
 80078cc:	4a23      	ldr	r2, [pc, #140]	; (800795c <HAL_TIM_Base_Start_IT+0xc4>)
 80078ce:	4293      	cmp	r3, r2
 80078d0:	d022      	beq.n	8007918 <HAL_TIM_Base_Start_IT+0x80>
 80078d2:	687b      	ldr	r3, [r7, #4]
 80078d4:	681b      	ldr	r3, [r3, #0]
 80078d6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80078da:	d01d      	beq.n	8007918 <HAL_TIM_Base_Start_IT+0x80>
 80078dc:	687b      	ldr	r3, [r7, #4]
 80078de:	681b      	ldr	r3, [r3, #0]
 80078e0:	4a1f      	ldr	r2, [pc, #124]	; (8007960 <HAL_TIM_Base_Start_IT+0xc8>)
 80078e2:	4293      	cmp	r3, r2
 80078e4:	d018      	beq.n	8007918 <HAL_TIM_Base_Start_IT+0x80>
 80078e6:	687b      	ldr	r3, [r7, #4]
 80078e8:	681b      	ldr	r3, [r3, #0]
 80078ea:	4a1e      	ldr	r2, [pc, #120]	; (8007964 <HAL_TIM_Base_Start_IT+0xcc>)
 80078ec:	4293      	cmp	r3, r2
 80078ee:	d013      	beq.n	8007918 <HAL_TIM_Base_Start_IT+0x80>
 80078f0:	687b      	ldr	r3, [r7, #4]
 80078f2:	681b      	ldr	r3, [r3, #0]
 80078f4:	4a1c      	ldr	r2, [pc, #112]	; (8007968 <HAL_TIM_Base_Start_IT+0xd0>)
 80078f6:	4293      	cmp	r3, r2
 80078f8:	d00e      	beq.n	8007918 <HAL_TIM_Base_Start_IT+0x80>
 80078fa:	687b      	ldr	r3, [r7, #4]
 80078fc:	681b      	ldr	r3, [r3, #0]
 80078fe:	4a1b      	ldr	r2, [pc, #108]	; (800796c <HAL_TIM_Base_Start_IT+0xd4>)
 8007900:	4293      	cmp	r3, r2
 8007902:	d009      	beq.n	8007918 <HAL_TIM_Base_Start_IT+0x80>
 8007904:	687b      	ldr	r3, [r7, #4]
 8007906:	681b      	ldr	r3, [r3, #0]
 8007908:	4a19      	ldr	r2, [pc, #100]	; (8007970 <HAL_TIM_Base_Start_IT+0xd8>)
 800790a:	4293      	cmp	r3, r2
 800790c:	d004      	beq.n	8007918 <HAL_TIM_Base_Start_IT+0x80>
 800790e:	687b      	ldr	r3, [r7, #4]
 8007910:	681b      	ldr	r3, [r3, #0]
 8007912:	4a18      	ldr	r2, [pc, #96]	; (8007974 <HAL_TIM_Base_Start_IT+0xdc>)
 8007914:	4293      	cmp	r3, r2
 8007916:	d111      	bne.n	800793c <HAL_TIM_Base_Start_IT+0xa4>
 8007918:	687b      	ldr	r3, [r7, #4]
 800791a:	681b      	ldr	r3, [r3, #0]
 800791c:	689b      	ldr	r3, [r3, #8]
 800791e:	f003 0307 	and.w	r3, r3, #7
 8007922:	60fb      	str	r3, [r7, #12]
 8007924:	68fb      	ldr	r3, [r7, #12]
 8007926:	2b06      	cmp	r3, #6
 8007928:	d010      	beq.n	800794c <HAL_TIM_Base_Start_IT+0xb4>
 800792a:	687b      	ldr	r3, [r7, #4]
 800792c:	681b      	ldr	r3, [r3, #0]
 800792e:	681a      	ldr	r2, [r3, #0]
 8007930:	687b      	ldr	r3, [r7, #4]
 8007932:	681b      	ldr	r3, [r3, #0]
 8007934:	f042 0201 	orr.w	r2, r2, #1
 8007938:	601a      	str	r2, [r3, #0]
 800793a:	e007      	b.n	800794c <HAL_TIM_Base_Start_IT+0xb4>
 800793c:	687b      	ldr	r3, [r7, #4]
 800793e:	681b      	ldr	r3, [r3, #0]
 8007940:	681a      	ldr	r2, [r3, #0]
 8007942:	687b      	ldr	r3, [r7, #4]
 8007944:	681b      	ldr	r3, [r3, #0]
 8007946:	f042 0201 	orr.w	r2, r2, #1
 800794a:	601a      	str	r2, [r3, #0]
 800794c:	2300      	movs	r3, #0
 800794e:	4618      	mov	r0, r3
 8007950:	3714      	adds	r7, #20
 8007952:	46bd      	mov	sp, r7
 8007954:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007958:	4770      	bx	lr
 800795a:	bf00      	nop
 800795c:	40010000 	.word	0x40010000
 8007960:	40000400 	.word	0x40000400
 8007964:	40000800 	.word	0x40000800
 8007968:	40000c00 	.word	0x40000c00
 800796c:	40010400 	.word	0x40010400
 8007970:	40014000 	.word	0x40014000
 8007974:	40001800 	.word	0x40001800

08007978 <HAL_TIM_PWM_Init>:
 8007978:	b580      	push	{r7, lr}
 800797a:	b082      	sub	sp, #8
 800797c:	af00      	add	r7, sp, #0
 800797e:	6078      	str	r0, [r7, #4]
 8007980:	687b      	ldr	r3, [r7, #4]
 8007982:	2b00      	cmp	r3, #0
 8007984:	d101      	bne.n	800798a <HAL_TIM_PWM_Init+0x12>
 8007986:	2301      	movs	r3, #1
 8007988:	e041      	b.n	8007a0e <HAL_TIM_PWM_Init+0x96>
 800798a:	687b      	ldr	r3, [r7, #4]
 800798c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007990:	b2db      	uxtb	r3, r3
 8007992:	2b00      	cmp	r3, #0
 8007994:	d106      	bne.n	80079a4 <HAL_TIM_PWM_Init+0x2c>
 8007996:	687b      	ldr	r3, [r7, #4]
 8007998:	2200      	movs	r2, #0
 800799a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800799e:	6878      	ldr	r0, [r7, #4]
 80079a0:	f000 f839 	bl	8007a16 <HAL_TIM_PWM_MspInit>
 80079a4:	687b      	ldr	r3, [r7, #4]
 80079a6:	2202      	movs	r2, #2
 80079a8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80079ac:	687b      	ldr	r3, [r7, #4]
 80079ae:	681a      	ldr	r2, [r3, #0]
 80079b0:	687b      	ldr	r3, [r7, #4]
 80079b2:	3304      	adds	r3, #4
 80079b4:	4619      	mov	r1, r3
 80079b6:	4610      	mov	r0, r2
 80079b8:	f000 ff4e 	bl	8008858 <TIM_Base_SetConfig>
 80079bc:	687b      	ldr	r3, [r7, #4]
 80079be:	2201      	movs	r2, #1
 80079c0:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80079c4:	687b      	ldr	r3, [r7, #4]
 80079c6:	2201      	movs	r2, #1
 80079c8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80079cc:	687b      	ldr	r3, [r7, #4]
 80079ce:	2201      	movs	r2, #1
 80079d0:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80079d4:	687b      	ldr	r3, [r7, #4]
 80079d6:	2201      	movs	r2, #1
 80079d8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80079dc:	687b      	ldr	r3, [r7, #4]
 80079de:	2201      	movs	r2, #1
 80079e0:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80079e4:	687b      	ldr	r3, [r7, #4]
 80079e6:	2201      	movs	r2, #1
 80079e8:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80079ec:	687b      	ldr	r3, [r7, #4]
 80079ee:	2201      	movs	r2, #1
 80079f0:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80079f4:	687b      	ldr	r3, [r7, #4]
 80079f6:	2201      	movs	r2, #1
 80079f8:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80079fc:	687b      	ldr	r3, [r7, #4]
 80079fe:	2201      	movs	r2, #1
 8007a00:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8007a04:	687b      	ldr	r3, [r7, #4]
 8007a06:	2201      	movs	r2, #1
 8007a08:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007a0c:	2300      	movs	r3, #0
 8007a0e:	4618      	mov	r0, r3
 8007a10:	3708      	adds	r7, #8
 8007a12:	46bd      	mov	sp, r7
 8007a14:	bd80      	pop	{r7, pc}

08007a16 <HAL_TIM_PWM_MspInit>:
 8007a16:	b480      	push	{r7}
 8007a18:	b083      	sub	sp, #12
 8007a1a:	af00      	add	r7, sp, #0
 8007a1c:	6078      	str	r0, [r7, #4]
 8007a1e:	bf00      	nop
 8007a20:	370c      	adds	r7, #12
 8007a22:	46bd      	mov	sp, r7
 8007a24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a28:	4770      	bx	lr
	...

08007a2c <HAL_TIM_PWM_Start>:
 8007a2c:	b580      	push	{r7, lr}
 8007a2e:	b084      	sub	sp, #16
 8007a30:	af00      	add	r7, sp, #0
 8007a32:	6078      	str	r0, [r7, #4]
 8007a34:	6039      	str	r1, [r7, #0]
 8007a36:	683b      	ldr	r3, [r7, #0]
 8007a38:	2b00      	cmp	r3, #0
 8007a3a:	d109      	bne.n	8007a50 <HAL_TIM_PWM_Start+0x24>
 8007a3c:	687b      	ldr	r3, [r7, #4]
 8007a3e:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8007a42:	b2db      	uxtb	r3, r3
 8007a44:	2b01      	cmp	r3, #1
 8007a46:	bf14      	ite	ne
 8007a48:	2301      	movne	r3, #1
 8007a4a:	2300      	moveq	r3, #0
 8007a4c:	b2db      	uxtb	r3, r3
 8007a4e:	e022      	b.n	8007a96 <HAL_TIM_PWM_Start+0x6a>
 8007a50:	683b      	ldr	r3, [r7, #0]
 8007a52:	2b04      	cmp	r3, #4
 8007a54:	d109      	bne.n	8007a6a <HAL_TIM_PWM_Start+0x3e>
 8007a56:	687b      	ldr	r3, [r7, #4]
 8007a58:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8007a5c:	b2db      	uxtb	r3, r3
 8007a5e:	2b01      	cmp	r3, #1
 8007a60:	bf14      	ite	ne
 8007a62:	2301      	movne	r3, #1
 8007a64:	2300      	moveq	r3, #0
 8007a66:	b2db      	uxtb	r3, r3
 8007a68:	e015      	b.n	8007a96 <HAL_TIM_PWM_Start+0x6a>
 8007a6a:	683b      	ldr	r3, [r7, #0]
 8007a6c:	2b08      	cmp	r3, #8
 8007a6e:	d109      	bne.n	8007a84 <HAL_TIM_PWM_Start+0x58>
 8007a70:	687b      	ldr	r3, [r7, #4]
 8007a72:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8007a76:	b2db      	uxtb	r3, r3
 8007a78:	2b01      	cmp	r3, #1
 8007a7a:	bf14      	ite	ne
 8007a7c:	2301      	movne	r3, #1
 8007a7e:	2300      	moveq	r3, #0
 8007a80:	b2db      	uxtb	r3, r3
 8007a82:	e008      	b.n	8007a96 <HAL_TIM_PWM_Start+0x6a>
 8007a84:	687b      	ldr	r3, [r7, #4]
 8007a86:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8007a8a:	b2db      	uxtb	r3, r3
 8007a8c:	2b01      	cmp	r3, #1
 8007a8e:	bf14      	ite	ne
 8007a90:	2301      	movne	r3, #1
 8007a92:	2300      	moveq	r3, #0
 8007a94:	b2db      	uxtb	r3, r3
 8007a96:	2b00      	cmp	r3, #0
 8007a98:	d001      	beq.n	8007a9e <HAL_TIM_PWM_Start+0x72>
 8007a9a:	2301      	movs	r3, #1
 8007a9c:	e07c      	b.n	8007b98 <HAL_TIM_PWM_Start+0x16c>
 8007a9e:	683b      	ldr	r3, [r7, #0]
 8007aa0:	2b00      	cmp	r3, #0
 8007aa2:	d104      	bne.n	8007aae <HAL_TIM_PWM_Start+0x82>
 8007aa4:	687b      	ldr	r3, [r7, #4]
 8007aa6:	2202      	movs	r2, #2
 8007aa8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007aac:	e013      	b.n	8007ad6 <HAL_TIM_PWM_Start+0xaa>
 8007aae:	683b      	ldr	r3, [r7, #0]
 8007ab0:	2b04      	cmp	r3, #4
 8007ab2:	d104      	bne.n	8007abe <HAL_TIM_PWM_Start+0x92>
 8007ab4:	687b      	ldr	r3, [r7, #4]
 8007ab6:	2202      	movs	r2, #2
 8007ab8:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8007abc:	e00b      	b.n	8007ad6 <HAL_TIM_PWM_Start+0xaa>
 8007abe:	683b      	ldr	r3, [r7, #0]
 8007ac0:	2b08      	cmp	r3, #8
 8007ac2:	d104      	bne.n	8007ace <HAL_TIM_PWM_Start+0xa2>
 8007ac4:	687b      	ldr	r3, [r7, #4]
 8007ac6:	2202      	movs	r2, #2
 8007ac8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8007acc:	e003      	b.n	8007ad6 <HAL_TIM_PWM_Start+0xaa>
 8007ace:	687b      	ldr	r3, [r7, #4]
 8007ad0:	2202      	movs	r2, #2
 8007ad2:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8007ad6:	687b      	ldr	r3, [r7, #4]
 8007ad8:	681b      	ldr	r3, [r3, #0]
 8007ada:	2201      	movs	r2, #1
 8007adc:	6839      	ldr	r1, [r7, #0]
 8007ade:	4618      	mov	r0, r3
 8007ae0:	f001 fada 	bl	8009098 <TIM_CCxChannelCmd>
 8007ae4:	687b      	ldr	r3, [r7, #4]
 8007ae6:	681b      	ldr	r3, [r3, #0]
 8007ae8:	4a2d      	ldr	r2, [pc, #180]	; (8007ba0 <HAL_TIM_PWM_Start+0x174>)
 8007aea:	4293      	cmp	r3, r2
 8007aec:	d004      	beq.n	8007af8 <HAL_TIM_PWM_Start+0xcc>
 8007aee:	687b      	ldr	r3, [r7, #4]
 8007af0:	681b      	ldr	r3, [r3, #0]
 8007af2:	4a2c      	ldr	r2, [pc, #176]	; (8007ba4 <HAL_TIM_PWM_Start+0x178>)
 8007af4:	4293      	cmp	r3, r2
 8007af6:	d101      	bne.n	8007afc <HAL_TIM_PWM_Start+0xd0>
 8007af8:	2301      	movs	r3, #1
 8007afa:	e000      	b.n	8007afe <HAL_TIM_PWM_Start+0xd2>
 8007afc:	2300      	movs	r3, #0
 8007afe:	2b00      	cmp	r3, #0
 8007b00:	d007      	beq.n	8007b12 <HAL_TIM_PWM_Start+0xe6>
 8007b02:	687b      	ldr	r3, [r7, #4]
 8007b04:	681b      	ldr	r3, [r3, #0]
 8007b06:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8007b08:	687b      	ldr	r3, [r7, #4]
 8007b0a:	681b      	ldr	r3, [r3, #0]
 8007b0c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8007b10:	645a      	str	r2, [r3, #68]	; 0x44
 8007b12:	687b      	ldr	r3, [r7, #4]
 8007b14:	681b      	ldr	r3, [r3, #0]
 8007b16:	4a22      	ldr	r2, [pc, #136]	; (8007ba0 <HAL_TIM_PWM_Start+0x174>)
 8007b18:	4293      	cmp	r3, r2
 8007b1a:	d022      	beq.n	8007b62 <HAL_TIM_PWM_Start+0x136>
 8007b1c:	687b      	ldr	r3, [r7, #4]
 8007b1e:	681b      	ldr	r3, [r3, #0]
 8007b20:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007b24:	d01d      	beq.n	8007b62 <HAL_TIM_PWM_Start+0x136>
 8007b26:	687b      	ldr	r3, [r7, #4]
 8007b28:	681b      	ldr	r3, [r3, #0]
 8007b2a:	4a1f      	ldr	r2, [pc, #124]	; (8007ba8 <HAL_TIM_PWM_Start+0x17c>)
 8007b2c:	4293      	cmp	r3, r2
 8007b2e:	d018      	beq.n	8007b62 <HAL_TIM_PWM_Start+0x136>
 8007b30:	687b      	ldr	r3, [r7, #4]
 8007b32:	681b      	ldr	r3, [r3, #0]
 8007b34:	4a1d      	ldr	r2, [pc, #116]	; (8007bac <HAL_TIM_PWM_Start+0x180>)
 8007b36:	4293      	cmp	r3, r2
 8007b38:	d013      	beq.n	8007b62 <HAL_TIM_PWM_Start+0x136>
 8007b3a:	687b      	ldr	r3, [r7, #4]
 8007b3c:	681b      	ldr	r3, [r3, #0]
 8007b3e:	4a1c      	ldr	r2, [pc, #112]	; (8007bb0 <HAL_TIM_PWM_Start+0x184>)
 8007b40:	4293      	cmp	r3, r2
 8007b42:	d00e      	beq.n	8007b62 <HAL_TIM_PWM_Start+0x136>
 8007b44:	687b      	ldr	r3, [r7, #4]
 8007b46:	681b      	ldr	r3, [r3, #0]
 8007b48:	4a16      	ldr	r2, [pc, #88]	; (8007ba4 <HAL_TIM_PWM_Start+0x178>)
 8007b4a:	4293      	cmp	r3, r2
 8007b4c:	d009      	beq.n	8007b62 <HAL_TIM_PWM_Start+0x136>
 8007b4e:	687b      	ldr	r3, [r7, #4]
 8007b50:	681b      	ldr	r3, [r3, #0]
 8007b52:	4a18      	ldr	r2, [pc, #96]	; (8007bb4 <HAL_TIM_PWM_Start+0x188>)
 8007b54:	4293      	cmp	r3, r2
 8007b56:	d004      	beq.n	8007b62 <HAL_TIM_PWM_Start+0x136>
 8007b58:	687b      	ldr	r3, [r7, #4]
 8007b5a:	681b      	ldr	r3, [r3, #0]
 8007b5c:	4a16      	ldr	r2, [pc, #88]	; (8007bb8 <HAL_TIM_PWM_Start+0x18c>)
 8007b5e:	4293      	cmp	r3, r2
 8007b60:	d111      	bne.n	8007b86 <HAL_TIM_PWM_Start+0x15a>
 8007b62:	687b      	ldr	r3, [r7, #4]
 8007b64:	681b      	ldr	r3, [r3, #0]
 8007b66:	689b      	ldr	r3, [r3, #8]
 8007b68:	f003 0307 	and.w	r3, r3, #7
 8007b6c:	60fb      	str	r3, [r7, #12]
 8007b6e:	68fb      	ldr	r3, [r7, #12]
 8007b70:	2b06      	cmp	r3, #6
 8007b72:	d010      	beq.n	8007b96 <HAL_TIM_PWM_Start+0x16a>
 8007b74:	687b      	ldr	r3, [r7, #4]
 8007b76:	681b      	ldr	r3, [r3, #0]
 8007b78:	681a      	ldr	r2, [r3, #0]
 8007b7a:	687b      	ldr	r3, [r7, #4]
 8007b7c:	681b      	ldr	r3, [r3, #0]
 8007b7e:	f042 0201 	orr.w	r2, r2, #1
 8007b82:	601a      	str	r2, [r3, #0]
 8007b84:	e007      	b.n	8007b96 <HAL_TIM_PWM_Start+0x16a>
 8007b86:	687b      	ldr	r3, [r7, #4]
 8007b88:	681b      	ldr	r3, [r3, #0]
 8007b8a:	681a      	ldr	r2, [r3, #0]
 8007b8c:	687b      	ldr	r3, [r7, #4]
 8007b8e:	681b      	ldr	r3, [r3, #0]
 8007b90:	f042 0201 	orr.w	r2, r2, #1
 8007b94:	601a      	str	r2, [r3, #0]
 8007b96:	2300      	movs	r3, #0
 8007b98:	4618      	mov	r0, r3
 8007b9a:	3710      	adds	r7, #16
 8007b9c:	46bd      	mov	sp, r7
 8007b9e:	bd80      	pop	{r7, pc}
 8007ba0:	40010000 	.word	0x40010000
 8007ba4:	40010400 	.word	0x40010400
 8007ba8:	40000400 	.word	0x40000400
 8007bac:	40000800 	.word	0x40000800
 8007bb0:	40000c00 	.word	0x40000c00
 8007bb4:	40014000 	.word	0x40014000
 8007bb8:	40001800 	.word	0x40001800

08007bbc <HAL_TIM_IC_Init>:
 8007bbc:	b580      	push	{r7, lr}
 8007bbe:	b082      	sub	sp, #8
 8007bc0:	af00      	add	r7, sp, #0
 8007bc2:	6078      	str	r0, [r7, #4]
 8007bc4:	687b      	ldr	r3, [r7, #4]
 8007bc6:	2b00      	cmp	r3, #0
 8007bc8:	d101      	bne.n	8007bce <HAL_TIM_IC_Init+0x12>
 8007bca:	2301      	movs	r3, #1
 8007bcc:	e041      	b.n	8007c52 <HAL_TIM_IC_Init+0x96>
 8007bce:	687b      	ldr	r3, [r7, #4]
 8007bd0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007bd4:	b2db      	uxtb	r3, r3
 8007bd6:	2b00      	cmp	r3, #0
 8007bd8:	d106      	bne.n	8007be8 <HAL_TIM_IC_Init+0x2c>
 8007bda:	687b      	ldr	r3, [r7, #4]
 8007bdc:	2200      	movs	r2, #0
 8007bde:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007be2:	6878      	ldr	r0, [r7, #4]
 8007be4:	f000 f839 	bl	8007c5a <HAL_TIM_IC_MspInit>
 8007be8:	687b      	ldr	r3, [r7, #4]
 8007bea:	2202      	movs	r2, #2
 8007bec:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007bf0:	687b      	ldr	r3, [r7, #4]
 8007bf2:	681a      	ldr	r2, [r3, #0]
 8007bf4:	687b      	ldr	r3, [r7, #4]
 8007bf6:	3304      	adds	r3, #4
 8007bf8:	4619      	mov	r1, r3
 8007bfa:	4610      	mov	r0, r2
 8007bfc:	f000 fe2c 	bl	8008858 <TIM_Base_SetConfig>
 8007c00:	687b      	ldr	r3, [r7, #4]
 8007c02:	2201      	movs	r2, #1
 8007c04:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8007c08:	687b      	ldr	r3, [r7, #4]
 8007c0a:	2201      	movs	r2, #1
 8007c0c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007c10:	687b      	ldr	r3, [r7, #4]
 8007c12:	2201      	movs	r2, #1
 8007c14:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8007c18:	687b      	ldr	r3, [r7, #4]
 8007c1a:	2201      	movs	r2, #1
 8007c1c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8007c20:	687b      	ldr	r3, [r7, #4]
 8007c22:	2201      	movs	r2, #1
 8007c24:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8007c28:	687b      	ldr	r3, [r7, #4]
 8007c2a:	2201      	movs	r2, #1
 8007c2c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8007c30:	687b      	ldr	r3, [r7, #4]
 8007c32:	2201      	movs	r2, #1
 8007c34:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8007c38:	687b      	ldr	r3, [r7, #4]
 8007c3a:	2201      	movs	r2, #1
 8007c3c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8007c40:	687b      	ldr	r3, [r7, #4]
 8007c42:	2201      	movs	r2, #1
 8007c44:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8007c48:	687b      	ldr	r3, [r7, #4]
 8007c4a:	2201      	movs	r2, #1
 8007c4c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007c50:	2300      	movs	r3, #0
 8007c52:	4618      	mov	r0, r3
 8007c54:	3708      	adds	r7, #8
 8007c56:	46bd      	mov	sp, r7
 8007c58:	bd80      	pop	{r7, pc}

08007c5a <HAL_TIM_IC_MspInit>:
 8007c5a:	b480      	push	{r7}
 8007c5c:	b083      	sub	sp, #12
 8007c5e:	af00      	add	r7, sp, #0
 8007c60:	6078      	str	r0, [r7, #4]
 8007c62:	bf00      	nop
 8007c64:	370c      	adds	r7, #12
 8007c66:	46bd      	mov	sp, r7
 8007c68:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c6c:	4770      	bx	lr
	...

08007c70 <HAL_TIM_IC_Start_IT>:
 8007c70:	b580      	push	{r7, lr}
 8007c72:	b084      	sub	sp, #16
 8007c74:	af00      	add	r7, sp, #0
 8007c76:	6078      	str	r0, [r7, #4]
 8007c78:	6039      	str	r1, [r7, #0]
 8007c7a:	2300      	movs	r3, #0
 8007c7c:	73fb      	strb	r3, [r7, #15]
 8007c7e:	683b      	ldr	r3, [r7, #0]
 8007c80:	2b00      	cmp	r3, #0
 8007c82:	d104      	bne.n	8007c8e <HAL_TIM_IC_Start_IT+0x1e>
 8007c84:	687b      	ldr	r3, [r7, #4]
 8007c86:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8007c8a:	b2db      	uxtb	r3, r3
 8007c8c:	e013      	b.n	8007cb6 <HAL_TIM_IC_Start_IT+0x46>
 8007c8e:	683b      	ldr	r3, [r7, #0]
 8007c90:	2b04      	cmp	r3, #4
 8007c92:	d104      	bne.n	8007c9e <HAL_TIM_IC_Start_IT+0x2e>
 8007c94:	687b      	ldr	r3, [r7, #4]
 8007c96:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8007c9a:	b2db      	uxtb	r3, r3
 8007c9c:	e00b      	b.n	8007cb6 <HAL_TIM_IC_Start_IT+0x46>
 8007c9e:	683b      	ldr	r3, [r7, #0]
 8007ca0:	2b08      	cmp	r3, #8
 8007ca2:	d104      	bne.n	8007cae <HAL_TIM_IC_Start_IT+0x3e>
 8007ca4:	687b      	ldr	r3, [r7, #4]
 8007ca6:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8007caa:	b2db      	uxtb	r3, r3
 8007cac:	e003      	b.n	8007cb6 <HAL_TIM_IC_Start_IT+0x46>
 8007cae:	687b      	ldr	r3, [r7, #4]
 8007cb0:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8007cb4:	b2db      	uxtb	r3, r3
 8007cb6:	73bb      	strb	r3, [r7, #14]
 8007cb8:	683b      	ldr	r3, [r7, #0]
 8007cba:	2b00      	cmp	r3, #0
 8007cbc:	d104      	bne.n	8007cc8 <HAL_TIM_IC_Start_IT+0x58>
 8007cbe:	687b      	ldr	r3, [r7, #4]
 8007cc0:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 8007cc4:	b2db      	uxtb	r3, r3
 8007cc6:	e013      	b.n	8007cf0 <HAL_TIM_IC_Start_IT+0x80>
 8007cc8:	683b      	ldr	r3, [r7, #0]
 8007cca:	2b04      	cmp	r3, #4
 8007ccc:	d104      	bne.n	8007cd8 <HAL_TIM_IC_Start_IT+0x68>
 8007cce:	687b      	ldr	r3, [r7, #4]
 8007cd0:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 8007cd4:	b2db      	uxtb	r3, r3
 8007cd6:	e00b      	b.n	8007cf0 <HAL_TIM_IC_Start_IT+0x80>
 8007cd8:	683b      	ldr	r3, [r7, #0]
 8007cda:	2b08      	cmp	r3, #8
 8007cdc:	d104      	bne.n	8007ce8 <HAL_TIM_IC_Start_IT+0x78>
 8007cde:	687b      	ldr	r3, [r7, #4]
 8007ce0:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8007ce4:	b2db      	uxtb	r3, r3
 8007ce6:	e003      	b.n	8007cf0 <HAL_TIM_IC_Start_IT+0x80>
 8007ce8:	687b      	ldr	r3, [r7, #4]
 8007cea:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8007cee:	b2db      	uxtb	r3, r3
 8007cf0:	737b      	strb	r3, [r7, #13]
 8007cf2:	7bbb      	ldrb	r3, [r7, #14]
 8007cf4:	2b01      	cmp	r3, #1
 8007cf6:	d102      	bne.n	8007cfe <HAL_TIM_IC_Start_IT+0x8e>
 8007cf8:	7b7b      	ldrb	r3, [r7, #13]
 8007cfa:	2b01      	cmp	r3, #1
 8007cfc:	d001      	beq.n	8007d02 <HAL_TIM_IC_Start_IT+0x92>
 8007cfe:	2301      	movs	r3, #1
 8007d00:	e0cc      	b.n	8007e9c <HAL_TIM_IC_Start_IT+0x22c>
 8007d02:	683b      	ldr	r3, [r7, #0]
 8007d04:	2b00      	cmp	r3, #0
 8007d06:	d104      	bne.n	8007d12 <HAL_TIM_IC_Start_IT+0xa2>
 8007d08:	687b      	ldr	r3, [r7, #4]
 8007d0a:	2202      	movs	r2, #2
 8007d0c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007d10:	e013      	b.n	8007d3a <HAL_TIM_IC_Start_IT+0xca>
 8007d12:	683b      	ldr	r3, [r7, #0]
 8007d14:	2b04      	cmp	r3, #4
 8007d16:	d104      	bne.n	8007d22 <HAL_TIM_IC_Start_IT+0xb2>
 8007d18:	687b      	ldr	r3, [r7, #4]
 8007d1a:	2202      	movs	r2, #2
 8007d1c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8007d20:	e00b      	b.n	8007d3a <HAL_TIM_IC_Start_IT+0xca>
 8007d22:	683b      	ldr	r3, [r7, #0]
 8007d24:	2b08      	cmp	r3, #8
 8007d26:	d104      	bne.n	8007d32 <HAL_TIM_IC_Start_IT+0xc2>
 8007d28:	687b      	ldr	r3, [r7, #4]
 8007d2a:	2202      	movs	r2, #2
 8007d2c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8007d30:	e003      	b.n	8007d3a <HAL_TIM_IC_Start_IT+0xca>
 8007d32:	687b      	ldr	r3, [r7, #4]
 8007d34:	2202      	movs	r2, #2
 8007d36:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8007d3a:	683b      	ldr	r3, [r7, #0]
 8007d3c:	2b00      	cmp	r3, #0
 8007d3e:	d104      	bne.n	8007d4a <HAL_TIM_IC_Start_IT+0xda>
 8007d40:	687b      	ldr	r3, [r7, #4]
 8007d42:	2202      	movs	r2, #2
 8007d44:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8007d48:	e013      	b.n	8007d72 <HAL_TIM_IC_Start_IT+0x102>
 8007d4a:	683b      	ldr	r3, [r7, #0]
 8007d4c:	2b04      	cmp	r3, #4
 8007d4e:	d104      	bne.n	8007d5a <HAL_TIM_IC_Start_IT+0xea>
 8007d50:	687b      	ldr	r3, [r7, #4]
 8007d52:	2202      	movs	r2, #2
 8007d54:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8007d58:	e00b      	b.n	8007d72 <HAL_TIM_IC_Start_IT+0x102>
 8007d5a:	683b      	ldr	r3, [r7, #0]
 8007d5c:	2b08      	cmp	r3, #8
 8007d5e:	d104      	bne.n	8007d6a <HAL_TIM_IC_Start_IT+0xfa>
 8007d60:	687b      	ldr	r3, [r7, #4]
 8007d62:	2202      	movs	r2, #2
 8007d64:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8007d68:	e003      	b.n	8007d72 <HAL_TIM_IC_Start_IT+0x102>
 8007d6a:	687b      	ldr	r3, [r7, #4]
 8007d6c:	2202      	movs	r2, #2
 8007d6e:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8007d72:	683b      	ldr	r3, [r7, #0]
 8007d74:	2b0c      	cmp	r3, #12
 8007d76:	d841      	bhi.n	8007dfc <HAL_TIM_IC_Start_IT+0x18c>
 8007d78:	a201      	add	r2, pc, #4	; (adr r2, 8007d80 <HAL_TIM_IC_Start_IT+0x110>)
 8007d7a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007d7e:	bf00      	nop
 8007d80:	08007db5 	.word	0x08007db5
 8007d84:	08007dfd 	.word	0x08007dfd
 8007d88:	08007dfd 	.word	0x08007dfd
 8007d8c:	08007dfd 	.word	0x08007dfd
 8007d90:	08007dc7 	.word	0x08007dc7
 8007d94:	08007dfd 	.word	0x08007dfd
 8007d98:	08007dfd 	.word	0x08007dfd
 8007d9c:	08007dfd 	.word	0x08007dfd
 8007da0:	08007dd9 	.word	0x08007dd9
 8007da4:	08007dfd 	.word	0x08007dfd
 8007da8:	08007dfd 	.word	0x08007dfd
 8007dac:	08007dfd 	.word	0x08007dfd
 8007db0:	08007deb 	.word	0x08007deb
 8007db4:	687b      	ldr	r3, [r7, #4]
 8007db6:	681b      	ldr	r3, [r3, #0]
 8007db8:	68da      	ldr	r2, [r3, #12]
 8007dba:	687b      	ldr	r3, [r7, #4]
 8007dbc:	681b      	ldr	r3, [r3, #0]
 8007dbe:	f042 0202 	orr.w	r2, r2, #2
 8007dc2:	60da      	str	r2, [r3, #12]
 8007dc4:	e01d      	b.n	8007e02 <HAL_TIM_IC_Start_IT+0x192>
 8007dc6:	687b      	ldr	r3, [r7, #4]
 8007dc8:	681b      	ldr	r3, [r3, #0]
 8007dca:	68da      	ldr	r2, [r3, #12]
 8007dcc:	687b      	ldr	r3, [r7, #4]
 8007dce:	681b      	ldr	r3, [r3, #0]
 8007dd0:	f042 0204 	orr.w	r2, r2, #4
 8007dd4:	60da      	str	r2, [r3, #12]
 8007dd6:	e014      	b.n	8007e02 <HAL_TIM_IC_Start_IT+0x192>
 8007dd8:	687b      	ldr	r3, [r7, #4]
 8007dda:	681b      	ldr	r3, [r3, #0]
 8007ddc:	68da      	ldr	r2, [r3, #12]
 8007dde:	687b      	ldr	r3, [r7, #4]
 8007de0:	681b      	ldr	r3, [r3, #0]
 8007de2:	f042 0208 	orr.w	r2, r2, #8
 8007de6:	60da      	str	r2, [r3, #12]
 8007de8:	e00b      	b.n	8007e02 <HAL_TIM_IC_Start_IT+0x192>
 8007dea:	687b      	ldr	r3, [r7, #4]
 8007dec:	681b      	ldr	r3, [r3, #0]
 8007dee:	68da      	ldr	r2, [r3, #12]
 8007df0:	687b      	ldr	r3, [r7, #4]
 8007df2:	681b      	ldr	r3, [r3, #0]
 8007df4:	f042 0210 	orr.w	r2, r2, #16
 8007df8:	60da      	str	r2, [r3, #12]
 8007dfa:	e002      	b.n	8007e02 <HAL_TIM_IC_Start_IT+0x192>
 8007dfc:	2301      	movs	r3, #1
 8007dfe:	73fb      	strb	r3, [r7, #15]
 8007e00:	bf00      	nop
 8007e02:	7bfb      	ldrb	r3, [r7, #15]
 8007e04:	2b00      	cmp	r3, #0
 8007e06:	d148      	bne.n	8007e9a <HAL_TIM_IC_Start_IT+0x22a>
 8007e08:	687b      	ldr	r3, [r7, #4]
 8007e0a:	681b      	ldr	r3, [r3, #0]
 8007e0c:	2201      	movs	r2, #1
 8007e0e:	6839      	ldr	r1, [r7, #0]
 8007e10:	4618      	mov	r0, r3
 8007e12:	f001 f941 	bl	8009098 <TIM_CCxChannelCmd>
 8007e16:	687b      	ldr	r3, [r7, #4]
 8007e18:	681b      	ldr	r3, [r3, #0]
 8007e1a:	4a22      	ldr	r2, [pc, #136]	; (8007ea4 <HAL_TIM_IC_Start_IT+0x234>)
 8007e1c:	4293      	cmp	r3, r2
 8007e1e:	d022      	beq.n	8007e66 <HAL_TIM_IC_Start_IT+0x1f6>
 8007e20:	687b      	ldr	r3, [r7, #4]
 8007e22:	681b      	ldr	r3, [r3, #0]
 8007e24:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007e28:	d01d      	beq.n	8007e66 <HAL_TIM_IC_Start_IT+0x1f6>
 8007e2a:	687b      	ldr	r3, [r7, #4]
 8007e2c:	681b      	ldr	r3, [r3, #0]
 8007e2e:	4a1e      	ldr	r2, [pc, #120]	; (8007ea8 <HAL_TIM_IC_Start_IT+0x238>)
 8007e30:	4293      	cmp	r3, r2
 8007e32:	d018      	beq.n	8007e66 <HAL_TIM_IC_Start_IT+0x1f6>
 8007e34:	687b      	ldr	r3, [r7, #4]
 8007e36:	681b      	ldr	r3, [r3, #0]
 8007e38:	4a1c      	ldr	r2, [pc, #112]	; (8007eac <HAL_TIM_IC_Start_IT+0x23c>)
 8007e3a:	4293      	cmp	r3, r2
 8007e3c:	d013      	beq.n	8007e66 <HAL_TIM_IC_Start_IT+0x1f6>
 8007e3e:	687b      	ldr	r3, [r7, #4]
 8007e40:	681b      	ldr	r3, [r3, #0]
 8007e42:	4a1b      	ldr	r2, [pc, #108]	; (8007eb0 <HAL_TIM_IC_Start_IT+0x240>)
 8007e44:	4293      	cmp	r3, r2
 8007e46:	d00e      	beq.n	8007e66 <HAL_TIM_IC_Start_IT+0x1f6>
 8007e48:	687b      	ldr	r3, [r7, #4]
 8007e4a:	681b      	ldr	r3, [r3, #0]
 8007e4c:	4a19      	ldr	r2, [pc, #100]	; (8007eb4 <HAL_TIM_IC_Start_IT+0x244>)
 8007e4e:	4293      	cmp	r3, r2
 8007e50:	d009      	beq.n	8007e66 <HAL_TIM_IC_Start_IT+0x1f6>
 8007e52:	687b      	ldr	r3, [r7, #4]
 8007e54:	681b      	ldr	r3, [r3, #0]
 8007e56:	4a18      	ldr	r2, [pc, #96]	; (8007eb8 <HAL_TIM_IC_Start_IT+0x248>)
 8007e58:	4293      	cmp	r3, r2
 8007e5a:	d004      	beq.n	8007e66 <HAL_TIM_IC_Start_IT+0x1f6>
 8007e5c:	687b      	ldr	r3, [r7, #4]
 8007e5e:	681b      	ldr	r3, [r3, #0]
 8007e60:	4a16      	ldr	r2, [pc, #88]	; (8007ebc <HAL_TIM_IC_Start_IT+0x24c>)
 8007e62:	4293      	cmp	r3, r2
 8007e64:	d111      	bne.n	8007e8a <HAL_TIM_IC_Start_IT+0x21a>
 8007e66:	687b      	ldr	r3, [r7, #4]
 8007e68:	681b      	ldr	r3, [r3, #0]
 8007e6a:	689b      	ldr	r3, [r3, #8]
 8007e6c:	f003 0307 	and.w	r3, r3, #7
 8007e70:	60bb      	str	r3, [r7, #8]
 8007e72:	68bb      	ldr	r3, [r7, #8]
 8007e74:	2b06      	cmp	r3, #6
 8007e76:	d010      	beq.n	8007e9a <HAL_TIM_IC_Start_IT+0x22a>
 8007e78:	687b      	ldr	r3, [r7, #4]
 8007e7a:	681b      	ldr	r3, [r3, #0]
 8007e7c:	681a      	ldr	r2, [r3, #0]
 8007e7e:	687b      	ldr	r3, [r7, #4]
 8007e80:	681b      	ldr	r3, [r3, #0]
 8007e82:	f042 0201 	orr.w	r2, r2, #1
 8007e86:	601a      	str	r2, [r3, #0]
 8007e88:	e007      	b.n	8007e9a <HAL_TIM_IC_Start_IT+0x22a>
 8007e8a:	687b      	ldr	r3, [r7, #4]
 8007e8c:	681b      	ldr	r3, [r3, #0]
 8007e8e:	681a      	ldr	r2, [r3, #0]
 8007e90:	687b      	ldr	r3, [r7, #4]
 8007e92:	681b      	ldr	r3, [r3, #0]
 8007e94:	f042 0201 	orr.w	r2, r2, #1
 8007e98:	601a      	str	r2, [r3, #0]
 8007e9a:	7bfb      	ldrb	r3, [r7, #15]
 8007e9c:	4618      	mov	r0, r3
 8007e9e:	3710      	adds	r7, #16
 8007ea0:	46bd      	mov	sp, r7
 8007ea2:	bd80      	pop	{r7, pc}
 8007ea4:	40010000 	.word	0x40010000
 8007ea8:	40000400 	.word	0x40000400
 8007eac:	40000800 	.word	0x40000800
 8007eb0:	40000c00 	.word	0x40000c00
 8007eb4:	40010400 	.word	0x40010400
 8007eb8:	40014000 	.word	0x40014000
 8007ebc:	40001800 	.word	0x40001800

08007ec0 <HAL_TIM_Encoder_Init>:
 8007ec0:	b580      	push	{r7, lr}
 8007ec2:	b086      	sub	sp, #24
 8007ec4:	af00      	add	r7, sp, #0
 8007ec6:	6078      	str	r0, [r7, #4]
 8007ec8:	6039      	str	r1, [r7, #0]
 8007eca:	687b      	ldr	r3, [r7, #4]
 8007ecc:	2b00      	cmp	r3, #0
 8007ece:	d101      	bne.n	8007ed4 <HAL_TIM_Encoder_Init+0x14>
 8007ed0:	2301      	movs	r3, #1
 8007ed2:	e097      	b.n	8008004 <HAL_TIM_Encoder_Init+0x144>
 8007ed4:	687b      	ldr	r3, [r7, #4]
 8007ed6:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007eda:	b2db      	uxtb	r3, r3
 8007edc:	2b00      	cmp	r3, #0
 8007ede:	d106      	bne.n	8007eee <HAL_TIM_Encoder_Init+0x2e>
 8007ee0:	687b      	ldr	r3, [r7, #4]
 8007ee2:	2200      	movs	r2, #0
 8007ee4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007ee8:	6878      	ldr	r0, [r7, #4]
 8007eea:	f7fc fd1d 	bl	8004928 <HAL_TIM_Encoder_MspInit>
 8007eee:	687b      	ldr	r3, [r7, #4]
 8007ef0:	2202      	movs	r2, #2
 8007ef2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007ef6:	687b      	ldr	r3, [r7, #4]
 8007ef8:	681b      	ldr	r3, [r3, #0]
 8007efa:	689b      	ldr	r3, [r3, #8]
 8007efc:	687a      	ldr	r2, [r7, #4]
 8007efe:	6812      	ldr	r2, [r2, #0]
 8007f00:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8007f04:	f023 0307 	bic.w	r3, r3, #7
 8007f08:	6093      	str	r3, [r2, #8]
 8007f0a:	687b      	ldr	r3, [r7, #4]
 8007f0c:	681a      	ldr	r2, [r3, #0]
 8007f0e:	687b      	ldr	r3, [r7, #4]
 8007f10:	3304      	adds	r3, #4
 8007f12:	4619      	mov	r1, r3
 8007f14:	4610      	mov	r0, r2
 8007f16:	f000 fc9f 	bl	8008858 <TIM_Base_SetConfig>
 8007f1a:	687b      	ldr	r3, [r7, #4]
 8007f1c:	681b      	ldr	r3, [r3, #0]
 8007f1e:	689b      	ldr	r3, [r3, #8]
 8007f20:	617b      	str	r3, [r7, #20]
 8007f22:	687b      	ldr	r3, [r7, #4]
 8007f24:	681b      	ldr	r3, [r3, #0]
 8007f26:	699b      	ldr	r3, [r3, #24]
 8007f28:	613b      	str	r3, [r7, #16]
 8007f2a:	687b      	ldr	r3, [r7, #4]
 8007f2c:	681b      	ldr	r3, [r3, #0]
 8007f2e:	6a1b      	ldr	r3, [r3, #32]
 8007f30:	60fb      	str	r3, [r7, #12]
 8007f32:	683b      	ldr	r3, [r7, #0]
 8007f34:	681b      	ldr	r3, [r3, #0]
 8007f36:	697a      	ldr	r2, [r7, #20]
 8007f38:	4313      	orrs	r3, r2
 8007f3a:	617b      	str	r3, [r7, #20]
 8007f3c:	693b      	ldr	r3, [r7, #16]
 8007f3e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8007f42:	f023 0303 	bic.w	r3, r3, #3
 8007f46:	613b      	str	r3, [r7, #16]
 8007f48:	683b      	ldr	r3, [r7, #0]
 8007f4a:	689a      	ldr	r2, [r3, #8]
 8007f4c:	683b      	ldr	r3, [r7, #0]
 8007f4e:	699b      	ldr	r3, [r3, #24]
 8007f50:	021b      	lsls	r3, r3, #8
 8007f52:	4313      	orrs	r3, r2
 8007f54:	693a      	ldr	r2, [r7, #16]
 8007f56:	4313      	orrs	r3, r2
 8007f58:	613b      	str	r3, [r7, #16]
 8007f5a:	693b      	ldr	r3, [r7, #16]
 8007f5c:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 8007f60:	f023 030c 	bic.w	r3, r3, #12
 8007f64:	613b      	str	r3, [r7, #16]
 8007f66:	693b      	ldr	r3, [r7, #16]
 8007f68:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8007f6c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8007f70:	613b      	str	r3, [r7, #16]
 8007f72:	683b      	ldr	r3, [r7, #0]
 8007f74:	68da      	ldr	r2, [r3, #12]
 8007f76:	683b      	ldr	r3, [r7, #0]
 8007f78:	69db      	ldr	r3, [r3, #28]
 8007f7a:	021b      	lsls	r3, r3, #8
 8007f7c:	4313      	orrs	r3, r2
 8007f7e:	693a      	ldr	r2, [r7, #16]
 8007f80:	4313      	orrs	r3, r2
 8007f82:	613b      	str	r3, [r7, #16]
 8007f84:	683b      	ldr	r3, [r7, #0]
 8007f86:	691b      	ldr	r3, [r3, #16]
 8007f88:	011a      	lsls	r2, r3, #4
 8007f8a:	683b      	ldr	r3, [r7, #0]
 8007f8c:	6a1b      	ldr	r3, [r3, #32]
 8007f8e:	031b      	lsls	r3, r3, #12
 8007f90:	4313      	orrs	r3, r2
 8007f92:	693a      	ldr	r2, [r7, #16]
 8007f94:	4313      	orrs	r3, r2
 8007f96:	613b      	str	r3, [r7, #16]
 8007f98:	68fb      	ldr	r3, [r7, #12]
 8007f9a:	f023 0322 	bic.w	r3, r3, #34	; 0x22
 8007f9e:	60fb      	str	r3, [r7, #12]
 8007fa0:	68fb      	ldr	r3, [r7, #12]
 8007fa2:	f023 0388 	bic.w	r3, r3, #136	; 0x88
 8007fa6:	60fb      	str	r3, [r7, #12]
 8007fa8:	683b      	ldr	r3, [r7, #0]
 8007faa:	685a      	ldr	r2, [r3, #4]
 8007fac:	683b      	ldr	r3, [r7, #0]
 8007fae:	695b      	ldr	r3, [r3, #20]
 8007fb0:	011b      	lsls	r3, r3, #4
 8007fb2:	4313      	orrs	r3, r2
 8007fb4:	68fa      	ldr	r2, [r7, #12]
 8007fb6:	4313      	orrs	r3, r2
 8007fb8:	60fb      	str	r3, [r7, #12]
 8007fba:	687b      	ldr	r3, [r7, #4]
 8007fbc:	681b      	ldr	r3, [r3, #0]
 8007fbe:	697a      	ldr	r2, [r7, #20]
 8007fc0:	609a      	str	r2, [r3, #8]
 8007fc2:	687b      	ldr	r3, [r7, #4]
 8007fc4:	681b      	ldr	r3, [r3, #0]
 8007fc6:	693a      	ldr	r2, [r7, #16]
 8007fc8:	619a      	str	r2, [r3, #24]
 8007fca:	687b      	ldr	r3, [r7, #4]
 8007fcc:	681b      	ldr	r3, [r3, #0]
 8007fce:	68fa      	ldr	r2, [r7, #12]
 8007fd0:	621a      	str	r2, [r3, #32]
 8007fd2:	687b      	ldr	r3, [r7, #4]
 8007fd4:	2201      	movs	r2, #1
 8007fd6:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8007fda:	687b      	ldr	r3, [r7, #4]
 8007fdc:	2201      	movs	r2, #1
 8007fde:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007fe2:	687b      	ldr	r3, [r7, #4]
 8007fe4:	2201      	movs	r2, #1
 8007fe6:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8007fea:	687b      	ldr	r3, [r7, #4]
 8007fec:	2201      	movs	r2, #1
 8007fee:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8007ff2:	687b      	ldr	r3, [r7, #4]
 8007ff4:	2201      	movs	r2, #1
 8007ff6:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8007ffa:	687b      	ldr	r3, [r7, #4]
 8007ffc:	2201      	movs	r2, #1
 8007ffe:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8008002:	2300      	movs	r3, #0
 8008004:	4618      	mov	r0, r3
 8008006:	3718      	adds	r7, #24
 8008008:	46bd      	mov	sp, r7
 800800a:	bd80      	pop	{r7, pc}

0800800c <HAL_TIM_Encoder_Start_IT>:
 800800c:	b580      	push	{r7, lr}
 800800e:	b084      	sub	sp, #16
 8008010:	af00      	add	r7, sp, #0
 8008012:	6078      	str	r0, [r7, #4]
 8008014:	6039      	str	r1, [r7, #0]
 8008016:	687b      	ldr	r3, [r7, #4]
 8008018:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800801c:	73fb      	strb	r3, [r7, #15]
 800801e:	687b      	ldr	r3, [r7, #4]
 8008020:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8008024:	73bb      	strb	r3, [r7, #14]
 8008026:	687b      	ldr	r3, [r7, #4]
 8008028:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 800802c:	737b      	strb	r3, [r7, #13]
 800802e:	687b      	ldr	r3, [r7, #4]
 8008030:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 8008034:	733b      	strb	r3, [r7, #12]
 8008036:	683b      	ldr	r3, [r7, #0]
 8008038:	2b00      	cmp	r3, #0
 800803a:	d110      	bne.n	800805e <HAL_TIM_Encoder_Start_IT+0x52>
 800803c:	7bfb      	ldrb	r3, [r7, #15]
 800803e:	2b01      	cmp	r3, #1
 8008040:	d102      	bne.n	8008048 <HAL_TIM_Encoder_Start_IT+0x3c>
 8008042:	7b7b      	ldrb	r3, [r7, #13]
 8008044:	2b01      	cmp	r3, #1
 8008046:	d001      	beq.n	800804c <HAL_TIM_Encoder_Start_IT+0x40>
 8008048:	2301      	movs	r3, #1
 800804a:	e089      	b.n	8008160 <HAL_TIM_Encoder_Start_IT+0x154>
 800804c:	687b      	ldr	r3, [r7, #4]
 800804e:	2202      	movs	r2, #2
 8008050:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8008054:	687b      	ldr	r3, [r7, #4]
 8008056:	2202      	movs	r2, #2
 8008058:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800805c:	e031      	b.n	80080c2 <HAL_TIM_Encoder_Start_IT+0xb6>
 800805e:	683b      	ldr	r3, [r7, #0]
 8008060:	2b04      	cmp	r3, #4
 8008062:	d110      	bne.n	8008086 <HAL_TIM_Encoder_Start_IT+0x7a>
 8008064:	7bbb      	ldrb	r3, [r7, #14]
 8008066:	2b01      	cmp	r3, #1
 8008068:	d102      	bne.n	8008070 <HAL_TIM_Encoder_Start_IT+0x64>
 800806a:	7b3b      	ldrb	r3, [r7, #12]
 800806c:	2b01      	cmp	r3, #1
 800806e:	d001      	beq.n	8008074 <HAL_TIM_Encoder_Start_IT+0x68>
 8008070:	2301      	movs	r3, #1
 8008072:	e075      	b.n	8008160 <HAL_TIM_Encoder_Start_IT+0x154>
 8008074:	687b      	ldr	r3, [r7, #4]
 8008076:	2202      	movs	r2, #2
 8008078:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800807c:	687b      	ldr	r3, [r7, #4]
 800807e:	2202      	movs	r2, #2
 8008080:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8008084:	e01d      	b.n	80080c2 <HAL_TIM_Encoder_Start_IT+0xb6>
 8008086:	7bfb      	ldrb	r3, [r7, #15]
 8008088:	2b01      	cmp	r3, #1
 800808a:	d108      	bne.n	800809e <HAL_TIM_Encoder_Start_IT+0x92>
 800808c:	7bbb      	ldrb	r3, [r7, #14]
 800808e:	2b01      	cmp	r3, #1
 8008090:	d105      	bne.n	800809e <HAL_TIM_Encoder_Start_IT+0x92>
 8008092:	7b7b      	ldrb	r3, [r7, #13]
 8008094:	2b01      	cmp	r3, #1
 8008096:	d102      	bne.n	800809e <HAL_TIM_Encoder_Start_IT+0x92>
 8008098:	7b3b      	ldrb	r3, [r7, #12]
 800809a:	2b01      	cmp	r3, #1
 800809c:	d001      	beq.n	80080a2 <HAL_TIM_Encoder_Start_IT+0x96>
 800809e:	2301      	movs	r3, #1
 80080a0:	e05e      	b.n	8008160 <HAL_TIM_Encoder_Start_IT+0x154>
 80080a2:	687b      	ldr	r3, [r7, #4]
 80080a4:	2202      	movs	r2, #2
 80080a6:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80080aa:	687b      	ldr	r3, [r7, #4]
 80080ac:	2202      	movs	r2, #2
 80080ae:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80080b2:	687b      	ldr	r3, [r7, #4]
 80080b4:	2202      	movs	r2, #2
 80080b6:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80080ba:	687b      	ldr	r3, [r7, #4]
 80080bc:	2202      	movs	r2, #2
 80080be:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80080c2:	683b      	ldr	r3, [r7, #0]
 80080c4:	2b00      	cmp	r3, #0
 80080c6:	d003      	beq.n	80080d0 <HAL_TIM_Encoder_Start_IT+0xc4>
 80080c8:	683b      	ldr	r3, [r7, #0]
 80080ca:	2b04      	cmp	r3, #4
 80080cc:	d010      	beq.n	80080f0 <HAL_TIM_Encoder_Start_IT+0xe4>
 80080ce:	e01f      	b.n	8008110 <HAL_TIM_Encoder_Start_IT+0x104>
 80080d0:	687b      	ldr	r3, [r7, #4]
 80080d2:	681b      	ldr	r3, [r3, #0]
 80080d4:	2201      	movs	r2, #1
 80080d6:	2100      	movs	r1, #0
 80080d8:	4618      	mov	r0, r3
 80080da:	f000 ffdd 	bl	8009098 <TIM_CCxChannelCmd>
 80080de:	687b      	ldr	r3, [r7, #4]
 80080e0:	681b      	ldr	r3, [r3, #0]
 80080e2:	68da      	ldr	r2, [r3, #12]
 80080e4:	687b      	ldr	r3, [r7, #4]
 80080e6:	681b      	ldr	r3, [r3, #0]
 80080e8:	f042 0202 	orr.w	r2, r2, #2
 80080ec:	60da      	str	r2, [r3, #12]
 80080ee:	e02e      	b.n	800814e <HAL_TIM_Encoder_Start_IT+0x142>
 80080f0:	687b      	ldr	r3, [r7, #4]
 80080f2:	681b      	ldr	r3, [r3, #0]
 80080f4:	2201      	movs	r2, #1
 80080f6:	2104      	movs	r1, #4
 80080f8:	4618      	mov	r0, r3
 80080fa:	f000 ffcd 	bl	8009098 <TIM_CCxChannelCmd>
 80080fe:	687b      	ldr	r3, [r7, #4]
 8008100:	681b      	ldr	r3, [r3, #0]
 8008102:	68da      	ldr	r2, [r3, #12]
 8008104:	687b      	ldr	r3, [r7, #4]
 8008106:	681b      	ldr	r3, [r3, #0]
 8008108:	f042 0204 	orr.w	r2, r2, #4
 800810c:	60da      	str	r2, [r3, #12]
 800810e:	e01e      	b.n	800814e <HAL_TIM_Encoder_Start_IT+0x142>
 8008110:	687b      	ldr	r3, [r7, #4]
 8008112:	681b      	ldr	r3, [r3, #0]
 8008114:	2201      	movs	r2, #1
 8008116:	2100      	movs	r1, #0
 8008118:	4618      	mov	r0, r3
 800811a:	f000 ffbd 	bl	8009098 <TIM_CCxChannelCmd>
 800811e:	687b      	ldr	r3, [r7, #4]
 8008120:	681b      	ldr	r3, [r3, #0]
 8008122:	2201      	movs	r2, #1
 8008124:	2104      	movs	r1, #4
 8008126:	4618      	mov	r0, r3
 8008128:	f000 ffb6 	bl	8009098 <TIM_CCxChannelCmd>
 800812c:	687b      	ldr	r3, [r7, #4]
 800812e:	681b      	ldr	r3, [r3, #0]
 8008130:	68da      	ldr	r2, [r3, #12]
 8008132:	687b      	ldr	r3, [r7, #4]
 8008134:	681b      	ldr	r3, [r3, #0]
 8008136:	f042 0202 	orr.w	r2, r2, #2
 800813a:	60da      	str	r2, [r3, #12]
 800813c:	687b      	ldr	r3, [r7, #4]
 800813e:	681b      	ldr	r3, [r3, #0]
 8008140:	68da      	ldr	r2, [r3, #12]
 8008142:	687b      	ldr	r3, [r7, #4]
 8008144:	681b      	ldr	r3, [r3, #0]
 8008146:	f042 0204 	orr.w	r2, r2, #4
 800814a:	60da      	str	r2, [r3, #12]
 800814c:	bf00      	nop
 800814e:	687b      	ldr	r3, [r7, #4]
 8008150:	681b      	ldr	r3, [r3, #0]
 8008152:	681a      	ldr	r2, [r3, #0]
 8008154:	687b      	ldr	r3, [r7, #4]
 8008156:	681b      	ldr	r3, [r3, #0]
 8008158:	f042 0201 	orr.w	r2, r2, #1
 800815c:	601a      	str	r2, [r3, #0]
 800815e:	2300      	movs	r3, #0
 8008160:	4618      	mov	r0, r3
 8008162:	3710      	adds	r7, #16
 8008164:	46bd      	mov	sp, r7
 8008166:	bd80      	pop	{r7, pc}

08008168 <HAL_TIM_IRQHandler>:
 8008168:	b580      	push	{r7, lr}
 800816a:	b084      	sub	sp, #16
 800816c:	af00      	add	r7, sp, #0
 800816e:	6078      	str	r0, [r7, #4]
 8008170:	687b      	ldr	r3, [r7, #4]
 8008172:	681b      	ldr	r3, [r3, #0]
 8008174:	68db      	ldr	r3, [r3, #12]
 8008176:	60fb      	str	r3, [r7, #12]
 8008178:	687b      	ldr	r3, [r7, #4]
 800817a:	681b      	ldr	r3, [r3, #0]
 800817c:	691b      	ldr	r3, [r3, #16]
 800817e:	60bb      	str	r3, [r7, #8]
 8008180:	68bb      	ldr	r3, [r7, #8]
 8008182:	f003 0302 	and.w	r3, r3, #2
 8008186:	2b00      	cmp	r3, #0
 8008188:	d020      	beq.n	80081cc <HAL_TIM_IRQHandler+0x64>
 800818a:	68fb      	ldr	r3, [r7, #12]
 800818c:	f003 0302 	and.w	r3, r3, #2
 8008190:	2b00      	cmp	r3, #0
 8008192:	d01b      	beq.n	80081cc <HAL_TIM_IRQHandler+0x64>
 8008194:	687b      	ldr	r3, [r7, #4]
 8008196:	681b      	ldr	r3, [r3, #0]
 8008198:	f06f 0202 	mvn.w	r2, #2
 800819c:	611a      	str	r2, [r3, #16]
 800819e:	687b      	ldr	r3, [r7, #4]
 80081a0:	2201      	movs	r2, #1
 80081a2:	771a      	strb	r2, [r3, #28]
 80081a4:	687b      	ldr	r3, [r7, #4]
 80081a6:	681b      	ldr	r3, [r3, #0]
 80081a8:	699b      	ldr	r3, [r3, #24]
 80081aa:	f003 0303 	and.w	r3, r3, #3
 80081ae:	2b00      	cmp	r3, #0
 80081b0:	d003      	beq.n	80081ba <HAL_TIM_IRQHandler+0x52>
 80081b2:	6878      	ldr	r0, [r7, #4]
 80081b4:	f7fa f928 	bl	8002408 <HAL_TIM_IC_CaptureCallback>
 80081b8:	e005      	b.n	80081c6 <HAL_TIM_IRQHandler+0x5e>
 80081ba:	6878      	ldr	r0, [r7, #4]
 80081bc:	f000 fb2e 	bl	800881c <HAL_TIM_OC_DelayElapsedCallback>
 80081c0:	6878      	ldr	r0, [r7, #4]
 80081c2:	f000 fb35 	bl	8008830 <HAL_TIM_PWM_PulseFinishedCallback>
 80081c6:	687b      	ldr	r3, [r7, #4]
 80081c8:	2200      	movs	r2, #0
 80081ca:	771a      	strb	r2, [r3, #28]
 80081cc:	68bb      	ldr	r3, [r7, #8]
 80081ce:	f003 0304 	and.w	r3, r3, #4
 80081d2:	2b00      	cmp	r3, #0
 80081d4:	d020      	beq.n	8008218 <HAL_TIM_IRQHandler+0xb0>
 80081d6:	68fb      	ldr	r3, [r7, #12]
 80081d8:	f003 0304 	and.w	r3, r3, #4
 80081dc:	2b00      	cmp	r3, #0
 80081de:	d01b      	beq.n	8008218 <HAL_TIM_IRQHandler+0xb0>
 80081e0:	687b      	ldr	r3, [r7, #4]
 80081e2:	681b      	ldr	r3, [r3, #0]
 80081e4:	f06f 0204 	mvn.w	r2, #4
 80081e8:	611a      	str	r2, [r3, #16]
 80081ea:	687b      	ldr	r3, [r7, #4]
 80081ec:	2202      	movs	r2, #2
 80081ee:	771a      	strb	r2, [r3, #28]
 80081f0:	687b      	ldr	r3, [r7, #4]
 80081f2:	681b      	ldr	r3, [r3, #0]
 80081f4:	699b      	ldr	r3, [r3, #24]
 80081f6:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80081fa:	2b00      	cmp	r3, #0
 80081fc:	d003      	beq.n	8008206 <HAL_TIM_IRQHandler+0x9e>
 80081fe:	6878      	ldr	r0, [r7, #4]
 8008200:	f7fa f902 	bl	8002408 <HAL_TIM_IC_CaptureCallback>
 8008204:	e005      	b.n	8008212 <HAL_TIM_IRQHandler+0xaa>
 8008206:	6878      	ldr	r0, [r7, #4]
 8008208:	f000 fb08 	bl	800881c <HAL_TIM_OC_DelayElapsedCallback>
 800820c:	6878      	ldr	r0, [r7, #4]
 800820e:	f000 fb0f 	bl	8008830 <HAL_TIM_PWM_PulseFinishedCallback>
 8008212:	687b      	ldr	r3, [r7, #4]
 8008214:	2200      	movs	r2, #0
 8008216:	771a      	strb	r2, [r3, #28]
 8008218:	68bb      	ldr	r3, [r7, #8]
 800821a:	f003 0308 	and.w	r3, r3, #8
 800821e:	2b00      	cmp	r3, #0
 8008220:	d020      	beq.n	8008264 <HAL_TIM_IRQHandler+0xfc>
 8008222:	68fb      	ldr	r3, [r7, #12]
 8008224:	f003 0308 	and.w	r3, r3, #8
 8008228:	2b00      	cmp	r3, #0
 800822a:	d01b      	beq.n	8008264 <HAL_TIM_IRQHandler+0xfc>
 800822c:	687b      	ldr	r3, [r7, #4]
 800822e:	681b      	ldr	r3, [r3, #0]
 8008230:	f06f 0208 	mvn.w	r2, #8
 8008234:	611a      	str	r2, [r3, #16]
 8008236:	687b      	ldr	r3, [r7, #4]
 8008238:	2204      	movs	r2, #4
 800823a:	771a      	strb	r2, [r3, #28]
 800823c:	687b      	ldr	r3, [r7, #4]
 800823e:	681b      	ldr	r3, [r3, #0]
 8008240:	69db      	ldr	r3, [r3, #28]
 8008242:	f003 0303 	and.w	r3, r3, #3
 8008246:	2b00      	cmp	r3, #0
 8008248:	d003      	beq.n	8008252 <HAL_TIM_IRQHandler+0xea>
 800824a:	6878      	ldr	r0, [r7, #4]
 800824c:	f7fa f8dc 	bl	8002408 <HAL_TIM_IC_CaptureCallback>
 8008250:	e005      	b.n	800825e <HAL_TIM_IRQHandler+0xf6>
 8008252:	6878      	ldr	r0, [r7, #4]
 8008254:	f000 fae2 	bl	800881c <HAL_TIM_OC_DelayElapsedCallback>
 8008258:	6878      	ldr	r0, [r7, #4]
 800825a:	f000 fae9 	bl	8008830 <HAL_TIM_PWM_PulseFinishedCallback>
 800825e:	687b      	ldr	r3, [r7, #4]
 8008260:	2200      	movs	r2, #0
 8008262:	771a      	strb	r2, [r3, #28]
 8008264:	68bb      	ldr	r3, [r7, #8]
 8008266:	f003 0310 	and.w	r3, r3, #16
 800826a:	2b00      	cmp	r3, #0
 800826c:	d020      	beq.n	80082b0 <HAL_TIM_IRQHandler+0x148>
 800826e:	68fb      	ldr	r3, [r7, #12]
 8008270:	f003 0310 	and.w	r3, r3, #16
 8008274:	2b00      	cmp	r3, #0
 8008276:	d01b      	beq.n	80082b0 <HAL_TIM_IRQHandler+0x148>
 8008278:	687b      	ldr	r3, [r7, #4]
 800827a:	681b      	ldr	r3, [r3, #0]
 800827c:	f06f 0210 	mvn.w	r2, #16
 8008280:	611a      	str	r2, [r3, #16]
 8008282:	687b      	ldr	r3, [r7, #4]
 8008284:	2208      	movs	r2, #8
 8008286:	771a      	strb	r2, [r3, #28]
 8008288:	687b      	ldr	r3, [r7, #4]
 800828a:	681b      	ldr	r3, [r3, #0]
 800828c:	69db      	ldr	r3, [r3, #28]
 800828e:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8008292:	2b00      	cmp	r3, #0
 8008294:	d003      	beq.n	800829e <HAL_TIM_IRQHandler+0x136>
 8008296:	6878      	ldr	r0, [r7, #4]
 8008298:	f7fa f8b6 	bl	8002408 <HAL_TIM_IC_CaptureCallback>
 800829c:	e005      	b.n	80082aa <HAL_TIM_IRQHandler+0x142>
 800829e:	6878      	ldr	r0, [r7, #4]
 80082a0:	f000 fabc 	bl	800881c <HAL_TIM_OC_DelayElapsedCallback>
 80082a4:	6878      	ldr	r0, [r7, #4]
 80082a6:	f000 fac3 	bl	8008830 <HAL_TIM_PWM_PulseFinishedCallback>
 80082aa:	687b      	ldr	r3, [r7, #4]
 80082ac:	2200      	movs	r2, #0
 80082ae:	771a      	strb	r2, [r3, #28]
 80082b0:	68bb      	ldr	r3, [r7, #8]
 80082b2:	f003 0301 	and.w	r3, r3, #1
 80082b6:	2b00      	cmp	r3, #0
 80082b8:	d00c      	beq.n	80082d4 <HAL_TIM_IRQHandler+0x16c>
 80082ba:	68fb      	ldr	r3, [r7, #12]
 80082bc:	f003 0301 	and.w	r3, r3, #1
 80082c0:	2b00      	cmp	r3, #0
 80082c2:	d007      	beq.n	80082d4 <HAL_TIM_IRQHandler+0x16c>
 80082c4:	687b      	ldr	r3, [r7, #4]
 80082c6:	681b      	ldr	r3, [r3, #0]
 80082c8:	f06f 0201 	mvn.w	r2, #1
 80082cc:	611a      	str	r2, [r3, #16]
 80082ce:	6878      	ldr	r0, [r7, #4]
 80082d0:	f7fa f874 	bl	80023bc <HAL_TIM_PeriodElapsedCallback>
 80082d4:	68bb      	ldr	r3, [r7, #8]
 80082d6:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80082da:	2b00      	cmp	r3, #0
 80082dc:	d00c      	beq.n	80082f8 <HAL_TIM_IRQHandler+0x190>
 80082de:	68fb      	ldr	r3, [r7, #12]
 80082e0:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80082e4:	2b00      	cmp	r3, #0
 80082e6:	d007      	beq.n	80082f8 <HAL_TIM_IRQHandler+0x190>
 80082e8:	687b      	ldr	r3, [r7, #4]
 80082ea:	681b      	ldr	r3, [r3, #0]
 80082ec:	f06f 0280 	mvn.w	r2, #128	; 0x80
 80082f0:	611a      	str	r2, [r3, #16]
 80082f2:	6878      	ldr	r0, [r7, #4]
 80082f4:	f000 ffce 	bl	8009294 <HAL_TIMEx_BreakCallback>
 80082f8:	68bb      	ldr	r3, [r7, #8]
 80082fa:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80082fe:	2b00      	cmp	r3, #0
 8008300:	d00c      	beq.n	800831c <HAL_TIM_IRQHandler+0x1b4>
 8008302:	68fb      	ldr	r3, [r7, #12]
 8008304:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8008308:	2b00      	cmp	r3, #0
 800830a:	d007      	beq.n	800831c <HAL_TIM_IRQHandler+0x1b4>
 800830c:	687b      	ldr	r3, [r7, #4]
 800830e:	681b      	ldr	r3, [r3, #0]
 8008310:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8008314:	611a      	str	r2, [r3, #16]
 8008316:	6878      	ldr	r0, [r7, #4]
 8008318:	f000 fa94 	bl	8008844 <HAL_TIM_TriggerCallback>
 800831c:	68bb      	ldr	r3, [r7, #8]
 800831e:	f003 0320 	and.w	r3, r3, #32
 8008322:	2b00      	cmp	r3, #0
 8008324:	d00c      	beq.n	8008340 <HAL_TIM_IRQHandler+0x1d8>
 8008326:	68fb      	ldr	r3, [r7, #12]
 8008328:	f003 0320 	and.w	r3, r3, #32
 800832c:	2b00      	cmp	r3, #0
 800832e:	d007      	beq.n	8008340 <HAL_TIM_IRQHandler+0x1d8>
 8008330:	687b      	ldr	r3, [r7, #4]
 8008332:	681b      	ldr	r3, [r3, #0]
 8008334:	f06f 0220 	mvn.w	r2, #32
 8008338:	611a      	str	r2, [r3, #16]
 800833a:	6878      	ldr	r0, [r7, #4]
 800833c:	f000 ffa0 	bl	8009280 <HAL_TIMEx_CommutCallback>
 8008340:	bf00      	nop
 8008342:	3710      	adds	r7, #16
 8008344:	46bd      	mov	sp, r7
 8008346:	bd80      	pop	{r7, pc}

08008348 <HAL_TIM_IC_ConfigChannel>:
 8008348:	b580      	push	{r7, lr}
 800834a:	b086      	sub	sp, #24
 800834c:	af00      	add	r7, sp, #0
 800834e:	60f8      	str	r0, [r7, #12]
 8008350:	60b9      	str	r1, [r7, #8]
 8008352:	607a      	str	r2, [r7, #4]
 8008354:	2300      	movs	r3, #0
 8008356:	75fb      	strb	r3, [r7, #23]
 8008358:	68fb      	ldr	r3, [r7, #12]
 800835a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800835e:	2b01      	cmp	r3, #1
 8008360:	d101      	bne.n	8008366 <HAL_TIM_IC_ConfigChannel+0x1e>
 8008362:	2302      	movs	r3, #2
 8008364:	e088      	b.n	8008478 <HAL_TIM_IC_ConfigChannel+0x130>
 8008366:	68fb      	ldr	r3, [r7, #12]
 8008368:	2201      	movs	r2, #1
 800836a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800836e:	687b      	ldr	r3, [r7, #4]
 8008370:	2b00      	cmp	r3, #0
 8008372:	d11b      	bne.n	80083ac <HAL_TIM_IC_ConfigChannel+0x64>
 8008374:	68fb      	ldr	r3, [r7, #12]
 8008376:	6818      	ldr	r0, [r3, #0]
 8008378:	68bb      	ldr	r3, [r7, #8]
 800837a:	6819      	ldr	r1, [r3, #0]
 800837c:	68bb      	ldr	r3, [r7, #8]
 800837e:	685a      	ldr	r2, [r3, #4]
 8008380:	68bb      	ldr	r3, [r7, #8]
 8008382:	68db      	ldr	r3, [r3, #12]
 8008384:	f000 fcc4 	bl	8008d10 <TIM_TI1_SetConfig>
 8008388:	68fb      	ldr	r3, [r7, #12]
 800838a:	681b      	ldr	r3, [r3, #0]
 800838c:	699a      	ldr	r2, [r3, #24]
 800838e:	68fb      	ldr	r3, [r7, #12]
 8008390:	681b      	ldr	r3, [r3, #0]
 8008392:	f022 020c 	bic.w	r2, r2, #12
 8008396:	619a      	str	r2, [r3, #24]
 8008398:	68fb      	ldr	r3, [r7, #12]
 800839a:	681b      	ldr	r3, [r3, #0]
 800839c:	6999      	ldr	r1, [r3, #24]
 800839e:	68bb      	ldr	r3, [r7, #8]
 80083a0:	689a      	ldr	r2, [r3, #8]
 80083a2:	68fb      	ldr	r3, [r7, #12]
 80083a4:	681b      	ldr	r3, [r3, #0]
 80083a6:	430a      	orrs	r2, r1
 80083a8:	619a      	str	r2, [r3, #24]
 80083aa:	e060      	b.n	800846e <HAL_TIM_IC_ConfigChannel+0x126>
 80083ac:	687b      	ldr	r3, [r7, #4]
 80083ae:	2b04      	cmp	r3, #4
 80083b0:	d11c      	bne.n	80083ec <HAL_TIM_IC_ConfigChannel+0xa4>
 80083b2:	68fb      	ldr	r3, [r7, #12]
 80083b4:	6818      	ldr	r0, [r3, #0]
 80083b6:	68bb      	ldr	r3, [r7, #8]
 80083b8:	6819      	ldr	r1, [r3, #0]
 80083ba:	68bb      	ldr	r3, [r7, #8]
 80083bc:	685a      	ldr	r2, [r3, #4]
 80083be:	68bb      	ldr	r3, [r7, #8]
 80083c0:	68db      	ldr	r3, [r3, #12]
 80083c2:	f000 fd48 	bl	8008e56 <TIM_TI2_SetConfig>
 80083c6:	68fb      	ldr	r3, [r7, #12]
 80083c8:	681b      	ldr	r3, [r3, #0]
 80083ca:	699a      	ldr	r2, [r3, #24]
 80083cc:	68fb      	ldr	r3, [r7, #12]
 80083ce:	681b      	ldr	r3, [r3, #0]
 80083d0:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 80083d4:	619a      	str	r2, [r3, #24]
 80083d6:	68fb      	ldr	r3, [r7, #12]
 80083d8:	681b      	ldr	r3, [r3, #0]
 80083da:	6999      	ldr	r1, [r3, #24]
 80083dc:	68bb      	ldr	r3, [r7, #8]
 80083de:	689b      	ldr	r3, [r3, #8]
 80083e0:	021a      	lsls	r2, r3, #8
 80083e2:	68fb      	ldr	r3, [r7, #12]
 80083e4:	681b      	ldr	r3, [r3, #0]
 80083e6:	430a      	orrs	r2, r1
 80083e8:	619a      	str	r2, [r3, #24]
 80083ea:	e040      	b.n	800846e <HAL_TIM_IC_ConfigChannel+0x126>
 80083ec:	687b      	ldr	r3, [r7, #4]
 80083ee:	2b08      	cmp	r3, #8
 80083f0:	d11b      	bne.n	800842a <HAL_TIM_IC_ConfigChannel+0xe2>
 80083f2:	68fb      	ldr	r3, [r7, #12]
 80083f4:	6818      	ldr	r0, [r3, #0]
 80083f6:	68bb      	ldr	r3, [r7, #8]
 80083f8:	6819      	ldr	r1, [r3, #0]
 80083fa:	68bb      	ldr	r3, [r7, #8]
 80083fc:	685a      	ldr	r2, [r3, #4]
 80083fe:	68bb      	ldr	r3, [r7, #8]
 8008400:	68db      	ldr	r3, [r3, #12]
 8008402:	f000 fd95 	bl	8008f30 <TIM_TI3_SetConfig>
 8008406:	68fb      	ldr	r3, [r7, #12]
 8008408:	681b      	ldr	r3, [r3, #0]
 800840a:	69da      	ldr	r2, [r3, #28]
 800840c:	68fb      	ldr	r3, [r7, #12]
 800840e:	681b      	ldr	r3, [r3, #0]
 8008410:	f022 020c 	bic.w	r2, r2, #12
 8008414:	61da      	str	r2, [r3, #28]
 8008416:	68fb      	ldr	r3, [r7, #12]
 8008418:	681b      	ldr	r3, [r3, #0]
 800841a:	69d9      	ldr	r1, [r3, #28]
 800841c:	68bb      	ldr	r3, [r7, #8]
 800841e:	689a      	ldr	r2, [r3, #8]
 8008420:	68fb      	ldr	r3, [r7, #12]
 8008422:	681b      	ldr	r3, [r3, #0]
 8008424:	430a      	orrs	r2, r1
 8008426:	61da      	str	r2, [r3, #28]
 8008428:	e021      	b.n	800846e <HAL_TIM_IC_ConfigChannel+0x126>
 800842a:	687b      	ldr	r3, [r7, #4]
 800842c:	2b0c      	cmp	r3, #12
 800842e:	d11c      	bne.n	800846a <HAL_TIM_IC_ConfigChannel+0x122>
 8008430:	68fb      	ldr	r3, [r7, #12]
 8008432:	6818      	ldr	r0, [r3, #0]
 8008434:	68bb      	ldr	r3, [r7, #8]
 8008436:	6819      	ldr	r1, [r3, #0]
 8008438:	68bb      	ldr	r3, [r7, #8]
 800843a:	685a      	ldr	r2, [r3, #4]
 800843c:	68bb      	ldr	r3, [r7, #8]
 800843e:	68db      	ldr	r3, [r3, #12]
 8008440:	f000 fdb2 	bl	8008fa8 <TIM_TI4_SetConfig>
 8008444:	68fb      	ldr	r3, [r7, #12]
 8008446:	681b      	ldr	r3, [r3, #0]
 8008448:	69da      	ldr	r2, [r3, #28]
 800844a:	68fb      	ldr	r3, [r7, #12]
 800844c:	681b      	ldr	r3, [r3, #0]
 800844e:	f422 6240 	bic.w	r2, r2, #3072	; 0xc00
 8008452:	61da      	str	r2, [r3, #28]
 8008454:	68fb      	ldr	r3, [r7, #12]
 8008456:	681b      	ldr	r3, [r3, #0]
 8008458:	69d9      	ldr	r1, [r3, #28]
 800845a:	68bb      	ldr	r3, [r7, #8]
 800845c:	689b      	ldr	r3, [r3, #8]
 800845e:	021a      	lsls	r2, r3, #8
 8008460:	68fb      	ldr	r3, [r7, #12]
 8008462:	681b      	ldr	r3, [r3, #0]
 8008464:	430a      	orrs	r2, r1
 8008466:	61da      	str	r2, [r3, #28]
 8008468:	e001      	b.n	800846e <HAL_TIM_IC_ConfigChannel+0x126>
 800846a:	2301      	movs	r3, #1
 800846c:	75fb      	strb	r3, [r7, #23]
 800846e:	68fb      	ldr	r3, [r7, #12]
 8008470:	2200      	movs	r2, #0
 8008472:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8008476:	7dfb      	ldrb	r3, [r7, #23]
 8008478:	4618      	mov	r0, r3
 800847a:	3718      	adds	r7, #24
 800847c:	46bd      	mov	sp, r7
 800847e:	bd80      	pop	{r7, pc}

08008480 <HAL_TIM_PWM_ConfigChannel>:
 8008480:	b580      	push	{r7, lr}
 8008482:	b086      	sub	sp, #24
 8008484:	af00      	add	r7, sp, #0
 8008486:	60f8      	str	r0, [r7, #12]
 8008488:	60b9      	str	r1, [r7, #8]
 800848a:	607a      	str	r2, [r7, #4]
 800848c:	2300      	movs	r3, #0
 800848e:	75fb      	strb	r3, [r7, #23]
 8008490:	68fb      	ldr	r3, [r7, #12]
 8008492:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8008496:	2b01      	cmp	r3, #1
 8008498:	d101      	bne.n	800849e <HAL_TIM_PWM_ConfigChannel+0x1e>
 800849a:	2302      	movs	r3, #2
 800849c:	e0ae      	b.n	80085fc <HAL_TIM_PWM_ConfigChannel+0x17c>
 800849e:	68fb      	ldr	r3, [r7, #12]
 80084a0:	2201      	movs	r2, #1
 80084a2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80084a6:	687b      	ldr	r3, [r7, #4]
 80084a8:	2b0c      	cmp	r3, #12
 80084aa:	f200 809f 	bhi.w	80085ec <HAL_TIM_PWM_ConfigChannel+0x16c>
 80084ae:	a201      	add	r2, pc, #4	; (adr r2, 80084b4 <HAL_TIM_PWM_ConfigChannel+0x34>)
 80084b0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80084b4:	080084e9 	.word	0x080084e9
 80084b8:	080085ed 	.word	0x080085ed
 80084bc:	080085ed 	.word	0x080085ed
 80084c0:	080085ed 	.word	0x080085ed
 80084c4:	08008529 	.word	0x08008529
 80084c8:	080085ed 	.word	0x080085ed
 80084cc:	080085ed 	.word	0x080085ed
 80084d0:	080085ed 	.word	0x080085ed
 80084d4:	0800856b 	.word	0x0800856b
 80084d8:	080085ed 	.word	0x080085ed
 80084dc:	080085ed 	.word	0x080085ed
 80084e0:	080085ed 	.word	0x080085ed
 80084e4:	080085ab 	.word	0x080085ab
 80084e8:	68fb      	ldr	r3, [r7, #12]
 80084ea:	681b      	ldr	r3, [r3, #0]
 80084ec:	68b9      	ldr	r1, [r7, #8]
 80084ee:	4618      	mov	r0, r3
 80084f0:	f000 fa5e 	bl	80089b0 <TIM_OC1_SetConfig>
 80084f4:	68fb      	ldr	r3, [r7, #12]
 80084f6:	681b      	ldr	r3, [r3, #0]
 80084f8:	699a      	ldr	r2, [r3, #24]
 80084fa:	68fb      	ldr	r3, [r7, #12]
 80084fc:	681b      	ldr	r3, [r3, #0]
 80084fe:	f042 0208 	orr.w	r2, r2, #8
 8008502:	619a      	str	r2, [r3, #24]
 8008504:	68fb      	ldr	r3, [r7, #12]
 8008506:	681b      	ldr	r3, [r3, #0]
 8008508:	699a      	ldr	r2, [r3, #24]
 800850a:	68fb      	ldr	r3, [r7, #12]
 800850c:	681b      	ldr	r3, [r3, #0]
 800850e:	f022 0204 	bic.w	r2, r2, #4
 8008512:	619a      	str	r2, [r3, #24]
 8008514:	68fb      	ldr	r3, [r7, #12]
 8008516:	681b      	ldr	r3, [r3, #0]
 8008518:	6999      	ldr	r1, [r3, #24]
 800851a:	68bb      	ldr	r3, [r7, #8]
 800851c:	691a      	ldr	r2, [r3, #16]
 800851e:	68fb      	ldr	r3, [r7, #12]
 8008520:	681b      	ldr	r3, [r3, #0]
 8008522:	430a      	orrs	r2, r1
 8008524:	619a      	str	r2, [r3, #24]
 8008526:	e064      	b.n	80085f2 <HAL_TIM_PWM_ConfigChannel+0x172>
 8008528:	68fb      	ldr	r3, [r7, #12]
 800852a:	681b      	ldr	r3, [r3, #0]
 800852c:	68b9      	ldr	r1, [r7, #8]
 800852e:	4618      	mov	r0, r3
 8008530:	f000 faae 	bl	8008a90 <TIM_OC2_SetConfig>
 8008534:	68fb      	ldr	r3, [r7, #12]
 8008536:	681b      	ldr	r3, [r3, #0]
 8008538:	699a      	ldr	r2, [r3, #24]
 800853a:	68fb      	ldr	r3, [r7, #12]
 800853c:	681b      	ldr	r3, [r3, #0]
 800853e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8008542:	619a      	str	r2, [r3, #24]
 8008544:	68fb      	ldr	r3, [r7, #12]
 8008546:	681b      	ldr	r3, [r3, #0]
 8008548:	699a      	ldr	r2, [r3, #24]
 800854a:	68fb      	ldr	r3, [r7, #12]
 800854c:	681b      	ldr	r3, [r3, #0]
 800854e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8008552:	619a      	str	r2, [r3, #24]
 8008554:	68fb      	ldr	r3, [r7, #12]
 8008556:	681b      	ldr	r3, [r3, #0]
 8008558:	6999      	ldr	r1, [r3, #24]
 800855a:	68bb      	ldr	r3, [r7, #8]
 800855c:	691b      	ldr	r3, [r3, #16]
 800855e:	021a      	lsls	r2, r3, #8
 8008560:	68fb      	ldr	r3, [r7, #12]
 8008562:	681b      	ldr	r3, [r3, #0]
 8008564:	430a      	orrs	r2, r1
 8008566:	619a      	str	r2, [r3, #24]
 8008568:	e043      	b.n	80085f2 <HAL_TIM_PWM_ConfigChannel+0x172>
 800856a:	68fb      	ldr	r3, [r7, #12]
 800856c:	681b      	ldr	r3, [r3, #0]
 800856e:	68b9      	ldr	r1, [r7, #8]
 8008570:	4618      	mov	r0, r3
 8008572:	f000 fb03 	bl	8008b7c <TIM_OC3_SetConfig>
 8008576:	68fb      	ldr	r3, [r7, #12]
 8008578:	681b      	ldr	r3, [r3, #0]
 800857a:	69da      	ldr	r2, [r3, #28]
 800857c:	68fb      	ldr	r3, [r7, #12]
 800857e:	681b      	ldr	r3, [r3, #0]
 8008580:	f042 0208 	orr.w	r2, r2, #8
 8008584:	61da      	str	r2, [r3, #28]
 8008586:	68fb      	ldr	r3, [r7, #12]
 8008588:	681b      	ldr	r3, [r3, #0]
 800858a:	69da      	ldr	r2, [r3, #28]
 800858c:	68fb      	ldr	r3, [r7, #12]
 800858e:	681b      	ldr	r3, [r3, #0]
 8008590:	f022 0204 	bic.w	r2, r2, #4
 8008594:	61da      	str	r2, [r3, #28]
 8008596:	68fb      	ldr	r3, [r7, #12]
 8008598:	681b      	ldr	r3, [r3, #0]
 800859a:	69d9      	ldr	r1, [r3, #28]
 800859c:	68bb      	ldr	r3, [r7, #8]
 800859e:	691a      	ldr	r2, [r3, #16]
 80085a0:	68fb      	ldr	r3, [r7, #12]
 80085a2:	681b      	ldr	r3, [r3, #0]
 80085a4:	430a      	orrs	r2, r1
 80085a6:	61da      	str	r2, [r3, #28]
 80085a8:	e023      	b.n	80085f2 <HAL_TIM_PWM_ConfigChannel+0x172>
 80085aa:	68fb      	ldr	r3, [r7, #12]
 80085ac:	681b      	ldr	r3, [r3, #0]
 80085ae:	68b9      	ldr	r1, [r7, #8]
 80085b0:	4618      	mov	r0, r3
 80085b2:	f000 fb57 	bl	8008c64 <TIM_OC4_SetConfig>
 80085b6:	68fb      	ldr	r3, [r7, #12]
 80085b8:	681b      	ldr	r3, [r3, #0]
 80085ba:	69da      	ldr	r2, [r3, #28]
 80085bc:	68fb      	ldr	r3, [r7, #12]
 80085be:	681b      	ldr	r3, [r3, #0]
 80085c0:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80085c4:	61da      	str	r2, [r3, #28]
 80085c6:	68fb      	ldr	r3, [r7, #12]
 80085c8:	681b      	ldr	r3, [r3, #0]
 80085ca:	69da      	ldr	r2, [r3, #28]
 80085cc:	68fb      	ldr	r3, [r7, #12]
 80085ce:	681b      	ldr	r3, [r3, #0]
 80085d0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80085d4:	61da      	str	r2, [r3, #28]
 80085d6:	68fb      	ldr	r3, [r7, #12]
 80085d8:	681b      	ldr	r3, [r3, #0]
 80085da:	69d9      	ldr	r1, [r3, #28]
 80085dc:	68bb      	ldr	r3, [r7, #8]
 80085de:	691b      	ldr	r3, [r3, #16]
 80085e0:	021a      	lsls	r2, r3, #8
 80085e2:	68fb      	ldr	r3, [r7, #12]
 80085e4:	681b      	ldr	r3, [r3, #0]
 80085e6:	430a      	orrs	r2, r1
 80085e8:	61da      	str	r2, [r3, #28]
 80085ea:	e002      	b.n	80085f2 <HAL_TIM_PWM_ConfigChannel+0x172>
 80085ec:	2301      	movs	r3, #1
 80085ee:	75fb      	strb	r3, [r7, #23]
 80085f0:	bf00      	nop
 80085f2:	68fb      	ldr	r3, [r7, #12]
 80085f4:	2200      	movs	r2, #0
 80085f6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80085fa:	7dfb      	ldrb	r3, [r7, #23]
 80085fc:	4618      	mov	r0, r3
 80085fe:	3718      	adds	r7, #24
 8008600:	46bd      	mov	sp, r7
 8008602:	bd80      	pop	{r7, pc}

08008604 <HAL_TIM_ConfigClockSource>:
 8008604:	b580      	push	{r7, lr}
 8008606:	b084      	sub	sp, #16
 8008608:	af00      	add	r7, sp, #0
 800860a:	6078      	str	r0, [r7, #4]
 800860c:	6039      	str	r1, [r7, #0]
 800860e:	2300      	movs	r3, #0
 8008610:	73fb      	strb	r3, [r7, #15]
 8008612:	687b      	ldr	r3, [r7, #4]
 8008614:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8008618:	2b01      	cmp	r3, #1
 800861a:	d101      	bne.n	8008620 <HAL_TIM_ConfigClockSource+0x1c>
 800861c:	2302      	movs	r3, #2
 800861e:	e0b4      	b.n	800878a <HAL_TIM_ConfigClockSource+0x186>
 8008620:	687b      	ldr	r3, [r7, #4]
 8008622:	2201      	movs	r2, #1
 8008624:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8008628:	687b      	ldr	r3, [r7, #4]
 800862a:	2202      	movs	r2, #2
 800862c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8008630:	687b      	ldr	r3, [r7, #4]
 8008632:	681b      	ldr	r3, [r3, #0]
 8008634:	689b      	ldr	r3, [r3, #8]
 8008636:	60bb      	str	r3, [r7, #8]
 8008638:	68bb      	ldr	r3, [r7, #8]
 800863a:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 800863e:	60bb      	str	r3, [r7, #8]
 8008640:	68bb      	ldr	r3, [r7, #8]
 8008642:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8008646:	60bb      	str	r3, [r7, #8]
 8008648:	687b      	ldr	r3, [r7, #4]
 800864a:	681b      	ldr	r3, [r3, #0]
 800864c:	68ba      	ldr	r2, [r7, #8]
 800864e:	609a      	str	r2, [r3, #8]
 8008650:	683b      	ldr	r3, [r7, #0]
 8008652:	681b      	ldr	r3, [r3, #0]
 8008654:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8008658:	d03e      	beq.n	80086d8 <HAL_TIM_ConfigClockSource+0xd4>
 800865a:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800865e:	f200 8087 	bhi.w	8008770 <HAL_TIM_ConfigClockSource+0x16c>
 8008662:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8008666:	f000 8086 	beq.w	8008776 <HAL_TIM_ConfigClockSource+0x172>
 800866a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800866e:	d87f      	bhi.n	8008770 <HAL_TIM_ConfigClockSource+0x16c>
 8008670:	2b70      	cmp	r3, #112	; 0x70
 8008672:	d01a      	beq.n	80086aa <HAL_TIM_ConfigClockSource+0xa6>
 8008674:	2b70      	cmp	r3, #112	; 0x70
 8008676:	d87b      	bhi.n	8008770 <HAL_TIM_ConfigClockSource+0x16c>
 8008678:	2b60      	cmp	r3, #96	; 0x60
 800867a:	d050      	beq.n	800871e <HAL_TIM_ConfigClockSource+0x11a>
 800867c:	2b60      	cmp	r3, #96	; 0x60
 800867e:	d877      	bhi.n	8008770 <HAL_TIM_ConfigClockSource+0x16c>
 8008680:	2b50      	cmp	r3, #80	; 0x50
 8008682:	d03c      	beq.n	80086fe <HAL_TIM_ConfigClockSource+0xfa>
 8008684:	2b50      	cmp	r3, #80	; 0x50
 8008686:	d873      	bhi.n	8008770 <HAL_TIM_ConfigClockSource+0x16c>
 8008688:	2b40      	cmp	r3, #64	; 0x40
 800868a:	d058      	beq.n	800873e <HAL_TIM_ConfigClockSource+0x13a>
 800868c:	2b40      	cmp	r3, #64	; 0x40
 800868e:	d86f      	bhi.n	8008770 <HAL_TIM_ConfigClockSource+0x16c>
 8008690:	2b30      	cmp	r3, #48	; 0x30
 8008692:	d064      	beq.n	800875e <HAL_TIM_ConfigClockSource+0x15a>
 8008694:	2b30      	cmp	r3, #48	; 0x30
 8008696:	d86b      	bhi.n	8008770 <HAL_TIM_ConfigClockSource+0x16c>
 8008698:	2b20      	cmp	r3, #32
 800869a:	d060      	beq.n	800875e <HAL_TIM_ConfigClockSource+0x15a>
 800869c:	2b20      	cmp	r3, #32
 800869e:	d867      	bhi.n	8008770 <HAL_TIM_ConfigClockSource+0x16c>
 80086a0:	2b00      	cmp	r3, #0
 80086a2:	d05c      	beq.n	800875e <HAL_TIM_ConfigClockSource+0x15a>
 80086a4:	2b10      	cmp	r3, #16
 80086a6:	d05a      	beq.n	800875e <HAL_TIM_ConfigClockSource+0x15a>
 80086a8:	e062      	b.n	8008770 <HAL_TIM_ConfigClockSource+0x16c>
 80086aa:	687b      	ldr	r3, [r7, #4]
 80086ac:	6818      	ldr	r0, [r3, #0]
 80086ae:	683b      	ldr	r3, [r7, #0]
 80086b0:	6899      	ldr	r1, [r3, #8]
 80086b2:	683b      	ldr	r3, [r7, #0]
 80086b4:	685a      	ldr	r2, [r3, #4]
 80086b6:	683b      	ldr	r3, [r7, #0]
 80086b8:	68db      	ldr	r3, [r3, #12]
 80086ba:	f000 fccd 	bl	8009058 <TIM_ETR_SetConfig>
 80086be:	687b      	ldr	r3, [r7, #4]
 80086c0:	681b      	ldr	r3, [r3, #0]
 80086c2:	689b      	ldr	r3, [r3, #8]
 80086c4:	60bb      	str	r3, [r7, #8]
 80086c6:	68bb      	ldr	r3, [r7, #8]
 80086c8:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 80086cc:	60bb      	str	r3, [r7, #8]
 80086ce:	687b      	ldr	r3, [r7, #4]
 80086d0:	681b      	ldr	r3, [r3, #0]
 80086d2:	68ba      	ldr	r2, [r7, #8]
 80086d4:	609a      	str	r2, [r3, #8]
 80086d6:	e04f      	b.n	8008778 <HAL_TIM_ConfigClockSource+0x174>
 80086d8:	687b      	ldr	r3, [r7, #4]
 80086da:	6818      	ldr	r0, [r3, #0]
 80086dc:	683b      	ldr	r3, [r7, #0]
 80086de:	6899      	ldr	r1, [r3, #8]
 80086e0:	683b      	ldr	r3, [r7, #0]
 80086e2:	685a      	ldr	r2, [r3, #4]
 80086e4:	683b      	ldr	r3, [r7, #0]
 80086e6:	68db      	ldr	r3, [r3, #12]
 80086e8:	f000 fcb6 	bl	8009058 <TIM_ETR_SetConfig>
 80086ec:	687b      	ldr	r3, [r7, #4]
 80086ee:	681b      	ldr	r3, [r3, #0]
 80086f0:	689a      	ldr	r2, [r3, #8]
 80086f2:	687b      	ldr	r3, [r7, #4]
 80086f4:	681b      	ldr	r3, [r3, #0]
 80086f6:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80086fa:	609a      	str	r2, [r3, #8]
 80086fc:	e03c      	b.n	8008778 <HAL_TIM_ConfigClockSource+0x174>
 80086fe:	687b      	ldr	r3, [r7, #4]
 8008700:	6818      	ldr	r0, [r3, #0]
 8008702:	683b      	ldr	r3, [r7, #0]
 8008704:	6859      	ldr	r1, [r3, #4]
 8008706:	683b      	ldr	r3, [r7, #0]
 8008708:	68db      	ldr	r3, [r3, #12]
 800870a:	461a      	mov	r2, r3
 800870c:	f000 fb74 	bl	8008df8 <TIM_TI1_ConfigInputStage>
 8008710:	687b      	ldr	r3, [r7, #4]
 8008712:	681b      	ldr	r3, [r3, #0]
 8008714:	2150      	movs	r1, #80	; 0x50
 8008716:	4618      	mov	r0, r3
 8008718:	f000 fc83 	bl	8009022 <TIM_ITRx_SetConfig>
 800871c:	e02c      	b.n	8008778 <HAL_TIM_ConfigClockSource+0x174>
 800871e:	687b      	ldr	r3, [r7, #4]
 8008720:	6818      	ldr	r0, [r3, #0]
 8008722:	683b      	ldr	r3, [r7, #0]
 8008724:	6859      	ldr	r1, [r3, #4]
 8008726:	683b      	ldr	r3, [r7, #0]
 8008728:	68db      	ldr	r3, [r3, #12]
 800872a:	461a      	mov	r2, r3
 800872c:	f000 fbd0 	bl	8008ed0 <TIM_TI2_ConfigInputStage>
 8008730:	687b      	ldr	r3, [r7, #4]
 8008732:	681b      	ldr	r3, [r3, #0]
 8008734:	2160      	movs	r1, #96	; 0x60
 8008736:	4618      	mov	r0, r3
 8008738:	f000 fc73 	bl	8009022 <TIM_ITRx_SetConfig>
 800873c:	e01c      	b.n	8008778 <HAL_TIM_ConfigClockSource+0x174>
 800873e:	687b      	ldr	r3, [r7, #4]
 8008740:	6818      	ldr	r0, [r3, #0]
 8008742:	683b      	ldr	r3, [r7, #0]
 8008744:	6859      	ldr	r1, [r3, #4]
 8008746:	683b      	ldr	r3, [r7, #0]
 8008748:	68db      	ldr	r3, [r3, #12]
 800874a:	461a      	mov	r2, r3
 800874c:	f000 fb54 	bl	8008df8 <TIM_TI1_ConfigInputStage>
 8008750:	687b      	ldr	r3, [r7, #4]
 8008752:	681b      	ldr	r3, [r3, #0]
 8008754:	2140      	movs	r1, #64	; 0x40
 8008756:	4618      	mov	r0, r3
 8008758:	f000 fc63 	bl	8009022 <TIM_ITRx_SetConfig>
 800875c:	e00c      	b.n	8008778 <HAL_TIM_ConfigClockSource+0x174>
 800875e:	687b      	ldr	r3, [r7, #4]
 8008760:	681a      	ldr	r2, [r3, #0]
 8008762:	683b      	ldr	r3, [r7, #0]
 8008764:	681b      	ldr	r3, [r3, #0]
 8008766:	4619      	mov	r1, r3
 8008768:	4610      	mov	r0, r2
 800876a:	f000 fc5a 	bl	8009022 <TIM_ITRx_SetConfig>
 800876e:	e003      	b.n	8008778 <HAL_TIM_ConfigClockSource+0x174>
 8008770:	2301      	movs	r3, #1
 8008772:	73fb      	strb	r3, [r7, #15]
 8008774:	e000      	b.n	8008778 <HAL_TIM_ConfigClockSource+0x174>
 8008776:	bf00      	nop
 8008778:	687b      	ldr	r3, [r7, #4]
 800877a:	2201      	movs	r2, #1
 800877c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8008780:	687b      	ldr	r3, [r7, #4]
 8008782:	2200      	movs	r2, #0
 8008784:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8008788:	7bfb      	ldrb	r3, [r7, #15]
 800878a:	4618      	mov	r0, r3
 800878c:	3710      	adds	r7, #16
 800878e:	46bd      	mov	sp, r7
 8008790:	bd80      	pop	{r7, pc}
	...

08008794 <HAL_TIM_ReadCapturedValue>:
 8008794:	b480      	push	{r7}
 8008796:	b085      	sub	sp, #20
 8008798:	af00      	add	r7, sp, #0
 800879a:	6078      	str	r0, [r7, #4]
 800879c:	6039      	str	r1, [r7, #0]
 800879e:	2300      	movs	r3, #0
 80087a0:	60fb      	str	r3, [r7, #12]
 80087a2:	683b      	ldr	r3, [r7, #0]
 80087a4:	2b0c      	cmp	r3, #12
 80087a6:	d831      	bhi.n	800880c <HAL_TIM_ReadCapturedValue+0x78>
 80087a8:	a201      	add	r2, pc, #4	; (adr r2, 80087b0 <HAL_TIM_ReadCapturedValue+0x1c>)
 80087aa:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80087ae:	bf00      	nop
 80087b0:	080087e5 	.word	0x080087e5
 80087b4:	0800880d 	.word	0x0800880d
 80087b8:	0800880d 	.word	0x0800880d
 80087bc:	0800880d 	.word	0x0800880d
 80087c0:	080087ef 	.word	0x080087ef
 80087c4:	0800880d 	.word	0x0800880d
 80087c8:	0800880d 	.word	0x0800880d
 80087cc:	0800880d 	.word	0x0800880d
 80087d0:	080087f9 	.word	0x080087f9
 80087d4:	0800880d 	.word	0x0800880d
 80087d8:	0800880d 	.word	0x0800880d
 80087dc:	0800880d 	.word	0x0800880d
 80087e0:	08008803 	.word	0x08008803
 80087e4:	687b      	ldr	r3, [r7, #4]
 80087e6:	681b      	ldr	r3, [r3, #0]
 80087e8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80087ea:	60fb      	str	r3, [r7, #12]
 80087ec:	e00f      	b.n	800880e <HAL_TIM_ReadCapturedValue+0x7a>
 80087ee:	687b      	ldr	r3, [r7, #4]
 80087f0:	681b      	ldr	r3, [r3, #0]
 80087f2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80087f4:	60fb      	str	r3, [r7, #12]
 80087f6:	e00a      	b.n	800880e <HAL_TIM_ReadCapturedValue+0x7a>
 80087f8:	687b      	ldr	r3, [r7, #4]
 80087fa:	681b      	ldr	r3, [r3, #0]
 80087fc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80087fe:	60fb      	str	r3, [r7, #12]
 8008800:	e005      	b.n	800880e <HAL_TIM_ReadCapturedValue+0x7a>
 8008802:	687b      	ldr	r3, [r7, #4]
 8008804:	681b      	ldr	r3, [r3, #0]
 8008806:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008808:	60fb      	str	r3, [r7, #12]
 800880a:	e000      	b.n	800880e <HAL_TIM_ReadCapturedValue+0x7a>
 800880c:	bf00      	nop
 800880e:	68fb      	ldr	r3, [r7, #12]
 8008810:	4618      	mov	r0, r3
 8008812:	3714      	adds	r7, #20
 8008814:	46bd      	mov	sp, r7
 8008816:	f85d 7b04 	ldr.w	r7, [sp], #4
 800881a:	4770      	bx	lr

0800881c <HAL_TIM_OC_DelayElapsedCallback>:
 800881c:	b480      	push	{r7}
 800881e:	b083      	sub	sp, #12
 8008820:	af00      	add	r7, sp, #0
 8008822:	6078      	str	r0, [r7, #4]
 8008824:	bf00      	nop
 8008826:	370c      	adds	r7, #12
 8008828:	46bd      	mov	sp, r7
 800882a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800882e:	4770      	bx	lr

08008830 <HAL_TIM_PWM_PulseFinishedCallback>:
 8008830:	b480      	push	{r7}
 8008832:	b083      	sub	sp, #12
 8008834:	af00      	add	r7, sp, #0
 8008836:	6078      	str	r0, [r7, #4]
 8008838:	bf00      	nop
 800883a:	370c      	adds	r7, #12
 800883c:	46bd      	mov	sp, r7
 800883e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008842:	4770      	bx	lr

08008844 <HAL_TIM_TriggerCallback>:
 8008844:	b480      	push	{r7}
 8008846:	b083      	sub	sp, #12
 8008848:	af00      	add	r7, sp, #0
 800884a:	6078      	str	r0, [r7, #4]
 800884c:	bf00      	nop
 800884e:	370c      	adds	r7, #12
 8008850:	46bd      	mov	sp, r7
 8008852:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008856:	4770      	bx	lr

08008858 <TIM_Base_SetConfig>:
 8008858:	b480      	push	{r7}
 800885a:	b085      	sub	sp, #20
 800885c:	af00      	add	r7, sp, #0
 800885e:	6078      	str	r0, [r7, #4]
 8008860:	6039      	str	r1, [r7, #0]
 8008862:	687b      	ldr	r3, [r7, #4]
 8008864:	681b      	ldr	r3, [r3, #0]
 8008866:	60fb      	str	r3, [r7, #12]
 8008868:	687b      	ldr	r3, [r7, #4]
 800886a:	4a46      	ldr	r2, [pc, #280]	; (8008984 <TIM_Base_SetConfig+0x12c>)
 800886c:	4293      	cmp	r3, r2
 800886e:	d013      	beq.n	8008898 <TIM_Base_SetConfig+0x40>
 8008870:	687b      	ldr	r3, [r7, #4]
 8008872:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008876:	d00f      	beq.n	8008898 <TIM_Base_SetConfig+0x40>
 8008878:	687b      	ldr	r3, [r7, #4]
 800887a:	4a43      	ldr	r2, [pc, #268]	; (8008988 <TIM_Base_SetConfig+0x130>)
 800887c:	4293      	cmp	r3, r2
 800887e:	d00b      	beq.n	8008898 <TIM_Base_SetConfig+0x40>
 8008880:	687b      	ldr	r3, [r7, #4]
 8008882:	4a42      	ldr	r2, [pc, #264]	; (800898c <TIM_Base_SetConfig+0x134>)
 8008884:	4293      	cmp	r3, r2
 8008886:	d007      	beq.n	8008898 <TIM_Base_SetConfig+0x40>
 8008888:	687b      	ldr	r3, [r7, #4]
 800888a:	4a41      	ldr	r2, [pc, #260]	; (8008990 <TIM_Base_SetConfig+0x138>)
 800888c:	4293      	cmp	r3, r2
 800888e:	d003      	beq.n	8008898 <TIM_Base_SetConfig+0x40>
 8008890:	687b      	ldr	r3, [r7, #4]
 8008892:	4a40      	ldr	r2, [pc, #256]	; (8008994 <TIM_Base_SetConfig+0x13c>)
 8008894:	4293      	cmp	r3, r2
 8008896:	d108      	bne.n	80088aa <TIM_Base_SetConfig+0x52>
 8008898:	68fb      	ldr	r3, [r7, #12]
 800889a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800889e:	60fb      	str	r3, [r7, #12]
 80088a0:	683b      	ldr	r3, [r7, #0]
 80088a2:	685b      	ldr	r3, [r3, #4]
 80088a4:	68fa      	ldr	r2, [r7, #12]
 80088a6:	4313      	orrs	r3, r2
 80088a8:	60fb      	str	r3, [r7, #12]
 80088aa:	687b      	ldr	r3, [r7, #4]
 80088ac:	4a35      	ldr	r2, [pc, #212]	; (8008984 <TIM_Base_SetConfig+0x12c>)
 80088ae:	4293      	cmp	r3, r2
 80088b0:	d02b      	beq.n	800890a <TIM_Base_SetConfig+0xb2>
 80088b2:	687b      	ldr	r3, [r7, #4]
 80088b4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80088b8:	d027      	beq.n	800890a <TIM_Base_SetConfig+0xb2>
 80088ba:	687b      	ldr	r3, [r7, #4]
 80088bc:	4a32      	ldr	r2, [pc, #200]	; (8008988 <TIM_Base_SetConfig+0x130>)
 80088be:	4293      	cmp	r3, r2
 80088c0:	d023      	beq.n	800890a <TIM_Base_SetConfig+0xb2>
 80088c2:	687b      	ldr	r3, [r7, #4]
 80088c4:	4a31      	ldr	r2, [pc, #196]	; (800898c <TIM_Base_SetConfig+0x134>)
 80088c6:	4293      	cmp	r3, r2
 80088c8:	d01f      	beq.n	800890a <TIM_Base_SetConfig+0xb2>
 80088ca:	687b      	ldr	r3, [r7, #4]
 80088cc:	4a30      	ldr	r2, [pc, #192]	; (8008990 <TIM_Base_SetConfig+0x138>)
 80088ce:	4293      	cmp	r3, r2
 80088d0:	d01b      	beq.n	800890a <TIM_Base_SetConfig+0xb2>
 80088d2:	687b      	ldr	r3, [r7, #4]
 80088d4:	4a2f      	ldr	r2, [pc, #188]	; (8008994 <TIM_Base_SetConfig+0x13c>)
 80088d6:	4293      	cmp	r3, r2
 80088d8:	d017      	beq.n	800890a <TIM_Base_SetConfig+0xb2>
 80088da:	687b      	ldr	r3, [r7, #4]
 80088dc:	4a2e      	ldr	r2, [pc, #184]	; (8008998 <TIM_Base_SetConfig+0x140>)
 80088de:	4293      	cmp	r3, r2
 80088e0:	d013      	beq.n	800890a <TIM_Base_SetConfig+0xb2>
 80088e2:	687b      	ldr	r3, [r7, #4]
 80088e4:	4a2d      	ldr	r2, [pc, #180]	; (800899c <TIM_Base_SetConfig+0x144>)
 80088e6:	4293      	cmp	r3, r2
 80088e8:	d00f      	beq.n	800890a <TIM_Base_SetConfig+0xb2>
 80088ea:	687b      	ldr	r3, [r7, #4]
 80088ec:	4a2c      	ldr	r2, [pc, #176]	; (80089a0 <TIM_Base_SetConfig+0x148>)
 80088ee:	4293      	cmp	r3, r2
 80088f0:	d00b      	beq.n	800890a <TIM_Base_SetConfig+0xb2>
 80088f2:	687b      	ldr	r3, [r7, #4]
 80088f4:	4a2b      	ldr	r2, [pc, #172]	; (80089a4 <TIM_Base_SetConfig+0x14c>)
 80088f6:	4293      	cmp	r3, r2
 80088f8:	d007      	beq.n	800890a <TIM_Base_SetConfig+0xb2>
 80088fa:	687b      	ldr	r3, [r7, #4]
 80088fc:	4a2a      	ldr	r2, [pc, #168]	; (80089a8 <TIM_Base_SetConfig+0x150>)
 80088fe:	4293      	cmp	r3, r2
 8008900:	d003      	beq.n	800890a <TIM_Base_SetConfig+0xb2>
 8008902:	687b      	ldr	r3, [r7, #4]
 8008904:	4a29      	ldr	r2, [pc, #164]	; (80089ac <TIM_Base_SetConfig+0x154>)
 8008906:	4293      	cmp	r3, r2
 8008908:	d108      	bne.n	800891c <TIM_Base_SetConfig+0xc4>
 800890a:	68fb      	ldr	r3, [r7, #12]
 800890c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008910:	60fb      	str	r3, [r7, #12]
 8008912:	683b      	ldr	r3, [r7, #0]
 8008914:	68db      	ldr	r3, [r3, #12]
 8008916:	68fa      	ldr	r2, [r7, #12]
 8008918:	4313      	orrs	r3, r2
 800891a:	60fb      	str	r3, [r7, #12]
 800891c:	68fb      	ldr	r3, [r7, #12]
 800891e:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8008922:	683b      	ldr	r3, [r7, #0]
 8008924:	695b      	ldr	r3, [r3, #20]
 8008926:	4313      	orrs	r3, r2
 8008928:	60fb      	str	r3, [r7, #12]
 800892a:	687b      	ldr	r3, [r7, #4]
 800892c:	68fa      	ldr	r2, [r7, #12]
 800892e:	601a      	str	r2, [r3, #0]
 8008930:	683b      	ldr	r3, [r7, #0]
 8008932:	689a      	ldr	r2, [r3, #8]
 8008934:	687b      	ldr	r3, [r7, #4]
 8008936:	62da      	str	r2, [r3, #44]	; 0x2c
 8008938:	683b      	ldr	r3, [r7, #0]
 800893a:	681a      	ldr	r2, [r3, #0]
 800893c:	687b      	ldr	r3, [r7, #4]
 800893e:	629a      	str	r2, [r3, #40]	; 0x28
 8008940:	687b      	ldr	r3, [r7, #4]
 8008942:	4a10      	ldr	r2, [pc, #64]	; (8008984 <TIM_Base_SetConfig+0x12c>)
 8008944:	4293      	cmp	r3, r2
 8008946:	d003      	beq.n	8008950 <TIM_Base_SetConfig+0xf8>
 8008948:	687b      	ldr	r3, [r7, #4]
 800894a:	4a12      	ldr	r2, [pc, #72]	; (8008994 <TIM_Base_SetConfig+0x13c>)
 800894c:	4293      	cmp	r3, r2
 800894e:	d103      	bne.n	8008958 <TIM_Base_SetConfig+0x100>
 8008950:	683b      	ldr	r3, [r7, #0]
 8008952:	691a      	ldr	r2, [r3, #16]
 8008954:	687b      	ldr	r3, [r7, #4]
 8008956:	631a      	str	r2, [r3, #48]	; 0x30
 8008958:	687b      	ldr	r3, [r7, #4]
 800895a:	2201      	movs	r2, #1
 800895c:	615a      	str	r2, [r3, #20]
 800895e:	687b      	ldr	r3, [r7, #4]
 8008960:	691b      	ldr	r3, [r3, #16]
 8008962:	f003 0301 	and.w	r3, r3, #1
 8008966:	2b01      	cmp	r3, #1
 8008968:	d105      	bne.n	8008976 <TIM_Base_SetConfig+0x11e>
 800896a:	687b      	ldr	r3, [r7, #4]
 800896c:	691b      	ldr	r3, [r3, #16]
 800896e:	f023 0201 	bic.w	r2, r3, #1
 8008972:	687b      	ldr	r3, [r7, #4]
 8008974:	611a      	str	r2, [r3, #16]
 8008976:	bf00      	nop
 8008978:	3714      	adds	r7, #20
 800897a:	46bd      	mov	sp, r7
 800897c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008980:	4770      	bx	lr
 8008982:	bf00      	nop
 8008984:	40010000 	.word	0x40010000
 8008988:	40000400 	.word	0x40000400
 800898c:	40000800 	.word	0x40000800
 8008990:	40000c00 	.word	0x40000c00
 8008994:	40010400 	.word	0x40010400
 8008998:	40014000 	.word	0x40014000
 800899c:	40014400 	.word	0x40014400
 80089a0:	40014800 	.word	0x40014800
 80089a4:	40001800 	.word	0x40001800
 80089a8:	40001c00 	.word	0x40001c00
 80089ac:	40002000 	.word	0x40002000

080089b0 <TIM_OC1_SetConfig>:
 80089b0:	b480      	push	{r7}
 80089b2:	b087      	sub	sp, #28
 80089b4:	af00      	add	r7, sp, #0
 80089b6:	6078      	str	r0, [r7, #4]
 80089b8:	6039      	str	r1, [r7, #0]
 80089ba:	687b      	ldr	r3, [r7, #4]
 80089bc:	6a1b      	ldr	r3, [r3, #32]
 80089be:	617b      	str	r3, [r7, #20]
 80089c0:	687b      	ldr	r3, [r7, #4]
 80089c2:	6a1b      	ldr	r3, [r3, #32]
 80089c4:	f023 0201 	bic.w	r2, r3, #1
 80089c8:	687b      	ldr	r3, [r7, #4]
 80089ca:	621a      	str	r2, [r3, #32]
 80089cc:	687b      	ldr	r3, [r7, #4]
 80089ce:	685b      	ldr	r3, [r3, #4]
 80089d0:	613b      	str	r3, [r7, #16]
 80089d2:	687b      	ldr	r3, [r7, #4]
 80089d4:	699b      	ldr	r3, [r3, #24]
 80089d6:	60fb      	str	r3, [r7, #12]
 80089d8:	68fb      	ldr	r3, [r7, #12]
 80089da:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80089de:	60fb      	str	r3, [r7, #12]
 80089e0:	68fb      	ldr	r3, [r7, #12]
 80089e2:	f023 0303 	bic.w	r3, r3, #3
 80089e6:	60fb      	str	r3, [r7, #12]
 80089e8:	683b      	ldr	r3, [r7, #0]
 80089ea:	681b      	ldr	r3, [r3, #0]
 80089ec:	68fa      	ldr	r2, [r7, #12]
 80089ee:	4313      	orrs	r3, r2
 80089f0:	60fb      	str	r3, [r7, #12]
 80089f2:	697b      	ldr	r3, [r7, #20]
 80089f4:	f023 0302 	bic.w	r3, r3, #2
 80089f8:	617b      	str	r3, [r7, #20]
 80089fa:	683b      	ldr	r3, [r7, #0]
 80089fc:	689b      	ldr	r3, [r3, #8]
 80089fe:	697a      	ldr	r2, [r7, #20]
 8008a00:	4313      	orrs	r3, r2
 8008a02:	617b      	str	r3, [r7, #20]
 8008a04:	687b      	ldr	r3, [r7, #4]
 8008a06:	4a20      	ldr	r2, [pc, #128]	; (8008a88 <TIM_OC1_SetConfig+0xd8>)
 8008a08:	4293      	cmp	r3, r2
 8008a0a:	d003      	beq.n	8008a14 <TIM_OC1_SetConfig+0x64>
 8008a0c:	687b      	ldr	r3, [r7, #4]
 8008a0e:	4a1f      	ldr	r2, [pc, #124]	; (8008a8c <TIM_OC1_SetConfig+0xdc>)
 8008a10:	4293      	cmp	r3, r2
 8008a12:	d10c      	bne.n	8008a2e <TIM_OC1_SetConfig+0x7e>
 8008a14:	697b      	ldr	r3, [r7, #20]
 8008a16:	f023 0308 	bic.w	r3, r3, #8
 8008a1a:	617b      	str	r3, [r7, #20]
 8008a1c:	683b      	ldr	r3, [r7, #0]
 8008a1e:	68db      	ldr	r3, [r3, #12]
 8008a20:	697a      	ldr	r2, [r7, #20]
 8008a22:	4313      	orrs	r3, r2
 8008a24:	617b      	str	r3, [r7, #20]
 8008a26:	697b      	ldr	r3, [r7, #20]
 8008a28:	f023 0304 	bic.w	r3, r3, #4
 8008a2c:	617b      	str	r3, [r7, #20]
 8008a2e:	687b      	ldr	r3, [r7, #4]
 8008a30:	4a15      	ldr	r2, [pc, #84]	; (8008a88 <TIM_OC1_SetConfig+0xd8>)
 8008a32:	4293      	cmp	r3, r2
 8008a34:	d003      	beq.n	8008a3e <TIM_OC1_SetConfig+0x8e>
 8008a36:	687b      	ldr	r3, [r7, #4]
 8008a38:	4a14      	ldr	r2, [pc, #80]	; (8008a8c <TIM_OC1_SetConfig+0xdc>)
 8008a3a:	4293      	cmp	r3, r2
 8008a3c:	d111      	bne.n	8008a62 <TIM_OC1_SetConfig+0xb2>
 8008a3e:	693b      	ldr	r3, [r7, #16]
 8008a40:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8008a44:	613b      	str	r3, [r7, #16]
 8008a46:	693b      	ldr	r3, [r7, #16]
 8008a48:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8008a4c:	613b      	str	r3, [r7, #16]
 8008a4e:	683b      	ldr	r3, [r7, #0]
 8008a50:	695b      	ldr	r3, [r3, #20]
 8008a52:	693a      	ldr	r2, [r7, #16]
 8008a54:	4313      	orrs	r3, r2
 8008a56:	613b      	str	r3, [r7, #16]
 8008a58:	683b      	ldr	r3, [r7, #0]
 8008a5a:	699b      	ldr	r3, [r3, #24]
 8008a5c:	693a      	ldr	r2, [r7, #16]
 8008a5e:	4313      	orrs	r3, r2
 8008a60:	613b      	str	r3, [r7, #16]
 8008a62:	687b      	ldr	r3, [r7, #4]
 8008a64:	693a      	ldr	r2, [r7, #16]
 8008a66:	605a      	str	r2, [r3, #4]
 8008a68:	687b      	ldr	r3, [r7, #4]
 8008a6a:	68fa      	ldr	r2, [r7, #12]
 8008a6c:	619a      	str	r2, [r3, #24]
 8008a6e:	683b      	ldr	r3, [r7, #0]
 8008a70:	685a      	ldr	r2, [r3, #4]
 8008a72:	687b      	ldr	r3, [r7, #4]
 8008a74:	635a      	str	r2, [r3, #52]	; 0x34
 8008a76:	687b      	ldr	r3, [r7, #4]
 8008a78:	697a      	ldr	r2, [r7, #20]
 8008a7a:	621a      	str	r2, [r3, #32]
 8008a7c:	bf00      	nop
 8008a7e:	371c      	adds	r7, #28
 8008a80:	46bd      	mov	sp, r7
 8008a82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a86:	4770      	bx	lr
 8008a88:	40010000 	.word	0x40010000
 8008a8c:	40010400 	.word	0x40010400

08008a90 <TIM_OC2_SetConfig>:
 8008a90:	b480      	push	{r7}
 8008a92:	b087      	sub	sp, #28
 8008a94:	af00      	add	r7, sp, #0
 8008a96:	6078      	str	r0, [r7, #4]
 8008a98:	6039      	str	r1, [r7, #0]
 8008a9a:	687b      	ldr	r3, [r7, #4]
 8008a9c:	6a1b      	ldr	r3, [r3, #32]
 8008a9e:	617b      	str	r3, [r7, #20]
 8008aa0:	687b      	ldr	r3, [r7, #4]
 8008aa2:	6a1b      	ldr	r3, [r3, #32]
 8008aa4:	f023 0210 	bic.w	r2, r3, #16
 8008aa8:	687b      	ldr	r3, [r7, #4]
 8008aaa:	621a      	str	r2, [r3, #32]
 8008aac:	687b      	ldr	r3, [r7, #4]
 8008aae:	685b      	ldr	r3, [r3, #4]
 8008ab0:	613b      	str	r3, [r7, #16]
 8008ab2:	687b      	ldr	r3, [r7, #4]
 8008ab4:	699b      	ldr	r3, [r3, #24]
 8008ab6:	60fb      	str	r3, [r7, #12]
 8008ab8:	68fb      	ldr	r3, [r7, #12]
 8008aba:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8008abe:	60fb      	str	r3, [r7, #12]
 8008ac0:	68fb      	ldr	r3, [r7, #12]
 8008ac2:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008ac6:	60fb      	str	r3, [r7, #12]
 8008ac8:	683b      	ldr	r3, [r7, #0]
 8008aca:	681b      	ldr	r3, [r3, #0]
 8008acc:	021b      	lsls	r3, r3, #8
 8008ace:	68fa      	ldr	r2, [r7, #12]
 8008ad0:	4313      	orrs	r3, r2
 8008ad2:	60fb      	str	r3, [r7, #12]
 8008ad4:	697b      	ldr	r3, [r7, #20]
 8008ad6:	f023 0320 	bic.w	r3, r3, #32
 8008ada:	617b      	str	r3, [r7, #20]
 8008adc:	683b      	ldr	r3, [r7, #0]
 8008ade:	689b      	ldr	r3, [r3, #8]
 8008ae0:	011b      	lsls	r3, r3, #4
 8008ae2:	697a      	ldr	r2, [r7, #20]
 8008ae4:	4313      	orrs	r3, r2
 8008ae6:	617b      	str	r3, [r7, #20]
 8008ae8:	687b      	ldr	r3, [r7, #4]
 8008aea:	4a22      	ldr	r2, [pc, #136]	; (8008b74 <TIM_OC2_SetConfig+0xe4>)
 8008aec:	4293      	cmp	r3, r2
 8008aee:	d003      	beq.n	8008af8 <TIM_OC2_SetConfig+0x68>
 8008af0:	687b      	ldr	r3, [r7, #4]
 8008af2:	4a21      	ldr	r2, [pc, #132]	; (8008b78 <TIM_OC2_SetConfig+0xe8>)
 8008af4:	4293      	cmp	r3, r2
 8008af6:	d10d      	bne.n	8008b14 <TIM_OC2_SetConfig+0x84>
 8008af8:	697b      	ldr	r3, [r7, #20]
 8008afa:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8008afe:	617b      	str	r3, [r7, #20]
 8008b00:	683b      	ldr	r3, [r7, #0]
 8008b02:	68db      	ldr	r3, [r3, #12]
 8008b04:	011b      	lsls	r3, r3, #4
 8008b06:	697a      	ldr	r2, [r7, #20]
 8008b08:	4313      	orrs	r3, r2
 8008b0a:	617b      	str	r3, [r7, #20]
 8008b0c:	697b      	ldr	r3, [r7, #20]
 8008b0e:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8008b12:	617b      	str	r3, [r7, #20]
 8008b14:	687b      	ldr	r3, [r7, #4]
 8008b16:	4a17      	ldr	r2, [pc, #92]	; (8008b74 <TIM_OC2_SetConfig+0xe4>)
 8008b18:	4293      	cmp	r3, r2
 8008b1a:	d003      	beq.n	8008b24 <TIM_OC2_SetConfig+0x94>
 8008b1c:	687b      	ldr	r3, [r7, #4]
 8008b1e:	4a16      	ldr	r2, [pc, #88]	; (8008b78 <TIM_OC2_SetConfig+0xe8>)
 8008b20:	4293      	cmp	r3, r2
 8008b22:	d113      	bne.n	8008b4c <TIM_OC2_SetConfig+0xbc>
 8008b24:	693b      	ldr	r3, [r7, #16]
 8008b26:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8008b2a:	613b      	str	r3, [r7, #16]
 8008b2c:	693b      	ldr	r3, [r7, #16]
 8008b2e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8008b32:	613b      	str	r3, [r7, #16]
 8008b34:	683b      	ldr	r3, [r7, #0]
 8008b36:	695b      	ldr	r3, [r3, #20]
 8008b38:	009b      	lsls	r3, r3, #2
 8008b3a:	693a      	ldr	r2, [r7, #16]
 8008b3c:	4313      	orrs	r3, r2
 8008b3e:	613b      	str	r3, [r7, #16]
 8008b40:	683b      	ldr	r3, [r7, #0]
 8008b42:	699b      	ldr	r3, [r3, #24]
 8008b44:	009b      	lsls	r3, r3, #2
 8008b46:	693a      	ldr	r2, [r7, #16]
 8008b48:	4313      	orrs	r3, r2
 8008b4a:	613b      	str	r3, [r7, #16]
 8008b4c:	687b      	ldr	r3, [r7, #4]
 8008b4e:	693a      	ldr	r2, [r7, #16]
 8008b50:	605a      	str	r2, [r3, #4]
 8008b52:	687b      	ldr	r3, [r7, #4]
 8008b54:	68fa      	ldr	r2, [r7, #12]
 8008b56:	619a      	str	r2, [r3, #24]
 8008b58:	683b      	ldr	r3, [r7, #0]
 8008b5a:	685a      	ldr	r2, [r3, #4]
 8008b5c:	687b      	ldr	r3, [r7, #4]
 8008b5e:	639a      	str	r2, [r3, #56]	; 0x38
 8008b60:	687b      	ldr	r3, [r7, #4]
 8008b62:	697a      	ldr	r2, [r7, #20]
 8008b64:	621a      	str	r2, [r3, #32]
 8008b66:	bf00      	nop
 8008b68:	371c      	adds	r7, #28
 8008b6a:	46bd      	mov	sp, r7
 8008b6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b70:	4770      	bx	lr
 8008b72:	bf00      	nop
 8008b74:	40010000 	.word	0x40010000
 8008b78:	40010400 	.word	0x40010400

08008b7c <TIM_OC3_SetConfig>:
 8008b7c:	b480      	push	{r7}
 8008b7e:	b087      	sub	sp, #28
 8008b80:	af00      	add	r7, sp, #0
 8008b82:	6078      	str	r0, [r7, #4]
 8008b84:	6039      	str	r1, [r7, #0]
 8008b86:	687b      	ldr	r3, [r7, #4]
 8008b88:	6a1b      	ldr	r3, [r3, #32]
 8008b8a:	617b      	str	r3, [r7, #20]
 8008b8c:	687b      	ldr	r3, [r7, #4]
 8008b8e:	6a1b      	ldr	r3, [r3, #32]
 8008b90:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8008b94:	687b      	ldr	r3, [r7, #4]
 8008b96:	621a      	str	r2, [r3, #32]
 8008b98:	687b      	ldr	r3, [r7, #4]
 8008b9a:	685b      	ldr	r3, [r3, #4]
 8008b9c:	613b      	str	r3, [r7, #16]
 8008b9e:	687b      	ldr	r3, [r7, #4]
 8008ba0:	69db      	ldr	r3, [r3, #28]
 8008ba2:	60fb      	str	r3, [r7, #12]
 8008ba4:	68fb      	ldr	r3, [r7, #12]
 8008ba6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8008baa:	60fb      	str	r3, [r7, #12]
 8008bac:	68fb      	ldr	r3, [r7, #12]
 8008bae:	f023 0303 	bic.w	r3, r3, #3
 8008bb2:	60fb      	str	r3, [r7, #12]
 8008bb4:	683b      	ldr	r3, [r7, #0]
 8008bb6:	681b      	ldr	r3, [r3, #0]
 8008bb8:	68fa      	ldr	r2, [r7, #12]
 8008bba:	4313      	orrs	r3, r2
 8008bbc:	60fb      	str	r3, [r7, #12]
 8008bbe:	697b      	ldr	r3, [r7, #20]
 8008bc0:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8008bc4:	617b      	str	r3, [r7, #20]
 8008bc6:	683b      	ldr	r3, [r7, #0]
 8008bc8:	689b      	ldr	r3, [r3, #8]
 8008bca:	021b      	lsls	r3, r3, #8
 8008bcc:	697a      	ldr	r2, [r7, #20]
 8008bce:	4313      	orrs	r3, r2
 8008bd0:	617b      	str	r3, [r7, #20]
 8008bd2:	687b      	ldr	r3, [r7, #4]
 8008bd4:	4a21      	ldr	r2, [pc, #132]	; (8008c5c <TIM_OC3_SetConfig+0xe0>)
 8008bd6:	4293      	cmp	r3, r2
 8008bd8:	d003      	beq.n	8008be2 <TIM_OC3_SetConfig+0x66>
 8008bda:	687b      	ldr	r3, [r7, #4]
 8008bdc:	4a20      	ldr	r2, [pc, #128]	; (8008c60 <TIM_OC3_SetConfig+0xe4>)
 8008bde:	4293      	cmp	r3, r2
 8008be0:	d10d      	bne.n	8008bfe <TIM_OC3_SetConfig+0x82>
 8008be2:	697b      	ldr	r3, [r7, #20]
 8008be4:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8008be8:	617b      	str	r3, [r7, #20]
 8008bea:	683b      	ldr	r3, [r7, #0]
 8008bec:	68db      	ldr	r3, [r3, #12]
 8008bee:	021b      	lsls	r3, r3, #8
 8008bf0:	697a      	ldr	r2, [r7, #20]
 8008bf2:	4313      	orrs	r3, r2
 8008bf4:	617b      	str	r3, [r7, #20]
 8008bf6:	697b      	ldr	r3, [r7, #20]
 8008bf8:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8008bfc:	617b      	str	r3, [r7, #20]
 8008bfe:	687b      	ldr	r3, [r7, #4]
 8008c00:	4a16      	ldr	r2, [pc, #88]	; (8008c5c <TIM_OC3_SetConfig+0xe0>)
 8008c02:	4293      	cmp	r3, r2
 8008c04:	d003      	beq.n	8008c0e <TIM_OC3_SetConfig+0x92>
 8008c06:	687b      	ldr	r3, [r7, #4]
 8008c08:	4a15      	ldr	r2, [pc, #84]	; (8008c60 <TIM_OC3_SetConfig+0xe4>)
 8008c0a:	4293      	cmp	r3, r2
 8008c0c:	d113      	bne.n	8008c36 <TIM_OC3_SetConfig+0xba>
 8008c0e:	693b      	ldr	r3, [r7, #16]
 8008c10:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8008c14:	613b      	str	r3, [r7, #16]
 8008c16:	693b      	ldr	r3, [r7, #16]
 8008c18:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8008c1c:	613b      	str	r3, [r7, #16]
 8008c1e:	683b      	ldr	r3, [r7, #0]
 8008c20:	695b      	ldr	r3, [r3, #20]
 8008c22:	011b      	lsls	r3, r3, #4
 8008c24:	693a      	ldr	r2, [r7, #16]
 8008c26:	4313      	orrs	r3, r2
 8008c28:	613b      	str	r3, [r7, #16]
 8008c2a:	683b      	ldr	r3, [r7, #0]
 8008c2c:	699b      	ldr	r3, [r3, #24]
 8008c2e:	011b      	lsls	r3, r3, #4
 8008c30:	693a      	ldr	r2, [r7, #16]
 8008c32:	4313      	orrs	r3, r2
 8008c34:	613b      	str	r3, [r7, #16]
 8008c36:	687b      	ldr	r3, [r7, #4]
 8008c38:	693a      	ldr	r2, [r7, #16]
 8008c3a:	605a      	str	r2, [r3, #4]
 8008c3c:	687b      	ldr	r3, [r7, #4]
 8008c3e:	68fa      	ldr	r2, [r7, #12]
 8008c40:	61da      	str	r2, [r3, #28]
 8008c42:	683b      	ldr	r3, [r7, #0]
 8008c44:	685a      	ldr	r2, [r3, #4]
 8008c46:	687b      	ldr	r3, [r7, #4]
 8008c48:	63da      	str	r2, [r3, #60]	; 0x3c
 8008c4a:	687b      	ldr	r3, [r7, #4]
 8008c4c:	697a      	ldr	r2, [r7, #20]
 8008c4e:	621a      	str	r2, [r3, #32]
 8008c50:	bf00      	nop
 8008c52:	371c      	adds	r7, #28
 8008c54:	46bd      	mov	sp, r7
 8008c56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c5a:	4770      	bx	lr
 8008c5c:	40010000 	.word	0x40010000
 8008c60:	40010400 	.word	0x40010400

08008c64 <TIM_OC4_SetConfig>:
 8008c64:	b480      	push	{r7}
 8008c66:	b087      	sub	sp, #28
 8008c68:	af00      	add	r7, sp, #0
 8008c6a:	6078      	str	r0, [r7, #4]
 8008c6c:	6039      	str	r1, [r7, #0]
 8008c6e:	687b      	ldr	r3, [r7, #4]
 8008c70:	6a1b      	ldr	r3, [r3, #32]
 8008c72:	613b      	str	r3, [r7, #16]
 8008c74:	687b      	ldr	r3, [r7, #4]
 8008c76:	6a1b      	ldr	r3, [r3, #32]
 8008c78:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8008c7c:	687b      	ldr	r3, [r7, #4]
 8008c7e:	621a      	str	r2, [r3, #32]
 8008c80:	687b      	ldr	r3, [r7, #4]
 8008c82:	685b      	ldr	r3, [r3, #4]
 8008c84:	617b      	str	r3, [r7, #20]
 8008c86:	687b      	ldr	r3, [r7, #4]
 8008c88:	69db      	ldr	r3, [r3, #28]
 8008c8a:	60fb      	str	r3, [r7, #12]
 8008c8c:	68fb      	ldr	r3, [r7, #12]
 8008c8e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8008c92:	60fb      	str	r3, [r7, #12]
 8008c94:	68fb      	ldr	r3, [r7, #12]
 8008c96:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008c9a:	60fb      	str	r3, [r7, #12]
 8008c9c:	683b      	ldr	r3, [r7, #0]
 8008c9e:	681b      	ldr	r3, [r3, #0]
 8008ca0:	021b      	lsls	r3, r3, #8
 8008ca2:	68fa      	ldr	r2, [r7, #12]
 8008ca4:	4313      	orrs	r3, r2
 8008ca6:	60fb      	str	r3, [r7, #12]
 8008ca8:	693b      	ldr	r3, [r7, #16]
 8008caa:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8008cae:	613b      	str	r3, [r7, #16]
 8008cb0:	683b      	ldr	r3, [r7, #0]
 8008cb2:	689b      	ldr	r3, [r3, #8]
 8008cb4:	031b      	lsls	r3, r3, #12
 8008cb6:	693a      	ldr	r2, [r7, #16]
 8008cb8:	4313      	orrs	r3, r2
 8008cba:	613b      	str	r3, [r7, #16]
 8008cbc:	687b      	ldr	r3, [r7, #4]
 8008cbe:	4a12      	ldr	r2, [pc, #72]	; (8008d08 <TIM_OC4_SetConfig+0xa4>)
 8008cc0:	4293      	cmp	r3, r2
 8008cc2:	d003      	beq.n	8008ccc <TIM_OC4_SetConfig+0x68>
 8008cc4:	687b      	ldr	r3, [r7, #4]
 8008cc6:	4a11      	ldr	r2, [pc, #68]	; (8008d0c <TIM_OC4_SetConfig+0xa8>)
 8008cc8:	4293      	cmp	r3, r2
 8008cca:	d109      	bne.n	8008ce0 <TIM_OC4_SetConfig+0x7c>
 8008ccc:	697b      	ldr	r3, [r7, #20]
 8008cce:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8008cd2:	617b      	str	r3, [r7, #20]
 8008cd4:	683b      	ldr	r3, [r7, #0]
 8008cd6:	695b      	ldr	r3, [r3, #20]
 8008cd8:	019b      	lsls	r3, r3, #6
 8008cda:	697a      	ldr	r2, [r7, #20]
 8008cdc:	4313      	orrs	r3, r2
 8008cde:	617b      	str	r3, [r7, #20]
 8008ce0:	687b      	ldr	r3, [r7, #4]
 8008ce2:	697a      	ldr	r2, [r7, #20]
 8008ce4:	605a      	str	r2, [r3, #4]
 8008ce6:	687b      	ldr	r3, [r7, #4]
 8008ce8:	68fa      	ldr	r2, [r7, #12]
 8008cea:	61da      	str	r2, [r3, #28]
 8008cec:	683b      	ldr	r3, [r7, #0]
 8008cee:	685a      	ldr	r2, [r3, #4]
 8008cf0:	687b      	ldr	r3, [r7, #4]
 8008cf2:	641a      	str	r2, [r3, #64]	; 0x40
 8008cf4:	687b      	ldr	r3, [r7, #4]
 8008cf6:	693a      	ldr	r2, [r7, #16]
 8008cf8:	621a      	str	r2, [r3, #32]
 8008cfa:	bf00      	nop
 8008cfc:	371c      	adds	r7, #28
 8008cfe:	46bd      	mov	sp, r7
 8008d00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008d04:	4770      	bx	lr
 8008d06:	bf00      	nop
 8008d08:	40010000 	.word	0x40010000
 8008d0c:	40010400 	.word	0x40010400

08008d10 <TIM_TI1_SetConfig>:
 8008d10:	b480      	push	{r7}
 8008d12:	b087      	sub	sp, #28
 8008d14:	af00      	add	r7, sp, #0
 8008d16:	60f8      	str	r0, [r7, #12]
 8008d18:	60b9      	str	r1, [r7, #8]
 8008d1a:	607a      	str	r2, [r7, #4]
 8008d1c:	603b      	str	r3, [r7, #0]
 8008d1e:	68fb      	ldr	r3, [r7, #12]
 8008d20:	6a1b      	ldr	r3, [r3, #32]
 8008d22:	613b      	str	r3, [r7, #16]
 8008d24:	68fb      	ldr	r3, [r7, #12]
 8008d26:	6a1b      	ldr	r3, [r3, #32]
 8008d28:	f023 0201 	bic.w	r2, r3, #1
 8008d2c:	68fb      	ldr	r3, [r7, #12]
 8008d2e:	621a      	str	r2, [r3, #32]
 8008d30:	68fb      	ldr	r3, [r7, #12]
 8008d32:	699b      	ldr	r3, [r3, #24]
 8008d34:	617b      	str	r3, [r7, #20]
 8008d36:	68fb      	ldr	r3, [r7, #12]
 8008d38:	4a28      	ldr	r2, [pc, #160]	; (8008ddc <TIM_TI1_SetConfig+0xcc>)
 8008d3a:	4293      	cmp	r3, r2
 8008d3c:	d01b      	beq.n	8008d76 <TIM_TI1_SetConfig+0x66>
 8008d3e:	68fb      	ldr	r3, [r7, #12]
 8008d40:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008d44:	d017      	beq.n	8008d76 <TIM_TI1_SetConfig+0x66>
 8008d46:	68fb      	ldr	r3, [r7, #12]
 8008d48:	4a25      	ldr	r2, [pc, #148]	; (8008de0 <TIM_TI1_SetConfig+0xd0>)
 8008d4a:	4293      	cmp	r3, r2
 8008d4c:	d013      	beq.n	8008d76 <TIM_TI1_SetConfig+0x66>
 8008d4e:	68fb      	ldr	r3, [r7, #12]
 8008d50:	4a24      	ldr	r2, [pc, #144]	; (8008de4 <TIM_TI1_SetConfig+0xd4>)
 8008d52:	4293      	cmp	r3, r2
 8008d54:	d00f      	beq.n	8008d76 <TIM_TI1_SetConfig+0x66>
 8008d56:	68fb      	ldr	r3, [r7, #12]
 8008d58:	4a23      	ldr	r2, [pc, #140]	; (8008de8 <TIM_TI1_SetConfig+0xd8>)
 8008d5a:	4293      	cmp	r3, r2
 8008d5c:	d00b      	beq.n	8008d76 <TIM_TI1_SetConfig+0x66>
 8008d5e:	68fb      	ldr	r3, [r7, #12]
 8008d60:	4a22      	ldr	r2, [pc, #136]	; (8008dec <TIM_TI1_SetConfig+0xdc>)
 8008d62:	4293      	cmp	r3, r2
 8008d64:	d007      	beq.n	8008d76 <TIM_TI1_SetConfig+0x66>
 8008d66:	68fb      	ldr	r3, [r7, #12]
 8008d68:	4a21      	ldr	r2, [pc, #132]	; (8008df0 <TIM_TI1_SetConfig+0xe0>)
 8008d6a:	4293      	cmp	r3, r2
 8008d6c:	d003      	beq.n	8008d76 <TIM_TI1_SetConfig+0x66>
 8008d6e:	68fb      	ldr	r3, [r7, #12]
 8008d70:	4a20      	ldr	r2, [pc, #128]	; (8008df4 <TIM_TI1_SetConfig+0xe4>)
 8008d72:	4293      	cmp	r3, r2
 8008d74:	d101      	bne.n	8008d7a <TIM_TI1_SetConfig+0x6a>
 8008d76:	2301      	movs	r3, #1
 8008d78:	e000      	b.n	8008d7c <TIM_TI1_SetConfig+0x6c>
 8008d7a:	2300      	movs	r3, #0
 8008d7c:	2b00      	cmp	r3, #0
 8008d7e:	d008      	beq.n	8008d92 <TIM_TI1_SetConfig+0x82>
 8008d80:	697b      	ldr	r3, [r7, #20]
 8008d82:	f023 0303 	bic.w	r3, r3, #3
 8008d86:	617b      	str	r3, [r7, #20]
 8008d88:	697a      	ldr	r2, [r7, #20]
 8008d8a:	687b      	ldr	r3, [r7, #4]
 8008d8c:	4313      	orrs	r3, r2
 8008d8e:	617b      	str	r3, [r7, #20]
 8008d90:	e003      	b.n	8008d9a <TIM_TI1_SetConfig+0x8a>
 8008d92:	697b      	ldr	r3, [r7, #20]
 8008d94:	f043 0301 	orr.w	r3, r3, #1
 8008d98:	617b      	str	r3, [r7, #20]
 8008d9a:	697b      	ldr	r3, [r7, #20]
 8008d9c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8008da0:	617b      	str	r3, [r7, #20]
 8008da2:	683b      	ldr	r3, [r7, #0]
 8008da4:	011b      	lsls	r3, r3, #4
 8008da6:	b2db      	uxtb	r3, r3
 8008da8:	697a      	ldr	r2, [r7, #20]
 8008daa:	4313      	orrs	r3, r2
 8008dac:	617b      	str	r3, [r7, #20]
 8008dae:	693b      	ldr	r3, [r7, #16]
 8008db0:	f023 030a 	bic.w	r3, r3, #10
 8008db4:	613b      	str	r3, [r7, #16]
 8008db6:	68bb      	ldr	r3, [r7, #8]
 8008db8:	f003 030a 	and.w	r3, r3, #10
 8008dbc:	693a      	ldr	r2, [r7, #16]
 8008dbe:	4313      	orrs	r3, r2
 8008dc0:	613b      	str	r3, [r7, #16]
 8008dc2:	68fb      	ldr	r3, [r7, #12]
 8008dc4:	697a      	ldr	r2, [r7, #20]
 8008dc6:	619a      	str	r2, [r3, #24]
 8008dc8:	68fb      	ldr	r3, [r7, #12]
 8008dca:	693a      	ldr	r2, [r7, #16]
 8008dcc:	621a      	str	r2, [r3, #32]
 8008dce:	bf00      	nop
 8008dd0:	371c      	adds	r7, #28
 8008dd2:	46bd      	mov	sp, r7
 8008dd4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008dd8:	4770      	bx	lr
 8008dda:	bf00      	nop
 8008ddc:	40010000 	.word	0x40010000
 8008de0:	40000400 	.word	0x40000400
 8008de4:	40000800 	.word	0x40000800
 8008de8:	40000c00 	.word	0x40000c00
 8008dec:	40010400 	.word	0x40010400
 8008df0:	40014000 	.word	0x40014000
 8008df4:	40001800 	.word	0x40001800

08008df8 <TIM_TI1_ConfigInputStage>:
 8008df8:	b480      	push	{r7}
 8008dfa:	b087      	sub	sp, #28
 8008dfc:	af00      	add	r7, sp, #0
 8008dfe:	60f8      	str	r0, [r7, #12]
 8008e00:	60b9      	str	r1, [r7, #8]
 8008e02:	607a      	str	r2, [r7, #4]
 8008e04:	68fb      	ldr	r3, [r7, #12]
 8008e06:	6a1b      	ldr	r3, [r3, #32]
 8008e08:	617b      	str	r3, [r7, #20]
 8008e0a:	68fb      	ldr	r3, [r7, #12]
 8008e0c:	6a1b      	ldr	r3, [r3, #32]
 8008e0e:	f023 0201 	bic.w	r2, r3, #1
 8008e12:	68fb      	ldr	r3, [r7, #12]
 8008e14:	621a      	str	r2, [r3, #32]
 8008e16:	68fb      	ldr	r3, [r7, #12]
 8008e18:	699b      	ldr	r3, [r3, #24]
 8008e1a:	613b      	str	r3, [r7, #16]
 8008e1c:	693b      	ldr	r3, [r7, #16]
 8008e1e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8008e22:	613b      	str	r3, [r7, #16]
 8008e24:	687b      	ldr	r3, [r7, #4]
 8008e26:	011b      	lsls	r3, r3, #4
 8008e28:	693a      	ldr	r2, [r7, #16]
 8008e2a:	4313      	orrs	r3, r2
 8008e2c:	613b      	str	r3, [r7, #16]
 8008e2e:	697b      	ldr	r3, [r7, #20]
 8008e30:	f023 030a 	bic.w	r3, r3, #10
 8008e34:	617b      	str	r3, [r7, #20]
 8008e36:	697a      	ldr	r2, [r7, #20]
 8008e38:	68bb      	ldr	r3, [r7, #8]
 8008e3a:	4313      	orrs	r3, r2
 8008e3c:	617b      	str	r3, [r7, #20]
 8008e3e:	68fb      	ldr	r3, [r7, #12]
 8008e40:	693a      	ldr	r2, [r7, #16]
 8008e42:	619a      	str	r2, [r3, #24]
 8008e44:	68fb      	ldr	r3, [r7, #12]
 8008e46:	697a      	ldr	r2, [r7, #20]
 8008e48:	621a      	str	r2, [r3, #32]
 8008e4a:	bf00      	nop
 8008e4c:	371c      	adds	r7, #28
 8008e4e:	46bd      	mov	sp, r7
 8008e50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e54:	4770      	bx	lr

08008e56 <TIM_TI2_SetConfig>:
 8008e56:	b480      	push	{r7}
 8008e58:	b087      	sub	sp, #28
 8008e5a:	af00      	add	r7, sp, #0
 8008e5c:	60f8      	str	r0, [r7, #12]
 8008e5e:	60b9      	str	r1, [r7, #8]
 8008e60:	607a      	str	r2, [r7, #4]
 8008e62:	603b      	str	r3, [r7, #0]
 8008e64:	68fb      	ldr	r3, [r7, #12]
 8008e66:	6a1b      	ldr	r3, [r3, #32]
 8008e68:	617b      	str	r3, [r7, #20]
 8008e6a:	68fb      	ldr	r3, [r7, #12]
 8008e6c:	6a1b      	ldr	r3, [r3, #32]
 8008e6e:	f023 0210 	bic.w	r2, r3, #16
 8008e72:	68fb      	ldr	r3, [r7, #12]
 8008e74:	621a      	str	r2, [r3, #32]
 8008e76:	68fb      	ldr	r3, [r7, #12]
 8008e78:	699b      	ldr	r3, [r3, #24]
 8008e7a:	613b      	str	r3, [r7, #16]
 8008e7c:	693b      	ldr	r3, [r7, #16]
 8008e7e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008e82:	613b      	str	r3, [r7, #16]
 8008e84:	687b      	ldr	r3, [r7, #4]
 8008e86:	021b      	lsls	r3, r3, #8
 8008e88:	693a      	ldr	r2, [r7, #16]
 8008e8a:	4313      	orrs	r3, r2
 8008e8c:	613b      	str	r3, [r7, #16]
 8008e8e:	693b      	ldr	r3, [r7, #16]
 8008e90:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8008e94:	613b      	str	r3, [r7, #16]
 8008e96:	683b      	ldr	r3, [r7, #0]
 8008e98:	031b      	lsls	r3, r3, #12
 8008e9a:	b29b      	uxth	r3, r3
 8008e9c:	693a      	ldr	r2, [r7, #16]
 8008e9e:	4313      	orrs	r3, r2
 8008ea0:	613b      	str	r3, [r7, #16]
 8008ea2:	697b      	ldr	r3, [r7, #20]
 8008ea4:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8008ea8:	617b      	str	r3, [r7, #20]
 8008eaa:	68bb      	ldr	r3, [r7, #8]
 8008eac:	011b      	lsls	r3, r3, #4
 8008eae:	f003 03a0 	and.w	r3, r3, #160	; 0xa0
 8008eb2:	697a      	ldr	r2, [r7, #20]
 8008eb4:	4313      	orrs	r3, r2
 8008eb6:	617b      	str	r3, [r7, #20]
 8008eb8:	68fb      	ldr	r3, [r7, #12]
 8008eba:	693a      	ldr	r2, [r7, #16]
 8008ebc:	619a      	str	r2, [r3, #24]
 8008ebe:	68fb      	ldr	r3, [r7, #12]
 8008ec0:	697a      	ldr	r2, [r7, #20]
 8008ec2:	621a      	str	r2, [r3, #32]
 8008ec4:	bf00      	nop
 8008ec6:	371c      	adds	r7, #28
 8008ec8:	46bd      	mov	sp, r7
 8008eca:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ece:	4770      	bx	lr

08008ed0 <TIM_TI2_ConfigInputStage>:
 8008ed0:	b480      	push	{r7}
 8008ed2:	b087      	sub	sp, #28
 8008ed4:	af00      	add	r7, sp, #0
 8008ed6:	60f8      	str	r0, [r7, #12]
 8008ed8:	60b9      	str	r1, [r7, #8]
 8008eda:	607a      	str	r2, [r7, #4]
 8008edc:	68fb      	ldr	r3, [r7, #12]
 8008ede:	6a1b      	ldr	r3, [r3, #32]
 8008ee0:	617b      	str	r3, [r7, #20]
 8008ee2:	68fb      	ldr	r3, [r7, #12]
 8008ee4:	6a1b      	ldr	r3, [r3, #32]
 8008ee6:	f023 0210 	bic.w	r2, r3, #16
 8008eea:	68fb      	ldr	r3, [r7, #12]
 8008eec:	621a      	str	r2, [r3, #32]
 8008eee:	68fb      	ldr	r3, [r7, #12]
 8008ef0:	699b      	ldr	r3, [r3, #24]
 8008ef2:	613b      	str	r3, [r7, #16]
 8008ef4:	693b      	ldr	r3, [r7, #16]
 8008ef6:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8008efa:	613b      	str	r3, [r7, #16]
 8008efc:	687b      	ldr	r3, [r7, #4]
 8008efe:	031b      	lsls	r3, r3, #12
 8008f00:	693a      	ldr	r2, [r7, #16]
 8008f02:	4313      	orrs	r3, r2
 8008f04:	613b      	str	r3, [r7, #16]
 8008f06:	697b      	ldr	r3, [r7, #20]
 8008f08:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 8008f0c:	617b      	str	r3, [r7, #20]
 8008f0e:	68bb      	ldr	r3, [r7, #8]
 8008f10:	011b      	lsls	r3, r3, #4
 8008f12:	697a      	ldr	r2, [r7, #20]
 8008f14:	4313      	orrs	r3, r2
 8008f16:	617b      	str	r3, [r7, #20]
 8008f18:	68fb      	ldr	r3, [r7, #12]
 8008f1a:	693a      	ldr	r2, [r7, #16]
 8008f1c:	619a      	str	r2, [r3, #24]
 8008f1e:	68fb      	ldr	r3, [r7, #12]
 8008f20:	697a      	ldr	r2, [r7, #20]
 8008f22:	621a      	str	r2, [r3, #32]
 8008f24:	bf00      	nop
 8008f26:	371c      	adds	r7, #28
 8008f28:	46bd      	mov	sp, r7
 8008f2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f2e:	4770      	bx	lr

08008f30 <TIM_TI3_SetConfig>:
 8008f30:	b480      	push	{r7}
 8008f32:	b087      	sub	sp, #28
 8008f34:	af00      	add	r7, sp, #0
 8008f36:	60f8      	str	r0, [r7, #12]
 8008f38:	60b9      	str	r1, [r7, #8]
 8008f3a:	607a      	str	r2, [r7, #4]
 8008f3c:	603b      	str	r3, [r7, #0]
 8008f3e:	68fb      	ldr	r3, [r7, #12]
 8008f40:	6a1b      	ldr	r3, [r3, #32]
 8008f42:	617b      	str	r3, [r7, #20]
 8008f44:	68fb      	ldr	r3, [r7, #12]
 8008f46:	6a1b      	ldr	r3, [r3, #32]
 8008f48:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8008f4c:	68fb      	ldr	r3, [r7, #12]
 8008f4e:	621a      	str	r2, [r3, #32]
 8008f50:	68fb      	ldr	r3, [r7, #12]
 8008f52:	69db      	ldr	r3, [r3, #28]
 8008f54:	613b      	str	r3, [r7, #16]
 8008f56:	693b      	ldr	r3, [r7, #16]
 8008f58:	f023 0303 	bic.w	r3, r3, #3
 8008f5c:	613b      	str	r3, [r7, #16]
 8008f5e:	693a      	ldr	r2, [r7, #16]
 8008f60:	687b      	ldr	r3, [r7, #4]
 8008f62:	4313      	orrs	r3, r2
 8008f64:	613b      	str	r3, [r7, #16]
 8008f66:	693b      	ldr	r3, [r7, #16]
 8008f68:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8008f6c:	613b      	str	r3, [r7, #16]
 8008f6e:	683b      	ldr	r3, [r7, #0]
 8008f70:	011b      	lsls	r3, r3, #4
 8008f72:	b2db      	uxtb	r3, r3
 8008f74:	693a      	ldr	r2, [r7, #16]
 8008f76:	4313      	orrs	r3, r2
 8008f78:	613b      	str	r3, [r7, #16]
 8008f7a:	697b      	ldr	r3, [r7, #20]
 8008f7c:	f423 6320 	bic.w	r3, r3, #2560	; 0xa00
 8008f80:	617b      	str	r3, [r7, #20]
 8008f82:	68bb      	ldr	r3, [r7, #8]
 8008f84:	021b      	lsls	r3, r3, #8
 8008f86:	f403 6320 	and.w	r3, r3, #2560	; 0xa00
 8008f8a:	697a      	ldr	r2, [r7, #20]
 8008f8c:	4313      	orrs	r3, r2
 8008f8e:	617b      	str	r3, [r7, #20]
 8008f90:	68fb      	ldr	r3, [r7, #12]
 8008f92:	693a      	ldr	r2, [r7, #16]
 8008f94:	61da      	str	r2, [r3, #28]
 8008f96:	68fb      	ldr	r3, [r7, #12]
 8008f98:	697a      	ldr	r2, [r7, #20]
 8008f9a:	621a      	str	r2, [r3, #32]
 8008f9c:	bf00      	nop
 8008f9e:	371c      	adds	r7, #28
 8008fa0:	46bd      	mov	sp, r7
 8008fa2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008fa6:	4770      	bx	lr

08008fa8 <TIM_TI4_SetConfig>:
 8008fa8:	b480      	push	{r7}
 8008faa:	b087      	sub	sp, #28
 8008fac:	af00      	add	r7, sp, #0
 8008fae:	60f8      	str	r0, [r7, #12]
 8008fb0:	60b9      	str	r1, [r7, #8]
 8008fb2:	607a      	str	r2, [r7, #4]
 8008fb4:	603b      	str	r3, [r7, #0]
 8008fb6:	68fb      	ldr	r3, [r7, #12]
 8008fb8:	6a1b      	ldr	r3, [r3, #32]
 8008fba:	617b      	str	r3, [r7, #20]
 8008fbc:	68fb      	ldr	r3, [r7, #12]
 8008fbe:	6a1b      	ldr	r3, [r3, #32]
 8008fc0:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8008fc4:	68fb      	ldr	r3, [r7, #12]
 8008fc6:	621a      	str	r2, [r3, #32]
 8008fc8:	68fb      	ldr	r3, [r7, #12]
 8008fca:	69db      	ldr	r3, [r3, #28]
 8008fcc:	613b      	str	r3, [r7, #16]
 8008fce:	693b      	ldr	r3, [r7, #16]
 8008fd0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008fd4:	613b      	str	r3, [r7, #16]
 8008fd6:	687b      	ldr	r3, [r7, #4]
 8008fd8:	021b      	lsls	r3, r3, #8
 8008fda:	693a      	ldr	r2, [r7, #16]
 8008fdc:	4313      	orrs	r3, r2
 8008fde:	613b      	str	r3, [r7, #16]
 8008fe0:	693b      	ldr	r3, [r7, #16]
 8008fe2:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8008fe6:	613b      	str	r3, [r7, #16]
 8008fe8:	683b      	ldr	r3, [r7, #0]
 8008fea:	031b      	lsls	r3, r3, #12
 8008fec:	b29b      	uxth	r3, r3
 8008fee:	693a      	ldr	r2, [r7, #16]
 8008ff0:	4313      	orrs	r3, r2
 8008ff2:	613b      	str	r3, [r7, #16]
 8008ff4:	697b      	ldr	r3, [r7, #20]
 8008ff6:	f423 4320 	bic.w	r3, r3, #40960	; 0xa000
 8008ffa:	617b      	str	r3, [r7, #20]
 8008ffc:	68bb      	ldr	r3, [r7, #8]
 8008ffe:	031b      	lsls	r3, r3, #12
 8009000:	f403 4320 	and.w	r3, r3, #40960	; 0xa000
 8009004:	697a      	ldr	r2, [r7, #20]
 8009006:	4313      	orrs	r3, r2
 8009008:	617b      	str	r3, [r7, #20]
 800900a:	68fb      	ldr	r3, [r7, #12]
 800900c:	693a      	ldr	r2, [r7, #16]
 800900e:	61da      	str	r2, [r3, #28]
 8009010:	68fb      	ldr	r3, [r7, #12]
 8009012:	697a      	ldr	r2, [r7, #20]
 8009014:	621a      	str	r2, [r3, #32]
 8009016:	bf00      	nop
 8009018:	371c      	adds	r7, #28
 800901a:	46bd      	mov	sp, r7
 800901c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009020:	4770      	bx	lr

08009022 <TIM_ITRx_SetConfig>:
 8009022:	b480      	push	{r7}
 8009024:	b085      	sub	sp, #20
 8009026:	af00      	add	r7, sp, #0
 8009028:	6078      	str	r0, [r7, #4]
 800902a:	6039      	str	r1, [r7, #0]
 800902c:	687b      	ldr	r3, [r7, #4]
 800902e:	689b      	ldr	r3, [r3, #8]
 8009030:	60fb      	str	r3, [r7, #12]
 8009032:	68fb      	ldr	r3, [r7, #12]
 8009034:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009038:	60fb      	str	r3, [r7, #12]
 800903a:	683a      	ldr	r2, [r7, #0]
 800903c:	68fb      	ldr	r3, [r7, #12]
 800903e:	4313      	orrs	r3, r2
 8009040:	f043 0307 	orr.w	r3, r3, #7
 8009044:	60fb      	str	r3, [r7, #12]
 8009046:	687b      	ldr	r3, [r7, #4]
 8009048:	68fa      	ldr	r2, [r7, #12]
 800904a:	609a      	str	r2, [r3, #8]
 800904c:	bf00      	nop
 800904e:	3714      	adds	r7, #20
 8009050:	46bd      	mov	sp, r7
 8009052:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009056:	4770      	bx	lr

08009058 <TIM_ETR_SetConfig>:
 8009058:	b480      	push	{r7}
 800905a:	b087      	sub	sp, #28
 800905c:	af00      	add	r7, sp, #0
 800905e:	60f8      	str	r0, [r7, #12]
 8009060:	60b9      	str	r1, [r7, #8]
 8009062:	607a      	str	r2, [r7, #4]
 8009064:	603b      	str	r3, [r7, #0]
 8009066:	68fb      	ldr	r3, [r7, #12]
 8009068:	689b      	ldr	r3, [r3, #8]
 800906a:	617b      	str	r3, [r7, #20]
 800906c:	697b      	ldr	r3, [r7, #20]
 800906e:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8009072:	617b      	str	r3, [r7, #20]
 8009074:	683b      	ldr	r3, [r7, #0]
 8009076:	021a      	lsls	r2, r3, #8
 8009078:	687b      	ldr	r3, [r7, #4]
 800907a:	431a      	orrs	r2, r3
 800907c:	68bb      	ldr	r3, [r7, #8]
 800907e:	4313      	orrs	r3, r2
 8009080:	697a      	ldr	r2, [r7, #20]
 8009082:	4313      	orrs	r3, r2
 8009084:	617b      	str	r3, [r7, #20]
 8009086:	68fb      	ldr	r3, [r7, #12]
 8009088:	697a      	ldr	r2, [r7, #20]
 800908a:	609a      	str	r2, [r3, #8]
 800908c:	bf00      	nop
 800908e:	371c      	adds	r7, #28
 8009090:	46bd      	mov	sp, r7
 8009092:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009096:	4770      	bx	lr

08009098 <TIM_CCxChannelCmd>:
 8009098:	b480      	push	{r7}
 800909a:	b087      	sub	sp, #28
 800909c:	af00      	add	r7, sp, #0
 800909e:	60f8      	str	r0, [r7, #12]
 80090a0:	60b9      	str	r1, [r7, #8]
 80090a2:	607a      	str	r2, [r7, #4]
 80090a4:	68bb      	ldr	r3, [r7, #8]
 80090a6:	f003 031f 	and.w	r3, r3, #31
 80090aa:	2201      	movs	r2, #1
 80090ac:	fa02 f303 	lsl.w	r3, r2, r3
 80090b0:	617b      	str	r3, [r7, #20]
 80090b2:	68fb      	ldr	r3, [r7, #12]
 80090b4:	6a1a      	ldr	r2, [r3, #32]
 80090b6:	697b      	ldr	r3, [r7, #20]
 80090b8:	43db      	mvns	r3, r3
 80090ba:	401a      	ands	r2, r3
 80090bc:	68fb      	ldr	r3, [r7, #12]
 80090be:	621a      	str	r2, [r3, #32]
 80090c0:	68fb      	ldr	r3, [r7, #12]
 80090c2:	6a1a      	ldr	r2, [r3, #32]
 80090c4:	68bb      	ldr	r3, [r7, #8]
 80090c6:	f003 031f 	and.w	r3, r3, #31
 80090ca:	6879      	ldr	r1, [r7, #4]
 80090cc:	fa01 f303 	lsl.w	r3, r1, r3
 80090d0:	431a      	orrs	r2, r3
 80090d2:	68fb      	ldr	r3, [r7, #12]
 80090d4:	621a      	str	r2, [r3, #32]
 80090d6:	bf00      	nop
 80090d8:	371c      	adds	r7, #28
 80090da:	46bd      	mov	sp, r7
 80090dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090e0:	4770      	bx	lr
	...

080090e4 <HAL_TIMEx_MasterConfigSynchronization>:
 80090e4:	b480      	push	{r7}
 80090e6:	b085      	sub	sp, #20
 80090e8:	af00      	add	r7, sp, #0
 80090ea:	6078      	str	r0, [r7, #4]
 80090ec:	6039      	str	r1, [r7, #0]
 80090ee:	687b      	ldr	r3, [r7, #4]
 80090f0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80090f4:	2b01      	cmp	r3, #1
 80090f6:	d101      	bne.n	80090fc <HAL_TIMEx_MasterConfigSynchronization+0x18>
 80090f8:	2302      	movs	r3, #2
 80090fa:	e05a      	b.n	80091b2 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 80090fc:	687b      	ldr	r3, [r7, #4]
 80090fe:	2201      	movs	r2, #1
 8009100:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009104:	687b      	ldr	r3, [r7, #4]
 8009106:	2202      	movs	r2, #2
 8009108:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800910c:	687b      	ldr	r3, [r7, #4]
 800910e:	681b      	ldr	r3, [r3, #0]
 8009110:	685b      	ldr	r3, [r3, #4]
 8009112:	60fb      	str	r3, [r7, #12]
 8009114:	687b      	ldr	r3, [r7, #4]
 8009116:	681b      	ldr	r3, [r3, #0]
 8009118:	689b      	ldr	r3, [r3, #8]
 800911a:	60bb      	str	r3, [r7, #8]
 800911c:	68fb      	ldr	r3, [r7, #12]
 800911e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8009122:	60fb      	str	r3, [r7, #12]
 8009124:	683b      	ldr	r3, [r7, #0]
 8009126:	681b      	ldr	r3, [r3, #0]
 8009128:	68fa      	ldr	r2, [r7, #12]
 800912a:	4313      	orrs	r3, r2
 800912c:	60fb      	str	r3, [r7, #12]
 800912e:	687b      	ldr	r3, [r7, #4]
 8009130:	681b      	ldr	r3, [r3, #0]
 8009132:	68fa      	ldr	r2, [r7, #12]
 8009134:	605a      	str	r2, [r3, #4]
 8009136:	687b      	ldr	r3, [r7, #4]
 8009138:	681b      	ldr	r3, [r3, #0]
 800913a:	4a21      	ldr	r2, [pc, #132]	; (80091c0 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 800913c:	4293      	cmp	r3, r2
 800913e:	d022      	beq.n	8009186 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8009140:	687b      	ldr	r3, [r7, #4]
 8009142:	681b      	ldr	r3, [r3, #0]
 8009144:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009148:	d01d      	beq.n	8009186 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800914a:	687b      	ldr	r3, [r7, #4]
 800914c:	681b      	ldr	r3, [r3, #0]
 800914e:	4a1d      	ldr	r2, [pc, #116]	; (80091c4 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8009150:	4293      	cmp	r3, r2
 8009152:	d018      	beq.n	8009186 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8009154:	687b      	ldr	r3, [r7, #4]
 8009156:	681b      	ldr	r3, [r3, #0]
 8009158:	4a1b      	ldr	r2, [pc, #108]	; (80091c8 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 800915a:	4293      	cmp	r3, r2
 800915c:	d013      	beq.n	8009186 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800915e:	687b      	ldr	r3, [r7, #4]
 8009160:	681b      	ldr	r3, [r3, #0]
 8009162:	4a1a      	ldr	r2, [pc, #104]	; (80091cc <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8009164:	4293      	cmp	r3, r2
 8009166:	d00e      	beq.n	8009186 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8009168:	687b      	ldr	r3, [r7, #4]
 800916a:	681b      	ldr	r3, [r3, #0]
 800916c:	4a18      	ldr	r2, [pc, #96]	; (80091d0 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 800916e:	4293      	cmp	r3, r2
 8009170:	d009      	beq.n	8009186 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8009172:	687b      	ldr	r3, [r7, #4]
 8009174:	681b      	ldr	r3, [r3, #0]
 8009176:	4a17      	ldr	r2, [pc, #92]	; (80091d4 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8009178:	4293      	cmp	r3, r2
 800917a:	d004      	beq.n	8009186 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800917c:	687b      	ldr	r3, [r7, #4]
 800917e:	681b      	ldr	r3, [r3, #0]
 8009180:	4a15      	ldr	r2, [pc, #84]	; (80091d8 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8009182:	4293      	cmp	r3, r2
 8009184:	d10c      	bne.n	80091a0 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 8009186:	68bb      	ldr	r3, [r7, #8]
 8009188:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800918c:	60bb      	str	r3, [r7, #8]
 800918e:	683b      	ldr	r3, [r7, #0]
 8009190:	685b      	ldr	r3, [r3, #4]
 8009192:	68ba      	ldr	r2, [r7, #8]
 8009194:	4313      	orrs	r3, r2
 8009196:	60bb      	str	r3, [r7, #8]
 8009198:	687b      	ldr	r3, [r7, #4]
 800919a:	681b      	ldr	r3, [r3, #0]
 800919c:	68ba      	ldr	r2, [r7, #8]
 800919e:	609a      	str	r2, [r3, #8]
 80091a0:	687b      	ldr	r3, [r7, #4]
 80091a2:	2201      	movs	r2, #1
 80091a4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80091a8:	687b      	ldr	r3, [r7, #4]
 80091aa:	2200      	movs	r2, #0
 80091ac:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80091b0:	2300      	movs	r3, #0
 80091b2:	4618      	mov	r0, r3
 80091b4:	3714      	adds	r7, #20
 80091b6:	46bd      	mov	sp, r7
 80091b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80091bc:	4770      	bx	lr
 80091be:	bf00      	nop
 80091c0:	40010000 	.word	0x40010000
 80091c4:	40000400 	.word	0x40000400
 80091c8:	40000800 	.word	0x40000800
 80091cc:	40000c00 	.word	0x40000c00
 80091d0:	40010400 	.word	0x40010400
 80091d4:	40014000 	.word	0x40014000
 80091d8:	40001800 	.word	0x40001800

080091dc <HAL_TIMEx_ConfigBreakDeadTime>:
 80091dc:	b480      	push	{r7}
 80091de:	b085      	sub	sp, #20
 80091e0:	af00      	add	r7, sp, #0
 80091e2:	6078      	str	r0, [r7, #4]
 80091e4:	6039      	str	r1, [r7, #0]
 80091e6:	2300      	movs	r3, #0
 80091e8:	60fb      	str	r3, [r7, #12]
 80091ea:	687b      	ldr	r3, [r7, #4]
 80091ec:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80091f0:	2b01      	cmp	r3, #1
 80091f2:	d101      	bne.n	80091f8 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 80091f4:	2302      	movs	r3, #2
 80091f6:	e03d      	b.n	8009274 <HAL_TIMEx_ConfigBreakDeadTime+0x98>
 80091f8:	687b      	ldr	r3, [r7, #4]
 80091fa:	2201      	movs	r2, #1
 80091fc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009200:	68fb      	ldr	r3, [r7, #12]
 8009202:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 8009206:	683b      	ldr	r3, [r7, #0]
 8009208:	68db      	ldr	r3, [r3, #12]
 800920a:	4313      	orrs	r3, r2
 800920c:	60fb      	str	r3, [r7, #12]
 800920e:	68fb      	ldr	r3, [r7, #12]
 8009210:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8009214:	683b      	ldr	r3, [r7, #0]
 8009216:	689b      	ldr	r3, [r3, #8]
 8009218:	4313      	orrs	r3, r2
 800921a:	60fb      	str	r3, [r7, #12]
 800921c:	68fb      	ldr	r3, [r7, #12]
 800921e:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 8009222:	683b      	ldr	r3, [r7, #0]
 8009224:	685b      	ldr	r3, [r3, #4]
 8009226:	4313      	orrs	r3, r2
 8009228:	60fb      	str	r3, [r7, #12]
 800922a:	68fb      	ldr	r3, [r7, #12]
 800922c:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 8009230:	683b      	ldr	r3, [r7, #0]
 8009232:	681b      	ldr	r3, [r3, #0]
 8009234:	4313      	orrs	r3, r2
 8009236:	60fb      	str	r3, [r7, #12]
 8009238:	68fb      	ldr	r3, [r7, #12]
 800923a:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800923e:	683b      	ldr	r3, [r7, #0]
 8009240:	691b      	ldr	r3, [r3, #16]
 8009242:	4313      	orrs	r3, r2
 8009244:	60fb      	str	r3, [r7, #12]
 8009246:	68fb      	ldr	r3, [r7, #12]
 8009248:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 800924c:	683b      	ldr	r3, [r7, #0]
 800924e:	695b      	ldr	r3, [r3, #20]
 8009250:	4313      	orrs	r3, r2
 8009252:	60fb      	str	r3, [r7, #12]
 8009254:	68fb      	ldr	r3, [r7, #12]
 8009256:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 800925a:	683b      	ldr	r3, [r7, #0]
 800925c:	69db      	ldr	r3, [r3, #28]
 800925e:	4313      	orrs	r3, r2
 8009260:	60fb      	str	r3, [r7, #12]
 8009262:	687b      	ldr	r3, [r7, #4]
 8009264:	681b      	ldr	r3, [r3, #0]
 8009266:	68fa      	ldr	r2, [r7, #12]
 8009268:	645a      	str	r2, [r3, #68]	; 0x44
 800926a:	687b      	ldr	r3, [r7, #4]
 800926c:	2200      	movs	r2, #0
 800926e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8009272:	2300      	movs	r3, #0
 8009274:	4618      	mov	r0, r3
 8009276:	3714      	adds	r7, #20
 8009278:	46bd      	mov	sp, r7
 800927a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800927e:	4770      	bx	lr

08009280 <HAL_TIMEx_CommutCallback>:
 8009280:	b480      	push	{r7}
 8009282:	b083      	sub	sp, #12
 8009284:	af00      	add	r7, sp, #0
 8009286:	6078      	str	r0, [r7, #4]
 8009288:	bf00      	nop
 800928a:	370c      	adds	r7, #12
 800928c:	46bd      	mov	sp, r7
 800928e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009292:	4770      	bx	lr

08009294 <HAL_TIMEx_BreakCallback>:
 8009294:	b480      	push	{r7}
 8009296:	b083      	sub	sp, #12
 8009298:	af00      	add	r7, sp, #0
 800929a:	6078      	str	r0, [r7, #4]
 800929c:	bf00      	nop
 800929e:	370c      	adds	r7, #12
 80092a0:	46bd      	mov	sp, r7
 80092a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80092a6:	4770      	bx	lr

080092a8 <HAL_UART_Init>:
 80092a8:	b580      	push	{r7, lr}
 80092aa:	b082      	sub	sp, #8
 80092ac:	af00      	add	r7, sp, #0
 80092ae:	6078      	str	r0, [r7, #4]
 80092b0:	687b      	ldr	r3, [r7, #4]
 80092b2:	2b00      	cmp	r3, #0
 80092b4:	d101      	bne.n	80092ba <HAL_UART_Init+0x12>
 80092b6:	2301      	movs	r3, #1
 80092b8:	e042      	b.n	8009340 <HAL_UART_Init+0x98>
 80092ba:	687b      	ldr	r3, [r7, #4]
 80092bc:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80092c0:	b2db      	uxtb	r3, r3
 80092c2:	2b00      	cmp	r3, #0
 80092c4:	d106      	bne.n	80092d4 <HAL_UART_Init+0x2c>
 80092c6:	687b      	ldr	r3, [r7, #4]
 80092c8:	2200      	movs	r2, #0
 80092ca:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80092ce:	6878      	ldr	r0, [r7, #4]
 80092d0:	f7fb fc26 	bl	8004b20 <HAL_UART_MspInit>
 80092d4:	687b      	ldr	r3, [r7, #4]
 80092d6:	2224      	movs	r2, #36	; 0x24
 80092d8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80092dc:	687b      	ldr	r3, [r7, #4]
 80092de:	681b      	ldr	r3, [r3, #0]
 80092e0:	68da      	ldr	r2, [r3, #12]
 80092e2:	687b      	ldr	r3, [r7, #4]
 80092e4:	681b      	ldr	r3, [r3, #0]
 80092e6:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80092ea:	60da      	str	r2, [r3, #12]
 80092ec:	6878      	ldr	r0, [r7, #4]
 80092ee:	f000 fdbd 	bl	8009e6c <UART_SetConfig>
 80092f2:	687b      	ldr	r3, [r7, #4]
 80092f4:	681b      	ldr	r3, [r3, #0]
 80092f6:	691a      	ldr	r2, [r3, #16]
 80092f8:	687b      	ldr	r3, [r7, #4]
 80092fa:	681b      	ldr	r3, [r3, #0]
 80092fc:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8009300:	611a      	str	r2, [r3, #16]
 8009302:	687b      	ldr	r3, [r7, #4]
 8009304:	681b      	ldr	r3, [r3, #0]
 8009306:	695a      	ldr	r2, [r3, #20]
 8009308:	687b      	ldr	r3, [r7, #4]
 800930a:	681b      	ldr	r3, [r3, #0]
 800930c:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8009310:	615a      	str	r2, [r3, #20]
 8009312:	687b      	ldr	r3, [r7, #4]
 8009314:	681b      	ldr	r3, [r3, #0]
 8009316:	68da      	ldr	r2, [r3, #12]
 8009318:	687b      	ldr	r3, [r7, #4]
 800931a:	681b      	ldr	r3, [r3, #0]
 800931c:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8009320:	60da      	str	r2, [r3, #12]
 8009322:	687b      	ldr	r3, [r7, #4]
 8009324:	2200      	movs	r2, #0
 8009326:	645a      	str	r2, [r3, #68]	; 0x44
 8009328:	687b      	ldr	r3, [r7, #4]
 800932a:	2220      	movs	r2, #32
 800932c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8009330:	687b      	ldr	r3, [r7, #4]
 8009332:	2220      	movs	r2, #32
 8009334:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8009338:	687b      	ldr	r3, [r7, #4]
 800933a:	2200      	movs	r2, #0
 800933c:	635a      	str	r2, [r3, #52]	; 0x34
 800933e:	2300      	movs	r3, #0
 8009340:	4618      	mov	r0, r3
 8009342:	3708      	adds	r7, #8
 8009344:	46bd      	mov	sp, r7
 8009346:	bd80      	pop	{r7, pc}

08009348 <HAL_UART_Transmit>:
 8009348:	b580      	push	{r7, lr}
 800934a:	b08a      	sub	sp, #40	; 0x28
 800934c:	af02      	add	r7, sp, #8
 800934e:	60f8      	str	r0, [r7, #12]
 8009350:	60b9      	str	r1, [r7, #8]
 8009352:	603b      	str	r3, [r7, #0]
 8009354:	4613      	mov	r3, r2
 8009356:	80fb      	strh	r3, [r7, #6]
 8009358:	2300      	movs	r3, #0
 800935a:	617b      	str	r3, [r7, #20]
 800935c:	68fb      	ldr	r3, [r7, #12]
 800935e:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8009362:	b2db      	uxtb	r3, r3
 8009364:	2b20      	cmp	r3, #32
 8009366:	d175      	bne.n	8009454 <HAL_UART_Transmit+0x10c>
 8009368:	68bb      	ldr	r3, [r7, #8]
 800936a:	2b00      	cmp	r3, #0
 800936c:	d002      	beq.n	8009374 <HAL_UART_Transmit+0x2c>
 800936e:	88fb      	ldrh	r3, [r7, #6]
 8009370:	2b00      	cmp	r3, #0
 8009372:	d101      	bne.n	8009378 <HAL_UART_Transmit+0x30>
 8009374:	2301      	movs	r3, #1
 8009376:	e06e      	b.n	8009456 <HAL_UART_Transmit+0x10e>
 8009378:	68fb      	ldr	r3, [r7, #12]
 800937a:	2200      	movs	r2, #0
 800937c:	645a      	str	r2, [r3, #68]	; 0x44
 800937e:	68fb      	ldr	r3, [r7, #12]
 8009380:	2221      	movs	r2, #33	; 0x21
 8009382:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8009386:	f7fb fdd5 	bl	8004f34 <HAL_GetTick>
 800938a:	6178      	str	r0, [r7, #20]
 800938c:	68fb      	ldr	r3, [r7, #12]
 800938e:	88fa      	ldrh	r2, [r7, #6]
 8009390:	849a      	strh	r2, [r3, #36]	; 0x24
 8009392:	68fb      	ldr	r3, [r7, #12]
 8009394:	88fa      	ldrh	r2, [r7, #6]
 8009396:	84da      	strh	r2, [r3, #38]	; 0x26
 8009398:	68fb      	ldr	r3, [r7, #12]
 800939a:	689b      	ldr	r3, [r3, #8]
 800939c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80093a0:	d108      	bne.n	80093b4 <HAL_UART_Transmit+0x6c>
 80093a2:	68fb      	ldr	r3, [r7, #12]
 80093a4:	691b      	ldr	r3, [r3, #16]
 80093a6:	2b00      	cmp	r3, #0
 80093a8:	d104      	bne.n	80093b4 <HAL_UART_Transmit+0x6c>
 80093aa:	2300      	movs	r3, #0
 80093ac:	61fb      	str	r3, [r7, #28]
 80093ae:	68bb      	ldr	r3, [r7, #8]
 80093b0:	61bb      	str	r3, [r7, #24]
 80093b2:	e003      	b.n	80093bc <HAL_UART_Transmit+0x74>
 80093b4:	68bb      	ldr	r3, [r7, #8]
 80093b6:	61fb      	str	r3, [r7, #28]
 80093b8:	2300      	movs	r3, #0
 80093ba:	61bb      	str	r3, [r7, #24]
 80093bc:	e02e      	b.n	800941c <HAL_UART_Transmit+0xd4>
 80093be:	683b      	ldr	r3, [r7, #0]
 80093c0:	9300      	str	r3, [sp, #0]
 80093c2:	697b      	ldr	r3, [r7, #20]
 80093c4:	2200      	movs	r2, #0
 80093c6:	2180      	movs	r1, #128	; 0x80
 80093c8:	68f8      	ldr	r0, [r7, #12]
 80093ca:	f000 fb1f 	bl	8009a0c <UART_WaitOnFlagUntilTimeout>
 80093ce:	4603      	mov	r3, r0
 80093d0:	2b00      	cmp	r3, #0
 80093d2:	d005      	beq.n	80093e0 <HAL_UART_Transmit+0x98>
 80093d4:	68fb      	ldr	r3, [r7, #12]
 80093d6:	2220      	movs	r2, #32
 80093d8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80093dc:	2303      	movs	r3, #3
 80093de:	e03a      	b.n	8009456 <HAL_UART_Transmit+0x10e>
 80093e0:	69fb      	ldr	r3, [r7, #28]
 80093e2:	2b00      	cmp	r3, #0
 80093e4:	d10b      	bne.n	80093fe <HAL_UART_Transmit+0xb6>
 80093e6:	69bb      	ldr	r3, [r7, #24]
 80093e8:	881b      	ldrh	r3, [r3, #0]
 80093ea:	461a      	mov	r2, r3
 80093ec:	68fb      	ldr	r3, [r7, #12]
 80093ee:	681b      	ldr	r3, [r3, #0]
 80093f0:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80093f4:	605a      	str	r2, [r3, #4]
 80093f6:	69bb      	ldr	r3, [r7, #24]
 80093f8:	3302      	adds	r3, #2
 80093fa:	61bb      	str	r3, [r7, #24]
 80093fc:	e007      	b.n	800940e <HAL_UART_Transmit+0xc6>
 80093fe:	69fb      	ldr	r3, [r7, #28]
 8009400:	781a      	ldrb	r2, [r3, #0]
 8009402:	68fb      	ldr	r3, [r7, #12]
 8009404:	681b      	ldr	r3, [r3, #0]
 8009406:	605a      	str	r2, [r3, #4]
 8009408:	69fb      	ldr	r3, [r7, #28]
 800940a:	3301      	adds	r3, #1
 800940c:	61fb      	str	r3, [r7, #28]
 800940e:	68fb      	ldr	r3, [r7, #12]
 8009410:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8009412:	b29b      	uxth	r3, r3
 8009414:	3b01      	subs	r3, #1
 8009416:	b29a      	uxth	r2, r3
 8009418:	68fb      	ldr	r3, [r7, #12]
 800941a:	84da      	strh	r2, [r3, #38]	; 0x26
 800941c:	68fb      	ldr	r3, [r7, #12]
 800941e:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8009420:	b29b      	uxth	r3, r3
 8009422:	2b00      	cmp	r3, #0
 8009424:	d1cb      	bne.n	80093be <HAL_UART_Transmit+0x76>
 8009426:	683b      	ldr	r3, [r7, #0]
 8009428:	9300      	str	r3, [sp, #0]
 800942a:	697b      	ldr	r3, [r7, #20]
 800942c:	2200      	movs	r2, #0
 800942e:	2140      	movs	r1, #64	; 0x40
 8009430:	68f8      	ldr	r0, [r7, #12]
 8009432:	f000 faeb 	bl	8009a0c <UART_WaitOnFlagUntilTimeout>
 8009436:	4603      	mov	r3, r0
 8009438:	2b00      	cmp	r3, #0
 800943a:	d005      	beq.n	8009448 <HAL_UART_Transmit+0x100>
 800943c:	68fb      	ldr	r3, [r7, #12]
 800943e:	2220      	movs	r2, #32
 8009440:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8009444:	2303      	movs	r3, #3
 8009446:	e006      	b.n	8009456 <HAL_UART_Transmit+0x10e>
 8009448:	68fb      	ldr	r3, [r7, #12]
 800944a:	2220      	movs	r2, #32
 800944c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8009450:	2300      	movs	r3, #0
 8009452:	e000      	b.n	8009456 <HAL_UART_Transmit+0x10e>
 8009454:	2302      	movs	r3, #2
 8009456:	4618      	mov	r0, r3
 8009458:	3720      	adds	r7, #32
 800945a:	46bd      	mov	sp, r7
 800945c:	bd80      	pop	{r7, pc}

0800945e <HAL_UART_Receive_IT>:
 800945e:	b580      	push	{r7, lr}
 8009460:	b084      	sub	sp, #16
 8009462:	af00      	add	r7, sp, #0
 8009464:	60f8      	str	r0, [r7, #12]
 8009466:	60b9      	str	r1, [r7, #8]
 8009468:	4613      	mov	r3, r2
 800946a:	80fb      	strh	r3, [r7, #6]
 800946c:	68fb      	ldr	r3, [r7, #12]
 800946e:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 8009472:	b2db      	uxtb	r3, r3
 8009474:	2b20      	cmp	r3, #32
 8009476:	d112      	bne.n	800949e <HAL_UART_Receive_IT+0x40>
 8009478:	68bb      	ldr	r3, [r7, #8]
 800947a:	2b00      	cmp	r3, #0
 800947c:	d002      	beq.n	8009484 <HAL_UART_Receive_IT+0x26>
 800947e:	88fb      	ldrh	r3, [r7, #6]
 8009480:	2b00      	cmp	r3, #0
 8009482:	d101      	bne.n	8009488 <HAL_UART_Receive_IT+0x2a>
 8009484:	2301      	movs	r3, #1
 8009486:	e00b      	b.n	80094a0 <HAL_UART_Receive_IT+0x42>
 8009488:	68fb      	ldr	r3, [r7, #12]
 800948a:	2200      	movs	r2, #0
 800948c:	631a      	str	r2, [r3, #48]	; 0x30
 800948e:	88fb      	ldrh	r3, [r7, #6]
 8009490:	461a      	mov	r2, r3
 8009492:	68b9      	ldr	r1, [r7, #8]
 8009494:	68f8      	ldr	r0, [r7, #12]
 8009496:	f000 fb12 	bl	8009abe <UART_Start_Receive_IT>
 800949a:	4603      	mov	r3, r0
 800949c:	e000      	b.n	80094a0 <HAL_UART_Receive_IT+0x42>
 800949e:	2302      	movs	r3, #2
 80094a0:	4618      	mov	r0, r3
 80094a2:	3710      	adds	r7, #16
 80094a4:	46bd      	mov	sp, r7
 80094a6:	bd80      	pop	{r7, pc}

080094a8 <HAL_UART_IRQHandler>:
 80094a8:	b580      	push	{r7, lr}
 80094aa:	b0ba      	sub	sp, #232	; 0xe8
 80094ac:	af00      	add	r7, sp, #0
 80094ae:	6078      	str	r0, [r7, #4]
 80094b0:	687b      	ldr	r3, [r7, #4]
 80094b2:	681b      	ldr	r3, [r3, #0]
 80094b4:	681b      	ldr	r3, [r3, #0]
 80094b6:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 80094ba:	687b      	ldr	r3, [r7, #4]
 80094bc:	681b      	ldr	r3, [r3, #0]
 80094be:	68db      	ldr	r3, [r3, #12]
 80094c0:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 80094c4:	687b      	ldr	r3, [r7, #4]
 80094c6:	681b      	ldr	r3, [r3, #0]
 80094c8:	695b      	ldr	r3, [r3, #20]
 80094ca:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 80094ce:	2300      	movs	r3, #0
 80094d0:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 80094d4:	2300      	movs	r3, #0
 80094d6:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 80094da:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80094de:	f003 030f 	and.w	r3, r3, #15
 80094e2:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 80094e6:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 80094ea:	2b00      	cmp	r3, #0
 80094ec:	d10f      	bne.n	800950e <HAL_UART_IRQHandler+0x66>
 80094ee:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80094f2:	f003 0320 	and.w	r3, r3, #32
 80094f6:	2b00      	cmp	r3, #0
 80094f8:	d009      	beq.n	800950e <HAL_UART_IRQHandler+0x66>
 80094fa:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80094fe:	f003 0320 	and.w	r3, r3, #32
 8009502:	2b00      	cmp	r3, #0
 8009504:	d003      	beq.n	800950e <HAL_UART_IRQHandler+0x66>
 8009506:	6878      	ldr	r0, [r7, #4]
 8009508:	f000 fbf2 	bl	8009cf0 <UART_Receive_IT>
 800950c:	e25b      	b.n	80099c6 <HAL_UART_IRQHandler+0x51e>
 800950e:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 8009512:	2b00      	cmp	r3, #0
 8009514:	f000 80de 	beq.w	80096d4 <HAL_UART_IRQHandler+0x22c>
 8009518:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800951c:	f003 0301 	and.w	r3, r3, #1
 8009520:	2b00      	cmp	r3, #0
 8009522:	d106      	bne.n	8009532 <HAL_UART_IRQHandler+0x8a>
 8009524:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8009528:	f403 7390 	and.w	r3, r3, #288	; 0x120
 800952c:	2b00      	cmp	r3, #0
 800952e:	f000 80d1 	beq.w	80096d4 <HAL_UART_IRQHandler+0x22c>
 8009532:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8009536:	f003 0301 	and.w	r3, r3, #1
 800953a:	2b00      	cmp	r3, #0
 800953c:	d00b      	beq.n	8009556 <HAL_UART_IRQHandler+0xae>
 800953e:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8009542:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009546:	2b00      	cmp	r3, #0
 8009548:	d005      	beq.n	8009556 <HAL_UART_IRQHandler+0xae>
 800954a:	687b      	ldr	r3, [r7, #4]
 800954c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800954e:	f043 0201 	orr.w	r2, r3, #1
 8009552:	687b      	ldr	r3, [r7, #4]
 8009554:	645a      	str	r2, [r3, #68]	; 0x44
 8009556:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800955a:	f003 0304 	and.w	r3, r3, #4
 800955e:	2b00      	cmp	r3, #0
 8009560:	d00b      	beq.n	800957a <HAL_UART_IRQHandler+0xd2>
 8009562:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8009566:	f003 0301 	and.w	r3, r3, #1
 800956a:	2b00      	cmp	r3, #0
 800956c:	d005      	beq.n	800957a <HAL_UART_IRQHandler+0xd2>
 800956e:	687b      	ldr	r3, [r7, #4]
 8009570:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009572:	f043 0202 	orr.w	r2, r3, #2
 8009576:	687b      	ldr	r3, [r7, #4]
 8009578:	645a      	str	r2, [r3, #68]	; 0x44
 800957a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800957e:	f003 0302 	and.w	r3, r3, #2
 8009582:	2b00      	cmp	r3, #0
 8009584:	d00b      	beq.n	800959e <HAL_UART_IRQHandler+0xf6>
 8009586:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800958a:	f003 0301 	and.w	r3, r3, #1
 800958e:	2b00      	cmp	r3, #0
 8009590:	d005      	beq.n	800959e <HAL_UART_IRQHandler+0xf6>
 8009592:	687b      	ldr	r3, [r7, #4]
 8009594:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009596:	f043 0204 	orr.w	r2, r3, #4
 800959a:	687b      	ldr	r3, [r7, #4]
 800959c:	645a      	str	r2, [r3, #68]	; 0x44
 800959e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80095a2:	f003 0308 	and.w	r3, r3, #8
 80095a6:	2b00      	cmp	r3, #0
 80095a8:	d011      	beq.n	80095ce <HAL_UART_IRQHandler+0x126>
 80095aa:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80095ae:	f003 0320 	and.w	r3, r3, #32
 80095b2:	2b00      	cmp	r3, #0
 80095b4:	d105      	bne.n	80095c2 <HAL_UART_IRQHandler+0x11a>
 80095b6:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 80095ba:	f003 0301 	and.w	r3, r3, #1
 80095be:	2b00      	cmp	r3, #0
 80095c0:	d005      	beq.n	80095ce <HAL_UART_IRQHandler+0x126>
 80095c2:	687b      	ldr	r3, [r7, #4]
 80095c4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80095c6:	f043 0208 	orr.w	r2, r3, #8
 80095ca:	687b      	ldr	r3, [r7, #4]
 80095cc:	645a      	str	r2, [r3, #68]	; 0x44
 80095ce:	687b      	ldr	r3, [r7, #4]
 80095d0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80095d2:	2b00      	cmp	r3, #0
 80095d4:	f000 81f2 	beq.w	80099bc <HAL_UART_IRQHandler+0x514>
 80095d8:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80095dc:	f003 0320 	and.w	r3, r3, #32
 80095e0:	2b00      	cmp	r3, #0
 80095e2:	d008      	beq.n	80095f6 <HAL_UART_IRQHandler+0x14e>
 80095e4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80095e8:	f003 0320 	and.w	r3, r3, #32
 80095ec:	2b00      	cmp	r3, #0
 80095ee:	d002      	beq.n	80095f6 <HAL_UART_IRQHandler+0x14e>
 80095f0:	6878      	ldr	r0, [r7, #4]
 80095f2:	f000 fb7d 	bl	8009cf0 <UART_Receive_IT>
 80095f6:	687b      	ldr	r3, [r7, #4]
 80095f8:	681b      	ldr	r3, [r3, #0]
 80095fa:	695b      	ldr	r3, [r3, #20]
 80095fc:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009600:	2b40      	cmp	r3, #64	; 0x40
 8009602:	bf0c      	ite	eq
 8009604:	2301      	moveq	r3, #1
 8009606:	2300      	movne	r3, #0
 8009608:	b2db      	uxtb	r3, r3
 800960a:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800960e:	687b      	ldr	r3, [r7, #4]
 8009610:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009612:	f003 0308 	and.w	r3, r3, #8
 8009616:	2b00      	cmp	r3, #0
 8009618:	d103      	bne.n	8009622 <HAL_UART_IRQHandler+0x17a>
 800961a:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800961e:	2b00      	cmp	r3, #0
 8009620:	d04f      	beq.n	80096c2 <HAL_UART_IRQHandler+0x21a>
 8009622:	6878      	ldr	r0, [r7, #4]
 8009624:	f000 fa85 	bl	8009b32 <UART_EndRxTransfer>
 8009628:	687b      	ldr	r3, [r7, #4]
 800962a:	681b      	ldr	r3, [r3, #0]
 800962c:	695b      	ldr	r3, [r3, #20]
 800962e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009632:	2b40      	cmp	r3, #64	; 0x40
 8009634:	d141      	bne.n	80096ba <HAL_UART_IRQHandler+0x212>
 8009636:	687b      	ldr	r3, [r7, #4]
 8009638:	681b      	ldr	r3, [r3, #0]
 800963a:	3314      	adds	r3, #20
 800963c:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8009640:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 8009644:	e853 3f00 	ldrex	r3, [r3]
 8009648:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800964c:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8009650:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8009654:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8009658:	687b      	ldr	r3, [r7, #4]
 800965a:	681b      	ldr	r3, [r3, #0]
 800965c:	3314      	adds	r3, #20
 800965e:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 8009662:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 8009666:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 800966a:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 800966e:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 8009672:	e841 2300 	strex	r3, r2, [r1]
 8009676:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800967a:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800967e:	2b00      	cmp	r3, #0
 8009680:	d1d9      	bne.n	8009636 <HAL_UART_IRQHandler+0x18e>
 8009682:	687b      	ldr	r3, [r7, #4]
 8009684:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009686:	2b00      	cmp	r3, #0
 8009688:	d013      	beq.n	80096b2 <HAL_UART_IRQHandler+0x20a>
 800968a:	687b      	ldr	r3, [r7, #4]
 800968c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800968e:	4a7e      	ldr	r2, [pc, #504]	; (8009888 <HAL_UART_IRQHandler+0x3e0>)
 8009690:	651a      	str	r2, [r3, #80]	; 0x50
 8009692:	687b      	ldr	r3, [r7, #4]
 8009694:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009696:	4618      	mov	r0, r3
 8009698:	f7fc f9c9 	bl	8005a2e <HAL_DMA_Abort_IT>
 800969c:	4603      	mov	r3, r0
 800969e:	2b00      	cmp	r3, #0
 80096a0:	d016      	beq.n	80096d0 <HAL_UART_IRQHandler+0x228>
 80096a2:	687b      	ldr	r3, [r7, #4]
 80096a4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80096a6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80096a8:	687a      	ldr	r2, [r7, #4]
 80096aa:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 80096ac:	4610      	mov	r0, r2
 80096ae:	4798      	blx	r3
 80096b0:	e00e      	b.n	80096d0 <HAL_UART_IRQHandler+0x228>
 80096b2:	6878      	ldr	r0, [r7, #4]
 80096b4:	f000 f994 	bl	80099e0 <HAL_UART_ErrorCallback>
 80096b8:	e00a      	b.n	80096d0 <HAL_UART_IRQHandler+0x228>
 80096ba:	6878      	ldr	r0, [r7, #4]
 80096bc:	f000 f990 	bl	80099e0 <HAL_UART_ErrorCallback>
 80096c0:	e006      	b.n	80096d0 <HAL_UART_IRQHandler+0x228>
 80096c2:	6878      	ldr	r0, [r7, #4]
 80096c4:	f000 f98c 	bl	80099e0 <HAL_UART_ErrorCallback>
 80096c8:	687b      	ldr	r3, [r7, #4]
 80096ca:	2200      	movs	r2, #0
 80096cc:	645a      	str	r2, [r3, #68]	; 0x44
 80096ce:	e175      	b.n	80099bc <HAL_UART_IRQHandler+0x514>
 80096d0:	bf00      	nop
 80096d2:	e173      	b.n	80099bc <HAL_UART_IRQHandler+0x514>
 80096d4:	687b      	ldr	r3, [r7, #4]
 80096d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80096d8:	2b01      	cmp	r3, #1
 80096da:	f040 814f 	bne.w	800997c <HAL_UART_IRQHandler+0x4d4>
 80096de:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80096e2:	f003 0310 	and.w	r3, r3, #16
 80096e6:	2b00      	cmp	r3, #0
 80096e8:	f000 8148 	beq.w	800997c <HAL_UART_IRQHandler+0x4d4>
 80096ec:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80096f0:	f003 0310 	and.w	r3, r3, #16
 80096f4:	2b00      	cmp	r3, #0
 80096f6:	f000 8141 	beq.w	800997c <HAL_UART_IRQHandler+0x4d4>
 80096fa:	2300      	movs	r3, #0
 80096fc:	60bb      	str	r3, [r7, #8]
 80096fe:	687b      	ldr	r3, [r7, #4]
 8009700:	681b      	ldr	r3, [r3, #0]
 8009702:	681b      	ldr	r3, [r3, #0]
 8009704:	60bb      	str	r3, [r7, #8]
 8009706:	687b      	ldr	r3, [r7, #4]
 8009708:	681b      	ldr	r3, [r3, #0]
 800970a:	685b      	ldr	r3, [r3, #4]
 800970c:	60bb      	str	r3, [r7, #8]
 800970e:	68bb      	ldr	r3, [r7, #8]
 8009710:	687b      	ldr	r3, [r7, #4]
 8009712:	681b      	ldr	r3, [r3, #0]
 8009714:	695b      	ldr	r3, [r3, #20]
 8009716:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800971a:	2b40      	cmp	r3, #64	; 0x40
 800971c:	f040 80b6 	bne.w	800988c <HAL_UART_IRQHandler+0x3e4>
 8009720:	687b      	ldr	r3, [r7, #4]
 8009722:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009724:	681b      	ldr	r3, [r3, #0]
 8009726:	685b      	ldr	r3, [r3, #4]
 8009728:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 800972c:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 8009730:	2b00      	cmp	r3, #0
 8009732:	f000 8145 	beq.w	80099c0 <HAL_UART_IRQHandler+0x518>
 8009736:	687b      	ldr	r3, [r7, #4]
 8009738:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 800973a:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800973e:	429a      	cmp	r2, r3
 8009740:	f080 813e 	bcs.w	80099c0 <HAL_UART_IRQHandler+0x518>
 8009744:	687b      	ldr	r3, [r7, #4]
 8009746:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800974a:	85da      	strh	r2, [r3, #46]	; 0x2e
 800974c:	687b      	ldr	r3, [r7, #4]
 800974e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009750:	69db      	ldr	r3, [r3, #28]
 8009752:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009756:	f000 8088 	beq.w	800986a <HAL_UART_IRQHandler+0x3c2>
 800975a:	687b      	ldr	r3, [r7, #4]
 800975c:	681b      	ldr	r3, [r3, #0]
 800975e:	330c      	adds	r3, #12
 8009760:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 8009764:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8009768:	e853 3f00 	ldrex	r3, [r3]
 800976c:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8009770:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 8009774:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8009778:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800977c:	687b      	ldr	r3, [r7, #4]
 800977e:	681b      	ldr	r3, [r3, #0]
 8009780:	330c      	adds	r3, #12
 8009782:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 8009786:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 800978a:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800978e:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 8009792:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 8009796:	e841 2300 	strex	r3, r2, [r1]
 800979a:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 800979e:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 80097a2:	2b00      	cmp	r3, #0
 80097a4:	d1d9      	bne.n	800975a <HAL_UART_IRQHandler+0x2b2>
 80097a6:	687b      	ldr	r3, [r7, #4]
 80097a8:	681b      	ldr	r3, [r3, #0]
 80097aa:	3314      	adds	r3, #20
 80097ac:	677b      	str	r3, [r7, #116]	; 0x74
 80097ae:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 80097b0:	e853 3f00 	ldrex	r3, [r3]
 80097b4:	673b      	str	r3, [r7, #112]	; 0x70
 80097b6:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80097b8:	f023 0301 	bic.w	r3, r3, #1
 80097bc:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 80097c0:	687b      	ldr	r3, [r7, #4]
 80097c2:	681b      	ldr	r3, [r3, #0]
 80097c4:	3314      	adds	r3, #20
 80097c6:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 80097ca:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 80097ce:	67fb      	str	r3, [r7, #124]	; 0x7c
 80097d0:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 80097d2:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 80097d6:	e841 2300 	strex	r3, r2, [r1]
 80097da:	67bb      	str	r3, [r7, #120]	; 0x78
 80097dc:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 80097de:	2b00      	cmp	r3, #0
 80097e0:	d1e1      	bne.n	80097a6 <HAL_UART_IRQHandler+0x2fe>
 80097e2:	687b      	ldr	r3, [r7, #4]
 80097e4:	681b      	ldr	r3, [r3, #0]
 80097e6:	3314      	adds	r3, #20
 80097e8:	663b      	str	r3, [r7, #96]	; 0x60
 80097ea:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 80097ec:	e853 3f00 	ldrex	r3, [r3]
 80097f0:	65fb      	str	r3, [r7, #92]	; 0x5c
 80097f2:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80097f4:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80097f8:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 80097fc:	687b      	ldr	r3, [r7, #4]
 80097fe:	681b      	ldr	r3, [r3, #0]
 8009800:	3314      	adds	r3, #20
 8009802:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 8009806:	66fa      	str	r2, [r7, #108]	; 0x6c
 8009808:	66bb      	str	r3, [r7, #104]	; 0x68
 800980a:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 800980c:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800980e:	e841 2300 	strex	r3, r2, [r1]
 8009812:	667b      	str	r3, [r7, #100]	; 0x64
 8009814:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8009816:	2b00      	cmp	r3, #0
 8009818:	d1e3      	bne.n	80097e2 <HAL_UART_IRQHandler+0x33a>
 800981a:	687b      	ldr	r3, [r7, #4]
 800981c:	2220      	movs	r2, #32
 800981e:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8009822:	687b      	ldr	r3, [r7, #4]
 8009824:	2200      	movs	r2, #0
 8009826:	631a      	str	r2, [r3, #48]	; 0x30
 8009828:	687b      	ldr	r3, [r7, #4]
 800982a:	681b      	ldr	r3, [r3, #0]
 800982c:	330c      	adds	r3, #12
 800982e:	64fb      	str	r3, [r7, #76]	; 0x4c
 8009830:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 8009832:	e853 3f00 	ldrex	r3, [r3]
 8009836:	64bb      	str	r3, [r7, #72]	; 0x48
 8009838:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800983a:	f023 0310 	bic.w	r3, r3, #16
 800983e:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8009842:	687b      	ldr	r3, [r7, #4]
 8009844:	681b      	ldr	r3, [r3, #0]
 8009846:	330c      	adds	r3, #12
 8009848:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 800984c:	65ba      	str	r2, [r7, #88]	; 0x58
 800984e:	657b      	str	r3, [r7, #84]	; 0x54
 8009850:	6d79      	ldr	r1, [r7, #84]	; 0x54
 8009852:	6dba      	ldr	r2, [r7, #88]	; 0x58
 8009854:	e841 2300 	strex	r3, r2, [r1]
 8009858:	653b      	str	r3, [r7, #80]	; 0x50
 800985a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800985c:	2b00      	cmp	r3, #0
 800985e:	d1e3      	bne.n	8009828 <HAL_UART_IRQHandler+0x380>
 8009860:	687b      	ldr	r3, [r7, #4]
 8009862:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009864:	4618      	mov	r0, r3
 8009866:	f7fc f872 	bl	800594e <HAL_DMA_Abort>
 800986a:	687b      	ldr	r3, [r7, #4]
 800986c:	2202      	movs	r2, #2
 800986e:	635a      	str	r2, [r3, #52]	; 0x34
 8009870:	687b      	ldr	r3, [r7, #4]
 8009872:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8009874:	687b      	ldr	r3, [r7, #4]
 8009876:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8009878:	b29b      	uxth	r3, r3
 800987a:	1ad3      	subs	r3, r2, r3
 800987c:	b29b      	uxth	r3, r3
 800987e:	4619      	mov	r1, r3
 8009880:	6878      	ldr	r0, [r7, #4]
 8009882:	f000 f8b7 	bl	80099f4 <HAL_UARTEx_RxEventCallback>
 8009886:	e09b      	b.n	80099c0 <HAL_UART_IRQHandler+0x518>
 8009888:	08009bf9 	.word	0x08009bf9
 800988c:	687b      	ldr	r3, [r7, #4]
 800988e:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8009890:	687b      	ldr	r3, [r7, #4]
 8009892:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8009894:	b29b      	uxth	r3, r3
 8009896:	1ad3      	subs	r3, r2, r3
 8009898:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 800989c:	687b      	ldr	r3, [r7, #4]
 800989e:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 80098a0:	b29b      	uxth	r3, r3
 80098a2:	2b00      	cmp	r3, #0
 80098a4:	f000 808e 	beq.w	80099c4 <HAL_UART_IRQHandler+0x51c>
 80098a8:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 80098ac:	2b00      	cmp	r3, #0
 80098ae:	f000 8089 	beq.w	80099c4 <HAL_UART_IRQHandler+0x51c>
 80098b2:	687b      	ldr	r3, [r7, #4]
 80098b4:	681b      	ldr	r3, [r3, #0]
 80098b6:	330c      	adds	r3, #12
 80098b8:	63bb      	str	r3, [r7, #56]	; 0x38
 80098ba:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80098bc:	e853 3f00 	ldrex	r3, [r3]
 80098c0:	637b      	str	r3, [r7, #52]	; 0x34
 80098c2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80098c4:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 80098c8:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 80098cc:	687b      	ldr	r3, [r7, #4]
 80098ce:	681b      	ldr	r3, [r3, #0]
 80098d0:	330c      	adds	r3, #12
 80098d2:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 80098d6:	647a      	str	r2, [r7, #68]	; 0x44
 80098d8:	643b      	str	r3, [r7, #64]	; 0x40
 80098da:	6c39      	ldr	r1, [r7, #64]	; 0x40
 80098dc:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 80098de:	e841 2300 	strex	r3, r2, [r1]
 80098e2:	63fb      	str	r3, [r7, #60]	; 0x3c
 80098e4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80098e6:	2b00      	cmp	r3, #0
 80098e8:	d1e3      	bne.n	80098b2 <HAL_UART_IRQHandler+0x40a>
 80098ea:	687b      	ldr	r3, [r7, #4]
 80098ec:	681b      	ldr	r3, [r3, #0]
 80098ee:	3314      	adds	r3, #20
 80098f0:	627b      	str	r3, [r7, #36]	; 0x24
 80098f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80098f4:	e853 3f00 	ldrex	r3, [r3]
 80098f8:	623b      	str	r3, [r7, #32]
 80098fa:	6a3b      	ldr	r3, [r7, #32]
 80098fc:	f023 0301 	bic.w	r3, r3, #1
 8009900:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 8009904:	687b      	ldr	r3, [r7, #4]
 8009906:	681b      	ldr	r3, [r3, #0]
 8009908:	3314      	adds	r3, #20
 800990a:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800990e:	633a      	str	r2, [r7, #48]	; 0x30
 8009910:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009912:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 8009914:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8009916:	e841 2300 	strex	r3, r2, [r1]
 800991a:	62bb      	str	r3, [r7, #40]	; 0x28
 800991c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800991e:	2b00      	cmp	r3, #0
 8009920:	d1e3      	bne.n	80098ea <HAL_UART_IRQHandler+0x442>
 8009922:	687b      	ldr	r3, [r7, #4]
 8009924:	2220      	movs	r2, #32
 8009926:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800992a:	687b      	ldr	r3, [r7, #4]
 800992c:	2200      	movs	r2, #0
 800992e:	631a      	str	r2, [r3, #48]	; 0x30
 8009930:	687b      	ldr	r3, [r7, #4]
 8009932:	681b      	ldr	r3, [r3, #0]
 8009934:	330c      	adds	r3, #12
 8009936:	613b      	str	r3, [r7, #16]
 8009938:	693b      	ldr	r3, [r7, #16]
 800993a:	e853 3f00 	ldrex	r3, [r3]
 800993e:	60fb      	str	r3, [r7, #12]
 8009940:	68fb      	ldr	r3, [r7, #12]
 8009942:	f023 0310 	bic.w	r3, r3, #16
 8009946:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800994a:	687b      	ldr	r3, [r7, #4]
 800994c:	681b      	ldr	r3, [r3, #0]
 800994e:	330c      	adds	r3, #12
 8009950:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 8009954:	61fa      	str	r2, [r7, #28]
 8009956:	61bb      	str	r3, [r7, #24]
 8009958:	69b9      	ldr	r1, [r7, #24]
 800995a:	69fa      	ldr	r2, [r7, #28]
 800995c:	e841 2300 	strex	r3, r2, [r1]
 8009960:	617b      	str	r3, [r7, #20]
 8009962:	697b      	ldr	r3, [r7, #20]
 8009964:	2b00      	cmp	r3, #0
 8009966:	d1e3      	bne.n	8009930 <HAL_UART_IRQHandler+0x488>
 8009968:	687b      	ldr	r3, [r7, #4]
 800996a:	2202      	movs	r2, #2
 800996c:	635a      	str	r2, [r3, #52]	; 0x34
 800996e:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 8009972:	4619      	mov	r1, r3
 8009974:	6878      	ldr	r0, [r7, #4]
 8009976:	f000 f83d 	bl	80099f4 <HAL_UARTEx_RxEventCallback>
 800997a:	e023      	b.n	80099c4 <HAL_UART_IRQHandler+0x51c>
 800997c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8009980:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009984:	2b00      	cmp	r3, #0
 8009986:	d009      	beq.n	800999c <HAL_UART_IRQHandler+0x4f4>
 8009988:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800998c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009990:	2b00      	cmp	r3, #0
 8009992:	d003      	beq.n	800999c <HAL_UART_IRQHandler+0x4f4>
 8009994:	6878      	ldr	r0, [r7, #4]
 8009996:	f000 f943 	bl	8009c20 <UART_Transmit_IT>
 800999a:	e014      	b.n	80099c6 <HAL_UART_IRQHandler+0x51e>
 800999c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80099a0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80099a4:	2b00      	cmp	r3, #0
 80099a6:	d00e      	beq.n	80099c6 <HAL_UART_IRQHandler+0x51e>
 80099a8:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80099ac:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80099b0:	2b00      	cmp	r3, #0
 80099b2:	d008      	beq.n	80099c6 <HAL_UART_IRQHandler+0x51e>
 80099b4:	6878      	ldr	r0, [r7, #4]
 80099b6:	f000 f983 	bl	8009cc0 <UART_EndTransmit_IT>
 80099ba:	e004      	b.n	80099c6 <HAL_UART_IRQHandler+0x51e>
 80099bc:	bf00      	nop
 80099be:	e002      	b.n	80099c6 <HAL_UART_IRQHandler+0x51e>
 80099c0:	bf00      	nop
 80099c2:	e000      	b.n	80099c6 <HAL_UART_IRQHandler+0x51e>
 80099c4:	bf00      	nop
 80099c6:	37e8      	adds	r7, #232	; 0xe8
 80099c8:	46bd      	mov	sp, r7
 80099ca:	bd80      	pop	{r7, pc}

080099cc <HAL_UART_TxCpltCallback>:
 80099cc:	b480      	push	{r7}
 80099ce:	b083      	sub	sp, #12
 80099d0:	af00      	add	r7, sp, #0
 80099d2:	6078      	str	r0, [r7, #4]
 80099d4:	bf00      	nop
 80099d6:	370c      	adds	r7, #12
 80099d8:	46bd      	mov	sp, r7
 80099da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80099de:	4770      	bx	lr

080099e0 <HAL_UART_ErrorCallback>:
 80099e0:	b480      	push	{r7}
 80099e2:	b083      	sub	sp, #12
 80099e4:	af00      	add	r7, sp, #0
 80099e6:	6078      	str	r0, [r7, #4]
 80099e8:	bf00      	nop
 80099ea:	370c      	adds	r7, #12
 80099ec:	46bd      	mov	sp, r7
 80099ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 80099f2:	4770      	bx	lr

080099f4 <HAL_UARTEx_RxEventCallback>:
 80099f4:	b480      	push	{r7}
 80099f6:	b083      	sub	sp, #12
 80099f8:	af00      	add	r7, sp, #0
 80099fa:	6078      	str	r0, [r7, #4]
 80099fc:	460b      	mov	r3, r1
 80099fe:	807b      	strh	r3, [r7, #2]
 8009a00:	bf00      	nop
 8009a02:	370c      	adds	r7, #12
 8009a04:	46bd      	mov	sp, r7
 8009a06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a0a:	4770      	bx	lr

08009a0c <UART_WaitOnFlagUntilTimeout>:
 8009a0c:	b580      	push	{r7, lr}
 8009a0e:	b086      	sub	sp, #24
 8009a10:	af00      	add	r7, sp, #0
 8009a12:	60f8      	str	r0, [r7, #12]
 8009a14:	60b9      	str	r1, [r7, #8]
 8009a16:	603b      	str	r3, [r7, #0]
 8009a18:	4613      	mov	r3, r2
 8009a1a:	71fb      	strb	r3, [r7, #7]
 8009a1c:	e03b      	b.n	8009a96 <UART_WaitOnFlagUntilTimeout+0x8a>
 8009a1e:	6a3b      	ldr	r3, [r7, #32]
 8009a20:	f1b3 3fff 	cmp.w	r3, #4294967295
 8009a24:	d037      	beq.n	8009a96 <UART_WaitOnFlagUntilTimeout+0x8a>
 8009a26:	f7fb fa85 	bl	8004f34 <HAL_GetTick>
 8009a2a:	4602      	mov	r2, r0
 8009a2c:	683b      	ldr	r3, [r7, #0]
 8009a2e:	1ad3      	subs	r3, r2, r3
 8009a30:	6a3a      	ldr	r2, [r7, #32]
 8009a32:	429a      	cmp	r2, r3
 8009a34:	d302      	bcc.n	8009a3c <UART_WaitOnFlagUntilTimeout+0x30>
 8009a36:	6a3b      	ldr	r3, [r7, #32]
 8009a38:	2b00      	cmp	r3, #0
 8009a3a:	d101      	bne.n	8009a40 <UART_WaitOnFlagUntilTimeout+0x34>
 8009a3c:	2303      	movs	r3, #3
 8009a3e:	e03a      	b.n	8009ab6 <UART_WaitOnFlagUntilTimeout+0xaa>
 8009a40:	68fb      	ldr	r3, [r7, #12]
 8009a42:	681b      	ldr	r3, [r3, #0]
 8009a44:	68db      	ldr	r3, [r3, #12]
 8009a46:	f003 0304 	and.w	r3, r3, #4
 8009a4a:	2b00      	cmp	r3, #0
 8009a4c:	d023      	beq.n	8009a96 <UART_WaitOnFlagUntilTimeout+0x8a>
 8009a4e:	68bb      	ldr	r3, [r7, #8]
 8009a50:	2b80      	cmp	r3, #128	; 0x80
 8009a52:	d020      	beq.n	8009a96 <UART_WaitOnFlagUntilTimeout+0x8a>
 8009a54:	68bb      	ldr	r3, [r7, #8]
 8009a56:	2b40      	cmp	r3, #64	; 0x40
 8009a58:	d01d      	beq.n	8009a96 <UART_WaitOnFlagUntilTimeout+0x8a>
 8009a5a:	68fb      	ldr	r3, [r7, #12]
 8009a5c:	681b      	ldr	r3, [r3, #0]
 8009a5e:	681b      	ldr	r3, [r3, #0]
 8009a60:	f003 0308 	and.w	r3, r3, #8
 8009a64:	2b08      	cmp	r3, #8
 8009a66:	d116      	bne.n	8009a96 <UART_WaitOnFlagUntilTimeout+0x8a>
 8009a68:	2300      	movs	r3, #0
 8009a6a:	617b      	str	r3, [r7, #20]
 8009a6c:	68fb      	ldr	r3, [r7, #12]
 8009a6e:	681b      	ldr	r3, [r3, #0]
 8009a70:	681b      	ldr	r3, [r3, #0]
 8009a72:	617b      	str	r3, [r7, #20]
 8009a74:	68fb      	ldr	r3, [r7, #12]
 8009a76:	681b      	ldr	r3, [r3, #0]
 8009a78:	685b      	ldr	r3, [r3, #4]
 8009a7a:	617b      	str	r3, [r7, #20]
 8009a7c:	697b      	ldr	r3, [r7, #20]
 8009a7e:	68f8      	ldr	r0, [r7, #12]
 8009a80:	f000 f857 	bl	8009b32 <UART_EndRxTransfer>
 8009a84:	68fb      	ldr	r3, [r7, #12]
 8009a86:	2208      	movs	r2, #8
 8009a88:	645a      	str	r2, [r3, #68]	; 0x44
 8009a8a:	68fb      	ldr	r3, [r7, #12]
 8009a8c:	2200      	movs	r2, #0
 8009a8e:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8009a92:	2301      	movs	r3, #1
 8009a94:	e00f      	b.n	8009ab6 <UART_WaitOnFlagUntilTimeout+0xaa>
 8009a96:	68fb      	ldr	r3, [r7, #12]
 8009a98:	681b      	ldr	r3, [r3, #0]
 8009a9a:	681a      	ldr	r2, [r3, #0]
 8009a9c:	68bb      	ldr	r3, [r7, #8]
 8009a9e:	4013      	ands	r3, r2
 8009aa0:	68ba      	ldr	r2, [r7, #8]
 8009aa2:	429a      	cmp	r2, r3
 8009aa4:	bf0c      	ite	eq
 8009aa6:	2301      	moveq	r3, #1
 8009aa8:	2300      	movne	r3, #0
 8009aaa:	b2db      	uxtb	r3, r3
 8009aac:	461a      	mov	r2, r3
 8009aae:	79fb      	ldrb	r3, [r7, #7]
 8009ab0:	429a      	cmp	r2, r3
 8009ab2:	d0b4      	beq.n	8009a1e <UART_WaitOnFlagUntilTimeout+0x12>
 8009ab4:	2300      	movs	r3, #0
 8009ab6:	4618      	mov	r0, r3
 8009ab8:	3718      	adds	r7, #24
 8009aba:	46bd      	mov	sp, r7
 8009abc:	bd80      	pop	{r7, pc}

08009abe <UART_Start_Receive_IT>:
 8009abe:	b480      	push	{r7}
 8009ac0:	b085      	sub	sp, #20
 8009ac2:	af00      	add	r7, sp, #0
 8009ac4:	60f8      	str	r0, [r7, #12]
 8009ac6:	60b9      	str	r1, [r7, #8]
 8009ac8:	4613      	mov	r3, r2
 8009aca:	80fb      	strh	r3, [r7, #6]
 8009acc:	68fb      	ldr	r3, [r7, #12]
 8009ace:	68ba      	ldr	r2, [r7, #8]
 8009ad0:	629a      	str	r2, [r3, #40]	; 0x28
 8009ad2:	68fb      	ldr	r3, [r7, #12]
 8009ad4:	88fa      	ldrh	r2, [r7, #6]
 8009ad6:	859a      	strh	r2, [r3, #44]	; 0x2c
 8009ad8:	68fb      	ldr	r3, [r7, #12]
 8009ada:	88fa      	ldrh	r2, [r7, #6]
 8009adc:	85da      	strh	r2, [r3, #46]	; 0x2e
 8009ade:	68fb      	ldr	r3, [r7, #12]
 8009ae0:	2200      	movs	r2, #0
 8009ae2:	645a      	str	r2, [r3, #68]	; 0x44
 8009ae4:	68fb      	ldr	r3, [r7, #12]
 8009ae6:	2222      	movs	r2, #34	; 0x22
 8009ae8:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8009aec:	68fb      	ldr	r3, [r7, #12]
 8009aee:	691b      	ldr	r3, [r3, #16]
 8009af0:	2b00      	cmp	r3, #0
 8009af2:	d007      	beq.n	8009b04 <UART_Start_Receive_IT+0x46>
 8009af4:	68fb      	ldr	r3, [r7, #12]
 8009af6:	681b      	ldr	r3, [r3, #0]
 8009af8:	68da      	ldr	r2, [r3, #12]
 8009afa:	68fb      	ldr	r3, [r7, #12]
 8009afc:	681b      	ldr	r3, [r3, #0]
 8009afe:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8009b02:	60da      	str	r2, [r3, #12]
 8009b04:	68fb      	ldr	r3, [r7, #12]
 8009b06:	681b      	ldr	r3, [r3, #0]
 8009b08:	695a      	ldr	r2, [r3, #20]
 8009b0a:	68fb      	ldr	r3, [r7, #12]
 8009b0c:	681b      	ldr	r3, [r3, #0]
 8009b0e:	f042 0201 	orr.w	r2, r2, #1
 8009b12:	615a      	str	r2, [r3, #20]
 8009b14:	68fb      	ldr	r3, [r7, #12]
 8009b16:	681b      	ldr	r3, [r3, #0]
 8009b18:	68da      	ldr	r2, [r3, #12]
 8009b1a:	68fb      	ldr	r3, [r7, #12]
 8009b1c:	681b      	ldr	r3, [r3, #0]
 8009b1e:	f042 0220 	orr.w	r2, r2, #32
 8009b22:	60da      	str	r2, [r3, #12]
 8009b24:	2300      	movs	r3, #0
 8009b26:	4618      	mov	r0, r3
 8009b28:	3714      	adds	r7, #20
 8009b2a:	46bd      	mov	sp, r7
 8009b2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b30:	4770      	bx	lr

08009b32 <UART_EndRxTransfer>:
 8009b32:	b480      	push	{r7}
 8009b34:	b095      	sub	sp, #84	; 0x54
 8009b36:	af00      	add	r7, sp, #0
 8009b38:	6078      	str	r0, [r7, #4]
 8009b3a:	687b      	ldr	r3, [r7, #4]
 8009b3c:	681b      	ldr	r3, [r3, #0]
 8009b3e:	330c      	adds	r3, #12
 8009b40:	637b      	str	r3, [r7, #52]	; 0x34
 8009b42:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8009b44:	e853 3f00 	ldrex	r3, [r3]
 8009b48:	633b      	str	r3, [r7, #48]	; 0x30
 8009b4a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8009b4c:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8009b50:	64fb      	str	r3, [r7, #76]	; 0x4c
 8009b52:	687b      	ldr	r3, [r7, #4]
 8009b54:	681b      	ldr	r3, [r3, #0]
 8009b56:	330c      	adds	r3, #12
 8009b58:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8009b5a:	643a      	str	r2, [r7, #64]	; 0x40
 8009b5c:	63fb      	str	r3, [r7, #60]	; 0x3c
 8009b5e:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8009b60:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8009b62:	e841 2300 	strex	r3, r2, [r1]
 8009b66:	63bb      	str	r3, [r7, #56]	; 0x38
 8009b68:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8009b6a:	2b00      	cmp	r3, #0
 8009b6c:	d1e5      	bne.n	8009b3a <UART_EndRxTransfer+0x8>
 8009b6e:	687b      	ldr	r3, [r7, #4]
 8009b70:	681b      	ldr	r3, [r3, #0]
 8009b72:	3314      	adds	r3, #20
 8009b74:	623b      	str	r3, [r7, #32]
 8009b76:	6a3b      	ldr	r3, [r7, #32]
 8009b78:	e853 3f00 	ldrex	r3, [r3]
 8009b7c:	61fb      	str	r3, [r7, #28]
 8009b7e:	69fb      	ldr	r3, [r7, #28]
 8009b80:	f023 0301 	bic.w	r3, r3, #1
 8009b84:	64bb      	str	r3, [r7, #72]	; 0x48
 8009b86:	687b      	ldr	r3, [r7, #4]
 8009b88:	681b      	ldr	r3, [r3, #0]
 8009b8a:	3314      	adds	r3, #20
 8009b8c:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8009b8e:	62fa      	str	r2, [r7, #44]	; 0x2c
 8009b90:	62bb      	str	r3, [r7, #40]	; 0x28
 8009b92:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8009b94:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8009b96:	e841 2300 	strex	r3, r2, [r1]
 8009b9a:	627b      	str	r3, [r7, #36]	; 0x24
 8009b9c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8009b9e:	2b00      	cmp	r3, #0
 8009ba0:	d1e5      	bne.n	8009b6e <UART_EndRxTransfer+0x3c>
 8009ba2:	687b      	ldr	r3, [r7, #4]
 8009ba4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009ba6:	2b01      	cmp	r3, #1
 8009ba8:	d119      	bne.n	8009bde <UART_EndRxTransfer+0xac>
 8009baa:	687b      	ldr	r3, [r7, #4]
 8009bac:	681b      	ldr	r3, [r3, #0]
 8009bae:	330c      	adds	r3, #12
 8009bb0:	60fb      	str	r3, [r7, #12]
 8009bb2:	68fb      	ldr	r3, [r7, #12]
 8009bb4:	e853 3f00 	ldrex	r3, [r3]
 8009bb8:	60bb      	str	r3, [r7, #8]
 8009bba:	68bb      	ldr	r3, [r7, #8]
 8009bbc:	f023 0310 	bic.w	r3, r3, #16
 8009bc0:	647b      	str	r3, [r7, #68]	; 0x44
 8009bc2:	687b      	ldr	r3, [r7, #4]
 8009bc4:	681b      	ldr	r3, [r3, #0]
 8009bc6:	330c      	adds	r3, #12
 8009bc8:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8009bca:	61ba      	str	r2, [r7, #24]
 8009bcc:	617b      	str	r3, [r7, #20]
 8009bce:	6979      	ldr	r1, [r7, #20]
 8009bd0:	69ba      	ldr	r2, [r7, #24]
 8009bd2:	e841 2300 	strex	r3, r2, [r1]
 8009bd6:	613b      	str	r3, [r7, #16]
 8009bd8:	693b      	ldr	r3, [r7, #16]
 8009bda:	2b00      	cmp	r3, #0
 8009bdc:	d1e5      	bne.n	8009baa <UART_EndRxTransfer+0x78>
 8009bde:	687b      	ldr	r3, [r7, #4]
 8009be0:	2220      	movs	r2, #32
 8009be2:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8009be6:	687b      	ldr	r3, [r7, #4]
 8009be8:	2200      	movs	r2, #0
 8009bea:	631a      	str	r2, [r3, #48]	; 0x30
 8009bec:	bf00      	nop
 8009bee:	3754      	adds	r7, #84	; 0x54
 8009bf0:	46bd      	mov	sp, r7
 8009bf2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009bf6:	4770      	bx	lr

08009bf8 <UART_DMAAbortOnError>:
 8009bf8:	b580      	push	{r7, lr}
 8009bfa:	b084      	sub	sp, #16
 8009bfc:	af00      	add	r7, sp, #0
 8009bfe:	6078      	str	r0, [r7, #4]
 8009c00:	687b      	ldr	r3, [r7, #4]
 8009c02:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009c04:	60fb      	str	r3, [r7, #12]
 8009c06:	68fb      	ldr	r3, [r7, #12]
 8009c08:	2200      	movs	r2, #0
 8009c0a:	85da      	strh	r2, [r3, #46]	; 0x2e
 8009c0c:	68fb      	ldr	r3, [r7, #12]
 8009c0e:	2200      	movs	r2, #0
 8009c10:	84da      	strh	r2, [r3, #38]	; 0x26
 8009c12:	68f8      	ldr	r0, [r7, #12]
 8009c14:	f7ff fee4 	bl	80099e0 <HAL_UART_ErrorCallback>
 8009c18:	bf00      	nop
 8009c1a:	3710      	adds	r7, #16
 8009c1c:	46bd      	mov	sp, r7
 8009c1e:	bd80      	pop	{r7, pc}

08009c20 <UART_Transmit_IT>:
 8009c20:	b480      	push	{r7}
 8009c22:	b085      	sub	sp, #20
 8009c24:	af00      	add	r7, sp, #0
 8009c26:	6078      	str	r0, [r7, #4]
 8009c28:	687b      	ldr	r3, [r7, #4]
 8009c2a:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8009c2e:	b2db      	uxtb	r3, r3
 8009c30:	2b21      	cmp	r3, #33	; 0x21
 8009c32:	d13e      	bne.n	8009cb2 <UART_Transmit_IT+0x92>
 8009c34:	687b      	ldr	r3, [r7, #4]
 8009c36:	689b      	ldr	r3, [r3, #8]
 8009c38:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8009c3c:	d114      	bne.n	8009c68 <UART_Transmit_IT+0x48>
 8009c3e:	687b      	ldr	r3, [r7, #4]
 8009c40:	691b      	ldr	r3, [r3, #16]
 8009c42:	2b00      	cmp	r3, #0
 8009c44:	d110      	bne.n	8009c68 <UART_Transmit_IT+0x48>
 8009c46:	687b      	ldr	r3, [r7, #4]
 8009c48:	6a1b      	ldr	r3, [r3, #32]
 8009c4a:	60fb      	str	r3, [r7, #12]
 8009c4c:	68fb      	ldr	r3, [r7, #12]
 8009c4e:	881b      	ldrh	r3, [r3, #0]
 8009c50:	461a      	mov	r2, r3
 8009c52:	687b      	ldr	r3, [r7, #4]
 8009c54:	681b      	ldr	r3, [r3, #0]
 8009c56:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8009c5a:	605a      	str	r2, [r3, #4]
 8009c5c:	687b      	ldr	r3, [r7, #4]
 8009c5e:	6a1b      	ldr	r3, [r3, #32]
 8009c60:	1c9a      	adds	r2, r3, #2
 8009c62:	687b      	ldr	r3, [r7, #4]
 8009c64:	621a      	str	r2, [r3, #32]
 8009c66:	e008      	b.n	8009c7a <UART_Transmit_IT+0x5a>
 8009c68:	687b      	ldr	r3, [r7, #4]
 8009c6a:	6a1b      	ldr	r3, [r3, #32]
 8009c6c:	1c59      	adds	r1, r3, #1
 8009c6e:	687a      	ldr	r2, [r7, #4]
 8009c70:	6211      	str	r1, [r2, #32]
 8009c72:	781a      	ldrb	r2, [r3, #0]
 8009c74:	687b      	ldr	r3, [r7, #4]
 8009c76:	681b      	ldr	r3, [r3, #0]
 8009c78:	605a      	str	r2, [r3, #4]
 8009c7a:	687b      	ldr	r3, [r7, #4]
 8009c7c:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8009c7e:	b29b      	uxth	r3, r3
 8009c80:	3b01      	subs	r3, #1
 8009c82:	b29b      	uxth	r3, r3
 8009c84:	687a      	ldr	r2, [r7, #4]
 8009c86:	4619      	mov	r1, r3
 8009c88:	84d1      	strh	r1, [r2, #38]	; 0x26
 8009c8a:	2b00      	cmp	r3, #0
 8009c8c:	d10f      	bne.n	8009cae <UART_Transmit_IT+0x8e>
 8009c8e:	687b      	ldr	r3, [r7, #4]
 8009c90:	681b      	ldr	r3, [r3, #0]
 8009c92:	68da      	ldr	r2, [r3, #12]
 8009c94:	687b      	ldr	r3, [r7, #4]
 8009c96:	681b      	ldr	r3, [r3, #0]
 8009c98:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8009c9c:	60da      	str	r2, [r3, #12]
 8009c9e:	687b      	ldr	r3, [r7, #4]
 8009ca0:	681b      	ldr	r3, [r3, #0]
 8009ca2:	68da      	ldr	r2, [r3, #12]
 8009ca4:	687b      	ldr	r3, [r7, #4]
 8009ca6:	681b      	ldr	r3, [r3, #0]
 8009ca8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8009cac:	60da      	str	r2, [r3, #12]
 8009cae:	2300      	movs	r3, #0
 8009cb0:	e000      	b.n	8009cb4 <UART_Transmit_IT+0x94>
 8009cb2:	2302      	movs	r3, #2
 8009cb4:	4618      	mov	r0, r3
 8009cb6:	3714      	adds	r7, #20
 8009cb8:	46bd      	mov	sp, r7
 8009cba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cbe:	4770      	bx	lr

08009cc0 <UART_EndTransmit_IT>:
 8009cc0:	b580      	push	{r7, lr}
 8009cc2:	b082      	sub	sp, #8
 8009cc4:	af00      	add	r7, sp, #0
 8009cc6:	6078      	str	r0, [r7, #4]
 8009cc8:	687b      	ldr	r3, [r7, #4]
 8009cca:	681b      	ldr	r3, [r3, #0]
 8009ccc:	68da      	ldr	r2, [r3, #12]
 8009cce:	687b      	ldr	r3, [r7, #4]
 8009cd0:	681b      	ldr	r3, [r3, #0]
 8009cd2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8009cd6:	60da      	str	r2, [r3, #12]
 8009cd8:	687b      	ldr	r3, [r7, #4]
 8009cda:	2220      	movs	r2, #32
 8009cdc:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8009ce0:	6878      	ldr	r0, [r7, #4]
 8009ce2:	f7ff fe73 	bl	80099cc <HAL_UART_TxCpltCallback>
 8009ce6:	2300      	movs	r3, #0
 8009ce8:	4618      	mov	r0, r3
 8009cea:	3708      	adds	r7, #8
 8009cec:	46bd      	mov	sp, r7
 8009cee:	bd80      	pop	{r7, pc}

08009cf0 <UART_Receive_IT>:
 8009cf0:	b580      	push	{r7, lr}
 8009cf2:	b08c      	sub	sp, #48	; 0x30
 8009cf4:	af00      	add	r7, sp, #0
 8009cf6:	6078      	str	r0, [r7, #4]
 8009cf8:	687b      	ldr	r3, [r7, #4]
 8009cfa:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 8009cfe:	b2db      	uxtb	r3, r3
 8009d00:	2b22      	cmp	r3, #34	; 0x22
 8009d02:	f040 80ae 	bne.w	8009e62 <UART_Receive_IT+0x172>
 8009d06:	687b      	ldr	r3, [r7, #4]
 8009d08:	689b      	ldr	r3, [r3, #8]
 8009d0a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8009d0e:	d117      	bne.n	8009d40 <UART_Receive_IT+0x50>
 8009d10:	687b      	ldr	r3, [r7, #4]
 8009d12:	691b      	ldr	r3, [r3, #16]
 8009d14:	2b00      	cmp	r3, #0
 8009d16:	d113      	bne.n	8009d40 <UART_Receive_IT+0x50>
 8009d18:	2300      	movs	r3, #0
 8009d1a:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009d1c:	687b      	ldr	r3, [r7, #4]
 8009d1e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009d20:	62bb      	str	r3, [r7, #40]	; 0x28
 8009d22:	687b      	ldr	r3, [r7, #4]
 8009d24:	681b      	ldr	r3, [r3, #0]
 8009d26:	685b      	ldr	r3, [r3, #4]
 8009d28:	b29b      	uxth	r3, r3
 8009d2a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009d2e:	b29a      	uxth	r2, r3
 8009d30:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8009d32:	801a      	strh	r2, [r3, #0]
 8009d34:	687b      	ldr	r3, [r7, #4]
 8009d36:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009d38:	1c9a      	adds	r2, r3, #2
 8009d3a:	687b      	ldr	r3, [r7, #4]
 8009d3c:	629a      	str	r2, [r3, #40]	; 0x28
 8009d3e:	e026      	b.n	8009d8e <UART_Receive_IT+0x9e>
 8009d40:	687b      	ldr	r3, [r7, #4]
 8009d42:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009d44:	62fb      	str	r3, [r7, #44]	; 0x2c
 8009d46:	2300      	movs	r3, #0
 8009d48:	62bb      	str	r3, [r7, #40]	; 0x28
 8009d4a:	687b      	ldr	r3, [r7, #4]
 8009d4c:	689b      	ldr	r3, [r3, #8]
 8009d4e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8009d52:	d007      	beq.n	8009d64 <UART_Receive_IT+0x74>
 8009d54:	687b      	ldr	r3, [r7, #4]
 8009d56:	689b      	ldr	r3, [r3, #8]
 8009d58:	2b00      	cmp	r3, #0
 8009d5a:	d10a      	bne.n	8009d72 <UART_Receive_IT+0x82>
 8009d5c:	687b      	ldr	r3, [r7, #4]
 8009d5e:	691b      	ldr	r3, [r3, #16]
 8009d60:	2b00      	cmp	r3, #0
 8009d62:	d106      	bne.n	8009d72 <UART_Receive_IT+0x82>
 8009d64:	687b      	ldr	r3, [r7, #4]
 8009d66:	681b      	ldr	r3, [r3, #0]
 8009d68:	685b      	ldr	r3, [r3, #4]
 8009d6a:	b2da      	uxtb	r2, r3
 8009d6c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8009d6e:	701a      	strb	r2, [r3, #0]
 8009d70:	e008      	b.n	8009d84 <UART_Receive_IT+0x94>
 8009d72:	687b      	ldr	r3, [r7, #4]
 8009d74:	681b      	ldr	r3, [r3, #0]
 8009d76:	685b      	ldr	r3, [r3, #4]
 8009d78:	b2db      	uxtb	r3, r3
 8009d7a:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8009d7e:	b2da      	uxtb	r2, r3
 8009d80:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8009d82:	701a      	strb	r2, [r3, #0]
 8009d84:	687b      	ldr	r3, [r7, #4]
 8009d86:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009d88:	1c5a      	adds	r2, r3, #1
 8009d8a:	687b      	ldr	r3, [r7, #4]
 8009d8c:	629a      	str	r2, [r3, #40]	; 0x28
 8009d8e:	687b      	ldr	r3, [r7, #4]
 8009d90:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8009d92:	b29b      	uxth	r3, r3
 8009d94:	3b01      	subs	r3, #1
 8009d96:	b29b      	uxth	r3, r3
 8009d98:	687a      	ldr	r2, [r7, #4]
 8009d9a:	4619      	mov	r1, r3
 8009d9c:	85d1      	strh	r1, [r2, #46]	; 0x2e
 8009d9e:	2b00      	cmp	r3, #0
 8009da0:	d15d      	bne.n	8009e5e <UART_Receive_IT+0x16e>
 8009da2:	687b      	ldr	r3, [r7, #4]
 8009da4:	681b      	ldr	r3, [r3, #0]
 8009da6:	68da      	ldr	r2, [r3, #12]
 8009da8:	687b      	ldr	r3, [r7, #4]
 8009daa:	681b      	ldr	r3, [r3, #0]
 8009dac:	f022 0220 	bic.w	r2, r2, #32
 8009db0:	60da      	str	r2, [r3, #12]
 8009db2:	687b      	ldr	r3, [r7, #4]
 8009db4:	681b      	ldr	r3, [r3, #0]
 8009db6:	68da      	ldr	r2, [r3, #12]
 8009db8:	687b      	ldr	r3, [r7, #4]
 8009dba:	681b      	ldr	r3, [r3, #0]
 8009dbc:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8009dc0:	60da      	str	r2, [r3, #12]
 8009dc2:	687b      	ldr	r3, [r7, #4]
 8009dc4:	681b      	ldr	r3, [r3, #0]
 8009dc6:	695a      	ldr	r2, [r3, #20]
 8009dc8:	687b      	ldr	r3, [r7, #4]
 8009dca:	681b      	ldr	r3, [r3, #0]
 8009dcc:	f022 0201 	bic.w	r2, r2, #1
 8009dd0:	615a      	str	r2, [r3, #20]
 8009dd2:	687b      	ldr	r3, [r7, #4]
 8009dd4:	2220      	movs	r2, #32
 8009dd6:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8009dda:	687b      	ldr	r3, [r7, #4]
 8009ddc:	2200      	movs	r2, #0
 8009dde:	635a      	str	r2, [r3, #52]	; 0x34
 8009de0:	687b      	ldr	r3, [r7, #4]
 8009de2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009de4:	2b01      	cmp	r3, #1
 8009de6:	d135      	bne.n	8009e54 <UART_Receive_IT+0x164>
 8009de8:	687b      	ldr	r3, [r7, #4]
 8009dea:	2200      	movs	r2, #0
 8009dec:	631a      	str	r2, [r3, #48]	; 0x30
 8009dee:	687b      	ldr	r3, [r7, #4]
 8009df0:	681b      	ldr	r3, [r3, #0]
 8009df2:	330c      	adds	r3, #12
 8009df4:	617b      	str	r3, [r7, #20]
 8009df6:	697b      	ldr	r3, [r7, #20]
 8009df8:	e853 3f00 	ldrex	r3, [r3]
 8009dfc:	613b      	str	r3, [r7, #16]
 8009dfe:	693b      	ldr	r3, [r7, #16]
 8009e00:	f023 0310 	bic.w	r3, r3, #16
 8009e04:	627b      	str	r3, [r7, #36]	; 0x24
 8009e06:	687b      	ldr	r3, [r7, #4]
 8009e08:	681b      	ldr	r3, [r3, #0]
 8009e0a:	330c      	adds	r3, #12
 8009e0c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8009e0e:	623a      	str	r2, [r7, #32]
 8009e10:	61fb      	str	r3, [r7, #28]
 8009e12:	69f9      	ldr	r1, [r7, #28]
 8009e14:	6a3a      	ldr	r2, [r7, #32]
 8009e16:	e841 2300 	strex	r3, r2, [r1]
 8009e1a:	61bb      	str	r3, [r7, #24]
 8009e1c:	69bb      	ldr	r3, [r7, #24]
 8009e1e:	2b00      	cmp	r3, #0
 8009e20:	d1e5      	bne.n	8009dee <UART_Receive_IT+0xfe>
 8009e22:	687b      	ldr	r3, [r7, #4]
 8009e24:	681b      	ldr	r3, [r3, #0]
 8009e26:	681b      	ldr	r3, [r3, #0]
 8009e28:	f003 0310 	and.w	r3, r3, #16
 8009e2c:	2b10      	cmp	r3, #16
 8009e2e:	d10a      	bne.n	8009e46 <UART_Receive_IT+0x156>
 8009e30:	2300      	movs	r3, #0
 8009e32:	60fb      	str	r3, [r7, #12]
 8009e34:	687b      	ldr	r3, [r7, #4]
 8009e36:	681b      	ldr	r3, [r3, #0]
 8009e38:	681b      	ldr	r3, [r3, #0]
 8009e3a:	60fb      	str	r3, [r7, #12]
 8009e3c:	687b      	ldr	r3, [r7, #4]
 8009e3e:	681b      	ldr	r3, [r3, #0]
 8009e40:	685b      	ldr	r3, [r3, #4]
 8009e42:	60fb      	str	r3, [r7, #12]
 8009e44:	68fb      	ldr	r3, [r7, #12]
 8009e46:	687b      	ldr	r3, [r7, #4]
 8009e48:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8009e4a:	4619      	mov	r1, r3
 8009e4c:	6878      	ldr	r0, [r7, #4]
 8009e4e:	f7ff fdd1 	bl	80099f4 <HAL_UARTEx_RxEventCallback>
 8009e52:	e002      	b.n	8009e5a <UART_Receive_IT+0x16a>
 8009e54:	6878      	ldr	r0, [r7, #4]
 8009e56:	f7f8 fa83 	bl	8002360 <HAL_UART_RxCpltCallback>
 8009e5a:	2300      	movs	r3, #0
 8009e5c:	e002      	b.n	8009e64 <UART_Receive_IT+0x174>
 8009e5e:	2300      	movs	r3, #0
 8009e60:	e000      	b.n	8009e64 <UART_Receive_IT+0x174>
 8009e62:	2302      	movs	r3, #2
 8009e64:	4618      	mov	r0, r3
 8009e66:	3730      	adds	r7, #48	; 0x30
 8009e68:	46bd      	mov	sp, r7
 8009e6a:	bd80      	pop	{r7, pc}

08009e6c <UART_SetConfig>:
 8009e6c:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8009e70:	b0c0      	sub	sp, #256	; 0x100
 8009e72:	af00      	add	r7, sp, #0
 8009e74:	f8c7 00f4 	str.w	r0, [r7, #244]	; 0xf4
 8009e78:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8009e7c:	681b      	ldr	r3, [r3, #0]
 8009e7e:	691b      	ldr	r3, [r3, #16]
 8009e80:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 8009e84:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8009e88:	68d9      	ldr	r1, [r3, #12]
 8009e8a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8009e8e:	681a      	ldr	r2, [r3, #0]
 8009e90:	ea40 0301 	orr.w	r3, r0, r1
 8009e94:	6113      	str	r3, [r2, #16]
 8009e96:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8009e9a:	689a      	ldr	r2, [r3, #8]
 8009e9c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8009ea0:	691b      	ldr	r3, [r3, #16]
 8009ea2:	431a      	orrs	r2, r3
 8009ea4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8009ea8:	695b      	ldr	r3, [r3, #20]
 8009eaa:	431a      	orrs	r2, r3
 8009eac:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8009eb0:	69db      	ldr	r3, [r3, #28]
 8009eb2:	4313      	orrs	r3, r2
 8009eb4:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 8009eb8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8009ebc:	681b      	ldr	r3, [r3, #0]
 8009ebe:	68db      	ldr	r3, [r3, #12]
 8009ec0:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 8009ec4:	f021 010c 	bic.w	r1, r1, #12
 8009ec8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8009ecc:	681a      	ldr	r2, [r3, #0]
 8009ece:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 8009ed2:	430b      	orrs	r3, r1
 8009ed4:	60d3      	str	r3, [r2, #12]
 8009ed6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8009eda:	681b      	ldr	r3, [r3, #0]
 8009edc:	695b      	ldr	r3, [r3, #20]
 8009ede:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 8009ee2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8009ee6:	6999      	ldr	r1, [r3, #24]
 8009ee8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8009eec:	681a      	ldr	r2, [r3, #0]
 8009eee:	ea40 0301 	orr.w	r3, r0, r1
 8009ef2:	6153      	str	r3, [r2, #20]
 8009ef4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8009ef8:	681a      	ldr	r2, [r3, #0]
 8009efa:	4b8f      	ldr	r3, [pc, #572]	; (800a138 <UART_SetConfig+0x2cc>)
 8009efc:	429a      	cmp	r2, r3
 8009efe:	d005      	beq.n	8009f0c <UART_SetConfig+0xa0>
 8009f00:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8009f04:	681a      	ldr	r2, [r3, #0]
 8009f06:	4b8d      	ldr	r3, [pc, #564]	; (800a13c <UART_SetConfig+0x2d0>)
 8009f08:	429a      	cmp	r2, r3
 8009f0a:	d104      	bne.n	8009f16 <UART_SetConfig+0xaa>
 8009f0c:	f7fd fbf8 	bl	8007700 <HAL_RCC_GetPCLK2Freq>
 8009f10:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 8009f14:	e003      	b.n	8009f1e <UART_SetConfig+0xb2>
 8009f16:	f7fd fbdf 	bl	80076d8 <HAL_RCC_GetPCLK1Freq>
 8009f1a:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 8009f1e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8009f22:	69db      	ldr	r3, [r3, #28]
 8009f24:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8009f28:	f040 810c 	bne.w	800a144 <UART_SetConfig+0x2d8>
 8009f2c:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8009f30:	2200      	movs	r2, #0
 8009f32:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 8009f36:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 8009f3a:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	; 0xe8
 8009f3e:	4622      	mov	r2, r4
 8009f40:	462b      	mov	r3, r5
 8009f42:	1891      	adds	r1, r2, r2
 8009f44:	65b9      	str	r1, [r7, #88]	; 0x58
 8009f46:	415b      	adcs	r3, r3
 8009f48:	65fb      	str	r3, [r7, #92]	; 0x5c
 8009f4a:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 8009f4e:	4621      	mov	r1, r4
 8009f50:	eb12 0801 	adds.w	r8, r2, r1
 8009f54:	4629      	mov	r1, r5
 8009f56:	eb43 0901 	adc.w	r9, r3, r1
 8009f5a:	f04f 0200 	mov.w	r2, #0
 8009f5e:	f04f 0300 	mov.w	r3, #0
 8009f62:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8009f66:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8009f6a:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8009f6e:	4690      	mov	r8, r2
 8009f70:	4699      	mov	r9, r3
 8009f72:	4623      	mov	r3, r4
 8009f74:	eb18 0303 	adds.w	r3, r8, r3
 8009f78:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8009f7c:	462b      	mov	r3, r5
 8009f7e:	eb49 0303 	adc.w	r3, r9, r3
 8009f82:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8009f86:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8009f8a:	685b      	ldr	r3, [r3, #4]
 8009f8c:	2200      	movs	r2, #0
 8009f8e:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8009f92:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 8009f96:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 8009f9a:	460b      	mov	r3, r1
 8009f9c:	18db      	adds	r3, r3, r3
 8009f9e:	653b      	str	r3, [r7, #80]	; 0x50
 8009fa0:	4613      	mov	r3, r2
 8009fa2:	eb42 0303 	adc.w	r3, r2, r3
 8009fa6:	657b      	str	r3, [r7, #84]	; 0x54
 8009fa8:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 8009fac:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 8009fb0:	f7f6 fe6a 	bl	8000c88 <__aeabi_uldivmod>
 8009fb4:	4602      	mov	r2, r0
 8009fb6:	460b      	mov	r3, r1
 8009fb8:	4b61      	ldr	r3, [pc, #388]	; (800a140 <UART_SetConfig+0x2d4>)
 8009fba:	fba3 2302 	umull	r2, r3, r3, r2
 8009fbe:	095b      	lsrs	r3, r3, #5
 8009fc0:	011c      	lsls	r4, r3, #4
 8009fc2:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8009fc6:	2200      	movs	r2, #0
 8009fc8:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8009fcc:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 8009fd0:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	; 0xd0
 8009fd4:	4642      	mov	r2, r8
 8009fd6:	464b      	mov	r3, r9
 8009fd8:	1891      	adds	r1, r2, r2
 8009fda:	64b9      	str	r1, [r7, #72]	; 0x48
 8009fdc:	415b      	adcs	r3, r3
 8009fde:	64fb      	str	r3, [r7, #76]	; 0x4c
 8009fe0:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 8009fe4:	4641      	mov	r1, r8
 8009fe6:	eb12 0a01 	adds.w	sl, r2, r1
 8009fea:	4649      	mov	r1, r9
 8009fec:	eb43 0b01 	adc.w	fp, r3, r1
 8009ff0:	f04f 0200 	mov.w	r2, #0
 8009ff4:	f04f 0300 	mov.w	r3, #0
 8009ff8:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8009ffc:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 800a000:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800a004:	4692      	mov	sl, r2
 800a006:	469b      	mov	fp, r3
 800a008:	4643      	mov	r3, r8
 800a00a:	eb1a 0303 	adds.w	r3, sl, r3
 800a00e:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800a012:	464b      	mov	r3, r9
 800a014:	eb4b 0303 	adc.w	r3, fp, r3
 800a018:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 800a01c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800a020:	685b      	ldr	r3, [r3, #4]
 800a022:	2200      	movs	r2, #0
 800a024:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800a028:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 800a02c:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 800a030:	460b      	mov	r3, r1
 800a032:	18db      	adds	r3, r3, r3
 800a034:	643b      	str	r3, [r7, #64]	; 0x40
 800a036:	4613      	mov	r3, r2
 800a038:	eb42 0303 	adc.w	r3, r2, r3
 800a03c:	647b      	str	r3, [r7, #68]	; 0x44
 800a03e:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 800a042:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 800a046:	f7f6 fe1f 	bl	8000c88 <__aeabi_uldivmod>
 800a04a:	4602      	mov	r2, r0
 800a04c:	460b      	mov	r3, r1
 800a04e:	4611      	mov	r1, r2
 800a050:	4b3b      	ldr	r3, [pc, #236]	; (800a140 <UART_SetConfig+0x2d4>)
 800a052:	fba3 2301 	umull	r2, r3, r3, r1
 800a056:	095b      	lsrs	r3, r3, #5
 800a058:	2264      	movs	r2, #100	; 0x64
 800a05a:	fb02 f303 	mul.w	r3, r2, r3
 800a05e:	1acb      	subs	r3, r1, r3
 800a060:	00db      	lsls	r3, r3, #3
 800a062:	f103 0232 	add.w	r2, r3, #50	; 0x32
 800a066:	4b36      	ldr	r3, [pc, #216]	; (800a140 <UART_SetConfig+0x2d4>)
 800a068:	fba3 2302 	umull	r2, r3, r3, r2
 800a06c:	095b      	lsrs	r3, r3, #5
 800a06e:	005b      	lsls	r3, r3, #1
 800a070:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 800a074:	441c      	add	r4, r3
 800a076:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800a07a:	2200      	movs	r2, #0
 800a07c:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800a080:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 800a084:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	; 0xb8
 800a088:	4642      	mov	r2, r8
 800a08a:	464b      	mov	r3, r9
 800a08c:	1891      	adds	r1, r2, r2
 800a08e:	63b9      	str	r1, [r7, #56]	; 0x38
 800a090:	415b      	adcs	r3, r3
 800a092:	63fb      	str	r3, [r7, #60]	; 0x3c
 800a094:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 800a098:	4641      	mov	r1, r8
 800a09a:	1851      	adds	r1, r2, r1
 800a09c:	6339      	str	r1, [r7, #48]	; 0x30
 800a09e:	4649      	mov	r1, r9
 800a0a0:	414b      	adcs	r3, r1
 800a0a2:	637b      	str	r3, [r7, #52]	; 0x34
 800a0a4:	f04f 0200 	mov.w	r2, #0
 800a0a8:	f04f 0300 	mov.w	r3, #0
 800a0ac:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	; 0x30
 800a0b0:	4659      	mov	r1, fp
 800a0b2:	00cb      	lsls	r3, r1, #3
 800a0b4:	4651      	mov	r1, sl
 800a0b6:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800a0ba:	4651      	mov	r1, sl
 800a0bc:	00ca      	lsls	r2, r1, #3
 800a0be:	4610      	mov	r0, r2
 800a0c0:	4619      	mov	r1, r3
 800a0c2:	4603      	mov	r3, r0
 800a0c4:	4642      	mov	r2, r8
 800a0c6:	189b      	adds	r3, r3, r2
 800a0c8:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800a0cc:	464b      	mov	r3, r9
 800a0ce:	460a      	mov	r2, r1
 800a0d0:	eb42 0303 	adc.w	r3, r2, r3
 800a0d4:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800a0d8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800a0dc:	685b      	ldr	r3, [r3, #4]
 800a0de:	2200      	movs	r2, #0
 800a0e0:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 800a0e4:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 800a0e8:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 800a0ec:	460b      	mov	r3, r1
 800a0ee:	18db      	adds	r3, r3, r3
 800a0f0:	62bb      	str	r3, [r7, #40]	; 0x28
 800a0f2:	4613      	mov	r3, r2
 800a0f4:	eb42 0303 	adc.w	r3, r2, r3
 800a0f8:	62fb      	str	r3, [r7, #44]	; 0x2c
 800a0fa:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800a0fe:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 800a102:	f7f6 fdc1 	bl	8000c88 <__aeabi_uldivmod>
 800a106:	4602      	mov	r2, r0
 800a108:	460b      	mov	r3, r1
 800a10a:	4b0d      	ldr	r3, [pc, #52]	; (800a140 <UART_SetConfig+0x2d4>)
 800a10c:	fba3 1302 	umull	r1, r3, r3, r2
 800a110:	095b      	lsrs	r3, r3, #5
 800a112:	2164      	movs	r1, #100	; 0x64
 800a114:	fb01 f303 	mul.w	r3, r1, r3
 800a118:	1ad3      	subs	r3, r2, r3
 800a11a:	00db      	lsls	r3, r3, #3
 800a11c:	3332      	adds	r3, #50	; 0x32
 800a11e:	4a08      	ldr	r2, [pc, #32]	; (800a140 <UART_SetConfig+0x2d4>)
 800a120:	fba2 2303 	umull	r2, r3, r2, r3
 800a124:	095b      	lsrs	r3, r3, #5
 800a126:	f003 0207 	and.w	r2, r3, #7
 800a12a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800a12e:	681b      	ldr	r3, [r3, #0]
 800a130:	4422      	add	r2, r4
 800a132:	609a      	str	r2, [r3, #8]
 800a134:	e106      	b.n	800a344 <UART_SetConfig+0x4d8>
 800a136:	bf00      	nop
 800a138:	40011000 	.word	0x40011000
 800a13c:	40011400 	.word	0x40011400
 800a140:	51eb851f 	.word	0x51eb851f
 800a144:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800a148:	2200      	movs	r2, #0
 800a14a:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800a14e:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 800a152:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 800a156:	4642      	mov	r2, r8
 800a158:	464b      	mov	r3, r9
 800a15a:	1891      	adds	r1, r2, r2
 800a15c:	6239      	str	r1, [r7, #32]
 800a15e:	415b      	adcs	r3, r3
 800a160:	627b      	str	r3, [r7, #36]	; 0x24
 800a162:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800a166:	4641      	mov	r1, r8
 800a168:	1854      	adds	r4, r2, r1
 800a16a:	4649      	mov	r1, r9
 800a16c:	eb43 0501 	adc.w	r5, r3, r1
 800a170:	f04f 0200 	mov.w	r2, #0
 800a174:	f04f 0300 	mov.w	r3, #0
 800a178:	00eb      	lsls	r3, r5, #3
 800a17a:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800a17e:	00e2      	lsls	r2, r4, #3
 800a180:	4614      	mov	r4, r2
 800a182:	461d      	mov	r5, r3
 800a184:	4643      	mov	r3, r8
 800a186:	18e3      	adds	r3, r4, r3
 800a188:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800a18c:	464b      	mov	r3, r9
 800a18e:	eb45 0303 	adc.w	r3, r5, r3
 800a192:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800a196:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800a19a:	685b      	ldr	r3, [r3, #4]
 800a19c:	2200      	movs	r2, #0
 800a19e:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 800a1a2:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 800a1a6:	f04f 0200 	mov.w	r2, #0
 800a1aa:	f04f 0300 	mov.w	r3, #0
 800a1ae:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 800a1b2:	4629      	mov	r1, r5
 800a1b4:	008b      	lsls	r3, r1, #2
 800a1b6:	4621      	mov	r1, r4
 800a1b8:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800a1bc:	4621      	mov	r1, r4
 800a1be:	008a      	lsls	r2, r1, #2
 800a1c0:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 800a1c4:	f7f6 fd60 	bl	8000c88 <__aeabi_uldivmod>
 800a1c8:	4602      	mov	r2, r0
 800a1ca:	460b      	mov	r3, r1
 800a1cc:	4b60      	ldr	r3, [pc, #384]	; (800a350 <UART_SetConfig+0x4e4>)
 800a1ce:	fba3 2302 	umull	r2, r3, r3, r2
 800a1d2:	095b      	lsrs	r3, r3, #5
 800a1d4:	011c      	lsls	r4, r3, #4
 800a1d6:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800a1da:	2200      	movs	r2, #0
 800a1dc:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800a1e0:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 800a1e4:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 800a1e8:	4642      	mov	r2, r8
 800a1ea:	464b      	mov	r3, r9
 800a1ec:	1891      	adds	r1, r2, r2
 800a1ee:	61b9      	str	r1, [r7, #24]
 800a1f0:	415b      	adcs	r3, r3
 800a1f2:	61fb      	str	r3, [r7, #28]
 800a1f4:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800a1f8:	4641      	mov	r1, r8
 800a1fa:	1851      	adds	r1, r2, r1
 800a1fc:	6139      	str	r1, [r7, #16]
 800a1fe:	4649      	mov	r1, r9
 800a200:	414b      	adcs	r3, r1
 800a202:	617b      	str	r3, [r7, #20]
 800a204:	f04f 0200 	mov.w	r2, #0
 800a208:	f04f 0300 	mov.w	r3, #0
 800a20c:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 800a210:	4659      	mov	r1, fp
 800a212:	00cb      	lsls	r3, r1, #3
 800a214:	4651      	mov	r1, sl
 800a216:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800a21a:	4651      	mov	r1, sl
 800a21c:	00ca      	lsls	r2, r1, #3
 800a21e:	4610      	mov	r0, r2
 800a220:	4619      	mov	r1, r3
 800a222:	4603      	mov	r3, r0
 800a224:	4642      	mov	r2, r8
 800a226:	189b      	adds	r3, r3, r2
 800a228:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 800a22c:	464b      	mov	r3, r9
 800a22e:	460a      	mov	r2, r1
 800a230:	eb42 0303 	adc.w	r3, r2, r3
 800a234:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800a238:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800a23c:	685b      	ldr	r3, [r3, #4]
 800a23e:	2200      	movs	r2, #0
 800a240:	67bb      	str	r3, [r7, #120]	; 0x78
 800a242:	67fa      	str	r2, [r7, #124]	; 0x7c
 800a244:	f04f 0200 	mov.w	r2, #0
 800a248:	f04f 0300 	mov.w	r3, #0
 800a24c:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	; 0x78
 800a250:	4649      	mov	r1, r9
 800a252:	008b      	lsls	r3, r1, #2
 800a254:	4641      	mov	r1, r8
 800a256:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800a25a:	4641      	mov	r1, r8
 800a25c:	008a      	lsls	r2, r1, #2
 800a25e:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 800a262:	f7f6 fd11 	bl	8000c88 <__aeabi_uldivmod>
 800a266:	4602      	mov	r2, r0
 800a268:	460b      	mov	r3, r1
 800a26a:	4611      	mov	r1, r2
 800a26c:	4b38      	ldr	r3, [pc, #224]	; (800a350 <UART_SetConfig+0x4e4>)
 800a26e:	fba3 2301 	umull	r2, r3, r3, r1
 800a272:	095b      	lsrs	r3, r3, #5
 800a274:	2264      	movs	r2, #100	; 0x64
 800a276:	fb02 f303 	mul.w	r3, r2, r3
 800a27a:	1acb      	subs	r3, r1, r3
 800a27c:	011b      	lsls	r3, r3, #4
 800a27e:	3332      	adds	r3, #50	; 0x32
 800a280:	4a33      	ldr	r2, [pc, #204]	; (800a350 <UART_SetConfig+0x4e4>)
 800a282:	fba2 2303 	umull	r2, r3, r2, r3
 800a286:	095b      	lsrs	r3, r3, #5
 800a288:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800a28c:	441c      	add	r4, r3
 800a28e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800a292:	2200      	movs	r2, #0
 800a294:	673b      	str	r3, [r7, #112]	; 0x70
 800a296:	677a      	str	r2, [r7, #116]	; 0x74
 800a298:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	; 0x70
 800a29c:	4642      	mov	r2, r8
 800a29e:	464b      	mov	r3, r9
 800a2a0:	1891      	adds	r1, r2, r2
 800a2a2:	60b9      	str	r1, [r7, #8]
 800a2a4:	415b      	adcs	r3, r3
 800a2a6:	60fb      	str	r3, [r7, #12]
 800a2a8:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800a2ac:	4641      	mov	r1, r8
 800a2ae:	1851      	adds	r1, r2, r1
 800a2b0:	6039      	str	r1, [r7, #0]
 800a2b2:	4649      	mov	r1, r9
 800a2b4:	414b      	adcs	r3, r1
 800a2b6:	607b      	str	r3, [r7, #4]
 800a2b8:	f04f 0200 	mov.w	r2, #0
 800a2bc:	f04f 0300 	mov.w	r3, #0
 800a2c0:	e9d7 ab00 	ldrd	sl, fp, [r7]
 800a2c4:	4659      	mov	r1, fp
 800a2c6:	00cb      	lsls	r3, r1, #3
 800a2c8:	4651      	mov	r1, sl
 800a2ca:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800a2ce:	4651      	mov	r1, sl
 800a2d0:	00ca      	lsls	r2, r1, #3
 800a2d2:	4610      	mov	r0, r2
 800a2d4:	4619      	mov	r1, r3
 800a2d6:	4603      	mov	r3, r0
 800a2d8:	4642      	mov	r2, r8
 800a2da:	189b      	adds	r3, r3, r2
 800a2dc:	66bb      	str	r3, [r7, #104]	; 0x68
 800a2de:	464b      	mov	r3, r9
 800a2e0:	460a      	mov	r2, r1
 800a2e2:	eb42 0303 	adc.w	r3, r2, r3
 800a2e6:	66fb      	str	r3, [r7, #108]	; 0x6c
 800a2e8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800a2ec:	685b      	ldr	r3, [r3, #4]
 800a2ee:	2200      	movs	r2, #0
 800a2f0:	663b      	str	r3, [r7, #96]	; 0x60
 800a2f2:	667a      	str	r2, [r7, #100]	; 0x64
 800a2f4:	f04f 0200 	mov.w	r2, #0
 800a2f8:	f04f 0300 	mov.w	r3, #0
 800a2fc:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 800a300:	4649      	mov	r1, r9
 800a302:	008b      	lsls	r3, r1, #2
 800a304:	4641      	mov	r1, r8
 800a306:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 800a30a:	4641      	mov	r1, r8
 800a30c:	008a      	lsls	r2, r1, #2
 800a30e:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 800a312:	f7f6 fcb9 	bl	8000c88 <__aeabi_uldivmod>
 800a316:	4602      	mov	r2, r0
 800a318:	460b      	mov	r3, r1
 800a31a:	4b0d      	ldr	r3, [pc, #52]	; (800a350 <UART_SetConfig+0x4e4>)
 800a31c:	fba3 1302 	umull	r1, r3, r3, r2
 800a320:	095b      	lsrs	r3, r3, #5
 800a322:	2164      	movs	r1, #100	; 0x64
 800a324:	fb01 f303 	mul.w	r3, r1, r3
 800a328:	1ad3      	subs	r3, r2, r3
 800a32a:	011b      	lsls	r3, r3, #4
 800a32c:	3332      	adds	r3, #50	; 0x32
 800a32e:	4a08      	ldr	r2, [pc, #32]	; (800a350 <UART_SetConfig+0x4e4>)
 800a330:	fba2 2303 	umull	r2, r3, r2, r3
 800a334:	095b      	lsrs	r3, r3, #5
 800a336:	f003 020f 	and.w	r2, r3, #15
 800a33a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800a33e:	681b      	ldr	r3, [r3, #0]
 800a340:	4422      	add	r2, r4
 800a342:	609a      	str	r2, [r3, #8]
 800a344:	bf00      	nop
 800a346:	f507 7780 	add.w	r7, r7, #256	; 0x100
 800a34a:	46bd      	mov	sp, r7
 800a34c:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800a350:	51eb851f 	.word	0x51eb851f

0800a354 <malloc>:
 800a354:	4b02      	ldr	r3, [pc, #8]	; (800a360 <malloc+0xc>)
 800a356:	4601      	mov	r1, r0
 800a358:	6818      	ldr	r0, [r3, #0]
 800a35a:	f000 b82b 	b.w	800a3b4 <_malloc_r>
 800a35e:	bf00      	nop
 800a360:	20000064 	.word	0x20000064

0800a364 <free>:
 800a364:	4b02      	ldr	r3, [pc, #8]	; (800a370 <free+0xc>)
 800a366:	4601      	mov	r1, r0
 800a368:	6818      	ldr	r0, [r3, #0]
 800a36a:	f001 bf9f 	b.w	800c2ac <_free_r>
 800a36e:	bf00      	nop
 800a370:	20000064 	.word	0x20000064

0800a374 <sbrk_aligned>:
 800a374:	b570      	push	{r4, r5, r6, lr}
 800a376:	4e0e      	ldr	r6, [pc, #56]	; (800a3b0 <sbrk_aligned+0x3c>)
 800a378:	460c      	mov	r4, r1
 800a37a:	6831      	ldr	r1, [r6, #0]
 800a37c:	4605      	mov	r5, r0
 800a37e:	b911      	cbnz	r1, 800a386 <sbrk_aligned+0x12>
 800a380:	f001 f8b4 	bl	800b4ec <_sbrk_r>
 800a384:	6030      	str	r0, [r6, #0]
 800a386:	4621      	mov	r1, r4
 800a388:	4628      	mov	r0, r5
 800a38a:	f001 f8af 	bl	800b4ec <_sbrk_r>
 800a38e:	1c43      	adds	r3, r0, #1
 800a390:	d00a      	beq.n	800a3a8 <sbrk_aligned+0x34>
 800a392:	1cc4      	adds	r4, r0, #3
 800a394:	f024 0403 	bic.w	r4, r4, #3
 800a398:	42a0      	cmp	r0, r4
 800a39a:	d007      	beq.n	800a3ac <sbrk_aligned+0x38>
 800a39c:	1a21      	subs	r1, r4, r0
 800a39e:	4628      	mov	r0, r5
 800a3a0:	f001 f8a4 	bl	800b4ec <_sbrk_r>
 800a3a4:	3001      	adds	r0, #1
 800a3a6:	d101      	bne.n	800a3ac <sbrk_aligned+0x38>
 800a3a8:	f04f 34ff 	mov.w	r4, #4294967295
 800a3ac:	4620      	mov	r0, r4
 800a3ae:	bd70      	pop	{r4, r5, r6, pc}
 800a3b0:	200009e8 	.word	0x200009e8

0800a3b4 <_malloc_r>:
 800a3b4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a3b8:	1ccd      	adds	r5, r1, #3
 800a3ba:	f025 0503 	bic.w	r5, r5, #3
 800a3be:	3508      	adds	r5, #8
 800a3c0:	2d0c      	cmp	r5, #12
 800a3c2:	bf38      	it	cc
 800a3c4:	250c      	movcc	r5, #12
 800a3c6:	2d00      	cmp	r5, #0
 800a3c8:	4607      	mov	r7, r0
 800a3ca:	db01      	blt.n	800a3d0 <_malloc_r+0x1c>
 800a3cc:	42a9      	cmp	r1, r5
 800a3ce:	d905      	bls.n	800a3dc <_malloc_r+0x28>
 800a3d0:	230c      	movs	r3, #12
 800a3d2:	603b      	str	r3, [r7, #0]
 800a3d4:	2600      	movs	r6, #0
 800a3d6:	4630      	mov	r0, r6
 800a3d8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800a3dc:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 800a4b0 <_malloc_r+0xfc>
 800a3e0:	f000 f868 	bl	800a4b4 <__malloc_lock>
 800a3e4:	f8d8 3000 	ldr.w	r3, [r8]
 800a3e8:	461c      	mov	r4, r3
 800a3ea:	bb5c      	cbnz	r4, 800a444 <_malloc_r+0x90>
 800a3ec:	4629      	mov	r1, r5
 800a3ee:	4638      	mov	r0, r7
 800a3f0:	f7ff ffc0 	bl	800a374 <sbrk_aligned>
 800a3f4:	1c43      	adds	r3, r0, #1
 800a3f6:	4604      	mov	r4, r0
 800a3f8:	d155      	bne.n	800a4a6 <_malloc_r+0xf2>
 800a3fa:	f8d8 4000 	ldr.w	r4, [r8]
 800a3fe:	4626      	mov	r6, r4
 800a400:	2e00      	cmp	r6, #0
 800a402:	d145      	bne.n	800a490 <_malloc_r+0xdc>
 800a404:	2c00      	cmp	r4, #0
 800a406:	d048      	beq.n	800a49a <_malloc_r+0xe6>
 800a408:	6823      	ldr	r3, [r4, #0]
 800a40a:	4631      	mov	r1, r6
 800a40c:	4638      	mov	r0, r7
 800a40e:	eb04 0903 	add.w	r9, r4, r3
 800a412:	f001 f86b 	bl	800b4ec <_sbrk_r>
 800a416:	4581      	cmp	r9, r0
 800a418:	d13f      	bne.n	800a49a <_malloc_r+0xe6>
 800a41a:	6821      	ldr	r1, [r4, #0]
 800a41c:	1a6d      	subs	r5, r5, r1
 800a41e:	4629      	mov	r1, r5
 800a420:	4638      	mov	r0, r7
 800a422:	f7ff ffa7 	bl	800a374 <sbrk_aligned>
 800a426:	3001      	adds	r0, #1
 800a428:	d037      	beq.n	800a49a <_malloc_r+0xe6>
 800a42a:	6823      	ldr	r3, [r4, #0]
 800a42c:	442b      	add	r3, r5
 800a42e:	6023      	str	r3, [r4, #0]
 800a430:	f8d8 3000 	ldr.w	r3, [r8]
 800a434:	2b00      	cmp	r3, #0
 800a436:	d038      	beq.n	800a4aa <_malloc_r+0xf6>
 800a438:	685a      	ldr	r2, [r3, #4]
 800a43a:	42a2      	cmp	r2, r4
 800a43c:	d12b      	bne.n	800a496 <_malloc_r+0xe2>
 800a43e:	2200      	movs	r2, #0
 800a440:	605a      	str	r2, [r3, #4]
 800a442:	e00f      	b.n	800a464 <_malloc_r+0xb0>
 800a444:	6822      	ldr	r2, [r4, #0]
 800a446:	1b52      	subs	r2, r2, r5
 800a448:	d41f      	bmi.n	800a48a <_malloc_r+0xd6>
 800a44a:	2a0b      	cmp	r2, #11
 800a44c:	d917      	bls.n	800a47e <_malloc_r+0xca>
 800a44e:	1961      	adds	r1, r4, r5
 800a450:	42a3      	cmp	r3, r4
 800a452:	6025      	str	r5, [r4, #0]
 800a454:	bf18      	it	ne
 800a456:	6059      	strne	r1, [r3, #4]
 800a458:	6863      	ldr	r3, [r4, #4]
 800a45a:	bf08      	it	eq
 800a45c:	f8c8 1000 	streq.w	r1, [r8]
 800a460:	5162      	str	r2, [r4, r5]
 800a462:	604b      	str	r3, [r1, #4]
 800a464:	4638      	mov	r0, r7
 800a466:	f104 060b 	add.w	r6, r4, #11
 800a46a:	f000 f829 	bl	800a4c0 <__malloc_unlock>
 800a46e:	f026 0607 	bic.w	r6, r6, #7
 800a472:	1d23      	adds	r3, r4, #4
 800a474:	1af2      	subs	r2, r6, r3
 800a476:	d0ae      	beq.n	800a3d6 <_malloc_r+0x22>
 800a478:	1b9b      	subs	r3, r3, r6
 800a47a:	50a3      	str	r3, [r4, r2]
 800a47c:	e7ab      	b.n	800a3d6 <_malloc_r+0x22>
 800a47e:	42a3      	cmp	r3, r4
 800a480:	6862      	ldr	r2, [r4, #4]
 800a482:	d1dd      	bne.n	800a440 <_malloc_r+0x8c>
 800a484:	f8c8 2000 	str.w	r2, [r8]
 800a488:	e7ec      	b.n	800a464 <_malloc_r+0xb0>
 800a48a:	4623      	mov	r3, r4
 800a48c:	6864      	ldr	r4, [r4, #4]
 800a48e:	e7ac      	b.n	800a3ea <_malloc_r+0x36>
 800a490:	4634      	mov	r4, r6
 800a492:	6876      	ldr	r6, [r6, #4]
 800a494:	e7b4      	b.n	800a400 <_malloc_r+0x4c>
 800a496:	4613      	mov	r3, r2
 800a498:	e7cc      	b.n	800a434 <_malloc_r+0x80>
 800a49a:	230c      	movs	r3, #12
 800a49c:	603b      	str	r3, [r7, #0]
 800a49e:	4638      	mov	r0, r7
 800a4a0:	f000 f80e 	bl	800a4c0 <__malloc_unlock>
 800a4a4:	e797      	b.n	800a3d6 <_malloc_r+0x22>
 800a4a6:	6025      	str	r5, [r4, #0]
 800a4a8:	e7dc      	b.n	800a464 <_malloc_r+0xb0>
 800a4aa:	605b      	str	r3, [r3, #4]
 800a4ac:	deff      	udf	#255	; 0xff
 800a4ae:	bf00      	nop
 800a4b0:	200009e4 	.word	0x200009e4

0800a4b4 <__malloc_lock>:
 800a4b4:	4801      	ldr	r0, [pc, #4]	; (800a4bc <__malloc_lock+0x8>)
 800a4b6:	f001 b866 	b.w	800b586 <__retarget_lock_acquire_recursive>
 800a4ba:	bf00      	nop
 800a4bc:	20000b2c 	.word	0x20000b2c

0800a4c0 <__malloc_unlock>:
 800a4c0:	4801      	ldr	r0, [pc, #4]	; (800a4c8 <__malloc_unlock+0x8>)
 800a4c2:	f001 b861 	b.w	800b588 <__retarget_lock_release_recursive>
 800a4c6:	bf00      	nop
 800a4c8:	20000b2c 	.word	0x20000b2c

0800a4cc <__cvt>:
 800a4cc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800a4d0:	ec55 4b10 	vmov	r4, r5, d0
 800a4d4:	2d00      	cmp	r5, #0
 800a4d6:	460e      	mov	r6, r1
 800a4d8:	4619      	mov	r1, r3
 800a4da:	462b      	mov	r3, r5
 800a4dc:	bfbb      	ittet	lt
 800a4de:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 800a4e2:	461d      	movlt	r5, r3
 800a4e4:	2300      	movge	r3, #0
 800a4e6:	232d      	movlt	r3, #45	; 0x2d
 800a4e8:	700b      	strb	r3, [r1, #0]
 800a4ea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800a4ec:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 800a4f0:	4691      	mov	r9, r2
 800a4f2:	f023 0820 	bic.w	r8, r3, #32
 800a4f6:	bfbc      	itt	lt
 800a4f8:	4622      	movlt	r2, r4
 800a4fa:	4614      	movlt	r4, r2
 800a4fc:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800a500:	d005      	beq.n	800a50e <__cvt+0x42>
 800a502:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 800a506:	d100      	bne.n	800a50a <__cvt+0x3e>
 800a508:	3601      	adds	r6, #1
 800a50a:	2102      	movs	r1, #2
 800a50c:	e000      	b.n	800a510 <__cvt+0x44>
 800a50e:	2103      	movs	r1, #3
 800a510:	ab03      	add	r3, sp, #12
 800a512:	9301      	str	r3, [sp, #4]
 800a514:	ab02      	add	r3, sp, #8
 800a516:	9300      	str	r3, [sp, #0]
 800a518:	ec45 4b10 	vmov	d0, r4, r5
 800a51c:	4653      	mov	r3, sl
 800a51e:	4632      	mov	r2, r6
 800a520:	f001 f8d2 	bl	800b6c8 <_dtoa_r>
 800a524:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 800a528:	4607      	mov	r7, r0
 800a52a:	d102      	bne.n	800a532 <__cvt+0x66>
 800a52c:	f019 0f01 	tst.w	r9, #1
 800a530:	d022      	beq.n	800a578 <__cvt+0xac>
 800a532:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 800a536:	eb07 0906 	add.w	r9, r7, r6
 800a53a:	d110      	bne.n	800a55e <__cvt+0x92>
 800a53c:	783b      	ldrb	r3, [r7, #0]
 800a53e:	2b30      	cmp	r3, #48	; 0x30
 800a540:	d10a      	bne.n	800a558 <__cvt+0x8c>
 800a542:	2200      	movs	r2, #0
 800a544:	2300      	movs	r3, #0
 800a546:	4620      	mov	r0, r4
 800a548:	4629      	mov	r1, r5
 800a54a:	f7f6 fabd 	bl	8000ac8 <__aeabi_dcmpeq>
 800a54e:	b918      	cbnz	r0, 800a558 <__cvt+0x8c>
 800a550:	f1c6 0601 	rsb	r6, r6, #1
 800a554:	f8ca 6000 	str.w	r6, [sl]
 800a558:	f8da 3000 	ldr.w	r3, [sl]
 800a55c:	4499      	add	r9, r3
 800a55e:	2200      	movs	r2, #0
 800a560:	2300      	movs	r3, #0
 800a562:	4620      	mov	r0, r4
 800a564:	4629      	mov	r1, r5
 800a566:	f7f6 faaf 	bl	8000ac8 <__aeabi_dcmpeq>
 800a56a:	b108      	cbz	r0, 800a570 <__cvt+0xa4>
 800a56c:	f8cd 900c 	str.w	r9, [sp, #12]
 800a570:	2230      	movs	r2, #48	; 0x30
 800a572:	9b03      	ldr	r3, [sp, #12]
 800a574:	454b      	cmp	r3, r9
 800a576:	d307      	bcc.n	800a588 <__cvt+0xbc>
 800a578:	9b03      	ldr	r3, [sp, #12]
 800a57a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800a57c:	1bdb      	subs	r3, r3, r7
 800a57e:	4638      	mov	r0, r7
 800a580:	6013      	str	r3, [r2, #0]
 800a582:	b004      	add	sp, #16
 800a584:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a588:	1c59      	adds	r1, r3, #1
 800a58a:	9103      	str	r1, [sp, #12]
 800a58c:	701a      	strb	r2, [r3, #0]
 800a58e:	e7f0      	b.n	800a572 <__cvt+0xa6>

0800a590 <__exponent>:
 800a590:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a592:	4603      	mov	r3, r0
 800a594:	2900      	cmp	r1, #0
 800a596:	bfb8      	it	lt
 800a598:	4249      	neglt	r1, r1
 800a59a:	f803 2b02 	strb.w	r2, [r3], #2
 800a59e:	bfb4      	ite	lt
 800a5a0:	222d      	movlt	r2, #45	; 0x2d
 800a5a2:	222b      	movge	r2, #43	; 0x2b
 800a5a4:	2909      	cmp	r1, #9
 800a5a6:	7042      	strb	r2, [r0, #1]
 800a5a8:	dd2a      	ble.n	800a600 <__exponent+0x70>
 800a5aa:	f10d 0207 	add.w	r2, sp, #7
 800a5ae:	4617      	mov	r7, r2
 800a5b0:	260a      	movs	r6, #10
 800a5b2:	4694      	mov	ip, r2
 800a5b4:	fb91 f5f6 	sdiv	r5, r1, r6
 800a5b8:	fb06 1415 	mls	r4, r6, r5, r1
 800a5bc:	3430      	adds	r4, #48	; 0x30
 800a5be:	f80c 4c01 	strb.w	r4, [ip, #-1]
 800a5c2:	460c      	mov	r4, r1
 800a5c4:	2c63      	cmp	r4, #99	; 0x63
 800a5c6:	f102 32ff 	add.w	r2, r2, #4294967295
 800a5ca:	4629      	mov	r1, r5
 800a5cc:	dcf1      	bgt.n	800a5b2 <__exponent+0x22>
 800a5ce:	3130      	adds	r1, #48	; 0x30
 800a5d0:	f1ac 0402 	sub.w	r4, ip, #2
 800a5d4:	f802 1c01 	strb.w	r1, [r2, #-1]
 800a5d8:	1c41      	adds	r1, r0, #1
 800a5da:	4622      	mov	r2, r4
 800a5dc:	42ba      	cmp	r2, r7
 800a5de:	d30a      	bcc.n	800a5f6 <__exponent+0x66>
 800a5e0:	f10d 0209 	add.w	r2, sp, #9
 800a5e4:	eba2 020c 	sub.w	r2, r2, ip
 800a5e8:	42bc      	cmp	r4, r7
 800a5ea:	bf88      	it	hi
 800a5ec:	2200      	movhi	r2, #0
 800a5ee:	4413      	add	r3, r2
 800a5f0:	1a18      	subs	r0, r3, r0
 800a5f2:	b003      	add	sp, #12
 800a5f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a5f6:	f812 5b01 	ldrb.w	r5, [r2], #1
 800a5fa:	f801 5f01 	strb.w	r5, [r1, #1]!
 800a5fe:	e7ed      	b.n	800a5dc <__exponent+0x4c>
 800a600:	2330      	movs	r3, #48	; 0x30
 800a602:	3130      	adds	r1, #48	; 0x30
 800a604:	7083      	strb	r3, [r0, #2]
 800a606:	70c1      	strb	r1, [r0, #3]
 800a608:	1d03      	adds	r3, r0, #4
 800a60a:	e7f1      	b.n	800a5f0 <__exponent+0x60>

0800a60c <_printf_float>:
 800a60c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a610:	ed2d 8b02 	vpush	{d8}
 800a614:	b08d      	sub	sp, #52	; 0x34
 800a616:	460c      	mov	r4, r1
 800a618:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 800a61c:	4616      	mov	r6, r2
 800a61e:	461f      	mov	r7, r3
 800a620:	4605      	mov	r5, r0
 800a622:	f000 ff2b 	bl	800b47c <_localeconv_r>
 800a626:	f8d0 a000 	ldr.w	sl, [r0]
 800a62a:	4650      	mov	r0, sl
 800a62c:	f7f5 fe20 	bl	8000270 <strlen>
 800a630:	2300      	movs	r3, #0
 800a632:	930a      	str	r3, [sp, #40]	; 0x28
 800a634:	6823      	ldr	r3, [r4, #0]
 800a636:	9305      	str	r3, [sp, #20]
 800a638:	f8d8 3000 	ldr.w	r3, [r8]
 800a63c:	f894 b018 	ldrb.w	fp, [r4, #24]
 800a640:	3307      	adds	r3, #7
 800a642:	f023 0307 	bic.w	r3, r3, #7
 800a646:	f103 0208 	add.w	r2, r3, #8
 800a64a:	f8c8 2000 	str.w	r2, [r8]
 800a64e:	e9d3 8900 	ldrd	r8, r9, [r3]
 800a652:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800a656:	9307      	str	r3, [sp, #28]
 800a658:	f8cd 8018 	str.w	r8, [sp, #24]
 800a65c:	ee08 0a10 	vmov	s16, r0
 800a660:	e9c4 8912 	strd	r8, r9, [r4, #72]	; 0x48
 800a664:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800a668:	4b9e      	ldr	r3, [pc, #632]	; (800a8e4 <_printf_float+0x2d8>)
 800a66a:	f04f 32ff 	mov.w	r2, #4294967295
 800a66e:	f7f6 fa5d 	bl	8000b2c <__aeabi_dcmpun>
 800a672:	bb88      	cbnz	r0, 800a6d8 <_printf_float+0xcc>
 800a674:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 800a678:	4b9a      	ldr	r3, [pc, #616]	; (800a8e4 <_printf_float+0x2d8>)
 800a67a:	f04f 32ff 	mov.w	r2, #4294967295
 800a67e:	f7f6 fa37 	bl	8000af0 <__aeabi_dcmple>
 800a682:	bb48      	cbnz	r0, 800a6d8 <_printf_float+0xcc>
 800a684:	2200      	movs	r2, #0
 800a686:	2300      	movs	r3, #0
 800a688:	4640      	mov	r0, r8
 800a68a:	4649      	mov	r1, r9
 800a68c:	f7f6 fa26 	bl	8000adc <__aeabi_dcmplt>
 800a690:	b110      	cbz	r0, 800a698 <_printf_float+0x8c>
 800a692:	232d      	movs	r3, #45	; 0x2d
 800a694:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800a698:	4a93      	ldr	r2, [pc, #588]	; (800a8e8 <_printf_float+0x2dc>)
 800a69a:	4b94      	ldr	r3, [pc, #592]	; (800a8ec <_printf_float+0x2e0>)
 800a69c:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 800a6a0:	bf94      	ite	ls
 800a6a2:	4690      	movls	r8, r2
 800a6a4:	4698      	movhi	r8, r3
 800a6a6:	2303      	movs	r3, #3
 800a6a8:	6123      	str	r3, [r4, #16]
 800a6aa:	9b05      	ldr	r3, [sp, #20]
 800a6ac:	f023 0304 	bic.w	r3, r3, #4
 800a6b0:	6023      	str	r3, [r4, #0]
 800a6b2:	f04f 0900 	mov.w	r9, #0
 800a6b6:	9700      	str	r7, [sp, #0]
 800a6b8:	4633      	mov	r3, r6
 800a6ba:	aa0b      	add	r2, sp, #44	; 0x2c
 800a6bc:	4621      	mov	r1, r4
 800a6be:	4628      	mov	r0, r5
 800a6c0:	f000 f9da 	bl	800aa78 <_printf_common>
 800a6c4:	3001      	adds	r0, #1
 800a6c6:	f040 8090 	bne.w	800a7ea <_printf_float+0x1de>
 800a6ca:	f04f 30ff 	mov.w	r0, #4294967295
 800a6ce:	b00d      	add	sp, #52	; 0x34
 800a6d0:	ecbd 8b02 	vpop	{d8}
 800a6d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a6d8:	4642      	mov	r2, r8
 800a6da:	464b      	mov	r3, r9
 800a6dc:	4640      	mov	r0, r8
 800a6de:	4649      	mov	r1, r9
 800a6e0:	f7f6 fa24 	bl	8000b2c <__aeabi_dcmpun>
 800a6e4:	b140      	cbz	r0, 800a6f8 <_printf_float+0xec>
 800a6e6:	464b      	mov	r3, r9
 800a6e8:	2b00      	cmp	r3, #0
 800a6ea:	bfbc      	itt	lt
 800a6ec:	232d      	movlt	r3, #45	; 0x2d
 800a6ee:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 800a6f2:	4a7f      	ldr	r2, [pc, #508]	; (800a8f0 <_printf_float+0x2e4>)
 800a6f4:	4b7f      	ldr	r3, [pc, #508]	; (800a8f4 <_printf_float+0x2e8>)
 800a6f6:	e7d1      	b.n	800a69c <_printf_float+0x90>
 800a6f8:	6863      	ldr	r3, [r4, #4]
 800a6fa:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 800a6fe:	9206      	str	r2, [sp, #24]
 800a700:	1c5a      	adds	r2, r3, #1
 800a702:	d13f      	bne.n	800a784 <_printf_float+0x178>
 800a704:	2306      	movs	r3, #6
 800a706:	6063      	str	r3, [r4, #4]
 800a708:	9b05      	ldr	r3, [sp, #20]
 800a70a:	6861      	ldr	r1, [r4, #4]
 800a70c:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 800a710:	2300      	movs	r3, #0
 800a712:	9303      	str	r3, [sp, #12]
 800a714:	ab0a      	add	r3, sp, #40	; 0x28
 800a716:	e9cd b301 	strd	fp, r3, [sp, #4]
 800a71a:	ab09      	add	r3, sp, #36	; 0x24
 800a71c:	ec49 8b10 	vmov	d0, r8, r9
 800a720:	9300      	str	r3, [sp, #0]
 800a722:	6022      	str	r2, [r4, #0]
 800a724:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 800a728:	4628      	mov	r0, r5
 800a72a:	f7ff fecf 	bl	800a4cc <__cvt>
 800a72e:	9b06      	ldr	r3, [sp, #24]
 800a730:	9909      	ldr	r1, [sp, #36]	; 0x24
 800a732:	2b47      	cmp	r3, #71	; 0x47
 800a734:	4680      	mov	r8, r0
 800a736:	d108      	bne.n	800a74a <_printf_float+0x13e>
 800a738:	1cc8      	adds	r0, r1, #3
 800a73a:	db02      	blt.n	800a742 <_printf_float+0x136>
 800a73c:	6863      	ldr	r3, [r4, #4]
 800a73e:	4299      	cmp	r1, r3
 800a740:	dd41      	ble.n	800a7c6 <_printf_float+0x1ba>
 800a742:	f1ab 0302 	sub.w	r3, fp, #2
 800a746:	fa5f fb83 	uxtb.w	fp, r3
 800a74a:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800a74e:	d820      	bhi.n	800a792 <_printf_float+0x186>
 800a750:	3901      	subs	r1, #1
 800a752:	465a      	mov	r2, fp
 800a754:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800a758:	9109      	str	r1, [sp, #36]	; 0x24
 800a75a:	f7ff ff19 	bl	800a590 <__exponent>
 800a75e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800a760:	1813      	adds	r3, r2, r0
 800a762:	2a01      	cmp	r2, #1
 800a764:	4681      	mov	r9, r0
 800a766:	6123      	str	r3, [r4, #16]
 800a768:	dc02      	bgt.n	800a770 <_printf_float+0x164>
 800a76a:	6822      	ldr	r2, [r4, #0]
 800a76c:	07d2      	lsls	r2, r2, #31
 800a76e:	d501      	bpl.n	800a774 <_printf_float+0x168>
 800a770:	3301      	adds	r3, #1
 800a772:	6123      	str	r3, [r4, #16]
 800a774:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 800a778:	2b00      	cmp	r3, #0
 800a77a:	d09c      	beq.n	800a6b6 <_printf_float+0xaa>
 800a77c:	232d      	movs	r3, #45	; 0x2d
 800a77e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800a782:	e798      	b.n	800a6b6 <_printf_float+0xaa>
 800a784:	9a06      	ldr	r2, [sp, #24]
 800a786:	2a47      	cmp	r2, #71	; 0x47
 800a788:	d1be      	bne.n	800a708 <_printf_float+0xfc>
 800a78a:	2b00      	cmp	r3, #0
 800a78c:	d1bc      	bne.n	800a708 <_printf_float+0xfc>
 800a78e:	2301      	movs	r3, #1
 800a790:	e7b9      	b.n	800a706 <_printf_float+0xfa>
 800a792:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 800a796:	d118      	bne.n	800a7ca <_printf_float+0x1be>
 800a798:	2900      	cmp	r1, #0
 800a79a:	6863      	ldr	r3, [r4, #4]
 800a79c:	dd0b      	ble.n	800a7b6 <_printf_float+0x1aa>
 800a79e:	6121      	str	r1, [r4, #16]
 800a7a0:	b913      	cbnz	r3, 800a7a8 <_printf_float+0x19c>
 800a7a2:	6822      	ldr	r2, [r4, #0]
 800a7a4:	07d0      	lsls	r0, r2, #31
 800a7a6:	d502      	bpl.n	800a7ae <_printf_float+0x1a2>
 800a7a8:	3301      	adds	r3, #1
 800a7aa:	440b      	add	r3, r1
 800a7ac:	6123      	str	r3, [r4, #16]
 800a7ae:	65a1      	str	r1, [r4, #88]	; 0x58
 800a7b0:	f04f 0900 	mov.w	r9, #0
 800a7b4:	e7de      	b.n	800a774 <_printf_float+0x168>
 800a7b6:	b913      	cbnz	r3, 800a7be <_printf_float+0x1b2>
 800a7b8:	6822      	ldr	r2, [r4, #0]
 800a7ba:	07d2      	lsls	r2, r2, #31
 800a7bc:	d501      	bpl.n	800a7c2 <_printf_float+0x1b6>
 800a7be:	3302      	adds	r3, #2
 800a7c0:	e7f4      	b.n	800a7ac <_printf_float+0x1a0>
 800a7c2:	2301      	movs	r3, #1
 800a7c4:	e7f2      	b.n	800a7ac <_printf_float+0x1a0>
 800a7c6:	f04f 0b67 	mov.w	fp, #103	; 0x67
 800a7ca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a7cc:	4299      	cmp	r1, r3
 800a7ce:	db05      	blt.n	800a7dc <_printf_float+0x1d0>
 800a7d0:	6823      	ldr	r3, [r4, #0]
 800a7d2:	6121      	str	r1, [r4, #16]
 800a7d4:	07d8      	lsls	r0, r3, #31
 800a7d6:	d5ea      	bpl.n	800a7ae <_printf_float+0x1a2>
 800a7d8:	1c4b      	adds	r3, r1, #1
 800a7da:	e7e7      	b.n	800a7ac <_printf_float+0x1a0>
 800a7dc:	2900      	cmp	r1, #0
 800a7de:	bfd4      	ite	le
 800a7e0:	f1c1 0202 	rsble	r2, r1, #2
 800a7e4:	2201      	movgt	r2, #1
 800a7e6:	4413      	add	r3, r2
 800a7e8:	e7e0      	b.n	800a7ac <_printf_float+0x1a0>
 800a7ea:	6823      	ldr	r3, [r4, #0]
 800a7ec:	055a      	lsls	r2, r3, #21
 800a7ee:	d407      	bmi.n	800a800 <_printf_float+0x1f4>
 800a7f0:	6923      	ldr	r3, [r4, #16]
 800a7f2:	4642      	mov	r2, r8
 800a7f4:	4631      	mov	r1, r6
 800a7f6:	4628      	mov	r0, r5
 800a7f8:	47b8      	blx	r7
 800a7fa:	3001      	adds	r0, #1
 800a7fc:	d12c      	bne.n	800a858 <_printf_float+0x24c>
 800a7fe:	e764      	b.n	800a6ca <_printf_float+0xbe>
 800a800:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800a804:	f240 80e0 	bls.w	800a9c8 <_printf_float+0x3bc>
 800a808:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800a80c:	2200      	movs	r2, #0
 800a80e:	2300      	movs	r3, #0
 800a810:	f7f6 f95a 	bl	8000ac8 <__aeabi_dcmpeq>
 800a814:	2800      	cmp	r0, #0
 800a816:	d034      	beq.n	800a882 <_printf_float+0x276>
 800a818:	4a37      	ldr	r2, [pc, #220]	; (800a8f8 <_printf_float+0x2ec>)
 800a81a:	2301      	movs	r3, #1
 800a81c:	4631      	mov	r1, r6
 800a81e:	4628      	mov	r0, r5
 800a820:	47b8      	blx	r7
 800a822:	3001      	adds	r0, #1
 800a824:	f43f af51 	beq.w	800a6ca <_printf_float+0xbe>
 800a828:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800a82c:	429a      	cmp	r2, r3
 800a82e:	db02      	blt.n	800a836 <_printf_float+0x22a>
 800a830:	6823      	ldr	r3, [r4, #0]
 800a832:	07d8      	lsls	r0, r3, #31
 800a834:	d510      	bpl.n	800a858 <_printf_float+0x24c>
 800a836:	ee18 3a10 	vmov	r3, s16
 800a83a:	4652      	mov	r2, sl
 800a83c:	4631      	mov	r1, r6
 800a83e:	4628      	mov	r0, r5
 800a840:	47b8      	blx	r7
 800a842:	3001      	adds	r0, #1
 800a844:	f43f af41 	beq.w	800a6ca <_printf_float+0xbe>
 800a848:	f04f 0800 	mov.w	r8, #0
 800a84c:	f104 091a 	add.w	r9, r4, #26
 800a850:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a852:	3b01      	subs	r3, #1
 800a854:	4543      	cmp	r3, r8
 800a856:	dc09      	bgt.n	800a86c <_printf_float+0x260>
 800a858:	6823      	ldr	r3, [r4, #0]
 800a85a:	079b      	lsls	r3, r3, #30
 800a85c:	f100 8107 	bmi.w	800aa6e <_printf_float+0x462>
 800a860:	68e0      	ldr	r0, [r4, #12]
 800a862:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800a864:	4298      	cmp	r0, r3
 800a866:	bfb8      	it	lt
 800a868:	4618      	movlt	r0, r3
 800a86a:	e730      	b.n	800a6ce <_printf_float+0xc2>
 800a86c:	2301      	movs	r3, #1
 800a86e:	464a      	mov	r2, r9
 800a870:	4631      	mov	r1, r6
 800a872:	4628      	mov	r0, r5
 800a874:	47b8      	blx	r7
 800a876:	3001      	adds	r0, #1
 800a878:	f43f af27 	beq.w	800a6ca <_printf_float+0xbe>
 800a87c:	f108 0801 	add.w	r8, r8, #1
 800a880:	e7e6      	b.n	800a850 <_printf_float+0x244>
 800a882:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a884:	2b00      	cmp	r3, #0
 800a886:	dc39      	bgt.n	800a8fc <_printf_float+0x2f0>
 800a888:	4a1b      	ldr	r2, [pc, #108]	; (800a8f8 <_printf_float+0x2ec>)
 800a88a:	2301      	movs	r3, #1
 800a88c:	4631      	mov	r1, r6
 800a88e:	4628      	mov	r0, r5
 800a890:	47b8      	blx	r7
 800a892:	3001      	adds	r0, #1
 800a894:	f43f af19 	beq.w	800a6ca <_printf_float+0xbe>
 800a898:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 800a89c:	4313      	orrs	r3, r2
 800a89e:	d102      	bne.n	800a8a6 <_printf_float+0x29a>
 800a8a0:	6823      	ldr	r3, [r4, #0]
 800a8a2:	07d9      	lsls	r1, r3, #31
 800a8a4:	d5d8      	bpl.n	800a858 <_printf_float+0x24c>
 800a8a6:	ee18 3a10 	vmov	r3, s16
 800a8aa:	4652      	mov	r2, sl
 800a8ac:	4631      	mov	r1, r6
 800a8ae:	4628      	mov	r0, r5
 800a8b0:	47b8      	blx	r7
 800a8b2:	3001      	adds	r0, #1
 800a8b4:	f43f af09 	beq.w	800a6ca <_printf_float+0xbe>
 800a8b8:	f04f 0900 	mov.w	r9, #0
 800a8bc:	f104 0a1a 	add.w	sl, r4, #26
 800a8c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a8c2:	425b      	negs	r3, r3
 800a8c4:	454b      	cmp	r3, r9
 800a8c6:	dc01      	bgt.n	800a8cc <_printf_float+0x2c0>
 800a8c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a8ca:	e792      	b.n	800a7f2 <_printf_float+0x1e6>
 800a8cc:	2301      	movs	r3, #1
 800a8ce:	4652      	mov	r2, sl
 800a8d0:	4631      	mov	r1, r6
 800a8d2:	4628      	mov	r0, r5
 800a8d4:	47b8      	blx	r7
 800a8d6:	3001      	adds	r0, #1
 800a8d8:	f43f aef7 	beq.w	800a6ca <_printf_float+0xbe>
 800a8dc:	f109 0901 	add.w	r9, r9, #1
 800a8e0:	e7ee      	b.n	800a8c0 <_printf_float+0x2b4>
 800a8e2:	bf00      	nop
 800a8e4:	7fefffff 	.word	0x7fefffff
 800a8e8:	08011df0 	.word	0x08011df0
 800a8ec:	08011df4 	.word	0x08011df4
 800a8f0:	08011df8 	.word	0x08011df8
 800a8f4:	08011dfc 	.word	0x08011dfc
 800a8f8:	08011e00 	.word	0x08011e00
 800a8fc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800a8fe:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800a900:	429a      	cmp	r2, r3
 800a902:	bfa8      	it	ge
 800a904:	461a      	movge	r2, r3
 800a906:	2a00      	cmp	r2, #0
 800a908:	4691      	mov	r9, r2
 800a90a:	dc37      	bgt.n	800a97c <_printf_float+0x370>
 800a90c:	f04f 0b00 	mov.w	fp, #0
 800a910:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800a914:	f104 021a 	add.w	r2, r4, #26
 800a918:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800a91a:	9305      	str	r3, [sp, #20]
 800a91c:	eba3 0309 	sub.w	r3, r3, r9
 800a920:	455b      	cmp	r3, fp
 800a922:	dc33      	bgt.n	800a98c <_printf_float+0x380>
 800a924:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800a928:	429a      	cmp	r2, r3
 800a92a:	db3b      	blt.n	800a9a4 <_printf_float+0x398>
 800a92c:	6823      	ldr	r3, [r4, #0]
 800a92e:	07da      	lsls	r2, r3, #31
 800a930:	d438      	bmi.n	800a9a4 <_printf_float+0x398>
 800a932:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 800a936:	eba2 0903 	sub.w	r9, r2, r3
 800a93a:	9b05      	ldr	r3, [sp, #20]
 800a93c:	1ad2      	subs	r2, r2, r3
 800a93e:	4591      	cmp	r9, r2
 800a940:	bfa8      	it	ge
 800a942:	4691      	movge	r9, r2
 800a944:	f1b9 0f00 	cmp.w	r9, #0
 800a948:	dc35      	bgt.n	800a9b6 <_printf_float+0x3aa>
 800a94a:	f04f 0800 	mov.w	r8, #0
 800a94e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800a952:	f104 0a1a 	add.w	sl, r4, #26
 800a956:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800a95a:	1a9b      	subs	r3, r3, r2
 800a95c:	eba3 0309 	sub.w	r3, r3, r9
 800a960:	4543      	cmp	r3, r8
 800a962:	f77f af79 	ble.w	800a858 <_printf_float+0x24c>
 800a966:	2301      	movs	r3, #1
 800a968:	4652      	mov	r2, sl
 800a96a:	4631      	mov	r1, r6
 800a96c:	4628      	mov	r0, r5
 800a96e:	47b8      	blx	r7
 800a970:	3001      	adds	r0, #1
 800a972:	f43f aeaa 	beq.w	800a6ca <_printf_float+0xbe>
 800a976:	f108 0801 	add.w	r8, r8, #1
 800a97a:	e7ec      	b.n	800a956 <_printf_float+0x34a>
 800a97c:	4613      	mov	r3, r2
 800a97e:	4631      	mov	r1, r6
 800a980:	4642      	mov	r2, r8
 800a982:	4628      	mov	r0, r5
 800a984:	47b8      	blx	r7
 800a986:	3001      	adds	r0, #1
 800a988:	d1c0      	bne.n	800a90c <_printf_float+0x300>
 800a98a:	e69e      	b.n	800a6ca <_printf_float+0xbe>
 800a98c:	2301      	movs	r3, #1
 800a98e:	4631      	mov	r1, r6
 800a990:	4628      	mov	r0, r5
 800a992:	9205      	str	r2, [sp, #20]
 800a994:	47b8      	blx	r7
 800a996:	3001      	adds	r0, #1
 800a998:	f43f ae97 	beq.w	800a6ca <_printf_float+0xbe>
 800a99c:	9a05      	ldr	r2, [sp, #20]
 800a99e:	f10b 0b01 	add.w	fp, fp, #1
 800a9a2:	e7b9      	b.n	800a918 <_printf_float+0x30c>
 800a9a4:	ee18 3a10 	vmov	r3, s16
 800a9a8:	4652      	mov	r2, sl
 800a9aa:	4631      	mov	r1, r6
 800a9ac:	4628      	mov	r0, r5
 800a9ae:	47b8      	blx	r7
 800a9b0:	3001      	adds	r0, #1
 800a9b2:	d1be      	bne.n	800a932 <_printf_float+0x326>
 800a9b4:	e689      	b.n	800a6ca <_printf_float+0xbe>
 800a9b6:	9a05      	ldr	r2, [sp, #20]
 800a9b8:	464b      	mov	r3, r9
 800a9ba:	4442      	add	r2, r8
 800a9bc:	4631      	mov	r1, r6
 800a9be:	4628      	mov	r0, r5
 800a9c0:	47b8      	blx	r7
 800a9c2:	3001      	adds	r0, #1
 800a9c4:	d1c1      	bne.n	800a94a <_printf_float+0x33e>
 800a9c6:	e680      	b.n	800a6ca <_printf_float+0xbe>
 800a9c8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800a9ca:	2a01      	cmp	r2, #1
 800a9cc:	dc01      	bgt.n	800a9d2 <_printf_float+0x3c6>
 800a9ce:	07db      	lsls	r3, r3, #31
 800a9d0:	d53a      	bpl.n	800aa48 <_printf_float+0x43c>
 800a9d2:	2301      	movs	r3, #1
 800a9d4:	4642      	mov	r2, r8
 800a9d6:	4631      	mov	r1, r6
 800a9d8:	4628      	mov	r0, r5
 800a9da:	47b8      	blx	r7
 800a9dc:	3001      	adds	r0, #1
 800a9de:	f43f ae74 	beq.w	800a6ca <_printf_float+0xbe>
 800a9e2:	ee18 3a10 	vmov	r3, s16
 800a9e6:	4652      	mov	r2, sl
 800a9e8:	4631      	mov	r1, r6
 800a9ea:	4628      	mov	r0, r5
 800a9ec:	47b8      	blx	r7
 800a9ee:	3001      	adds	r0, #1
 800a9f0:	f43f ae6b 	beq.w	800a6ca <_printf_float+0xbe>
 800a9f4:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800a9f8:	2200      	movs	r2, #0
 800a9fa:	2300      	movs	r3, #0
 800a9fc:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 800aa00:	f7f6 f862 	bl	8000ac8 <__aeabi_dcmpeq>
 800aa04:	b9d8      	cbnz	r0, 800aa3e <_printf_float+0x432>
 800aa06:	f10a 33ff 	add.w	r3, sl, #4294967295
 800aa0a:	f108 0201 	add.w	r2, r8, #1
 800aa0e:	4631      	mov	r1, r6
 800aa10:	4628      	mov	r0, r5
 800aa12:	47b8      	blx	r7
 800aa14:	3001      	adds	r0, #1
 800aa16:	d10e      	bne.n	800aa36 <_printf_float+0x42a>
 800aa18:	e657      	b.n	800a6ca <_printf_float+0xbe>
 800aa1a:	2301      	movs	r3, #1
 800aa1c:	4652      	mov	r2, sl
 800aa1e:	4631      	mov	r1, r6
 800aa20:	4628      	mov	r0, r5
 800aa22:	47b8      	blx	r7
 800aa24:	3001      	adds	r0, #1
 800aa26:	f43f ae50 	beq.w	800a6ca <_printf_float+0xbe>
 800aa2a:	f108 0801 	add.w	r8, r8, #1
 800aa2e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800aa30:	3b01      	subs	r3, #1
 800aa32:	4543      	cmp	r3, r8
 800aa34:	dcf1      	bgt.n	800aa1a <_printf_float+0x40e>
 800aa36:	464b      	mov	r3, r9
 800aa38:	f104 0250 	add.w	r2, r4, #80	; 0x50
 800aa3c:	e6da      	b.n	800a7f4 <_printf_float+0x1e8>
 800aa3e:	f04f 0800 	mov.w	r8, #0
 800aa42:	f104 0a1a 	add.w	sl, r4, #26
 800aa46:	e7f2      	b.n	800aa2e <_printf_float+0x422>
 800aa48:	2301      	movs	r3, #1
 800aa4a:	4642      	mov	r2, r8
 800aa4c:	e7df      	b.n	800aa0e <_printf_float+0x402>
 800aa4e:	2301      	movs	r3, #1
 800aa50:	464a      	mov	r2, r9
 800aa52:	4631      	mov	r1, r6
 800aa54:	4628      	mov	r0, r5
 800aa56:	47b8      	blx	r7
 800aa58:	3001      	adds	r0, #1
 800aa5a:	f43f ae36 	beq.w	800a6ca <_printf_float+0xbe>
 800aa5e:	f108 0801 	add.w	r8, r8, #1
 800aa62:	68e3      	ldr	r3, [r4, #12]
 800aa64:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800aa66:	1a5b      	subs	r3, r3, r1
 800aa68:	4543      	cmp	r3, r8
 800aa6a:	dcf0      	bgt.n	800aa4e <_printf_float+0x442>
 800aa6c:	e6f8      	b.n	800a860 <_printf_float+0x254>
 800aa6e:	f04f 0800 	mov.w	r8, #0
 800aa72:	f104 0919 	add.w	r9, r4, #25
 800aa76:	e7f4      	b.n	800aa62 <_printf_float+0x456>

0800aa78 <_printf_common>:
 800aa78:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800aa7c:	4616      	mov	r6, r2
 800aa7e:	4699      	mov	r9, r3
 800aa80:	688a      	ldr	r2, [r1, #8]
 800aa82:	690b      	ldr	r3, [r1, #16]
 800aa84:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800aa88:	4293      	cmp	r3, r2
 800aa8a:	bfb8      	it	lt
 800aa8c:	4613      	movlt	r3, r2
 800aa8e:	6033      	str	r3, [r6, #0]
 800aa90:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800aa94:	4607      	mov	r7, r0
 800aa96:	460c      	mov	r4, r1
 800aa98:	b10a      	cbz	r2, 800aa9e <_printf_common+0x26>
 800aa9a:	3301      	adds	r3, #1
 800aa9c:	6033      	str	r3, [r6, #0]
 800aa9e:	6823      	ldr	r3, [r4, #0]
 800aaa0:	0699      	lsls	r1, r3, #26
 800aaa2:	bf42      	ittt	mi
 800aaa4:	6833      	ldrmi	r3, [r6, #0]
 800aaa6:	3302      	addmi	r3, #2
 800aaa8:	6033      	strmi	r3, [r6, #0]
 800aaaa:	6825      	ldr	r5, [r4, #0]
 800aaac:	f015 0506 	ands.w	r5, r5, #6
 800aab0:	d106      	bne.n	800aac0 <_printf_common+0x48>
 800aab2:	f104 0a19 	add.w	sl, r4, #25
 800aab6:	68e3      	ldr	r3, [r4, #12]
 800aab8:	6832      	ldr	r2, [r6, #0]
 800aaba:	1a9b      	subs	r3, r3, r2
 800aabc:	42ab      	cmp	r3, r5
 800aabe:	dc26      	bgt.n	800ab0e <_printf_common+0x96>
 800aac0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800aac4:	1e13      	subs	r3, r2, #0
 800aac6:	6822      	ldr	r2, [r4, #0]
 800aac8:	bf18      	it	ne
 800aaca:	2301      	movne	r3, #1
 800aacc:	0692      	lsls	r2, r2, #26
 800aace:	d42b      	bmi.n	800ab28 <_printf_common+0xb0>
 800aad0:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800aad4:	4649      	mov	r1, r9
 800aad6:	4638      	mov	r0, r7
 800aad8:	47c0      	blx	r8
 800aada:	3001      	adds	r0, #1
 800aadc:	d01e      	beq.n	800ab1c <_printf_common+0xa4>
 800aade:	6823      	ldr	r3, [r4, #0]
 800aae0:	6922      	ldr	r2, [r4, #16]
 800aae2:	f003 0306 	and.w	r3, r3, #6
 800aae6:	2b04      	cmp	r3, #4
 800aae8:	bf02      	ittt	eq
 800aaea:	68e5      	ldreq	r5, [r4, #12]
 800aaec:	6833      	ldreq	r3, [r6, #0]
 800aaee:	1aed      	subeq	r5, r5, r3
 800aaf0:	68a3      	ldr	r3, [r4, #8]
 800aaf2:	bf0c      	ite	eq
 800aaf4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800aaf8:	2500      	movne	r5, #0
 800aafa:	4293      	cmp	r3, r2
 800aafc:	bfc4      	itt	gt
 800aafe:	1a9b      	subgt	r3, r3, r2
 800ab00:	18ed      	addgt	r5, r5, r3
 800ab02:	2600      	movs	r6, #0
 800ab04:	341a      	adds	r4, #26
 800ab06:	42b5      	cmp	r5, r6
 800ab08:	d11a      	bne.n	800ab40 <_printf_common+0xc8>
 800ab0a:	2000      	movs	r0, #0
 800ab0c:	e008      	b.n	800ab20 <_printf_common+0xa8>
 800ab0e:	2301      	movs	r3, #1
 800ab10:	4652      	mov	r2, sl
 800ab12:	4649      	mov	r1, r9
 800ab14:	4638      	mov	r0, r7
 800ab16:	47c0      	blx	r8
 800ab18:	3001      	adds	r0, #1
 800ab1a:	d103      	bne.n	800ab24 <_printf_common+0xac>
 800ab1c:	f04f 30ff 	mov.w	r0, #4294967295
 800ab20:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ab24:	3501      	adds	r5, #1
 800ab26:	e7c6      	b.n	800aab6 <_printf_common+0x3e>
 800ab28:	18e1      	adds	r1, r4, r3
 800ab2a:	1c5a      	adds	r2, r3, #1
 800ab2c:	2030      	movs	r0, #48	; 0x30
 800ab2e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800ab32:	4422      	add	r2, r4
 800ab34:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800ab38:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800ab3c:	3302      	adds	r3, #2
 800ab3e:	e7c7      	b.n	800aad0 <_printf_common+0x58>
 800ab40:	2301      	movs	r3, #1
 800ab42:	4622      	mov	r2, r4
 800ab44:	4649      	mov	r1, r9
 800ab46:	4638      	mov	r0, r7
 800ab48:	47c0      	blx	r8
 800ab4a:	3001      	adds	r0, #1
 800ab4c:	d0e6      	beq.n	800ab1c <_printf_common+0xa4>
 800ab4e:	3601      	adds	r6, #1
 800ab50:	e7d9      	b.n	800ab06 <_printf_common+0x8e>
	...

0800ab54 <_printf_i>:
 800ab54:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800ab58:	7e0f      	ldrb	r7, [r1, #24]
 800ab5a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800ab5c:	2f78      	cmp	r7, #120	; 0x78
 800ab5e:	4691      	mov	r9, r2
 800ab60:	4680      	mov	r8, r0
 800ab62:	460c      	mov	r4, r1
 800ab64:	469a      	mov	sl, r3
 800ab66:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800ab6a:	d807      	bhi.n	800ab7c <_printf_i+0x28>
 800ab6c:	2f62      	cmp	r7, #98	; 0x62
 800ab6e:	d80a      	bhi.n	800ab86 <_printf_i+0x32>
 800ab70:	2f00      	cmp	r7, #0
 800ab72:	f000 80d4 	beq.w	800ad1e <_printf_i+0x1ca>
 800ab76:	2f58      	cmp	r7, #88	; 0x58
 800ab78:	f000 80c0 	beq.w	800acfc <_printf_i+0x1a8>
 800ab7c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800ab80:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800ab84:	e03a      	b.n	800abfc <_printf_i+0xa8>
 800ab86:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 800ab8a:	2b15      	cmp	r3, #21
 800ab8c:	d8f6      	bhi.n	800ab7c <_printf_i+0x28>
 800ab8e:	a101      	add	r1, pc, #4	; (adr r1, 800ab94 <_printf_i+0x40>)
 800ab90:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800ab94:	0800abed 	.word	0x0800abed
 800ab98:	0800ac01 	.word	0x0800ac01
 800ab9c:	0800ab7d 	.word	0x0800ab7d
 800aba0:	0800ab7d 	.word	0x0800ab7d
 800aba4:	0800ab7d 	.word	0x0800ab7d
 800aba8:	0800ab7d 	.word	0x0800ab7d
 800abac:	0800ac01 	.word	0x0800ac01
 800abb0:	0800ab7d 	.word	0x0800ab7d
 800abb4:	0800ab7d 	.word	0x0800ab7d
 800abb8:	0800ab7d 	.word	0x0800ab7d
 800abbc:	0800ab7d 	.word	0x0800ab7d
 800abc0:	0800ad05 	.word	0x0800ad05
 800abc4:	0800ac2d 	.word	0x0800ac2d
 800abc8:	0800acbf 	.word	0x0800acbf
 800abcc:	0800ab7d 	.word	0x0800ab7d
 800abd0:	0800ab7d 	.word	0x0800ab7d
 800abd4:	0800ad27 	.word	0x0800ad27
 800abd8:	0800ab7d 	.word	0x0800ab7d
 800abdc:	0800ac2d 	.word	0x0800ac2d
 800abe0:	0800ab7d 	.word	0x0800ab7d
 800abe4:	0800ab7d 	.word	0x0800ab7d
 800abe8:	0800acc7 	.word	0x0800acc7
 800abec:	682b      	ldr	r3, [r5, #0]
 800abee:	1d1a      	adds	r2, r3, #4
 800abf0:	681b      	ldr	r3, [r3, #0]
 800abf2:	602a      	str	r2, [r5, #0]
 800abf4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800abf8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800abfc:	2301      	movs	r3, #1
 800abfe:	e09f      	b.n	800ad40 <_printf_i+0x1ec>
 800ac00:	6820      	ldr	r0, [r4, #0]
 800ac02:	682b      	ldr	r3, [r5, #0]
 800ac04:	0607      	lsls	r7, r0, #24
 800ac06:	f103 0104 	add.w	r1, r3, #4
 800ac0a:	6029      	str	r1, [r5, #0]
 800ac0c:	d501      	bpl.n	800ac12 <_printf_i+0xbe>
 800ac0e:	681e      	ldr	r6, [r3, #0]
 800ac10:	e003      	b.n	800ac1a <_printf_i+0xc6>
 800ac12:	0646      	lsls	r6, r0, #25
 800ac14:	d5fb      	bpl.n	800ac0e <_printf_i+0xba>
 800ac16:	f9b3 6000 	ldrsh.w	r6, [r3]
 800ac1a:	2e00      	cmp	r6, #0
 800ac1c:	da03      	bge.n	800ac26 <_printf_i+0xd2>
 800ac1e:	232d      	movs	r3, #45	; 0x2d
 800ac20:	4276      	negs	r6, r6
 800ac22:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800ac26:	485a      	ldr	r0, [pc, #360]	; (800ad90 <_printf_i+0x23c>)
 800ac28:	230a      	movs	r3, #10
 800ac2a:	e012      	b.n	800ac52 <_printf_i+0xfe>
 800ac2c:	682b      	ldr	r3, [r5, #0]
 800ac2e:	6820      	ldr	r0, [r4, #0]
 800ac30:	1d19      	adds	r1, r3, #4
 800ac32:	6029      	str	r1, [r5, #0]
 800ac34:	0605      	lsls	r5, r0, #24
 800ac36:	d501      	bpl.n	800ac3c <_printf_i+0xe8>
 800ac38:	681e      	ldr	r6, [r3, #0]
 800ac3a:	e002      	b.n	800ac42 <_printf_i+0xee>
 800ac3c:	0641      	lsls	r1, r0, #25
 800ac3e:	d5fb      	bpl.n	800ac38 <_printf_i+0xe4>
 800ac40:	881e      	ldrh	r6, [r3, #0]
 800ac42:	4853      	ldr	r0, [pc, #332]	; (800ad90 <_printf_i+0x23c>)
 800ac44:	2f6f      	cmp	r7, #111	; 0x6f
 800ac46:	bf0c      	ite	eq
 800ac48:	2308      	moveq	r3, #8
 800ac4a:	230a      	movne	r3, #10
 800ac4c:	2100      	movs	r1, #0
 800ac4e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800ac52:	6865      	ldr	r5, [r4, #4]
 800ac54:	60a5      	str	r5, [r4, #8]
 800ac56:	2d00      	cmp	r5, #0
 800ac58:	bfa2      	ittt	ge
 800ac5a:	6821      	ldrge	r1, [r4, #0]
 800ac5c:	f021 0104 	bicge.w	r1, r1, #4
 800ac60:	6021      	strge	r1, [r4, #0]
 800ac62:	b90e      	cbnz	r6, 800ac68 <_printf_i+0x114>
 800ac64:	2d00      	cmp	r5, #0
 800ac66:	d04b      	beq.n	800ad00 <_printf_i+0x1ac>
 800ac68:	4615      	mov	r5, r2
 800ac6a:	fbb6 f1f3 	udiv	r1, r6, r3
 800ac6e:	fb03 6711 	mls	r7, r3, r1, r6
 800ac72:	5dc7      	ldrb	r7, [r0, r7]
 800ac74:	f805 7d01 	strb.w	r7, [r5, #-1]!
 800ac78:	4637      	mov	r7, r6
 800ac7a:	42bb      	cmp	r3, r7
 800ac7c:	460e      	mov	r6, r1
 800ac7e:	d9f4      	bls.n	800ac6a <_printf_i+0x116>
 800ac80:	2b08      	cmp	r3, #8
 800ac82:	d10b      	bne.n	800ac9c <_printf_i+0x148>
 800ac84:	6823      	ldr	r3, [r4, #0]
 800ac86:	07de      	lsls	r6, r3, #31
 800ac88:	d508      	bpl.n	800ac9c <_printf_i+0x148>
 800ac8a:	6923      	ldr	r3, [r4, #16]
 800ac8c:	6861      	ldr	r1, [r4, #4]
 800ac8e:	4299      	cmp	r1, r3
 800ac90:	bfde      	ittt	le
 800ac92:	2330      	movle	r3, #48	; 0x30
 800ac94:	f805 3c01 	strble.w	r3, [r5, #-1]
 800ac98:	f105 35ff 	addle.w	r5, r5, #4294967295
 800ac9c:	1b52      	subs	r2, r2, r5
 800ac9e:	6122      	str	r2, [r4, #16]
 800aca0:	f8cd a000 	str.w	sl, [sp]
 800aca4:	464b      	mov	r3, r9
 800aca6:	aa03      	add	r2, sp, #12
 800aca8:	4621      	mov	r1, r4
 800acaa:	4640      	mov	r0, r8
 800acac:	f7ff fee4 	bl	800aa78 <_printf_common>
 800acb0:	3001      	adds	r0, #1
 800acb2:	d14a      	bne.n	800ad4a <_printf_i+0x1f6>
 800acb4:	f04f 30ff 	mov.w	r0, #4294967295
 800acb8:	b004      	add	sp, #16
 800acba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800acbe:	6823      	ldr	r3, [r4, #0]
 800acc0:	f043 0320 	orr.w	r3, r3, #32
 800acc4:	6023      	str	r3, [r4, #0]
 800acc6:	4833      	ldr	r0, [pc, #204]	; (800ad94 <_printf_i+0x240>)
 800acc8:	2778      	movs	r7, #120	; 0x78
 800acca:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800acce:	6823      	ldr	r3, [r4, #0]
 800acd0:	6829      	ldr	r1, [r5, #0]
 800acd2:	061f      	lsls	r7, r3, #24
 800acd4:	f851 6b04 	ldr.w	r6, [r1], #4
 800acd8:	d402      	bmi.n	800ace0 <_printf_i+0x18c>
 800acda:	065f      	lsls	r7, r3, #25
 800acdc:	bf48      	it	mi
 800acde:	b2b6      	uxthmi	r6, r6
 800ace0:	07df      	lsls	r7, r3, #31
 800ace2:	bf48      	it	mi
 800ace4:	f043 0320 	orrmi.w	r3, r3, #32
 800ace8:	6029      	str	r1, [r5, #0]
 800acea:	bf48      	it	mi
 800acec:	6023      	strmi	r3, [r4, #0]
 800acee:	b91e      	cbnz	r6, 800acf8 <_printf_i+0x1a4>
 800acf0:	6823      	ldr	r3, [r4, #0]
 800acf2:	f023 0320 	bic.w	r3, r3, #32
 800acf6:	6023      	str	r3, [r4, #0]
 800acf8:	2310      	movs	r3, #16
 800acfa:	e7a7      	b.n	800ac4c <_printf_i+0xf8>
 800acfc:	4824      	ldr	r0, [pc, #144]	; (800ad90 <_printf_i+0x23c>)
 800acfe:	e7e4      	b.n	800acca <_printf_i+0x176>
 800ad00:	4615      	mov	r5, r2
 800ad02:	e7bd      	b.n	800ac80 <_printf_i+0x12c>
 800ad04:	682b      	ldr	r3, [r5, #0]
 800ad06:	6826      	ldr	r6, [r4, #0]
 800ad08:	6961      	ldr	r1, [r4, #20]
 800ad0a:	1d18      	adds	r0, r3, #4
 800ad0c:	6028      	str	r0, [r5, #0]
 800ad0e:	0635      	lsls	r5, r6, #24
 800ad10:	681b      	ldr	r3, [r3, #0]
 800ad12:	d501      	bpl.n	800ad18 <_printf_i+0x1c4>
 800ad14:	6019      	str	r1, [r3, #0]
 800ad16:	e002      	b.n	800ad1e <_printf_i+0x1ca>
 800ad18:	0670      	lsls	r0, r6, #25
 800ad1a:	d5fb      	bpl.n	800ad14 <_printf_i+0x1c0>
 800ad1c:	8019      	strh	r1, [r3, #0]
 800ad1e:	2300      	movs	r3, #0
 800ad20:	6123      	str	r3, [r4, #16]
 800ad22:	4615      	mov	r5, r2
 800ad24:	e7bc      	b.n	800aca0 <_printf_i+0x14c>
 800ad26:	682b      	ldr	r3, [r5, #0]
 800ad28:	1d1a      	adds	r2, r3, #4
 800ad2a:	602a      	str	r2, [r5, #0]
 800ad2c:	681d      	ldr	r5, [r3, #0]
 800ad2e:	6862      	ldr	r2, [r4, #4]
 800ad30:	2100      	movs	r1, #0
 800ad32:	4628      	mov	r0, r5
 800ad34:	f7f5 fa4c 	bl	80001d0 <memchr>
 800ad38:	b108      	cbz	r0, 800ad3e <_printf_i+0x1ea>
 800ad3a:	1b40      	subs	r0, r0, r5
 800ad3c:	6060      	str	r0, [r4, #4]
 800ad3e:	6863      	ldr	r3, [r4, #4]
 800ad40:	6123      	str	r3, [r4, #16]
 800ad42:	2300      	movs	r3, #0
 800ad44:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800ad48:	e7aa      	b.n	800aca0 <_printf_i+0x14c>
 800ad4a:	6923      	ldr	r3, [r4, #16]
 800ad4c:	462a      	mov	r2, r5
 800ad4e:	4649      	mov	r1, r9
 800ad50:	4640      	mov	r0, r8
 800ad52:	47d0      	blx	sl
 800ad54:	3001      	adds	r0, #1
 800ad56:	d0ad      	beq.n	800acb4 <_printf_i+0x160>
 800ad58:	6823      	ldr	r3, [r4, #0]
 800ad5a:	079b      	lsls	r3, r3, #30
 800ad5c:	d413      	bmi.n	800ad86 <_printf_i+0x232>
 800ad5e:	68e0      	ldr	r0, [r4, #12]
 800ad60:	9b03      	ldr	r3, [sp, #12]
 800ad62:	4298      	cmp	r0, r3
 800ad64:	bfb8      	it	lt
 800ad66:	4618      	movlt	r0, r3
 800ad68:	e7a6      	b.n	800acb8 <_printf_i+0x164>
 800ad6a:	2301      	movs	r3, #1
 800ad6c:	4632      	mov	r2, r6
 800ad6e:	4649      	mov	r1, r9
 800ad70:	4640      	mov	r0, r8
 800ad72:	47d0      	blx	sl
 800ad74:	3001      	adds	r0, #1
 800ad76:	d09d      	beq.n	800acb4 <_printf_i+0x160>
 800ad78:	3501      	adds	r5, #1
 800ad7a:	68e3      	ldr	r3, [r4, #12]
 800ad7c:	9903      	ldr	r1, [sp, #12]
 800ad7e:	1a5b      	subs	r3, r3, r1
 800ad80:	42ab      	cmp	r3, r5
 800ad82:	dcf2      	bgt.n	800ad6a <_printf_i+0x216>
 800ad84:	e7eb      	b.n	800ad5e <_printf_i+0x20a>
 800ad86:	2500      	movs	r5, #0
 800ad88:	f104 0619 	add.w	r6, r4, #25
 800ad8c:	e7f5      	b.n	800ad7a <_printf_i+0x226>
 800ad8e:	bf00      	nop
 800ad90:	08011e02 	.word	0x08011e02
 800ad94:	08011e13 	.word	0x08011e13

0800ad98 <_scanf_float>:
 800ad98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ad9c:	b087      	sub	sp, #28
 800ad9e:	4617      	mov	r7, r2
 800ada0:	9303      	str	r3, [sp, #12]
 800ada2:	688b      	ldr	r3, [r1, #8]
 800ada4:	1e5a      	subs	r2, r3, #1
 800ada6:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 800adaa:	bf83      	ittte	hi
 800adac:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 800adb0:	195b      	addhi	r3, r3, r5
 800adb2:	9302      	strhi	r3, [sp, #8]
 800adb4:	2300      	movls	r3, #0
 800adb6:	bf86      	itte	hi
 800adb8:	f240 135d 	movwhi	r3, #349	; 0x15d
 800adbc:	608b      	strhi	r3, [r1, #8]
 800adbe:	9302      	strls	r3, [sp, #8]
 800adc0:	680b      	ldr	r3, [r1, #0]
 800adc2:	468b      	mov	fp, r1
 800adc4:	2500      	movs	r5, #0
 800adc6:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 800adca:	f84b 3b1c 	str.w	r3, [fp], #28
 800adce:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800add2:	4680      	mov	r8, r0
 800add4:	460c      	mov	r4, r1
 800add6:	465e      	mov	r6, fp
 800add8:	46aa      	mov	sl, r5
 800adda:	46a9      	mov	r9, r5
 800addc:	9501      	str	r5, [sp, #4]
 800adde:	68a2      	ldr	r2, [r4, #8]
 800ade0:	b152      	cbz	r2, 800adf8 <_scanf_float+0x60>
 800ade2:	683b      	ldr	r3, [r7, #0]
 800ade4:	781b      	ldrb	r3, [r3, #0]
 800ade6:	2b4e      	cmp	r3, #78	; 0x4e
 800ade8:	d864      	bhi.n	800aeb4 <_scanf_float+0x11c>
 800adea:	2b40      	cmp	r3, #64	; 0x40
 800adec:	d83c      	bhi.n	800ae68 <_scanf_float+0xd0>
 800adee:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 800adf2:	b2c8      	uxtb	r0, r1
 800adf4:	280e      	cmp	r0, #14
 800adf6:	d93a      	bls.n	800ae6e <_scanf_float+0xd6>
 800adf8:	f1b9 0f00 	cmp.w	r9, #0
 800adfc:	d003      	beq.n	800ae06 <_scanf_float+0x6e>
 800adfe:	6823      	ldr	r3, [r4, #0]
 800ae00:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800ae04:	6023      	str	r3, [r4, #0]
 800ae06:	f10a 3aff 	add.w	sl, sl, #4294967295
 800ae0a:	f1ba 0f01 	cmp.w	sl, #1
 800ae0e:	f200 8113 	bhi.w	800b038 <_scanf_float+0x2a0>
 800ae12:	455e      	cmp	r6, fp
 800ae14:	f200 8105 	bhi.w	800b022 <_scanf_float+0x28a>
 800ae18:	2501      	movs	r5, #1
 800ae1a:	4628      	mov	r0, r5
 800ae1c:	b007      	add	sp, #28
 800ae1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ae22:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 800ae26:	2a0d      	cmp	r2, #13
 800ae28:	d8e6      	bhi.n	800adf8 <_scanf_float+0x60>
 800ae2a:	a101      	add	r1, pc, #4	; (adr r1, 800ae30 <_scanf_float+0x98>)
 800ae2c:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 800ae30:	0800af6f 	.word	0x0800af6f
 800ae34:	0800adf9 	.word	0x0800adf9
 800ae38:	0800adf9 	.word	0x0800adf9
 800ae3c:	0800adf9 	.word	0x0800adf9
 800ae40:	0800afcf 	.word	0x0800afcf
 800ae44:	0800afa7 	.word	0x0800afa7
 800ae48:	0800adf9 	.word	0x0800adf9
 800ae4c:	0800adf9 	.word	0x0800adf9
 800ae50:	0800af7d 	.word	0x0800af7d
 800ae54:	0800adf9 	.word	0x0800adf9
 800ae58:	0800adf9 	.word	0x0800adf9
 800ae5c:	0800adf9 	.word	0x0800adf9
 800ae60:	0800adf9 	.word	0x0800adf9
 800ae64:	0800af35 	.word	0x0800af35
 800ae68:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 800ae6c:	e7db      	b.n	800ae26 <_scanf_float+0x8e>
 800ae6e:	290e      	cmp	r1, #14
 800ae70:	d8c2      	bhi.n	800adf8 <_scanf_float+0x60>
 800ae72:	a001      	add	r0, pc, #4	; (adr r0, 800ae78 <_scanf_float+0xe0>)
 800ae74:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 800ae78:	0800af27 	.word	0x0800af27
 800ae7c:	0800adf9 	.word	0x0800adf9
 800ae80:	0800af27 	.word	0x0800af27
 800ae84:	0800afbb 	.word	0x0800afbb
 800ae88:	0800adf9 	.word	0x0800adf9
 800ae8c:	0800aed5 	.word	0x0800aed5
 800ae90:	0800af11 	.word	0x0800af11
 800ae94:	0800af11 	.word	0x0800af11
 800ae98:	0800af11 	.word	0x0800af11
 800ae9c:	0800af11 	.word	0x0800af11
 800aea0:	0800af11 	.word	0x0800af11
 800aea4:	0800af11 	.word	0x0800af11
 800aea8:	0800af11 	.word	0x0800af11
 800aeac:	0800af11 	.word	0x0800af11
 800aeb0:	0800af11 	.word	0x0800af11
 800aeb4:	2b6e      	cmp	r3, #110	; 0x6e
 800aeb6:	d809      	bhi.n	800aecc <_scanf_float+0x134>
 800aeb8:	2b60      	cmp	r3, #96	; 0x60
 800aeba:	d8b2      	bhi.n	800ae22 <_scanf_float+0x8a>
 800aebc:	2b54      	cmp	r3, #84	; 0x54
 800aebe:	d077      	beq.n	800afb0 <_scanf_float+0x218>
 800aec0:	2b59      	cmp	r3, #89	; 0x59
 800aec2:	d199      	bne.n	800adf8 <_scanf_float+0x60>
 800aec4:	2d07      	cmp	r5, #7
 800aec6:	d197      	bne.n	800adf8 <_scanf_float+0x60>
 800aec8:	2508      	movs	r5, #8
 800aeca:	e029      	b.n	800af20 <_scanf_float+0x188>
 800aecc:	2b74      	cmp	r3, #116	; 0x74
 800aece:	d06f      	beq.n	800afb0 <_scanf_float+0x218>
 800aed0:	2b79      	cmp	r3, #121	; 0x79
 800aed2:	e7f6      	b.n	800aec2 <_scanf_float+0x12a>
 800aed4:	6821      	ldr	r1, [r4, #0]
 800aed6:	05c8      	lsls	r0, r1, #23
 800aed8:	d51a      	bpl.n	800af10 <_scanf_float+0x178>
 800aeda:	9b02      	ldr	r3, [sp, #8]
 800aedc:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 800aee0:	6021      	str	r1, [r4, #0]
 800aee2:	f109 0901 	add.w	r9, r9, #1
 800aee6:	b11b      	cbz	r3, 800aef0 <_scanf_float+0x158>
 800aee8:	3b01      	subs	r3, #1
 800aeea:	3201      	adds	r2, #1
 800aeec:	9302      	str	r3, [sp, #8]
 800aeee:	60a2      	str	r2, [r4, #8]
 800aef0:	68a3      	ldr	r3, [r4, #8]
 800aef2:	3b01      	subs	r3, #1
 800aef4:	60a3      	str	r3, [r4, #8]
 800aef6:	6923      	ldr	r3, [r4, #16]
 800aef8:	3301      	adds	r3, #1
 800aefa:	6123      	str	r3, [r4, #16]
 800aefc:	687b      	ldr	r3, [r7, #4]
 800aefe:	3b01      	subs	r3, #1
 800af00:	2b00      	cmp	r3, #0
 800af02:	607b      	str	r3, [r7, #4]
 800af04:	f340 8084 	ble.w	800b010 <_scanf_float+0x278>
 800af08:	683b      	ldr	r3, [r7, #0]
 800af0a:	3301      	adds	r3, #1
 800af0c:	603b      	str	r3, [r7, #0]
 800af0e:	e766      	b.n	800adde <_scanf_float+0x46>
 800af10:	eb1a 0f05 	cmn.w	sl, r5
 800af14:	f47f af70 	bne.w	800adf8 <_scanf_float+0x60>
 800af18:	6822      	ldr	r2, [r4, #0]
 800af1a:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 800af1e:	6022      	str	r2, [r4, #0]
 800af20:	f806 3b01 	strb.w	r3, [r6], #1
 800af24:	e7e4      	b.n	800aef0 <_scanf_float+0x158>
 800af26:	6822      	ldr	r2, [r4, #0]
 800af28:	0610      	lsls	r0, r2, #24
 800af2a:	f57f af65 	bpl.w	800adf8 <_scanf_float+0x60>
 800af2e:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 800af32:	e7f4      	b.n	800af1e <_scanf_float+0x186>
 800af34:	f1ba 0f00 	cmp.w	sl, #0
 800af38:	d10e      	bne.n	800af58 <_scanf_float+0x1c0>
 800af3a:	f1b9 0f00 	cmp.w	r9, #0
 800af3e:	d10e      	bne.n	800af5e <_scanf_float+0x1c6>
 800af40:	6822      	ldr	r2, [r4, #0]
 800af42:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 800af46:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 800af4a:	d108      	bne.n	800af5e <_scanf_float+0x1c6>
 800af4c:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 800af50:	6022      	str	r2, [r4, #0]
 800af52:	f04f 0a01 	mov.w	sl, #1
 800af56:	e7e3      	b.n	800af20 <_scanf_float+0x188>
 800af58:	f1ba 0f02 	cmp.w	sl, #2
 800af5c:	d055      	beq.n	800b00a <_scanf_float+0x272>
 800af5e:	2d01      	cmp	r5, #1
 800af60:	d002      	beq.n	800af68 <_scanf_float+0x1d0>
 800af62:	2d04      	cmp	r5, #4
 800af64:	f47f af48 	bne.w	800adf8 <_scanf_float+0x60>
 800af68:	3501      	adds	r5, #1
 800af6a:	b2ed      	uxtb	r5, r5
 800af6c:	e7d8      	b.n	800af20 <_scanf_float+0x188>
 800af6e:	f1ba 0f01 	cmp.w	sl, #1
 800af72:	f47f af41 	bne.w	800adf8 <_scanf_float+0x60>
 800af76:	f04f 0a02 	mov.w	sl, #2
 800af7a:	e7d1      	b.n	800af20 <_scanf_float+0x188>
 800af7c:	b97d      	cbnz	r5, 800af9e <_scanf_float+0x206>
 800af7e:	f1b9 0f00 	cmp.w	r9, #0
 800af82:	f47f af3c 	bne.w	800adfe <_scanf_float+0x66>
 800af86:	6822      	ldr	r2, [r4, #0]
 800af88:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 800af8c:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 800af90:	f47f af39 	bne.w	800ae06 <_scanf_float+0x6e>
 800af94:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 800af98:	6022      	str	r2, [r4, #0]
 800af9a:	2501      	movs	r5, #1
 800af9c:	e7c0      	b.n	800af20 <_scanf_float+0x188>
 800af9e:	2d03      	cmp	r5, #3
 800afa0:	d0e2      	beq.n	800af68 <_scanf_float+0x1d0>
 800afa2:	2d05      	cmp	r5, #5
 800afa4:	e7de      	b.n	800af64 <_scanf_float+0x1cc>
 800afa6:	2d02      	cmp	r5, #2
 800afa8:	f47f af26 	bne.w	800adf8 <_scanf_float+0x60>
 800afac:	2503      	movs	r5, #3
 800afae:	e7b7      	b.n	800af20 <_scanf_float+0x188>
 800afb0:	2d06      	cmp	r5, #6
 800afb2:	f47f af21 	bne.w	800adf8 <_scanf_float+0x60>
 800afb6:	2507      	movs	r5, #7
 800afb8:	e7b2      	b.n	800af20 <_scanf_float+0x188>
 800afba:	6822      	ldr	r2, [r4, #0]
 800afbc:	0591      	lsls	r1, r2, #22
 800afbe:	f57f af1b 	bpl.w	800adf8 <_scanf_float+0x60>
 800afc2:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 800afc6:	6022      	str	r2, [r4, #0]
 800afc8:	f8cd 9004 	str.w	r9, [sp, #4]
 800afcc:	e7a8      	b.n	800af20 <_scanf_float+0x188>
 800afce:	6822      	ldr	r2, [r4, #0]
 800afd0:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 800afd4:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 800afd8:	d006      	beq.n	800afe8 <_scanf_float+0x250>
 800afda:	0550      	lsls	r0, r2, #21
 800afdc:	f57f af0c 	bpl.w	800adf8 <_scanf_float+0x60>
 800afe0:	f1b9 0f00 	cmp.w	r9, #0
 800afe4:	f43f af0f 	beq.w	800ae06 <_scanf_float+0x6e>
 800afe8:	0591      	lsls	r1, r2, #22
 800afea:	bf58      	it	pl
 800afec:	9901      	ldrpl	r1, [sp, #4]
 800afee:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 800aff2:	bf58      	it	pl
 800aff4:	eba9 0101 	subpl.w	r1, r9, r1
 800aff8:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 800affc:	bf58      	it	pl
 800affe:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 800b002:	6022      	str	r2, [r4, #0]
 800b004:	f04f 0900 	mov.w	r9, #0
 800b008:	e78a      	b.n	800af20 <_scanf_float+0x188>
 800b00a:	f04f 0a03 	mov.w	sl, #3
 800b00e:	e787      	b.n	800af20 <_scanf_float+0x188>
 800b010:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 800b014:	4639      	mov	r1, r7
 800b016:	4640      	mov	r0, r8
 800b018:	4798      	blx	r3
 800b01a:	2800      	cmp	r0, #0
 800b01c:	f43f aedf 	beq.w	800adde <_scanf_float+0x46>
 800b020:	e6ea      	b.n	800adf8 <_scanf_float+0x60>
 800b022:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800b026:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800b02a:	463a      	mov	r2, r7
 800b02c:	4640      	mov	r0, r8
 800b02e:	4798      	blx	r3
 800b030:	6923      	ldr	r3, [r4, #16]
 800b032:	3b01      	subs	r3, #1
 800b034:	6123      	str	r3, [r4, #16]
 800b036:	e6ec      	b.n	800ae12 <_scanf_float+0x7a>
 800b038:	1e6b      	subs	r3, r5, #1
 800b03a:	2b06      	cmp	r3, #6
 800b03c:	d825      	bhi.n	800b08a <_scanf_float+0x2f2>
 800b03e:	2d02      	cmp	r5, #2
 800b040:	d836      	bhi.n	800b0b0 <_scanf_float+0x318>
 800b042:	455e      	cmp	r6, fp
 800b044:	f67f aee8 	bls.w	800ae18 <_scanf_float+0x80>
 800b048:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800b04c:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800b050:	463a      	mov	r2, r7
 800b052:	4640      	mov	r0, r8
 800b054:	4798      	blx	r3
 800b056:	6923      	ldr	r3, [r4, #16]
 800b058:	3b01      	subs	r3, #1
 800b05a:	6123      	str	r3, [r4, #16]
 800b05c:	e7f1      	b.n	800b042 <_scanf_float+0x2aa>
 800b05e:	9802      	ldr	r0, [sp, #8]
 800b060:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800b064:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 800b068:	9002      	str	r0, [sp, #8]
 800b06a:	463a      	mov	r2, r7
 800b06c:	4640      	mov	r0, r8
 800b06e:	4798      	blx	r3
 800b070:	6923      	ldr	r3, [r4, #16]
 800b072:	3b01      	subs	r3, #1
 800b074:	6123      	str	r3, [r4, #16]
 800b076:	f10a 3aff 	add.w	sl, sl, #4294967295
 800b07a:	fa5f fa8a 	uxtb.w	sl, sl
 800b07e:	f1ba 0f02 	cmp.w	sl, #2
 800b082:	d1ec      	bne.n	800b05e <_scanf_float+0x2c6>
 800b084:	3d03      	subs	r5, #3
 800b086:	b2ed      	uxtb	r5, r5
 800b088:	1b76      	subs	r6, r6, r5
 800b08a:	6823      	ldr	r3, [r4, #0]
 800b08c:	05da      	lsls	r2, r3, #23
 800b08e:	d52f      	bpl.n	800b0f0 <_scanf_float+0x358>
 800b090:	055b      	lsls	r3, r3, #21
 800b092:	d510      	bpl.n	800b0b6 <_scanf_float+0x31e>
 800b094:	455e      	cmp	r6, fp
 800b096:	f67f aebf 	bls.w	800ae18 <_scanf_float+0x80>
 800b09a:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800b09e:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800b0a2:	463a      	mov	r2, r7
 800b0a4:	4640      	mov	r0, r8
 800b0a6:	4798      	blx	r3
 800b0a8:	6923      	ldr	r3, [r4, #16]
 800b0aa:	3b01      	subs	r3, #1
 800b0ac:	6123      	str	r3, [r4, #16]
 800b0ae:	e7f1      	b.n	800b094 <_scanf_float+0x2fc>
 800b0b0:	46aa      	mov	sl, r5
 800b0b2:	9602      	str	r6, [sp, #8]
 800b0b4:	e7df      	b.n	800b076 <_scanf_float+0x2de>
 800b0b6:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 800b0ba:	6923      	ldr	r3, [r4, #16]
 800b0bc:	2965      	cmp	r1, #101	; 0x65
 800b0be:	f103 33ff 	add.w	r3, r3, #4294967295
 800b0c2:	f106 35ff 	add.w	r5, r6, #4294967295
 800b0c6:	6123      	str	r3, [r4, #16]
 800b0c8:	d00c      	beq.n	800b0e4 <_scanf_float+0x34c>
 800b0ca:	2945      	cmp	r1, #69	; 0x45
 800b0cc:	d00a      	beq.n	800b0e4 <_scanf_float+0x34c>
 800b0ce:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800b0d2:	463a      	mov	r2, r7
 800b0d4:	4640      	mov	r0, r8
 800b0d6:	4798      	blx	r3
 800b0d8:	6923      	ldr	r3, [r4, #16]
 800b0da:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 800b0de:	3b01      	subs	r3, #1
 800b0e0:	1eb5      	subs	r5, r6, #2
 800b0e2:	6123      	str	r3, [r4, #16]
 800b0e4:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800b0e8:	463a      	mov	r2, r7
 800b0ea:	4640      	mov	r0, r8
 800b0ec:	4798      	blx	r3
 800b0ee:	462e      	mov	r6, r5
 800b0f0:	6825      	ldr	r5, [r4, #0]
 800b0f2:	f015 0510 	ands.w	r5, r5, #16
 800b0f6:	d158      	bne.n	800b1aa <_scanf_float+0x412>
 800b0f8:	7035      	strb	r5, [r6, #0]
 800b0fa:	6823      	ldr	r3, [r4, #0]
 800b0fc:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 800b100:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800b104:	d11c      	bne.n	800b140 <_scanf_float+0x3a8>
 800b106:	9b01      	ldr	r3, [sp, #4]
 800b108:	454b      	cmp	r3, r9
 800b10a:	eba3 0209 	sub.w	r2, r3, r9
 800b10e:	d124      	bne.n	800b15a <_scanf_float+0x3c2>
 800b110:	2200      	movs	r2, #0
 800b112:	4659      	mov	r1, fp
 800b114:	4640      	mov	r0, r8
 800b116:	f002 fbcf 	bl	800d8b8 <_strtod_r>
 800b11a:	9b03      	ldr	r3, [sp, #12]
 800b11c:	6821      	ldr	r1, [r4, #0]
 800b11e:	681b      	ldr	r3, [r3, #0]
 800b120:	f011 0f02 	tst.w	r1, #2
 800b124:	ec57 6b10 	vmov	r6, r7, d0
 800b128:	f103 0204 	add.w	r2, r3, #4
 800b12c:	d020      	beq.n	800b170 <_scanf_float+0x3d8>
 800b12e:	9903      	ldr	r1, [sp, #12]
 800b130:	600a      	str	r2, [r1, #0]
 800b132:	681b      	ldr	r3, [r3, #0]
 800b134:	e9c3 6700 	strd	r6, r7, [r3]
 800b138:	68e3      	ldr	r3, [r4, #12]
 800b13a:	3301      	adds	r3, #1
 800b13c:	60e3      	str	r3, [r4, #12]
 800b13e:	e66c      	b.n	800ae1a <_scanf_float+0x82>
 800b140:	9b04      	ldr	r3, [sp, #16]
 800b142:	2b00      	cmp	r3, #0
 800b144:	d0e4      	beq.n	800b110 <_scanf_float+0x378>
 800b146:	9905      	ldr	r1, [sp, #20]
 800b148:	230a      	movs	r3, #10
 800b14a:	462a      	mov	r2, r5
 800b14c:	3101      	adds	r1, #1
 800b14e:	4640      	mov	r0, r8
 800b150:	f002 fc3a 	bl	800d9c8 <_strtol_r>
 800b154:	9b04      	ldr	r3, [sp, #16]
 800b156:	9e05      	ldr	r6, [sp, #20]
 800b158:	1ac2      	subs	r2, r0, r3
 800b15a:	f204 136f 	addw	r3, r4, #367	; 0x16f
 800b15e:	429e      	cmp	r6, r3
 800b160:	bf28      	it	cs
 800b162:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 800b166:	4912      	ldr	r1, [pc, #72]	; (800b1b0 <_scanf_float+0x418>)
 800b168:	4630      	mov	r0, r6
 800b16a:	f000 f91b 	bl	800b3a4 <siprintf>
 800b16e:	e7cf      	b.n	800b110 <_scanf_float+0x378>
 800b170:	f011 0f04 	tst.w	r1, #4
 800b174:	9903      	ldr	r1, [sp, #12]
 800b176:	600a      	str	r2, [r1, #0]
 800b178:	d1db      	bne.n	800b132 <_scanf_float+0x39a>
 800b17a:	f8d3 8000 	ldr.w	r8, [r3]
 800b17e:	ee10 2a10 	vmov	r2, s0
 800b182:	ee10 0a10 	vmov	r0, s0
 800b186:	463b      	mov	r3, r7
 800b188:	4639      	mov	r1, r7
 800b18a:	f7f5 fccf 	bl	8000b2c <__aeabi_dcmpun>
 800b18e:	b128      	cbz	r0, 800b19c <_scanf_float+0x404>
 800b190:	4808      	ldr	r0, [pc, #32]	; (800b1b4 <_scanf_float+0x41c>)
 800b192:	f000 fa09 	bl	800b5a8 <nanf>
 800b196:	ed88 0a00 	vstr	s0, [r8]
 800b19a:	e7cd      	b.n	800b138 <_scanf_float+0x3a0>
 800b19c:	4630      	mov	r0, r6
 800b19e:	4639      	mov	r1, r7
 800b1a0:	f7f5 fd22 	bl	8000be8 <__aeabi_d2f>
 800b1a4:	f8c8 0000 	str.w	r0, [r8]
 800b1a8:	e7c6      	b.n	800b138 <_scanf_float+0x3a0>
 800b1aa:	2500      	movs	r5, #0
 800b1ac:	e635      	b.n	800ae1a <_scanf_float+0x82>
 800b1ae:	bf00      	nop
 800b1b0:	08011e24 	.word	0x08011e24
 800b1b4:	080121b5 	.word	0x080121b5

0800b1b8 <std>:
 800b1b8:	2300      	movs	r3, #0
 800b1ba:	b510      	push	{r4, lr}
 800b1bc:	4604      	mov	r4, r0
 800b1be:	e9c0 3300 	strd	r3, r3, [r0]
 800b1c2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800b1c6:	6083      	str	r3, [r0, #8]
 800b1c8:	8181      	strh	r1, [r0, #12]
 800b1ca:	6643      	str	r3, [r0, #100]	; 0x64
 800b1cc:	81c2      	strh	r2, [r0, #14]
 800b1ce:	6183      	str	r3, [r0, #24]
 800b1d0:	4619      	mov	r1, r3
 800b1d2:	2208      	movs	r2, #8
 800b1d4:	305c      	adds	r0, #92	; 0x5c
 800b1d6:	f000 f948 	bl	800b46a <memset>
 800b1da:	4b0d      	ldr	r3, [pc, #52]	; (800b210 <std+0x58>)
 800b1dc:	6263      	str	r3, [r4, #36]	; 0x24
 800b1de:	4b0d      	ldr	r3, [pc, #52]	; (800b214 <std+0x5c>)
 800b1e0:	62a3      	str	r3, [r4, #40]	; 0x28
 800b1e2:	4b0d      	ldr	r3, [pc, #52]	; (800b218 <std+0x60>)
 800b1e4:	62e3      	str	r3, [r4, #44]	; 0x2c
 800b1e6:	4b0d      	ldr	r3, [pc, #52]	; (800b21c <std+0x64>)
 800b1e8:	6323      	str	r3, [r4, #48]	; 0x30
 800b1ea:	4b0d      	ldr	r3, [pc, #52]	; (800b220 <std+0x68>)
 800b1ec:	6224      	str	r4, [r4, #32]
 800b1ee:	429c      	cmp	r4, r3
 800b1f0:	d006      	beq.n	800b200 <std+0x48>
 800b1f2:	f103 0268 	add.w	r2, r3, #104	; 0x68
 800b1f6:	4294      	cmp	r4, r2
 800b1f8:	d002      	beq.n	800b200 <std+0x48>
 800b1fa:	33d0      	adds	r3, #208	; 0xd0
 800b1fc:	429c      	cmp	r4, r3
 800b1fe:	d105      	bne.n	800b20c <std+0x54>
 800b200:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800b204:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b208:	f000 b9bc 	b.w	800b584 <__retarget_lock_init_recursive>
 800b20c:	bd10      	pop	{r4, pc}
 800b20e:	bf00      	nop
 800b210:	0800b3e5 	.word	0x0800b3e5
 800b214:	0800b407 	.word	0x0800b407
 800b218:	0800b43f 	.word	0x0800b43f
 800b21c:	0800b463 	.word	0x0800b463
 800b220:	200009ec 	.word	0x200009ec

0800b224 <stdio_exit_handler>:
 800b224:	4a02      	ldr	r2, [pc, #8]	; (800b230 <stdio_exit_handler+0xc>)
 800b226:	4903      	ldr	r1, [pc, #12]	; (800b234 <stdio_exit_handler+0x10>)
 800b228:	4803      	ldr	r0, [pc, #12]	; (800b238 <stdio_exit_handler+0x14>)
 800b22a:	f000 b869 	b.w	800b300 <_fwalk_sglue>
 800b22e:	bf00      	nop
 800b230:	2000000c 	.word	0x2000000c
 800b234:	0800dd89 	.word	0x0800dd89
 800b238:	20000018 	.word	0x20000018

0800b23c <cleanup_stdio>:
 800b23c:	6841      	ldr	r1, [r0, #4]
 800b23e:	4b0c      	ldr	r3, [pc, #48]	; (800b270 <cleanup_stdio+0x34>)
 800b240:	4299      	cmp	r1, r3
 800b242:	b510      	push	{r4, lr}
 800b244:	4604      	mov	r4, r0
 800b246:	d001      	beq.n	800b24c <cleanup_stdio+0x10>
 800b248:	f002 fd9e 	bl	800dd88 <_fflush_r>
 800b24c:	68a1      	ldr	r1, [r4, #8]
 800b24e:	4b09      	ldr	r3, [pc, #36]	; (800b274 <cleanup_stdio+0x38>)
 800b250:	4299      	cmp	r1, r3
 800b252:	d002      	beq.n	800b25a <cleanup_stdio+0x1e>
 800b254:	4620      	mov	r0, r4
 800b256:	f002 fd97 	bl	800dd88 <_fflush_r>
 800b25a:	68e1      	ldr	r1, [r4, #12]
 800b25c:	4b06      	ldr	r3, [pc, #24]	; (800b278 <cleanup_stdio+0x3c>)
 800b25e:	4299      	cmp	r1, r3
 800b260:	d004      	beq.n	800b26c <cleanup_stdio+0x30>
 800b262:	4620      	mov	r0, r4
 800b264:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b268:	f002 bd8e 	b.w	800dd88 <_fflush_r>
 800b26c:	bd10      	pop	{r4, pc}
 800b26e:	bf00      	nop
 800b270:	200009ec 	.word	0x200009ec
 800b274:	20000a54 	.word	0x20000a54
 800b278:	20000abc 	.word	0x20000abc

0800b27c <global_stdio_init.part.0>:
 800b27c:	b510      	push	{r4, lr}
 800b27e:	4b0b      	ldr	r3, [pc, #44]	; (800b2ac <global_stdio_init.part.0+0x30>)
 800b280:	4c0b      	ldr	r4, [pc, #44]	; (800b2b0 <global_stdio_init.part.0+0x34>)
 800b282:	4a0c      	ldr	r2, [pc, #48]	; (800b2b4 <global_stdio_init.part.0+0x38>)
 800b284:	601a      	str	r2, [r3, #0]
 800b286:	4620      	mov	r0, r4
 800b288:	2200      	movs	r2, #0
 800b28a:	2104      	movs	r1, #4
 800b28c:	f7ff ff94 	bl	800b1b8 <std>
 800b290:	f104 0068 	add.w	r0, r4, #104	; 0x68
 800b294:	2201      	movs	r2, #1
 800b296:	2109      	movs	r1, #9
 800b298:	f7ff ff8e 	bl	800b1b8 <std>
 800b29c:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 800b2a0:	2202      	movs	r2, #2
 800b2a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b2a6:	2112      	movs	r1, #18
 800b2a8:	f7ff bf86 	b.w	800b1b8 <std>
 800b2ac:	20000b24 	.word	0x20000b24
 800b2b0:	200009ec 	.word	0x200009ec
 800b2b4:	0800b225 	.word	0x0800b225

0800b2b8 <__sfp_lock_acquire>:
 800b2b8:	4801      	ldr	r0, [pc, #4]	; (800b2c0 <__sfp_lock_acquire+0x8>)
 800b2ba:	f000 b964 	b.w	800b586 <__retarget_lock_acquire_recursive>
 800b2be:	bf00      	nop
 800b2c0:	20000b2d 	.word	0x20000b2d

0800b2c4 <__sfp_lock_release>:
 800b2c4:	4801      	ldr	r0, [pc, #4]	; (800b2cc <__sfp_lock_release+0x8>)
 800b2c6:	f000 b95f 	b.w	800b588 <__retarget_lock_release_recursive>
 800b2ca:	bf00      	nop
 800b2cc:	20000b2d 	.word	0x20000b2d

0800b2d0 <__sinit>:
 800b2d0:	b510      	push	{r4, lr}
 800b2d2:	4604      	mov	r4, r0
 800b2d4:	f7ff fff0 	bl	800b2b8 <__sfp_lock_acquire>
 800b2d8:	6a23      	ldr	r3, [r4, #32]
 800b2da:	b11b      	cbz	r3, 800b2e4 <__sinit+0x14>
 800b2dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b2e0:	f7ff bff0 	b.w	800b2c4 <__sfp_lock_release>
 800b2e4:	4b04      	ldr	r3, [pc, #16]	; (800b2f8 <__sinit+0x28>)
 800b2e6:	6223      	str	r3, [r4, #32]
 800b2e8:	4b04      	ldr	r3, [pc, #16]	; (800b2fc <__sinit+0x2c>)
 800b2ea:	681b      	ldr	r3, [r3, #0]
 800b2ec:	2b00      	cmp	r3, #0
 800b2ee:	d1f5      	bne.n	800b2dc <__sinit+0xc>
 800b2f0:	f7ff ffc4 	bl	800b27c <global_stdio_init.part.0>
 800b2f4:	e7f2      	b.n	800b2dc <__sinit+0xc>
 800b2f6:	bf00      	nop
 800b2f8:	0800b23d 	.word	0x0800b23d
 800b2fc:	20000b24 	.word	0x20000b24

0800b300 <_fwalk_sglue>:
 800b300:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b304:	4607      	mov	r7, r0
 800b306:	4688      	mov	r8, r1
 800b308:	4614      	mov	r4, r2
 800b30a:	2600      	movs	r6, #0
 800b30c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800b310:	f1b9 0901 	subs.w	r9, r9, #1
 800b314:	d505      	bpl.n	800b322 <_fwalk_sglue+0x22>
 800b316:	6824      	ldr	r4, [r4, #0]
 800b318:	2c00      	cmp	r4, #0
 800b31a:	d1f7      	bne.n	800b30c <_fwalk_sglue+0xc>
 800b31c:	4630      	mov	r0, r6
 800b31e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800b322:	89ab      	ldrh	r3, [r5, #12]
 800b324:	2b01      	cmp	r3, #1
 800b326:	d907      	bls.n	800b338 <_fwalk_sglue+0x38>
 800b328:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800b32c:	3301      	adds	r3, #1
 800b32e:	d003      	beq.n	800b338 <_fwalk_sglue+0x38>
 800b330:	4629      	mov	r1, r5
 800b332:	4638      	mov	r0, r7
 800b334:	47c0      	blx	r8
 800b336:	4306      	orrs	r6, r0
 800b338:	3568      	adds	r5, #104	; 0x68
 800b33a:	e7e9      	b.n	800b310 <_fwalk_sglue+0x10>

0800b33c <sniprintf>:
 800b33c:	b40c      	push	{r2, r3}
 800b33e:	b530      	push	{r4, r5, lr}
 800b340:	4b17      	ldr	r3, [pc, #92]	; (800b3a0 <sniprintf+0x64>)
 800b342:	1e0c      	subs	r4, r1, #0
 800b344:	681d      	ldr	r5, [r3, #0]
 800b346:	b09d      	sub	sp, #116	; 0x74
 800b348:	da08      	bge.n	800b35c <sniprintf+0x20>
 800b34a:	238b      	movs	r3, #139	; 0x8b
 800b34c:	602b      	str	r3, [r5, #0]
 800b34e:	f04f 30ff 	mov.w	r0, #4294967295
 800b352:	b01d      	add	sp, #116	; 0x74
 800b354:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800b358:	b002      	add	sp, #8
 800b35a:	4770      	bx	lr
 800b35c:	f44f 7302 	mov.w	r3, #520	; 0x208
 800b360:	f8ad 3014 	strh.w	r3, [sp, #20]
 800b364:	bf14      	ite	ne
 800b366:	f104 33ff 	addne.w	r3, r4, #4294967295
 800b36a:	4623      	moveq	r3, r4
 800b36c:	9304      	str	r3, [sp, #16]
 800b36e:	9307      	str	r3, [sp, #28]
 800b370:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800b374:	9002      	str	r0, [sp, #8]
 800b376:	9006      	str	r0, [sp, #24]
 800b378:	f8ad 3016 	strh.w	r3, [sp, #22]
 800b37c:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800b37e:	ab21      	add	r3, sp, #132	; 0x84
 800b380:	a902      	add	r1, sp, #8
 800b382:	4628      	mov	r0, r5
 800b384:	9301      	str	r3, [sp, #4]
 800b386:	f002 fb7b 	bl	800da80 <_svfiprintf_r>
 800b38a:	1c43      	adds	r3, r0, #1
 800b38c:	bfbc      	itt	lt
 800b38e:	238b      	movlt	r3, #139	; 0x8b
 800b390:	602b      	strlt	r3, [r5, #0]
 800b392:	2c00      	cmp	r4, #0
 800b394:	d0dd      	beq.n	800b352 <sniprintf+0x16>
 800b396:	9b02      	ldr	r3, [sp, #8]
 800b398:	2200      	movs	r2, #0
 800b39a:	701a      	strb	r2, [r3, #0]
 800b39c:	e7d9      	b.n	800b352 <sniprintf+0x16>
 800b39e:	bf00      	nop
 800b3a0:	20000064 	.word	0x20000064

0800b3a4 <siprintf>:
 800b3a4:	b40e      	push	{r1, r2, r3}
 800b3a6:	b500      	push	{lr}
 800b3a8:	b09c      	sub	sp, #112	; 0x70
 800b3aa:	ab1d      	add	r3, sp, #116	; 0x74
 800b3ac:	9002      	str	r0, [sp, #8]
 800b3ae:	9006      	str	r0, [sp, #24]
 800b3b0:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800b3b4:	4809      	ldr	r0, [pc, #36]	; (800b3dc <siprintf+0x38>)
 800b3b6:	9107      	str	r1, [sp, #28]
 800b3b8:	9104      	str	r1, [sp, #16]
 800b3ba:	4909      	ldr	r1, [pc, #36]	; (800b3e0 <siprintf+0x3c>)
 800b3bc:	f853 2b04 	ldr.w	r2, [r3], #4
 800b3c0:	9105      	str	r1, [sp, #20]
 800b3c2:	6800      	ldr	r0, [r0, #0]
 800b3c4:	9301      	str	r3, [sp, #4]
 800b3c6:	a902      	add	r1, sp, #8
 800b3c8:	f002 fb5a 	bl	800da80 <_svfiprintf_r>
 800b3cc:	9b02      	ldr	r3, [sp, #8]
 800b3ce:	2200      	movs	r2, #0
 800b3d0:	701a      	strb	r2, [r3, #0]
 800b3d2:	b01c      	add	sp, #112	; 0x70
 800b3d4:	f85d eb04 	ldr.w	lr, [sp], #4
 800b3d8:	b003      	add	sp, #12
 800b3da:	4770      	bx	lr
 800b3dc:	20000064 	.word	0x20000064
 800b3e0:	ffff0208 	.word	0xffff0208

0800b3e4 <__sread>:
 800b3e4:	b510      	push	{r4, lr}
 800b3e6:	460c      	mov	r4, r1
 800b3e8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800b3ec:	f000 f86c 	bl	800b4c8 <_read_r>
 800b3f0:	2800      	cmp	r0, #0
 800b3f2:	bfab      	itete	ge
 800b3f4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800b3f6:	89a3      	ldrhlt	r3, [r4, #12]
 800b3f8:	181b      	addge	r3, r3, r0
 800b3fa:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800b3fe:	bfac      	ite	ge
 800b400:	6563      	strge	r3, [r4, #84]	; 0x54
 800b402:	81a3      	strhlt	r3, [r4, #12]
 800b404:	bd10      	pop	{r4, pc}

0800b406 <__swrite>:
 800b406:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b40a:	461f      	mov	r7, r3
 800b40c:	898b      	ldrh	r3, [r1, #12]
 800b40e:	05db      	lsls	r3, r3, #23
 800b410:	4605      	mov	r5, r0
 800b412:	460c      	mov	r4, r1
 800b414:	4616      	mov	r6, r2
 800b416:	d505      	bpl.n	800b424 <__swrite+0x1e>
 800b418:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800b41c:	2302      	movs	r3, #2
 800b41e:	2200      	movs	r2, #0
 800b420:	f000 f840 	bl	800b4a4 <_lseek_r>
 800b424:	89a3      	ldrh	r3, [r4, #12]
 800b426:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800b42a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800b42e:	81a3      	strh	r3, [r4, #12]
 800b430:	4632      	mov	r2, r6
 800b432:	463b      	mov	r3, r7
 800b434:	4628      	mov	r0, r5
 800b436:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800b43a:	f000 b867 	b.w	800b50c <_write_r>

0800b43e <__sseek>:
 800b43e:	b510      	push	{r4, lr}
 800b440:	460c      	mov	r4, r1
 800b442:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800b446:	f000 f82d 	bl	800b4a4 <_lseek_r>
 800b44a:	1c43      	adds	r3, r0, #1
 800b44c:	89a3      	ldrh	r3, [r4, #12]
 800b44e:	bf15      	itete	ne
 800b450:	6560      	strne	r0, [r4, #84]	; 0x54
 800b452:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800b456:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800b45a:	81a3      	strheq	r3, [r4, #12]
 800b45c:	bf18      	it	ne
 800b45e:	81a3      	strhne	r3, [r4, #12]
 800b460:	bd10      	pop	{r4, pc}

0800b462 <__sclose>:
 800b462:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800b466:	f000 b80d 	b.w	800b484 <_close_r>

0800b46a <memset>:
 800b46a:	4402      	add	r2, r0
 800b46c:	4603      	mov	r3, r0
 800b46e:	4293      	cmp	r3, r2
 800b470:	d100      	bne.n	800b474 <memset+0xa>
 800b472:	4770      	bx	lr
 800b474:	f803 1b01 	strb.w	r1, [r3], #1
 800b478:	e7f9      	b.n	800b46e <memset+0x4>
	...

0800b47c <_localeconv_r>:
 800b47c:	4800      	ldr	r0, [pc, #0]	; (800b480 <_localeconv_r+0x4>)
 800b47e:	4770      	bx	lr
 800b480:	20000158 	.word	0x20000158

0800b484 <_close_r>:
 800b484:	b538      	push	{r3, r4, r5, lr}
 800b486:	4d06      	ldr	r5, [pc, #24]	; (800b4a0 <_close_r+0x1c>)
 800b488:	2300      	movs	r3, #0
 800b48a:	4604      	mov	r4, r0
 800b48c:	4608      	mov	r0, r1
 800b48e:	602b      	str	r3, [r5, #0]
 800b490:	f7f9 fc43 	bl	8004d1a <_close>
 800b494:	1c43      	adds	r3, r0, #1
 800b496:	d102      	bne.n	800b49e <_close_r+0x1a>
 800b498:	682b      	ldr	r3, [r5, #0]
 800b49a:	b103      	cbz	r3, 800b49e <_close_r+0x1a>
 800b49c:	6023      	str	r3, [r4, #0]
 800b49e:	bd38      	pop	{r3, r4, r5, pc}
 800b4a0:	20000b28 	.word	0x20000b28

0800b4a4 <_lseek_r>:
 800b4a4:	b538      	push	{r3, r4, r5, lr}
 800b4a6:	4d07      	ldr	r5, [pc, #28]	; (800b4c4 <_lseek_r+0x20>)
 800b4a8:	4604      	mov	r4, r0
 800b4aa:	4608      	mov	r0, r1
 800b4ac:	4611      	mov	r1, r2
 800b4ae:	2200      	movs	r2, #0
 800b4b0:	602a      	str	r2, [r5, #0]
 800b4b2:	461a      	mov	r2, r3
 800b4b4:	f7f9 fc58 	bl	8004d68 <_lseek>
 800b4b8:	1c43      	adds	r3, r0, #1
 800b4ba:	d102      	bne.n	800b4c2 <_lseek_r+0x1e>
 800b4bc:	682b      	ldr	r3, [r5, #0]
 800b4be:	b103      	cbz	r3, 800b4c2 <_lseek_r+0x1e>
 800b4c0:	6023      	str	r3, [r4, #0]
 800b4c2:	bd38      	pop	{r3, r4, r5, pc}
 800b4c4:	20000b28 	.word	0x20000b28

0800b4c8 <_read_r>:
 800b4c8:	b538      	push	{r3, r4, r5, lr}
 800b4ca:	4d07      	ldr	r5, [pc, #28]	; (800b4e8 <_read_r+0x20>)
 800b4cc:	4604      	mov	r4, r0
 800b4ce:	4608      	mov	r0, r1
 800b4d0:	4611      	mov	r1, r2
 800b4d2:	2200      	movs	r2, #0
 800b4d4:	602a      	str	r2, [r5, #0]
 800b4d6:	461a      	mov	r2, r3
 800b4d8:	f7f9 fbe6 	bl	8004ca8 <_read>
 800b4dc:	1c43      	adds	r3, r0, #1
 800b4de:	d102      	bne.n	800b4e6 <_read_r+0x1e>
 800b4e0:	682b      	ldr	r3, [r5, #0]
 800b4e2:	b103      	cbz	r3, 800b4e6 <_read_r+0x1e>
 800b4e4:	6023      	str	r3, [r4, #0]
 800b4e6:	bd38      	pop	{r3, r4, r5, pc}
 800b4e8:	20000b28 	.word	0x20000b28

0800b4ec <_sbrk_r>:
 800b4ec:	b538      	push	{r3, r4, r5, lr}
 800b4ee:	4d06      	ldr	r5, [pc, #24]	; (800b508 <_sbrk_r+0x1c>)
 800b4f0:	2300      	movs	r3, #0
 800b4f2:	4604      	mov	r4, r0
 800b4f4:	4608      	mov	r0, r1
 800b4f6:	602b      	str	r3, [r5, #0]
 800b4f8:	f7f9 fc44 	bl	8004d84 <_sbrk>
 800b4fc:	1c43      	adds	r3, r0, #1
 800b4fe:	d102      	bne.n	800b506 <_sbrk_r+0x1a>
 800b500:	682b      	ldr	r3, [r5, #0]
 800b502:	b103      	cbz	r3, 800b506 <_sbrk_r+0x1a>
 800b504:	6023      	str	r3, [r4, #0]
 800b506:	bd38      	pop	{r3, r4, r5, pc}
 800b508:	20000b28 	.word	0x20000b28

0800b50c <_write_r>:
 800b50c:	b538      	push	{r3, r4, r5, lr}
 800b50e:	4d07      	ldr	r5, [pc, #28]	; (800b52c <_write_r+0x20>)
 800b510:	4604      	mov	r4, r0
 800b512:	4608      	mov	r0, r1
 800b514:	4611      	mov	r1, r2
 800b516:	2200      	movs	r2, #0
 800b518:	602a      	str	r2, [r5, #0]
 800b51a:	461a      	mov	r2, r3
 800b51c:	f7f9 fbe1 	bl	8004ce2 <_write>
 800b520:	1c43      	adds	r3, r0, #1
 800b522:	d102      	bne.n	800b52a <_write_r+0x1e>
 800b524:	682b      	ldr	r3, [r5, #0]
 800b526:	b103      	cbz	r3, 800b52a <_write_r+0x1e>
 800b528:	6023      	str	r3, [r4, #0]
 800b52a:	bd38      	pop	{r3, r4, r5, pc}
 800b52c:	20000b28 	.word	0x20000b28

0800b530 <__errno>:
 800b530:	4b01      	ldr	r3, [pc, #4]	; (800b538 <__errno+0x8>)
 800b532:	6818      	ldr	r0, [r3, #0]
 800b534:	4770      	bx	lr
 800b536:	bf00      	nop
 800b538:	20000064 	.word	0x20000064

0800b53c <__libc_init_array>:
 800b53c:	b570      	push	{r4, r5, r6, lr}
 800b53e:	4d0d      	ldr	r5, [pc, #52]	; (800b574 <__libc_init_array+0x38>)
 800b540:	4c0d      	ldr	r4, [pc, #52]	; (800b578 <__libc_init_array+0x3c>)
 800b542:	1b64      	subs	r4, r4, r5
 800b544:	10a4      	asrs	r4, r4, #2
 800b546:	2600      	movs	r6, #0
 800b548:	42a6      	cmp	r6, r4
 800b54a:	d109      	bne.n	800b560 <__libc_init_array+0x24>
 800b54c:	4d0b      	ldr	r5, [pc, #44]	; (800b57c <__libc_init_array+0x40>)
 800b54e:	4c0c      	ldr	r4, [pc, #48]	; (800b580 <__libc_init_array+0x44>)
 800b550:	f005 fee2 	bl	8011318 <_init>
 800b554:	1b64      	subs	r4, r4, r5
 800b556:	10a4      	asrs	r4, r4, #2
 800b558:	2600      	movs	r6, #0
 800b55a:	42a6      	cmp	r6, r4
 800b55c:	d105      	bne.n	800b56a <__libc_init_array+0x2e>
 800b55e:	bd70      	pop	{r4, r5, r6, pc}
 800b560:	f855 3b04 	ldr.w	r3, [r5], #4
 800b564:	4798      	blx	r3
 800b566:	3601      	adds	r6, #1
 800b568:	e7ee      	b.n	800b548 <__libc_init_array+0xc>
 800b56a:	f855 3b04 	ldr.w	r3, [r5], #4
 800b56e:	4798      	blx	r3
 800b570:	3601      	adds	r6, #1
 800b572:	e7f2      	b.n	800b55a <__libc_init_array+0x1e>
 800b574:	08012498 	.word	0x08012498
 800b578:	08012498 	.word	0x08012498
 800b57c:	08012498 	.word	0x08012498
 800b580:	0801249c 	.word	0x0801249c

0800b584 <__retarget_lock_init_recursive>:
 800b584:	4770      	bx	lr

0800b586 <__retarget_lock_acquire_recursive>:
 800b586:	4770      	bx	lr

0800b588 <__retarget_lock_release_recursive>:
 800b588:	4770      	bx	lr

0800b58a <memcpy>:
 800b58a:	440a      	add	r2, r1
 800b58c:	4291      	cmp	r1, r2
 800b58e:	f100 33ff 	add.w	r3, r0, #4294967295
 800b592:	d100      	bne.n	800b596 <memcpy+0xc>
 800b594:	4770      	bx	lr
 800b596:	b510      	push	{r4, lr}
 800b598:	f811 4b01 	ldrb.w	r4, [r1], #1
 800b59c:	f803 4f01 	strb.w	r4, [r3, #1]!
 800b5a0:	4291      	cmp	r1, r2
 800b5a2:	d1f9      	bne.n	800b598 <memcpy+0xe>
 800b5a4:	bd10      	pop	{r4, pc}
	...

0800b5a8 <nanf>:
 800b5a8:	ed9f 0a01 	vldr	s0, [pc, #4]	; 800b5b0 <nanf+0x8>
 800b5ac:	4770      	bx	lr
 800b5ae:	bf00      	nop
 800b5b0:	7fc00000 	.word	0x7fc00000

0800b5b4 <quorem>:
 800b5b4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b5b8:	6903      	ldr	r3, [r0, #16]
 800b5ba:	690c      	ldr	r4, [r1, #16]
 800b5bc:	42a3      	cmp	r3, r4
 800b5be:	4607      	mov	r7, r0
 800b5c0:	db7e      	blt.n	800b6c0 <quorem+0x10c>
 800b5c2:	3c01      	subs	r4, #1
 800b5c4:	f101 0814 	add.w	r8, r1, #20
 800b5c8:	f100 0514 	add.w	r5, r0, #20
 800b5cc:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800b5d0:	9301      	str	r3, [sp, #4]
 800b5d2:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800b5d6:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800b5da:	3301      	adds	r3, #1
 800b5dc:	429a      	cmp	r2, r3
 800b5de:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800b5e2:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800b5e6:	fbb2 f6f3 	udiv	r6, r2, r3
 800b5ea:	d331      	bcc.n	800b650 <quorem+0x9c>
 800b5ec:	f04f 0e00 	mov.w	lr, #0
 800b5f0:	4640      	mov	r0, r8
 800b5f2:	46ac      	mov	ip, r5
 800b5f4:	46f2      	mov	sl, lr
 800b5f6:	f850 2b04 	ldr.w	r2, [r0], #4
 800b5fa:	b293      	uxth	r3, r2
 800b5fc:	fb06 e303 	mla	r3, r6, r3, lr
 800b600:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800b604:	0c1a      	lsrs	r2, r3, #16
 800b606:	b29b      	uxth	r3, r3
 800b608:	ebaa 0303 	sub.w	r3, sl, r3
 800b60c:	f8dc a000 	ldr.w	sl, [ip]
 800b610:	fa13 f38a 	uxtah	r3, r3, sl
 800b614:	fb06 220e 	mla	r2, r6, lr, r2
 800b618:	9300      	str	r3, [sp, #0]
 800b61a:	9b00      	ldr	r3, [sp, #0]
 800b61c:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800b620:	b292      	uxth	r2, r2
 800b622:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 800b626:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800b62a:	f8bd 3000 	ldrh.w	r3, [sp]
 800b62e:	4581      	cmp	r9, r0
 800b630:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800b634:	f84c 3b04 	str.w	r3, [ip], #4
 800b638:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800b63c:	d2db      	bcs.n	800b5f6 <quorem+0x42>
 800b63e:	f855 300b 	ldr.w	r3, [r5, fp]
 800b642:	b92b      	cbnz	r3, 800b650 <quorem+0x9c>
 800b644:	9b01      	ldr	r3, [sp, #4]
 800b646:	3b04      	subs	r3, #4
 800b648:	429d      	cmp	r5, r3
 800b64a:	461a      	mov	r2, r3
 800b64c:	d32c      	bcc.n	800b6a8 <quorem+0xf4>
 800b64e:	613c      	str	r4, [r7, #16]
 800b650:	4638      	mov	r0, r7
 800b652:	f001 f93d 	bl	800c8d0 <__mcmp>
 800b656:	2800      	cmp	r0, #0
 800b658:	db22      	blt.n	800b6a0 <quorem+0xec>
 800b65a:	3601      	adds	r6, #1
 800b65c:	4629      	mov	r1, r5
 800b65e:	2000      	movs	r0, #0
 800b660:	f858 2b04 	ldr.w	r2, [r8], #4
 800b664:	f8d1 c000 	ldr.w	ip, [r1]
 800b668:	b293      	uxth	r3, r2
 800b66a:	1ac3      	subs	r3, r0, r3
 800b66c:	0c12      	lsrs	r2, r2, #16
 800b66e:	fa13 f38c 	uxtah	r3, r3, ip
 800b672:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 800b676:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800b67a:	b29b      	uxth	r3, r3
 800b67c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800b680:	45c1      	cmp	r9, r8
 800b682:	f841 3b04 	str.w	r3, [r1], #4
 800b686:	ea4f 4022 	mov.w	r0, r2, asr #16
 800b68a:	d2e9      	bcs.n	800b660 <quorem+0xac>
 800b68c:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800b690:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800b694:	b922      	cbnz	r2, 800b6a0 <quorem+0xec>
 800b696:	3b04      	subs	r3, #4
 800b698:	429d      	cmp	r5, r3
 800b69a:	461a      	mov	r2, r3
 800b69c:	d30a      	bcc.n	800b6b4 <quorem+0x100>
 800b69e:	613c      	str	r4, [r7, #16]
 800b6a0:	4630      	mov	r0, r6
 800b6a2:	b003      	add	sp, #12
 800b6a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b6a8:	6812      	ldr	r2, [r2, #0]
 800b6aa:	3b04      	subs	r3, #4
 800b6ac:	2a00      	cmp	r2, #0
 800b6ae:	d1ce      	bne.n	800b64e <quorem+0x9a>
 800b6b0:	3c01      	subs	r4, #1
 800b6b2:	e7c9      	b.n	800b648 <quorem+0x94>
 800b6b4:	6812      	ldr	r2, [r2, #0]
 800b6b6:	3b04      	subs	r3, #4
 800b6b8:	2a00      	cmp	r2, #0
 800b6ba:	d1f0      	bne.n	800b69e <quorem+0xea>
 800b6bc:	3c01      	subs	r4, #1
 800b6be:	e7eb      	b.n	800b698 <quorem+0xe4>
 800b6c0:	2000      	movs	r0, #0
 800b6c2:	e7ee      	b.n	800b6a2 <quorem+0xee>
 800b6c4:	0000      	movs	r0, r0
	...

0800b6c8 <_dtoa_r>:
 800b6c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b6cc:	ed2d 8b04 	vpush	{d8-d9}
 800b6d0:	69c5      	ldr	r5, [r0, #28]
 800b6d2:	b093      	sub	sp, #76	; 0x4c
 800b6d4:	ed8d 0b02 	vstr	d0, [sp, #8]
 800b6d8:	ec57 6b10 	vmov	r6, r7, d0
 800b6dc:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 800b6e0:	9107      	str	r1, [sp, #28]
 800b6e2:	4604      	mov	r4, r0
 800b6e4:	920a      	str	r2, [sp, #40]	; 0x28
 800b6e6:	930d      	str	r3, [sp, #52]	; 0x34
 800b6e8:	b975      	cbnz	r5, 800b708 <_dtoa_r+0x40>
 800b6ea:	2010      	movs	r0, #16
 800b6ec:	f7fe fe32 	bl	800a354 <malloc>
 800b6f0:	4602      	mov	r2, r0
 800b6f2:	61e0      	str	r0, [r4, #28]
 800b6f4:	b920      	cbnz	r0, 800b700 <_dtoa_r+0x38>
 800b6f6:	4bae      	ldr	r3, [pc, #696]	; (800b9b0 <_dtoa_r+0x2e8>)
 800b6f8:	21ef      	movs	r1, #239	; 0xef
 800b6fa:	48ae      	ldr	r0, [pc, #696]	; (800b9b4 <_dtoa_r+0x2ec>)
 800b6fc:	f002 fba0 	bl	800de40 <__assert_func>
 800b700:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800b704:	6005      	str	r5, [r0, #0]
 800b706:	60c5      	str	r5, [r0, #12]
 800b708:	69e3      	ldr	r3, [r4, #28]
 800b70a:	6819      	ldr	r1, [r3, #0]
 800b70c:	b151      	cbz	r1, 800b724 <_dtoa_r+0x5c>
 800b70e:	685a      	ldr	r2, [r3, #4]
 800b710:	604a      	str	r2, [r1, #4]
 800b712:	2301      	movs	r3, #1
 800b714:	4093      	lsls	r3, r2
 800b716:	608b      	str	r3, [r1, #8]
 800b718:	4620      	mov	r0, r4
 800b71a:	f000 fe53 	bl	800c3c4 <_Bfree>
 800b71e:	69e3      	ldr	r3, [r4, #28]
 800b720:	2200      	movs	r2, #0
 800b722:	601a      	str	r2, [r3, #0]
 800b724:	1e3b      	subs	r3, r7, #0
 800b726:	bfbb      	ittet	lt
 800b728:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 800b72c:	9303      	strlt	r3, [sp, #12]
 800b72e:	2300      	movge	r3, #0
 800b730:	2201      	movlt	r2, #1
 800b732:	bfac      	ite	ge
 800b734:	f8c8 3000 	strge.w	r3, [r8]
 800b738:	f8c8 2000 	strlt.w	r2, [r8]
 800b73c:	4b9e      	ldr	r3, [pc, #632]	; (800b9b8 <_dtoa_r+0x2f0>)
 800b73e:	f8dd 800c 	ldr.w	r8, [sp, #12]
 800b742:	ea33 0308 	bics.w	r3, r3, r8
 800b746:	d11b      	bne.n	800b780 <_dtoa_r+0xb8>
 800b748:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800b74a:	f242 730f 	movw	r3, #9999	; 0x270f
 800b74e:	6013      	str	r3, [r2, #0]
 800b750:	f3c8 0313 	ubfx	r3, r8, #0, #20
 800b754:	4333      	orrs	r3, r6
 800b756:	f000 8593 	beq.w	800c280 <_dtoa_r+0xbb8>
 800b75a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800b75c:	b963      	cbnz	r3, 800b778 <_dtoa_r+0xb0>
 800b75e:	4b97      	ldr	r3, [pc, #604]	; (800b9bc <_dtoa_r+0x2f4>)
 800b760:	e027      	b.n	800b7b2 <_dtoa_r+0xea>
 800b762:	4b97      	ldr	r3, [pc, #604]	; (800b9c0 <_dtoa_r+0x2f8>)
 800b764:	9300      	str	r3, [sp, #0]
 800b766:	3308      	adds	r3, #8
 800b768:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800b76a:	6013      	str	r3, [r2, #0]
 800b76c:	9800      	ldr	r0, [sp, #0]
 800b76e:	b013      	add	sp, #76	; 0x4c
 800b770:	ecbd 8b04 	vpop	{d8-d9}
 800b774:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b778:	4b90      	ldr	r3, [pc, #576]	; (800b9bc <_dtoa_r+0x2f4>)
 800b77a:	9300      	str	r3, [sp, #0]
 800b77c:	3303      	adds	r3, #3
 800b77e:	e7f3      	b.n	800b768 <_dtoa_r+0xa0>
 800b780:	ed9d 7b02 	vldr	d7, [sp, #8]
 800b784:	2200      	movs	r2, #0
 800b786:	ec51 0b17 	vmov	r0, r1, d7
 800b78a:	eeb0 8a47 	vmov.f32	s16, s14
 800b78e:	eef0 8a67 	vmov.f32	s17, s15
 800b792:	2300      	movs	r3, #0
 800b794:	f7f5 f998 	bl	8000ac8 <__aeabi_dcmpeq>
 800b798:	4681      	mov	r9, r0
 800b79a:	b160      	cbz	r0, 800b7b6 <_dtoa_r+0xee>
 800b79c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800b79e:	2301      	movs	r3, #1
 800b7a0:	6013      	str	r3, [r2, #0]
 800b7a2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800b7a4:	2b00      	cmp	r3, #0
 800b7a6:	f000 8568 	beq.w	800c27a <_dtoa_r+0xbb2>
 800b7aa:	4b86      	ldr	r3, [pc, #536]	; (800b9c4 <_dtoa_r+0x2fc>)
 800b7ac:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800b7ae:	6013      	str	r3, [r2, #0]
 800b7b0:	3b01      	subs	r3, #1
 800b7b2:	9300      	str	r3, [sp, #0]
 800b7b4:	e7da      	b.n	800b76c <_dtoa_r+0xa4>
 800b7b6:	aa10      	add	r2, sp, #64	; 0x40
 800b7b8:	a911      	add	r1, sp, #68	; 0x44
 800b7ba:	4620      	mov	r0, r4
 800b7bc:	eeb0 0a48 	vmov.f32	s0, s16
 800b7c0:	eef0 0a68 	vmov.f32	s1, s17
 800b7c4:	f001 f99a 	bl	800cafc <__d2b>
 800b7c8:	f3c8 550a 	ubfx	r5, r8, #20, #11
 800b7cc:	4682      	mov	sl, r0
 800b7ce:	2d00      	cmp	r5, #0
 800b7d0:	d07f      	beq.n	800b8d2 <_dtoa_r+0x20a>
 800b7d2:	ee18 3a90 	vmov	r3, s17
 800b7d6:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800b7da:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 800b7de:	ec51 0b18 	vmov	r0, r1, d8
 800b7e2:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 800b7e6:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 800b7ea:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800b7ee:	4619      	mov	r1, r3
 800b7f0:	2200      	movs	r2, #0
 800b7f2:	4b75      	ldr	r3, [pc, #468]	; (800b9c8 <_dtoa_r+0x300>)
 800b7f4:	f7f4 fd48 	bl	8000288 <__aeabi_dsub>
 800b7f8:	a367      	add	r3, pc, #412	; (adr r3, 800b998 <_dtoa_r+0x2d0>)
 800b7fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b7fe:	f7f4 fefb 	bl	80005f8 <__aeabi_dmul>
 800b802:	a367      	add	r3, pc, #412	; (adr r3, 800b9a0 <_dtoa_r+0x2d8>)
 800b804:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b808:	f7f4 fd40 	bl	800028c <__adddf3>
 800b80c:	4606      	mov	r6, r0
 800b80e:	4628      	mov	r0, r5
 800b810:	460f      	mov	r7, r1
 800b812:	f7f4 fe87 	bl	8000524 <__aeabi_i2d>
 800b816:	a364      	add	r3, pc, #400	; (adr r3, 800b9a8 <_dtoa_r+0x2e0>)
 800b818:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b81c:	f7f4 feec 	bl	80005f8 <__aeabi_dmul>
 800b820:	4602      	mov	r2, r0
 800b822:	460b      	mov	r3, r1
 800b824:	4630      	mov	r0, r6
 800b826:	4639      	mov	r1, r7
 800b828:	f7f4 fd30 	bl	800028c <__adddf3>
 800b82c:	4606      	mov	r6, r0
 800b82e:	460f      	mov	r7, r1
 800b830:	f7f5 f992 	bl	8000b58 <__aeabi_d2iz>
 800b834:	2200      	movs	r2, #0
 800b836:	4683      	mov	fp, r0
 800b838:	2300      	movs	r3, #0
 800b83a:	4630      	mov	r0, r6
 800b83c:	4639      	mov	r1, r7
 800b83e:	f7f5 f94d 	bl	8000adc <__aeabi_dcmplt>
 800b842:	b148      	cbz	r0, 800b858 <_dtoa_r+0x190>
 800b844:	4658      	mov	r0, fp
 800b846:	f7f4 fe6d 	bl	8000524 <__aeabi_i2d>
 800b84a:	4632      	mov	r2, r6
 800b84c:	463b      	mov	r3, r7
 800b84e:	f7f5 f93b 	bl	8000ac8 <__aeabi_dcmpeq>
 800b852:	b908      	cbnz	r0, 800b858 <_dtoa_r+0x190>
 800b854:	f10b 3bff 	add.w	fp, fp, #4294967295
 800b858:	f1bb 0f16 	cmp.w	fp, #22
 800b85c:	d857      	bhi.n	800b90e <_dtoa_r+0x246>
 800b85e:	4b5b      	ldr	r3, [pc, #364]	; (800b9cc <_dtoa_r+0x304>)
 800b860:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800b864:	e9d3 2300 	ldrd	r2, r3, [r3]
 800b868:	ec51 0b18 	vmov	r0, r1, d8
 800b86c:	f7f5 f936 	bl	8000adc <__aeabi_dcmplt>
 800b870:	2800      	cmp	r0, #0
 800b872:	d04e      	beq.n	800b912 <_dtoa_r+0x24a>
 800b874:	f10b 3bff 	add.w	fp, fp, #4294967295
 800b878:	2300      	movs	r3, #0
 800b87a:	930c      	str	r3, [sp, #48]	; 0x30
 800b87c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800b87e:	1b5b      	subs	r3, r3, r5
 800b880:	1e5a      	subs	r2, r3, #1
 800b882:	bf45      	ittet	mi
 800b884:	f1c3 0301 	rsbmi	r3, r3, #1
 800b888:	9305      	strmi	r3, [sp, #20]
 800b88a:	2300      	movpl	r3, #0
 800b88c:	2300      	movmi	r3, #0
 800b88e:	9206      	str	r2, [sp, #24]
 800b890:	bf54      	ite	pl
 800b892:	9305      	strpl	r3, [sp, #20]
 800b894:	9306      	strmi	r3, [sp, #24]
 800b896:	f1bb 0f00 	cmp.w	fp, #0
 800b89a:	db3c      	blt.n	800b916 <_dtoa_r+0x24e>
 800b89c:	9b06      	ldr	r3, [sp, #24]
 800b89e:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 800b8a2:	445b      	add	r3, fp
 800b8a4:	9306      	str	r3, [sp, #24]
 800b8a6:	2300      	movs	r3, #0
 800b8a8:	9308      	str	r3, [sp, #32]
 800b8aa:	9b07      	ldr	r3, [sp, #28]
 800b8ac:	2b09      	cmp	r3, #9
 800b8ae:	d868      	bhi.n	800b982 <_dtoa_r+0x2ba>
 800b8b0:	2b05      	cmp	r3, #5
 800b8b2:	bfc4      	itt	gt
 800b8b4:	3b04      	subgt	r3, #4
 800b8b6:	9307      	strgt	r3, [sp, #28]
 800b8b8:	9b07      	ldr	r3, [sp, #28]
 800b8ba:	f1a3 0302 	sub.w	r3, r3, #2
 800b8be:	bfcc      	ite	gt
 800b8c0:	2500      	movgt	r5, #0
 800b8c2:	2501      	movle	r5, #1
 800b8c4:	2b03      	cmp	r3, #3
 800b8c6:	f200 8085 	bhi.w	800b9d4 <_dtoa_r+0x30c>
 800b8ca:	e8df f003 	tbb	[pc, r3]
 800b8ce:	3b2e      	.short	0x3b2e
 800b8d0:	5839      	.short	0x5839
 800b8d2:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 800b8d6:	441d      	add	r5, r3
 800b8d8:	f205 4332 	addw	r3, r5, #1074	; 0x432
 800b8dc:	2b20      	cmp	r3, #32
 800b8de:	bfc1      	itttt	gt
 800b8e0:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800b8e4:	fa08 f803 	lslgt.w	r8, r8, r3
 800b8e8:	f205 4312 	addwgt	r3, r5, #1042	; 0x412
 800b8ec:	fa26 f303 	lsrgt.w	r3, r6, r3
 800b8f0:	bfd6      	itet	le
 800b8f2:	f1c3 0320 	rsble	r3, r3, #32
 800b8f6:	ea48 0003 	orrgt.w	r0, r8, r3
 800b8fa:	fa06 f003 	lslle.w	r0, r6, r3
 800b8fe:	f7f4 fe01 	bl	8000504 <__aeabi_ui2d>
 800b902:	2201      	movs	r2, #1
 800b904:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
 800b908:	3d01      	subs	r5, #1
 800b90a:	920e      	str	r2, [sp, #56]	; 0x38
 800b90c:	e76f      	b.n	800b7ee <_dtoa_r+0x126>
 800b90e:	2301      	movs	r3, #1
 800b910:	e7b3      	b.n	800b87a <_dtoa_r+0x1b2>
 800b912:	900c      	str	r0, [sp, #48]	; 0x30
 800b914:	e7b2      	b.n	800b87c <_dtoa_r+0x1b4>
 800b916:	9b05      	ldr	r3, [sp, #20]
 800b918:	eba3 030b 	sub.w	r3, r3, fp
 800b91c:	9305      	str	r3, [sp, #20]
 800b91e:	f1cb 0300 	rsb	r3, fp, #0
 800b922:	9308      	str	r3, [sp, #32]
 800b924:	2300      	movs	r3, #0
 800b926:	930b      	str	r3, [sp, #44]	; 0x2c
 800b928:	e7bf      	b.n	800b8aa <_dtoa_r+0x1e2>
 800b92a:	2300      	movs	r3, #0
 800b92c:	9309      	str	r3, [sp, #36]	; 0x24
 800b92e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b930:	2b00      	cmp	r3, #0
 800b932:	dc52      	bgt.n	800b9da <_dtoa_r+0x312>
 800b934:	2301      	movs	r3, #1
 800b936:	9301      	str	r3, [sp, #4]
 800b938:	9304      	str	r3, [sp, #16]
 800b93a:	461a      	mov	r2, r3
 800b93c:	920a      	str	r2, [sp, #40]	; 0x28
 800b93e:	e00b      	b.n	800b958 <_dtoa_r+0x290>
 800b940:	2301      	movs	r3, #1
 800b942:	e7f3      	b.n	800b92c <_dtoa_r+0x264>
 800b944:	2300      	movs	r3, #0
 800b946:	9309      	str	r3, [sp, #36]	; 0x24
 800b948:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b94a:	445b      	add	r3, fp
 800b94c:	9301      	str	r3, [sp, #4]
 800b94e:	3301      	adds	r3, #1
 800b950:	2b01      	cmp	r3, #1
 800b952:	9304      	str	r3, [sp, #16]
 800b954:	bfb8      	it	lt
 800b956:	2301      	movlt	r3, #1
 800b958:	69e0      	ldr	r0, [r4, #28]
 800b95a:	2100      	movs	r1, #0
 800b95c:	2204      	movs	r2, #4
 800b95e:	f102 0614 	add.w	r6, r2, #20
 800b962:	429e      	cmp	r6, r3
 800b964:	d93d      	bls.n	800b9e2 <_dtoa_r+0x31a>
 800b966:	6041      	str	r1, [r0, #4]
 800b968:	4620      	mov	r0, r4
 800b96a:	f000 fceb 	bl	800c344 <_Balloc>
 800b96e:	9000      	str	r0, [sp, #0]
 800b970:	2800      	cmp	r0, #0
 800b972:	d139      	bne.n	800b9e8 <_dtoa_r+0x320>
 800b974:	4b16      	ldr	r3, [pc, #88]	; (800b9d0 <_dtoa_r+0x308>)
 800b976:	4602      	mov	r2, r0
 800b978:	f240 11af 	movw	r1, #431	; 0x1af
 800b97c:	e6bd      	b.n	800b6fa <_dtoa_r+0x32>
 800b97e:	2301      	movs	r3, #1
 800b980:	e7e1      	b.n	800b946 <_dtoa_r+0x27e>
 800b982:	2501      	movs	r5, #1
 800b984:	2300      	movs	r3, #0
 800b986:	9307      	str	r3, [sp, #28]
 800b988:	9509      	str	r5, [sp, #36]	; 0x24
 800b98a:	f04f 33ff 	mov.w	r3, #4294967295
 800b98e:	9301      	str	r3, [sp, #4]
 800b990:	9304      	str	r3, [sp, #16]
 800b992:	2200      	movs	r2, #0
 800b994:	2312      	movs	r3, #18
 800b996:	e7d1      	b.n	800b93c <_dtoa_r+0x274>
 800b998:	636f4361 	.word	0x636f4361
 800b99c:	3fd287a7 	.word	0x3fd287a7
 800b9a0:	8b60c8b3 	.word	0x8b60c8b3
 800b9a4:	3fc68a28 	.word	0x3fc68a28
 800b9a8:	509f79fb 	.word	0x509f79fb
 800b9ac:	3fd34413 	.word	0x3fd34413
 800b9b0:	08011e36 	.word	0x08011e36
 800b9b4:	08011e4d 	.word	0x08011e4d
 800b9b8:	7ff00000 	.word	0x7ff00000
 800b9bc:	08011e32 	.word	0x08011e32
 800b9c0:	08011e29 	.word	0x08011e29
 800b9c4:	08011e01 	.word	0x08011e01
 800b9c8:	3ff80000 	.word	0x3ff80000
 800b9cc:	08011f38 	.word	0x08011f38
 800b9d0:	08011ea5 	.word	0x08011ea5
 800b9d4:	2301      	movs	r3, #1
 800b9d6:	9309      	str	r3, [sp, #36]	; 0x24
 800b9d8:	e7d7      	b.n	800b98a <_dtoa_r+0x2c2>
 800b9da:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800b9dc:	9301      	str	r3, [sp, #4]
 800b9de:	9304      	str	r3, [sp, #16]
 800b9e0:	e7ba      	b.n	800b958 <_dtoa_r+0x290>
 800b9e2:	3101      	adds	r1, #1
 800b9e4:	0052      	lsls	r2, r2, #1
 800b9e6:	e7ba      	b.n	800b95e <_dtoa_r+0x296>
 800b9e8:	69e3      	ldr	r3, [r4, #28]
 800b9ea:	9a00      	ldr	r2, [sp, #0]
 800b9ec:	601a      	str	r2, [r3, #0]
 800b9ee:	9b04      	ldr	r3, [sp, #16]
 800b9f0:	2b0e      	cmp	r3, #14
 800b9f2:	f200 80a8 	bhi.w	800bb46 <_dtoa_r+0x47e>
 800b9f6:	2d00      	cmp	r5, #0
 800b9f8:	f000 80a5 	beq.w	800bb46 <_dtoa_r+0x47e>
 800b9fc:	f1bb 0f00 	cmp.w	fp, #0
 800ba00:	dd38      	ble.n	800ba74 <_dtoa_r+0x3ac>
 800ba02:	4bc0      	ldr	r3, [pc, #768]	; (800bd04 <_dtoa_r+0x63c>)
 800ba04:	f00b 020f 	and.w	r2, fp, #15
 800ba08:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800ba0c:	f41b 7f80 	tst.w	fp, #256	; 0x100
 800ba10:	e9d3 6700 	ldrd	r6, r7, [r3]
 800ba14:	ea4f 182b 	mov.w	r8, fp, asr #4
 800ba18:	d019      	beq.n	800ba4e <_dtoa_r+0x386>
 800ba1a:	4bbb      	ldr	r3, [pc, #748]	; (800bd08 <_dtoa_r+0x640>)
 800ba1c:	ec51 0b18 	vmov	r0, r1, d8
 800ba20:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800ba24:	f7f4 ff12 	bl	800084c <__aeabi_ddiv>
 800ba28:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800ba2c:	f008 080f 	and.w	r8, r8, #15
 800ba30:	2503      	movs	r5, #3
 800ba32:	f8df 92d4 	ldr.w	r9, [pc, #724]	; 800bd08 <_dtoa_r+0x640>
 800ba36:	f1b8 0f00 	cmp.w	r8, #0
 800ba3a:	d10a      	bne.n	800ba52 <_dtoa_r+0x38a>
 800ba3c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800ba40:	4632      	mov	r2, r6
 800ba42:	463b      	mov	r3, r7
 800ba44:	f7f4 ff02 	bl	800084c <__aeabi_ddiv>
 800ba48:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800ba4c:	e02b      	b.n	800baa6 <_dtoa_r+0x3de>
 800ba4e:	2502      	movs	r5, #2
 800ba50:	e7ef      	b.n	800ba32 <_dtoa_r+0x36a>
 800ba52:	f018 0f01 	tst.w	r8, #1
 800ba56:	d008      	beq.n	800ba6a <_dtoa_r+0x3a2>
 800ba58:	4630      	mov	r0, r6
 800ba5a:	4639      	mov	r1, r7
 800ba5c:	e9d9 2300 	ldrd	r2, r3, [r9]
 800ba60:	f7f4 fdca 	bl	80005f8 <__aeabi_dmul>
 800ba64:	3501      	adds	r5, #1
 800ba66:	4606      	mov	r6, r0
 800ba68:	460f      	mov	r7, r1
 800ba6a:	ea4f 0868 	mov.w	r8, r8, asr #1
 800ba6e:	f109 0908 	add.w	r9, r9, #8
 800ba72:	e7e0      	b.n	800ba36 <_dtoa_r+0x36e>
 800ba74:	f000 809f 	beq.w	800bbb6 <_dtoa_r+0x4ee>
 800ba78:	f1cb 0600 	rsb	r6, fp, #0
 800ba7c:	4ba1      	ldr	r3, [pc, #644]	; (800bd04 <_dtoa_r+0x63c>)
 800ba7e:	4fa2      	ldr	r7, [pc, #648]	; (800bd08 <_dtoa_r+0x640>)
 800ba80:	f006 020f 	and.w	r2, r6, #15
 800ba84:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800ba88:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ba8c:	ec51 0b18 	vmov	r0, r1, d8
 800ba90:	f7f4 fdb2 	bl	80005f8 <__aeabi_dmul>
 800ba94:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800ba98:	1136      	asrs	r6, r6, #4
 800ba9a:	2300      	movs	r3, #0
 800ba9c:	2502      	movs	r5, #2
 800ba9e:	2e00      	cmp	r6, #0
 800baa0:	d17e      	bne.n	800bba0 <_dtoa_r+0x4d8>
 800baa2:	2b00      	cmp	r3, #0
 800baa4:	d1d0      	bne.n	800ba48 <_dtoa_r+0x380>
 800baa6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800baa8:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 800baac:	2b00      	cmp	r3, #0
 800baae:	f000 8084 	beq.w	800bbba <_dtoa_r+0x4f2>
 800bab2:	4b96      	ldr	r3, [pc, #600]	; (800bd0c <_dtoa_r+0x644>)
 800bab4:	2200      	movs	r2, #0
 800bab6:	4640      	mov	r0, r8
 800bab8:	4649      	mov	r1, r9
 800baba:	f7f5 f80f 	bl	8000adc <__aeabi_dcmplt>
 800babe:	2800      	cmp	r0, #0
 800bac0:	d07b      	beq.n	800bbba <_dtoa_r+0x4f2>
 800bac2:	9b04      	ldr	r3, [sp, #16]
 800bac4:	2b00      	cmp	r3, #0
 800bac6:	d078      	beq.n	800bbba <_dtoa_r+0x4f2>
 800bac8:	9b01      	ldr	r3, [sp, #4]
 800baca:	2b00      	cmp	r3, #0
 800bacc:	dd39      	ble.n	800bb42 <_dtoa_r+0x47a>
 800bace:	4b90      	ldr	r3, [pc, #576]	; (800bd10 <_dtoa_r+0x648>)
 800bad0:	2200      	movs	r2, #0
 800bad2:	4640      	mov	r0, r8
 800bad4:	4649      	mov	r1, r9
 800bad6:	f7f4 fd8f 	bl	80005f8 <__aeabi_dmul>
 800bada:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800bade:	9e01      	ldr	r6, [sp, #4]
 800bae0:	f10b 37ff 	add.w	r7, fp, #4294967295
 800bae4:	3501      	adds	r5, #1
 800bae6:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 800baea:	4628      	mov	r0, r5
 800baec:	f7f4 fd1a 	bl	8000524 <__aeabi_i2d>
 800baf0:	4642      	mov	r2, r8
 800baf2:	464b      	mov	r3, r9
 800baf4:	f7f4 fd80 	bl	80005f8 <__aeabi_dmul>
 800baf8:	4b86      	ldr	r3, [pc, #536]	; (800bd14 <_dtoa_r+0x64c>)
 800bafa:	2200      	movs	r2, #0
 800bafc:	f7f4 fbc6 	bl	800028c <__adddf3>
 800bb00:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
 800bb04:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800bb08:	9303      	str	r3, [sp, #12]
 800bb0a:	2e00      	cmp	r6, #0
 800bb0c:	d158      	bne.n	800bbc0 <_dtoa_r+0x4f8>
 800bb0e:	4b82      	ldr	r3, [pc, #520]	; (800bd18 <_dtoa_r+0x650>)
 800bb10:	2200      	movs	r2, #0
 800bb12:	4640      	mov	r0, r8
 800bb14:	4649      	mov	r1, r9
 800bb16:	f7f4 fbb7 	bl	8000288 <__aeabi_dsub>
 800bb1a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800bb1e:	4680      	mov	r8, r0
 800bb20:	4689      	mov	r9, r1
 800bb22:	f7f4 fff9 	bl	8000b18 <__aeabi_dcmpgt>
 800bb26:	2800      	cmp	r0, #0
 800bb28:	f040 8296 	bne.w	800c058 <_dtoa_r+0x990>
 800bb2c:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 800bb30:	4640      	mov	r0, r8
 800bb32:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800bb36:	4649      	mov	r1, r9
 800bb38:	f7f4 ffd0 	bl	8000adc <__aeabi_dcmplt>
 800bb3c:	2800      	cmp	r0, #0
 800bb3e:	f040 8289 	bne.w	800c054 <_dtoa_r+0x98c>
 800bb42:	ed8d 8b02 	vstr	d8, [sp, #8]
 800bb46:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800bb48:	2b00      	cmp	r3, #0
 800bb4a:	f2c0 814e 	blt.w	800bdea <_dtoa_r+0x722>
 800bb4e:	f1bb 0f0e 	cmp.w	fp, #14
 800bb52:	f300 814a 	bgt.w	800bdea <_dtoa_r+0x722>
 800bb56:	4b6b      	ldr	r3, [pc, #428]	; (800bd04 <_dtoa_r+0x63c>)
 800bb58:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800bb5c:	e9d3 8900 	ldrd	r8, r9, [r3]
 800bb60:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800bb62:	2b00      	cmp	r3, #0
 800bb64:	f280 80dc 	bge.w	800bd20 <_dtoa_r+0x658>
 800bb68:	9b04      	ldr	r3, [sp, #16]
 800bb6a:	2b00      	cmp	r3, #0
 800bb6c:	f300 80d8 	bgt.w	800bd20 <_dtoa_r+0x658>
 800bb70:	f040 826f 	bne.w	800c052 <_dtoa_r+0x98a>
 800bb74:	4b68      	ldr	r3, [pc, #416]	; (800bd18 <_dtoa_r+0x650>)
 800bb76:	2200      	movs	r2, #0
 800bb78:	4640      	mov	r0, r8
 800bb7a:	4649      	mov	r1, r9
 800bb7c:	f7f4 fd3c 	bl	80005f8 <__aeabi_dmul>
 800bb80:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800bb84:	f7f4 ffbe 	bl	8000b04 <__aeabi_dcmpge>
 800bb88:	9e04      	ldr	r6, [sp, #16]
 800bb8a:	4637      	mov	r7, r6
 800bb8c:	2800      	cmp	r0, #0
 800bb8e:	f040 8245 	bne.w	800c01c <_dtoa_r+0x954>
 800bb92:	9d00      	ldr	r5, [sp, #0]
 800bb94:	2331      	movs	r3, #49	; 0x31
 800bb96:	f805 3b01 	strb.w	r3, [r5], #1
 800bb9a:	f10b 0b01 	add.w	fp, fp, #1
 800bb9e:	e241      	b.n	800c024 <_dtoa_r+0x95c>
 800bba0:	07f2      	lsls	r2, r6, #31
 800bba2:	d505      	bpl.n	800bbb0 <_dtoa_r+0x4e8>
 800bba4:	e9d7 2300 	ldrd	r2, r3, [r7]
 800bba8:	f7f4 fd26 	bl	80005f8 <__aeabi_dmul>
 800bbac:	3501      	adds	r5, #1
 800bbae:	2301      	movs	r3, #1
 800bbb0:	1076      	asrs	r6, r6, #1
 800bbb2:	3708      	adds	r7, #8
 800bbb4:	e773      	b.n	800ba9e <_dtoa_r+0x3d6>
 800bbb6:	2502      	movs	r5, #2
 800bbb8:	e775      	b.n	800baa6 <_dtoa_r+0x3de>
 800bbba:	9e04      	ldr	r6, [sp, #16]
 800bbbc:	465f      	mov	r7, fp
 800bbbe:	e792      	b.n	800bae6 <_dtoa_r+0x41e>
 800bbc0:	9900      	ldr	r1, [sp, #0]
 800bbc2:	4b50      	ldr	r3, [pc, #320]	; (800bd04 <_dtoa_r+0x63c>)
 800bbc4:	ed9d 7b02 	vldr	d7, [sp, #8]
 800bbc8:	4431      	add	r1, r6
 800bbca:	9102      	str	r1, [sp, #8]
 800bbcc:	9909      	ldr	r1, [sp, #36]	; 0x24
 800bbce:	eeb0 9a47 	vmov.f32	s18, s14
 800bbd2:	eef0 9a67 	vmov.f32	s19, s15
 800bbd6:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 800bbda:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800bbde:	2900      	cmp	r1, #0
 800bbe0:	d044      	beq.n	800bc6c <_dtoa_r+0x5a4>
 800bbe2:	494e      	ldr	r1, [pc, #312]	; (800bd1c <_dtoa_r+0x654>)
 800bbe4:	2000      	movs	r0, #0
 800bbe6:	f7f4 fe31 	bl	800084c <__aeabi_ddiv>
 800bbea:	ec53 2b19 	vmov	r2, r3, d9
 800bbee:	f7f4 fb4b 	bl	8000288 <__aeabi_dsub>
 800bbf2:	9d00      	ldr	r5, [sp, #0]
 800bbf4:	ec41 0b19 	vmov	d9, r0, r1
 800bbf8:	4649      	mov	r1, r9
 800bbfa:	4640      	mov	r0, r8
 800bbfc:	f7f4 ffac 	bl	8000b58 <__aeabi_d2iz>
 800bc00:	4606      	mov	r6, r0
 800bc02:	f7f4 fc8f 	bl	8000524 <__aeabi_i2d>
 800bc06:	4602      	mov	r2, r0
 800bc08:	460b      	mov	r3, r1
 800bc0a:	4640      	mov	r0, r8
 800bc0c:	4649      	mov	r1, r9
 800bc0e:	f7f4 fb3b 	bl	8000288 <__aeabi_dsub>
 800bc12:	3630      	adds	r6, #48	; 0x30
 800bc14:	f805 6b01 	strb.w	r6, [r5], #1
 800bc18:	ec53 2b19 	vmov	r2, r3, d9
 800bc1c:	4680      	mov	r8, r0
 800bc1e:	4689      	mov	r9, r1
 800bc20:	f7f4 ff5c 	bl	8000adc <__aeabi_dcmplt>
 800bc24:	2800      	cmp	r0, #0
 800bc26:	d164      	bne.n	800bcf2 <_dtoa_r+0x62a>
 800bc28:	4642      	mov	r2, r8
 800bc2a:	464b      	mov	r3, r9
 800bc2c:	4937      	ldr	r1, [pc, #220]	; (800bd0c <_dtoa_r+0x644>)
 800bc2e:	2000      	movs	r0, #0
 800bc30:	f7f4 fb2a 	bl	8000288 <__aeabi_dsub>
 800bc34:	ec53 2b19 	vmov	r2, r3, d9
 800bc38:	f7f4 ff50 	bl	8000adc <__aeabi_dcmplt>
 800bc3c:	2800      	cmp	r0, #0
 800bc3e:	f040 80b6 	bne.w	800bdae <_dtoa_r+0x6e6>
 800bc42:	9b02      	ldr	r3, [sp, #8]
 800bc44:	429d      	cmp	r5, r3
 800bc46:	f43f af7c 	beq.w	800bb42 <_dtoa_r+0x47a>
 800bc4a:	4b31      	ldr	r3, [pc, #196]	; (800bd10 <_dtoa_r+0x648>)
 800bc4c:	ec51 0b19 	vmov	r0, r1, d9
 800bc50:	2200      	movs	r2, #0
 800bc52:	f7f4 fcd1 	bl	80005f8 <__aeabi_dmul>
 800bc56:	4b2e      	ldr	r3, [pc, #184]	; (800bd10 <_dtoa_r+0x648>)
 800bc58:	ec41 0b19 	vmov	d9, r0, r1
 800bc5c:	2200      	movs	r2, #0
 800bc5e:	4640      	mov	r0, r8
 800bc60:	4649      	mov	r1, r9
 800bc62:	f7f4 fcc9 	bl	80005f8 <__aeabi_dmul>
 800bc66:	4680      	mov	r8, r0
 800bc68:	4689      	mov	r9, r1
 800bc6a:	e7c5      	b.n	800bbf8 <_dtoa_r+0x530>
 800bc6c:	ec51 0b17 	vmov	r0, r1, d7
 800bc70:	f7f4 fcc2 	bl	80005f8 <__aeabi_dmul>
 800bc74:	9b02      	ldr	r3, [sp, #8]
 800bc76:	9d00      	ldr	r5, [sp, #0]
 800bc78:	930f      	str	r3, [sp, #60]	; 0x3c
 800bc7a:	ec41 0b19 	vmov	d9, r0, r1
 800bc7e:	4649      	mov	r1, r9
 800bc80:	4640      	mov	r0, r8
 800bc82:	f7f4 ff69 	bl	8000b58 <__aeabi_d2iz>
 800bc86:	4606      	mov	r6, r0
 800bc88:	f7f4 fc4c 	bl	8000524 <__aeabi_i2d>
 800bc8c:	3630      	adds	r6, #48	; 0x30
 800bc8e:	4602      	mov	r2, r0
 800bc90:	460b      	mov	r3, r1
 800bc92:	4640      	mov	r0, r8
 800bc94:	4649      	mov	r1, r9
 800bc96:	f7f4 faf7 	bl	8000288 <__aeabi_dsub>
 800bc9a:	f805 6b01 	strb.w	r6, [r5], #1
 800bc9e:	9b02      	ldr	r3, [sp, #8]
 800bca0:	429d      	cmp	r5, r3
 800bca2:	4680      	mov	r8, r0
 800bca4:	4689      	mov	r9, r1
 800bca6:	f04f 0200 	mov.w	r2, #0
 800bcaa:	d124      	bne.n	800bcf6 <_dtoa_r+0x62e>
 800bcac:	4b1b      	ldr	r3, [pc, #108]	; (800bd1c <_dtoa_r+0x654>)
 800bcae:	ec51 0b19 	vmov	r0, r1, d9
 800bcb2:	f7f4 faeb 	bl	800028c <__adddf3>
 800bcb6:	4602      	mov	r2, r0
 800bcb8:	460b      	mov	r3, r1
 800bcba:	4640      	mov	r0, r8
 800bcbc:	4649      	mov	r1, r9
 800bcbe:	f7f4 ff2b 	bl	8000b18 <__aeabi_dcmpgt>
 800bcc2:	2800      	cmp	r0, #0
 800bcc4:	d173      	bne.n	800bdae <_dtoa_r+0x6e6>
 800bcc6:	ec53 2b19 	vmov	r2, r3, d9
 800bcca:	4914      	ldr	r1, [pc, #80]	; (800bd1c <_dtoa_r+0x654>)
 800bccc:	2000      	movs	r0, #0
 800bcce:	f7f4 fadb 	bl	8000288 <__aeabi_dsub>
 800bcd2:	4602      	mov	r2, r0
 800bcd4:	460b      	mov	r3, r1
 800bcd6:	4640      	mov	r0, r8
 800bcd8:	4649      	mov	r1, r9
 800bcda:	f7f4 feff 	bl	8000adc <__aeabi_dcmplt>
 800bcde:	2800      	cmp	r0, #0
 800bce0:	f43f af2f 	beq.w	800bb42 <_dtoa_r+0x47a>
 800bce4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800bce6:	1e6b      	subs	r3, r5, #1
 800bce8:	930f      	str	r3, [sp, #60]	; 0x3c
 800bcea:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800bcee:	2b30      	cmp	r3, #48	; 0x30
 800bcf0:	d0f8      	beq.n	800bce4 <_dtoa_r+0x61c>
 800bcf2:	46bb      	mov	fp, r7
 800bcf4:	e04a      	b.n	800bd8c <_dtoa_r+0x6c4>
 800bcf6:	4b06      	ldr	r3, [pc, #24]	; (800bd10 <_dtoa_r+0x648>)
 800bcf8:	f7f4 fc7e 	bl	80005f8 <__aeabi_dmul>
 800bcfc:	4680      	mov	r8, r0
 800bcfe:	4689      	mov	r9, r1
 800bd00:	e7bd      	b.n	800bc7e <_dtoa_r+0x5b6>
 800bd02:	bf00      	nop
 800bd04:	08011f38 	.word	0x08011f38
 800bd08:	08011f10 	.word	0x08011f10
 800bd0c:	3ff00000 	.word	0x3ff00000
 800bd10:	40240000 	.word	0x40240000
 800bd14:	401c0000 	.word	0x401c0000
 800bd18:	40140000 	.word	0x40140000
 800bd1c:	3fe00000 	.word	0x3fe00000
 800bd20:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 800bd24:	9d00      	ldr	r5, [sp, #0]
 800bd26:	4642      	mov	r2, r8
 800bd28:	464b      	mov	r3, r9
 800bd2a:	4630      	mov	r0, r6
 800bd2c:	4639      	mov	r1, r7
 800bd2e:	f7f4 fd8d 	bl	800084c <__aeabi_ddiv>
 800bd32:	f7f4 ff11 	bl	8000b58 <__aeabi_d2iz>
 800bd36:	9001      	str	r0, [sp, #4]
 800bd38:	f7f4 fbf4 	bl	8000524 <__aeabi_i2d>
 800bd3c:	4642      	mov	r2, r8
 800bd3e:	464b      	mov	r3, r9
 800bd40:	f7f4 fc5a 	bl	80005f8 <__aeabi_dmul>
 800bd44:	4602      	mov	r2, r0
 800bd46:	460b      	mov	r3, r1
 800bd48:	4630      	mov	r0, r6
 800bd4a:	4639      	mov	r1, r7
 800bd4c:	f7f4 fa9c 	bl	8000288 <__aeabi_dsub>
 800bd50:	9e01      	ldr	r6, [sp, #4]
 800bd52:	9f04      	ldr	r7, [sp, #16]
 800bd54:	3630      	adds	r6, #48	; 0x30
 800bd56:	f805 6b01 	strb.w	r6, [r5], #1
 800bd5a:	9e00      	ldr	r6, [sp, #0]
 800bd5c:	1bae      	subs	r6, r5, r6
 800bd5e:	42b7      	cmp	r7, r6
 800bd60:	4602      	mov	r2, r0
 800bd62:	460b      	mov	r3, r1
 800bd64:	d134      	bne.n	800bdd0 <_dtoa_r+0x708>
 800bd66:	f7f4 fa91 	bl	800028c <__adddf3>
 800bd6a:	4642      	mov	r2, r8
 800bd6c:	464b      	mov	r3, r9
 800bd6e:	4606      	mov	r6, r0
 800bd70:	460f      	mov	r7, r1
 800bd72:	f7f4 fed1 	bl	8000b18 <__aeabi_dcmpgt>
 800bd76:	b9c8      	cbnz	r0, 800bdac <_dtoa_r+0x6e4>
 800bd78:	4642      	mov	r2, r8
 800bd7a:	464b      	mov	r3, r9
 800bd7c:	4630      	mov	r0, r6
 800bd7e:	4639      	mov	r1, r7
 800bd80:	f7f4 fea2 	bl	8000ac8 <__aeabi_dcmpeq>
 800bd84:	b110      	cbz	r0, 800bd8c <_dtoa_r+0x6c4>
 800bd86:	9b01      	ldr	r3, [sp, #4]
 800bd88:	07db      	lsls	r3, r3, #31
 800bd8a:	d40f      	bmi.n	800bdac <_dtoa_r+0x6e4>
 800bd8c:	4651      	mov	r1, sl
 800bd8e:	4620      	mov	r0, r4
 800bd90:	f000 fb18 	bl	800c3c4 <_Bfree>
 800bd94:	2300      	movs	r3, #0
 800bd96:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800bd98:	702b      	strb	r3, [r5, #0]
 800bd9a:	f10b 0301 	add.w	r3, fp, #1
 800bd9e:	6013      	str	r3, [r2, #0]
 800bda0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800bda2:	2b00      	cmp	r3, #0
 800bda4:	f43f ace2 	beq.w	800b76c <_dtoa_r+0xa4>
 800bda8:	601d      	str	r5, [r3, #0]
 800bdaa:	e4df      	b.n	800b76c <_dtoa_r+0xa4>
 800bdac:	465f      	mov	r7, fp
 800bdae:	462b      	mov	r3, r5
 800bdb0:	461d      	mov	r5, r3
 800bdb2:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800bdb6:	2a39      	cmp	r2, #57	; 0x39
 800bdb8:	d106      	bne.n	800bdc8 <_dtoa_r+0x700>
 800bdba:	9a00      	ldr	r2, [sp, #0]
 800bdbc:	429a      	cmp	r2, r3
 800bdbe:	d1f7      	bne.n	800bdb0 <_dtoa_r+0x6e8>
 800bdc0:	9900      	ldr	r1, [sp, #0]
 800bdc2:	2230      	movs	r2, #48	; 0x30
 800bdc4:	3701      	adds	r7, #1
 800bdc6:	700a      	strb	r2, [r1, #0]
 800bdc8:	781a      	ldrb	r2, [r3, #0]
 800bdca:	3201      	adds	r2, #1
 800bdcc:	701a      	strb	r2, [r3, #0]
 800bdce:	e790      	b.n	800bcf2 <_dtoa_r+0x62a>
 800bdd0:	4ba3      	ldr	r3, [pc, #652]	; (800c060 <_dtoa_r+0x998>)
 800bdd2:	2200      	movs	r2, #0
 800bdd4:	f7f4 fc10 	bl	80005f8 <__aeabi_dmul>
 800bdd8:	2200      	movs	r2, #0
 800bdda:	2300      	movs	r3, #0
 800bddc:	4606      	mov	r6, r0
 800bdde:	460f      	mov	r7, r1
 800bde0:	f7f4 fe72 	bl	8000ac8 <__aeabi_dcmpeq>
 800bde4:	2800      	cmp	r0, #0
 800bde6:	d09e      	beq.n	800bd26 <_dtoa_r+0x65e>
 800bde8:	e7d0      	b.n	800bd8c <_dtoa_r+0x6c4>
 800bdea:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800bdec:	2a00      	cmp	r2, #0
 800bdee:	f000 80ca 	beq.w	800bf86 <_dtoa_r+0x8be>
 800bdf2:	9a07      	ldr	r2, [sp, #28]
 800bdf4:	2a01      	cmp	r2, #1
 800bdf6:	f300 80ad 	bgt.w	800bf54 <_dtoa_r+0x88c>
 800bdfa:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800bdfc:	2a00      	cmp	r2, #0
 800bdfe:	f000 80a5 	beq.w	800bf4c <_dtoa_r+0x884>
 800be02:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800be06:	9e08      	ldr	r6, [sp, #32]
 800be08:	9d05      	ldr	r5, [sp, #20]
 800be0a:	9a05      	ldr	r2, [sp, #20]
 800be0c:	441a      	add	r2, r3
 800be0e:	9205      	str	r2, [sp, #20]
 800be10:	9a06      	ldr	r2, [sp, #24]
 800be12:	2101      	movs	r1, #1
 800be14:	441a      	add	r2, r3
 800be16:	4620      	mov	r0, r4
 800be18:	9206      	str	r2, [sp, #24]
 800be1a:	f000 fbd3 	bl	800c5c4 <__i2b>
 800be1e:	4607      	mov	r7, r0
 800be20:	b165      	cbz	r5, 800be3c <_dtoa_r+0x774>
 800be22:	9b06      	ldr	r3, [sp, #24]
 800be24:	2b00      	cmp	r3, #0
 800be26:	dd09      	ble.n	800be3c <_dtoa_r+0x774>
 800be28:	42ab      	cmp	r3, r5
 800be2a:	9a05      	ldr	r2, [sp, #20]
 800be2c:	bfa8      	it	ge
 800be2e:	462b      	movge	r3, r5
 800be30:	1ad2      	subs	r2, r2, r3
 800be32:	9205      	str	r2, [sp, #20]
 800be34:	9a06      	ldr	r2, [sp, #24]
 800be36:	1aed      	subs	r5, r5, r3
 800be38:	1ad3      	subs	r3, r2, r3
 800be3a:	9306      	str	r3, [sp, #24]
 800be3c:	9b08      	ldr	r3, [sp, #32]
 800be3e:	b1f3      	cbz	r3, 800be7e <_dtoa_r+0x7b6>
 800be40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800be42:	2b00      	cmp	r3, #0
 800be44:	f000 80a3 	beq.w	800bf8e <_dtoa_r+0x8c6>
 800be48:	2e00      	cmp	r6, #0
 800be4a:	dd10      	ble.n	800be6e <_dtoa_r+0x7a6>
 800be4c:	4639      	mov	r1, r7
 800be4e:	4632      	mov	r2, r6
 800be50:	4620      	mov	r0, r4
 800be52:	f000 fc77 	bl	800c744 <__pow5mult>
 800be56:	4652      	mov	r2, sl
 800be58:	4601      	mov	r1, r0
 800be5a:	4607      	mov	r7, r0
 800be5c:	4620      	mov	r0, r4
 800be5e:	f000 fbc7 	bl	800c5f0 <__multiply>
 800be62:	4651      	mov	r1, sl
 800be64:	4680      	mov	r8, r0
 800be66:	4620      	mov	r0, r4
 800be68:	f000 faac 	bl	800c3c4 <_Bfree>
 800be6c:	46c2      	mov	sl, r8
 800be6e:	9b08      	ldr	r3, [sp, #32]
 800be70:	1b9a      	subs	r2, r3, r6
 800be72:	d004      	beq.n	800be7e <_dtoa_r+0x7b6>
 800be74:	4651      	mov	r1, sl
 800be76:	4620      	mov	r0, r4
 800be78:	f000 fc64 	bl	800c744 <__pow5mult>
 800be7c:	4682      	mov	sl, r0
 800be7e:	2101      	movs	r1, #1
 800be80:	4620      	mov	r0, r4
 800be82:	f000 fb9f 	bl	800c5c4 <__i2b>
 800be86:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800be88:	2b00      	cmp	r3, #0
 800be8a:	4606      	mov	r6, r0
 800be8c:	f340 8081 	ble.w	800bf92 <_dtoa_r+0x8ca>
 800be90:	461a      	mov	r2, r3
 800be92:	4601      	mov	r1, r0
 800be94:	4620      	mov	r0, r4
 800be96:	f000 fc55 	bl	800c744 <__pow5mult>
 800be9a:	9b07      	ldr	r3, [sp, #28]
 800be9c:	2b01      	cmp	r3, #1
 800be9e:	4606      	mov	r6, r0
 800bea0:	dd7a      	ble.n	800bf98 <_dtoa_r+0x8d0>
 800bea2:	f04f 0800 	mov.w	r8, #0
 800bea6:	6933      	ldr	r3, [r6, #16]
 800bea8:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800beac:	6918      	ldr	r0, [r3, #16]
 800beae:	f000 fb3b 	bl	800c528 <__hi0bits>
 800beb2:	f1c0 0020 	rsb	r0, r0, #32
 800beb6:	9b06      	ldr	r3, [sp, #24]
 800beb8:	4418      	add	r0, r3
 800beba:	f010 001f 	ands.w	r0, r0, #31
 800bebe:	f000 8094 	beq.w	800bfea <_dtoa_r+0x922>
 800bec2:	f1c0 0320 	rsb	r3, r0, #32
 800bec6:	2b04      	cmp	r3, #4
 800bec8:	f340 8085 	ble.w	800bfd6 <_dtoa_r+0x90e>
 800becc:	9b05      	ldr	r3, [sp, #20]
 800bece:	f1c0 001c 	rsb	r0, r0, #28
 800bed2:	4403      	add	r3, r0
 800bed4:	9305      	str	r3, [sp, #20]
 800bed6:	9b06      	ldr	r3, [sp, #24]
 800bed8:	4403      	add	r3, r0
 800beda:	4405      	add	r5, r0
 800bedc:	9306      	str	r3, [sp, #24]
 800bede:	9b05      	ldr	r3, [sp, #20]
 800bee0:	2b00      	cmp	r3, #0
 800bee2:	dd05      	ble.n	800bef0 <_dtoa_r+0x828>
 800bee4:	4651      	mov	r1, sl
 800bee6:	461a      	mov	r2, r3
 800bee8:	4620      	mov	r0, r4
 800beea:	f000 fc85 	bl	800c7f8 <__lshift>
 800beee:	4682      	mov	sl, r0
 800bef0:	9b06      	ldr	r3, [sp, #24]
 800bef2:	2b00      	cmp	r3, #0
 800bef4:	dd05      	ble.n	800bf02 <_dtoa_r+0x83a>
 800bef6:	4631      	mov	r1, r6
 800bef8:	461a      	mov	r2, r3
 800befa:	4620      	mov	r0, r4
 800befc:	f000 fc7c 	bl	800c7f8 <__lshift>
 800bf00:	4606      	mov	r6, r0
 800bf02:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800bf04:	2b00      	cmp	r3, #0
 800bf06:	d072      	beq.n	800bfee <_dtoa_r+0x926>
 800bf08:	4631      	mov	r1, r6
 800bf0a:	4650      	mov	r0, sl
 800bf0c:	f000 fce0 	bl	800c8d0 <__mcmp>
 800bf10:	2800      	cmp	r0, #0
 800bf12:	da6c      	bge.n	800bfee <_dtoa_r+0x926>
 800bf14:	2300      	movs	r3, #0
 800bf16:	4651      	mov	r1, sl
 800bf18:	220a      	movs	r2, #10
 800bf1a:	4620      	mov	r0, r4
 800bf1c:	f000 fa74 	bl	800c408 <__multadd>
 800bf20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800bf22:	f10b 3bff 	add.w	fp, fp, #4294967295
 800bf26:	4682      	mov	sl, r0
 800bf28:	2b00      	cmp	r3, #0
 800bf2a:	f000 81b0 	beq.w	800c28e <_dtoa_r+0xbc6>
 800bf2e:	2300      	movs	r3, #0
 800bf30:	4639      	mov	r1, r7
 800bf32:	220a      	movs	r2, #10
 800bf34:	4620      	mov	r0, r4
 800bf36:	f000 fa67 	bl	800c408 <__multadd>
 800bf3a:	9b01      	ldr	r3, [sp, #4]
 800bf3c:	2b00      	cmp	r3, #0
 800bf3e:	4607      	mov	r7, r0
 800bf40:	f300 8096 	bgt.w	800c070 <_dtoa_r+0x9a8>
 800bf44:	9b07      	ldr	r3, [sp, #28]
 800bf46:	2b02      	cmp	r3, #2
 800bf48:	dc59      	bgt.n	800bffe <_dtoa_r+0x936>
 800bf4a:	e091      	b.n	800c070 <_dtoa_r+0x9a8>
 800bf4c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800bf4e:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800bf52:	e758      	b.n	800be06 <_dtoa_r+0x73e>
 800bf54:	9b04      	ldr	r3, [sp, #16]
 800bf56:	1e5e      	subs	r6, r3, #1
 800bf58:	9b08      	ldr	r3, [sp, #32]
 800bf5a:	42b3      	cmp	r3, r6
 800bf5c:	bfbf      	itttt	lt
 800bf5e:	9b08      	ldrlt	r3, [sp, #32]
 800bf60:	9a0b      	ldrlt	r2, [sp, #44]	; 0x2c
 800bf62:	9608      	strlt	r6, [sp, #32]
 800bf64:	1af3      	sublt	r3, r6, r3
 800bf66:	bfb4      	ite	lt
 800bf68:	18d2      	addlt	r2, r2, r3
 800bf6a:	1b9e      	subge	r6, r3, r6
 800bf6c:	9b04      	ldr	r3, [sp, #16]
 800bf6e:	bfbc      	itt	lt
 800bf70:	920b      	strlt	r2, [sp, #44]	; 0x2c
 800bf72:	2600      	movlt	r6, #0
 800bf74:	2b00      	cmp	r3, #0
 800bf76:	bfb7      	itett	lt
 800bf78:	e9dd 2304 	ldrdlt	r2, r3, [sp, #16]
 800bf7c:	e9dd 3504 	ldrdge	r3, r5, [sp, #16]
 800bf80:	1a9d      	sublt	r5, r3, r2
 800bf82:	2300      	movlt	r3, #0
 800bf84:	e741      	b.n	800be0a <_dtoa_r+0x742>
 800bf86:	9e08      	ldr	r6, [sp, #32]
 800bf88:	9d05      	ldr	r5, [sp, #20]
 800bf8a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800bf8c:	e748      	b.n	800be20 <_dtoa_r+0x758>
 800bf8e:	9a08      	ldr	r2, [sp, #32]
 800bf90:	e770      	b.n	800be74 <_dtoa_r+0x7ac>
 800bf92:	9b07      	ldr	r3, [sp, #28]
 800bf94:	2b01      	cmp	r3, #1
 800bf96:	dc19      	bgt.n	800bfcc <_dtoa_r+0x904>
 800bf98:	9b02      	ldr	r3, [sp, #8]
 800bf9a:	b9bb      	cbnz	r3, 800bfcc <_dtoa_r+0x904>
 800bf9c:	9b03      	ldr	r3, [sp, #12]
 800bf9e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800bfa2:	b99b      	cbnz	r3, 800bfcc <_dtoa_r+0x904>
 800bfa4:	9b03      	ldr	r3, [sp, #12]
 800bfa6:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800bfaa:	0d1b      	lsrs	r3, r3, #20
 800bfac:	051b      	lsls	r3, r3, #20
 800bfae:	b183      	cbz	r3, 800bfd2 <_dtoa_r+0x90a>
 800bfb0:	9b05      	ldr	r3, [sp, #20]
 800bfb2:	3301      	adds	r3, #1
 800bfb4:	9305      	str	r3, [sp, #20]
 800bfb6:	9b06      	ldr	r3, [sp, #24]
 800bfb8:	3301      	adds	r3, #1
 800bfba:	9306      	str	r3, [sp, #24]
 800bfbc:	f04f 0801 	mov.w	r8, #1
 800bfc0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800bfc2:	2b00      	cmp	r3, #0
 800bfc4:	f47f af6f 	bne.w	800bea6 <_dtoa_r+0x7de>
 800bfc8:	2001      	movs	r0, #1
 800bfca:	e774      	b.n	800beb6 <_dtoa_r+0x7ee>
 800bfcc:	f04f 0800 	mov.w	r8, #0
 800bfd0:	e7f6      	b.n	800bfc0 <_dtoa_r+0x8f8>
 800bfd2:	4698      	mov	r8, r3
 800bfd4:	e7f4      	b.n	800bfc0 <_dtoa_r+0x8f8>
 800bfd6:	d082      	beq.n	800bede <_dtoa_r+0x816>
 800bfd8:	9a05      	ldr	r2, [sp, #20]
 800bfda:	331c      	adds	r3, #28
 800bfdc:	441a      	add	r2, r3
 800bfde:	9205      	str	r2, [sp, #20]
 800bfe0:	9a06      	ldr	r2, [sp, #24]
 800bfe2:	441a      	add	r2, r3
 800bfe4:	441d      	add	r5, r3
 800bfe6:	9206      	str	r2, [sp, #24]
 800bfe8:	e779      	b.n	800bede <_dtoa_r+0x816>
 800bfea:	4603      	mov	r3, r0
 800bfec:	e7f4      	b.n	800bfd8 <_dtoa_r+0x910>
 800bfee:	9b04      	ldr	r3, [sp, #16]
 800bff0:	2b00      	cmp	r3, #0
 800bff2:	dc37      	bgt.n	800c064 <_dtoa_r+0x99c>
 800bff4:	9b07      	ldr	r3, [sp, #28]
 800bff6:	2b02      	cmp	r3, #2
 800bff8:	dd34      	ble.n	800c064 <_dtoa_r+0x99c>
 800bffa:	9b04      	ldr	r3, [sp, #16]
 800bffc:	9301      	str	r3, [sp, #4]
 800bffe:	9b01      	ldr	r3, [sp, #4]
 800c000:	b963      	cbnz	r3, 800c01c <_dtoa_r+0x954>
 800c002:	4631      	mov	r1, r6
 800c004:	2205      	movs	r2, #5
 800c006:	4620      	mov	r0, r4
 800c008:	f000 f9fe 	bl	800c408 <__multadd>
 800c00c:	4601      	mov	r1, r0
 800c00e:	4606      	mov	r6, r0
 800c010:	4650      	mov	r0, sl
 800c012:	f000 fc5d 	bl	800c8d0 <__mcmp>
 800c016:	2800      	cmp	r0, #0
 800c018:	f73f adbb 	bgt.w	800bb92 <_dtoa_r+0x4ca>
 800c01c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800c01e:	9d00      	ldr	r5, [sp, #0]
 800c020:	ea6f 0b03 	mvn.w	fp, r3
 800c024:	f04f 0800 	mov.w	r8, #0
 800c028:	4631      	mov	r1, r6
 800c02a:	4620      	mov	r0, r4
 800c02c:	f000 f9ca 	bl	800c3c4 <_Bfree>
 800c030:	2f00      	cmp	r7, #0
 800c032:	f43f aeab 	beq.w	800bd8c <_dtoa_r+0x6c4>
 800c036:	f1b8 0f00 	cmp.w	r8, #0
 800c03a:	d005      	beq.n	800c048 <_dtoa_r+0x980>
 800c03c:	45b8      	cmp	r8, r7
 800c03e:	d003      	beq.n	800c048 <_dtoa_r+0x980>
 800c040:	4641      	mov	r1, r8
 800c042:	4620      	mov	r0, r4
 800c044:	f000 f9be 	bl	800c3c4 <_Bfree>
 800c048:	4639      	mov	r1, r7
 800c04a:	4620      	mov	r0, r4
 800c04c:	f000 f9ba 	bl	800c3c4 <_Bfree>
 800c050:	e69c      	b.n	800bd8c <_dtoa_r+0x6c4>
 800c052:	2600      	movs	r6, #0
 800c054:	4637      	mov	r7, r6
 800c056:	e7e1      	b.n	800c01c <_dtoa_r+0x954>
 800c058:	46bb      	mov	fp, r7
 800c05a:	4637      	mov	r7, r6
 800c05c:	e599      	b.n	800bb92 <_dtoa_r+0x4ca>
 800c05e:	bf00      	nop
 800c060:	40240000 	.word	0x40240000
 800c064:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c066:	2b00      	cmp	r3, #0
 800c068:	f000 80c8 	beq.w	800c1fc <_dtoa_r+0xb34>
 800c06c:	9b04      	ldr	r3, [sp, #16]
 800c06e:	9301      	str	r3, [sp, #4]
 800c070:	2d00      	cmp	r5, #0
 800c072:	dd05      	ble.n	800c080 <_dtoa_r+0x9b8>
 800c074:	4639      	mov	r1, r7
 800c076:	462a      	mov	r2, r5
 800c078:	4620      	mov	r0, r4
 800c07a:	f000 fbbd 	bl	800c7f8 <__lshift>
 800c07e:	4607      	mov	r7, r0
 800c080:	f1b8 0f00 	cmp.w	r8, #0
 800c084:	d05b      	beq.n	800c13e <_dtoa_r+0xa76>
 800c086:	6879      	ldr	r1, [r7, #4]
 800c088:	4620      	mov	r0, r4
 800c08a:	f000 f95b 	bl	800c344 <_Balloc>
 800c08e:	4605      	mov	r5, r0
 800c090:	b928      	cbnz	r0, 800c09e <_dtoa_r+0x9d6>
 800c092:	4b83      	ldr	r3, [pc, #524]	; (800c2a0 <_dtoa_r+0xbd8>)
 800c094:	4602      	mov	r2, r0
 800c096:	f240 21ef 	movw	r1, #751	; 0x2ef
 800c09a:	f7ff bb2e 	b.w	800b6fa <_dtoa_r+0x32>
 800c09e:	693a      	ldr	r2, [r7, #16]
 800c0a0:	3202      	adds	r2, #2
 800c0a2:	0092      	lsls	r2, r2, #2
 800c0a4:	f107 010c 	add.w	r1, r7, #12
 800c0a8:	300c      	adds	r0, #12
 800c0aa:	f7ff fa6e 	bl	800b58a <memcpy>
 800c0ae:	2201      	movs	r2, #1
 800c0b0:	4629      	mov	r1, r5
 800c0b2:	4620      	mov	r0, r4
 800c0b4:	f000 fba0 	bl	800c7f8 <__lshift>
 800c0b8:	9b00      	ldr	r3, [sp, #0]
 800c0ba:	3301      	adds	r3, #1
 800c0bc:	9304      	str	r3, [sp, #16]
 800c0be:	e9dd 2300 	ldrd	r2, r3, [sp]
 800c0c2:	4413      	add	r3, r2
 800c0c4:	9308      	str	r3, [sp, #32]
 800c0c6:	9b02      	ldr	r3, [sp, #8]
 800c0c8:	f003 0301 	and.w	r3, r3, #1
 800c0cc:	46b8      	mov	r8, r7
 800c0ce:	9306      	str	r3, [sp, #24]
 800c0d0:	4607      	mov	r7, r0
 800c0d2:	9b04      	ldr	r3, [sp, #16]
 800c0d4:	4631      	mov	r1, r6
 800c0d6:	3b01      	subs	r3, #1
 800c0d8:	4650      	mov	r0, sl
 800c0da:	9301      	str	r3, [sp, #4]
 800c0dc:	f7ff fa6a 	bl	800b5b4 <quorem>
 800c0e0:	4641      	mov	r1, r8
 800c0e2:	9002      	str	r0, [sp, #8]
 800c0e4:	f100 0930 	add.w	r9, r0, #48	; 0x30
 800c0e8:	4650      	mov	r0, sl
 800c0ea:	f000 fbf1 	bl	800c8d0 <__mcmp>
 800c0ee:	463a      	mov	r2, r7
 800c0f0:	9005      	str	r0, [sp, #20]
 800c0f2:	4631      	mov	r1, r6
 800c0f4:	4620      	mov	r0, r4
 800c0f6:	f000 fc07 	bl	800c908 <__mdiff>
 800c0fa:	68c2      	ldr	r2, [r0, #12]
 800c0fc:	4605      	mov	r5, r0
 800c0fe:	bb02      	cbnz	r2, 800c142 <_dtoa_r+0xa7a>
 800c100:	4601      	mov	r1, r0
 800c102:	4650      	mov	r0, sl
 800c104:	f000 fbe4 	bl	800c8d0 <__mcmp>
 800c108:	4602      	mov	r2, r0
 800c10a:	4629      	mov	r1, r5
 800c10c:	4620      	mov	r0, r4
 800c10e:	9209      	str	r2, [sp, #36]	; 0x24
 800c110:	f000 f958 	bl	800c3c4 <_Bfree>
 800c114:	9b07      	ldr	r3, [sp, #28]
 800c116:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800c118:	9d04      	ldr	r5, [sp, #16]
 800c11a:	ea43 0102 	orr.w	r1, r3, r2
 800c11e:	9b06      	ldr	r3, [sp, #24]
 800c120:	4319      	orrs	r1, r3
 800c122:	d110      	bne.n	800c146 <_dtoa_r+0xa7e>
 800c124:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 800c128:	d029      	beq.n	800c17e <_dtoa_r+0xab6>
 800c12a:	9b05      	ldr	r3, [sp, #20]
 800c12c:	2b00      	cmp	r3, #0
 800c12e:	dd02      	ble.n	800c136 <_dtoa_r+0xa6e>
 800c130:	9b02      	ldr	r3, [sp, #8]
 800c132:	f103 0931 	add.w	r9, r3, #49	; 0x31
 800c136:	9b01      	ldr	r3, [sp, #4]
 800c138:	f883 9000 	strb.w	r9, [r3]
 800c13c:	e774      	b.n	800c028 <_dtoa_r+0x960>
 800c13e:	4638      	mov	r0, r7
 800c140:	e7ba      	b.n	800c0b8 <_dtoa_r+0x9f0>
 800c142:	2201      	movs	r2, #1
 800c144:	e7e1      	b.n	800c10a <_dtoa_r+0xa42>
 800c146:	9b05      	ldr	r3, [sp, #20]
 800c148:	2b00      	cmp	r3, #0
 800c14a:	db04      	blt.n	800c156 <_dtoa_r+0xa8e>
 800c14c:	9907      	ldr	r1, [sp, #28]
 800c14e:	430b      	orrs	r3, r1
 800c150:	9906      	ldr	r1, [sp, #24]
 800c152:	430b      	orrs	r3, r1
 800c154:	d120      	bne.n	800c198 <_dtoa_r+0xad0>
 800c156:	2a00      	cmp	r2, #0
 800c158:	dded      	ble.n	800c136 <_dtoa_r+0xa6e>
 800c15a:	4651      	mov	r1, sl
 800c15c:	2201      	movs	r2, #1
 800c15e:	4620      	mov	r0, r4
 800c160:	f000 fb4a 	bl	800c7f8 <__lshift>
 800c164:	4631      	mov	r1, r6
 800c166:	4682      	mov	sl, r0
 800c168:	f000 fbb2 	bl	800c8d0 <__mcmp>
 800c16c:	2800      	cmp	r0, #0
 800c16e:	dc03      	bgt.n	800c178 <_dtoa_r+0xab0>
 800c170:	d1e1      	bne.n	800c136 <_dtoa_r+0xa6e>
 800c172:	f019 0f01 	tst.w	r9, #1
 800c176:	d0de      	beq.n	800c136 <_dtoa_r+0xa6e>
 800c178:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 800c17c:	d1d8      	bne.n	800c130 <_dtoa_r+0xa68>
 800c17e:	9a01      	ldr	r2, [sp, #4]
 800c180:	2339      	movs	r3, #57	; 0x39
 800c182:	7013      	strb	r3, [r2, #0]
 800c184:	462b      	mov	r3, r5
 800c186:	461d      	mov	r5, r3
 800c188:	3b01      	subs	r3, #1
 800c18a:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 800c18e:	2a39      	cmp	r2, #57	; 0x39
 800c190:	d06c      	beq.n	800c26c <_dtoa_r+0xba4>
 800c192:	3201      	adds	r2, #1
 800c194:	701a      	strb	r2, [r3, #0]
 800c196:	e747      	b.n	800c028 <_dtoa_r+0x960>
 800c198:	2a00      	cmp	r2, #0
 800c19a:	dd07      	ble.n	800c1ac <_dtoa_r+0xae4>
 800c19c:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 800c1a0:	d0ed      	beq.n	800c17e <_dtoa_r+0xab6>
 800c1a2:	9a01      	ldr	r2, [sp, #4]
 800c1a4:	f109 0301 	add.w	r3, r9, #1
 800c1a8:	7013      	strb	r3, [r2, #0]
 800c1aa:	e73d      	b.n	800c028 <_dtoa_r+0x960>
 800c1ac:	9b04      	ldr	r3, [sp, #16]
 800c1ae:	9a08      	ldr	r2, [sp, #32]
 800c1b0:	f803 9c01 	strb.w	r9, [r3, #-1]
 800c1b4:	4293      	cmp	r3, r2
 800c1b6:	d043      	beq.n	800c240 <_dtoa_r+0xb78>
 800c1b8:	4651      	mov	r1, sl
 800c1ba:	2300      	movs	r3, #0
 800c1bc:	220a      	movs	r2, #10
 800c1be:	4620      	mov	r0, r4
 800c1c0:	f000 f922 	bl	800c408 <__multadd>
 800c1c4:	45b8      	cmp	r8, r7
 800c1c6:	4682      	mov	sl, r0
 800c1c8:	f04f 0300 	mov.w	r3, #0
 800c1cc:	f04f 020a 	mov.w	r2, #10
 800c1d0:	4641      	mov	r1, r8
 800c1d2:	4620      	mov	r0, r4
 800c1d4:	d107      	bne.n	800c1e6 <_dtoa_r+0xb1e>
 800c1d6:	f000 f917 	bl	800c408 <__multadd>
 800c1da:	4680      	mov	r8, r0
 800c1dc:	4607      	mov	r7, r0
 800c1de:	9b04      	ldr	r3, [sp, #16]
 800c1e0:	3301      	adds	r3, #1
 800c1e2:	9304      	str	r3, [sp, #16]
 800c1e4:	e775      	b.n	800c0d2 <_dtoa_r+0xa0a>
 800c1e6:	f000 f90f 	bl	800c408 <__multadd>
 800c1ea:	4639      	mov	r1, r7
 800c1ec:	4680      	mov	r8, r0
 800c1ee:	2300      	movs	r3, #0
 800c1f0:	220a      	movs	r2, #10
 800c1f2:	4620      	mov	r0, r4
 800c1f4:	f000 f908 	bl	800c408 <__multadd>
 800c1f8:	4607      	mov	r7, r0
 800c1fa:	e7f0      	b.n	800c1de <_dtoa_r+0xb16>
 800c1fc:	9b04      	ldr	r3, [sp, #16]
 800c1fe:	9301      	str	r3, [sp, #4]
 800c200:	9d00      	ldr	r5, [sp, #0]
 800c202:	4631      	mov	r1, r6
 800c204:	4650      	mov	r0, sl
 800c206:	f7ff f9d5 	bl	800b5b4 <quorem>
 800c20a:	f100 0930 	add.w	r9, r0, #48	; 0x30
 800c20e:	9b00      	ldr	r3, [sp, #0]
 800c210:	f805 9b01 	strb.w	r9, [r5], #1
 800c214:	1aea      	subs	r2, r5, r3
 800c216:	9b01      	ldr	r3, [sp, #4]
 800c218:	4293      	cmp	r3, r2
 800c21a:	dd07      	ble.n	800c22c <_dtoa_r+0xb64>
 800c21c:	4651      	mov	r1, sl
 800c21e:	2300      	movs	r3, #0
 800c220:	220a      	movs	r2, #10
 800c222:	4620      	mov	r0, r4
 800c224:	f000 f8f0 	bl	800c408 <__multadd>
 800c228:	4682      	mov	sl, r0
 800c22a:	e7ea      	b.n	800c202 <_dtoa_r+0xb3a>
 800c22c:	9b01      	ldr	r3, [sp, #4]
 800c22e:	2b00      	cmp	r3, #0
 800c230:	bfc8      	it	gt
 800c232:	461d      	movgt	r5, r3
 800c234:	9b00      	ldr	r3, [sp, #0]
 800c236:	bfd8      	it	le
 800c238:	2501      	movle	r5, #1
 800c23a:	441d      	add	r5, r3
 800c23c:	f04f 0800 	mov.w	r8, #0
 800c240:	4651      	mov	r1, sl
 800c242:	2201      	movs	r2, #1
 800c244:	4620      	mov	r0, r4
 800c246:	f000 fad7 	bl	800c7f8 <__lshift>
 800c24a:	4631      	mov	r1, r6
 800c24c:	4682      	mov	sl, r0
 800c24e:	f000 fb3f 	bl	800c8d0 <__mcmp>
 800c252:	2800      	cmp	r0, #0
 800c254:	dc96      	bgt.n	800c184 <_dtoa_r+0xabc>
 800c256:	d102      	bne.n	800c25e <_dtoa_r+0xb96>
 800c258:	f019 0f01 	tst.w	r9, #1
 800c25c:	d192      	bne.n	800c184 <_dtoa_r+0xabc>
 800c25e:	462b      	mov	r3, r5
 800c260:	461d      	mov	r5, r3
 800c262:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800c266:	2a30      	cmp	r2, #48	; 0x30
 800c268:	d0fa      	beq.n	800c260 <_dtoa_r+0xb98>
 800c26a:	e6dd      	b.n	800c028 <_dtoa_r+0x960>
 800c26c:	9a00      	ldr	r2, [sp, #0]
 800c26e:	429a      	cmp	r2, r3
 800c270:	d189      	bne.n	800c186 <_dtoa_r+0xabe>
 800c272:	f10b 0b01 	add.w	fp, fp, #1
 800c276:	2331      	movs	r3, #49	; 0x31
 800c278:	e796      	b.n	800c1a8 <_dtoa_r+0xae0>
 800c27a:	4b0a      	ldr	r3, [pc, #40]	; (800c2a4 <_dtoa_r+0xbdc>)
 800c27c:	f7ff ba99 	b.w	800b7b2 <_dtoa_r+0xea>
 800c280:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800c282:	2b00      	cmp	r3, #0
 800c284:	f47f aa6d 	bne.w	800b762 <_dtoa_r+0x9a>
 800c288:	4b07      	ldr	r3, [pc, #28]	; (800c2a8 <_dtoa_r+0xbe0>)
 800c28a:	f7ff ba92 	b.w	800b7b2 <_dtoa_r+0xea>
 800c28e:	9b01      	ldr	r3, [sp, #4]
 800c290:	2b00      	cmp	r3, #0
 800c292:	dcb5      	bgt.n	800c200 <_dtoa_r+0xb38>
 800c294:	9b07      	ldr	r3, [sp, #28]
 800c296:	2b02      	cmp	r3, #2
 800c298:	f73f aeb1 	bgt.w	800bffe <_dtoa_r+0x936>
 800c29c:	e7b0      	b.n	800c200 <_dtoa_r+0xb38>
 800c29e:	bf00      	nop
 800c2a0:	08011ea5 	.word	0x08011ea5
 800c2a4:	08011e00 	.word	0x08011e00
 800c2a8:	08011e29 	.word	0x08011e29

0800c2ac <_free_r>:
 800c2ac:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c2ae:	2900      	cmp	r1, #0
 800c2b0:	d044      	beq.n	800c33c <_free_r+0x90>
 800c2b2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800c2b6:	9001      	str	r0, [sp, #4]
 800c2b8:	2b00      	cmp	r3, #0
 800c2ba:	f1a1 0404 	sub.w	r4, r1, #4
 800c2be:	bfb8      	it	lt
 800c2c0:	18e4      	addlt	r4, r4, r3
 800c2c2:	f7fe f8f7 	bl	800a4b4 <__malloc_lock>
 800c2c6:	4a1e      	ldr	r2, [pc, #120]	; (800c340 <_free_r+0x94>)
 800c2c8:	9801      	ldr	r0, [sp, #4]
 800c2ca:	6813      	ldr	r3, [r2, #0]
 800c2cc:	b933      	cbnz	r3, 800c2dc <_free_r+0x30>
 800c2ce:	6063      	str	r3, [r4, #4]
 800c2d0:	6014      	str	r4, [r2, #0]
 800c2d2:	b003      	add	sp, #12
 800c2d4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c2d8:	f7fe b8f2 	b.w	800a4c0 <__malloc_unlock>
 800c2dc:	42a3      	cmp	r3, r4
 800c2de:	d908      	bls.n	800c2f2 <_free_r+0x46>
 800c2e0:	6825      	ldr	r5, [r4, #0]
 800c2e2:	1961      	adds	r1, r4, r5
 800c2e4:	428b      	cmp	r3, r1
 800c2e6:	bf01      	itttt	eq
 800c2e8:	6819      	ldreq	r1, [r3, #0]
 800c2ea:	685b      	ldreq	r3, [r3, #4]
 800c2ec:	1949      	addeq	r1, r1, r5
 800c2ee:	6021      	streq	r1, [r4, #0]
 800c2f0:	e7ed      	b.n	800c2ce <_free_r+0x22>
 800c2f2:	461a      	mov	r2, r3
 800c2f4:	685b      	ldr	r3, [r3, #4]
 800c2f6:	b10b      	cbz	r3, 800c2fc <_free_r+0x50>
 800c2f8:	42a3      	cmp	r3, r4
 800c2fa:	d9fa      	bls.n	800c2f2 <_free_r+0x46>
 800c2fc:	6811      	ldr	r1, [r2, #0]
 800c2fe:	1855      	adds	r5, r2, r1
 800c300:	42a5      	cmp	r5, r4
 800c302:	d10b      	bne.n	800c31c <_free_r+0x70>
 800c304:	6824      	ldr	r4, [r4, #0]
 800c306:	4421      	add	r1, r4
 800c308:	1854      	adds	r4, r2, r1
 800c30a:	42a3      	cmp	r3, r4
 800c30c:	6011      	str	r1, [r2, #0]
 800c30e:	d1e0      	bne.n	800c2d2 <_free_r+0x26>
 800c310:	681c      	ldr	r4, [r3, #0]
 800c312:	685b      	ldr	r3, [r3, #4]
 800c314:	6053      	str	r3, [r2, #4]
 800c316:	440c      	add	r4, r1
 800c318:	6014      	str	r4, [r2, #0]
 800c31a:	e7da      	b.n	800c2d2 <_free_r+0x26>
 800c31c:	d902      	bls.n	800c324 <_free_r+0x78>
 800c31e:	230c      	movs	r3, #12
 800c320:	6003      	str	r3, [r0, #0]
 800c322:	e7d6      	b.n	800c2d2 <_free_r+0x26>
 800c324:	6825      	ldr	r5, [r4, #0]
 800c326:	1961      	adds	r1, r4, r5
 800c328:	428b      	cmp	r3, r1
 800c32a:	bf04      	itt	eq
 800c32c:	6819      	ldreq	r1, [r3, #0]
 800c32e:	685b      	ldreq	r3, [r3, #4]
 800c330:	6063      	str	r3, [r4, #4]
 800c332:	bf04      	itt	eq
 800c334:	1949      	addeq	r1, r1, r5
 800c336:	6021      	streq	r1, [r4, #0]
 800c338:	6054      	str	r4, [r2, #4]
 800c33a:	e7ca      	b.n	800c2d2 <_free_r+0x26>
 800c33c:	b003      	add	sp, #12
 800c33e:	bd30      	pop	{r4, r5, pc}
 800c340:	200009e4 	.word	0x200009e4

0800c344 <_Balloc>:
 800c344:	b570      	push	{r4, r5, r6, lr}
 800c346:	69c6      	ldr	r6, [r0, #28]
 800c348:	4604      	mov	r4, r0
 800c34a:	460d      	mov	r5, r1
 800c34c:	b976      	cbnz	r6, 800c36c <_Balloc+0x28>
 800c34e:	2010      	movs	r0, #16
 800c350:	f7fe f800 	bl	800a354 <malloc>
 800c354:	4602      	mov	r2, r0
 800c356:	61e0      	str	r0, [r4, #28]
 800c358:	b920      	cbnz	r0, 800c364 <_Balloc+0x20>
 800c35a:	4b18      	ldr	r3, [pc, #96]	; (800c3bc <_Balloc+0x78>)
 800c35c:	4818      	ldr	r0, [pc, #96]	; (800c3c0 <_Balloc+0x7c>)
 800c35e:	216b      	movs	r1, #107	; 0x6b
 800c360:	f001 fd6e 	bl	800de40 <__assert_func>
 800c364:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800c368:	6006      	str	r6, [r0, #0]
 800c36a:	60c6      	str	r6, [r0, #12]
 800c36c:	69e6      	ldr	r6, [r4, #28]
 800c36e:	68f3      	ldr	r3, [r6, #12]
 800c370:	b183      	cbz	r3, 800c394 <_Balloc+0x50>
 800c372:	69e3      	ldr	r3, [r4, #28]
 800c374:	68db      	ldr	r3, [r3, #12]
 800c376:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800c37a:	b9b8      	cbnz	r0, 800c3ac <_Balloc+0x68>
 800c37c:	2101      	movs	r1, #1
 800c37e:	fa01 f605 	lsl.w	r6, r1, r5
 800c382:	1d72      	adds	r2, r6, #5
 800c384:	0092      	lsls	r2, r2, #2
 800c386:	4620      	mov	r0, r4
 800c388:	f001 fd78 	bl	800de7c <_calloc_r>
 800c38c:	b160      	cbz	r0, 800c3a8 <_Balloc+0x64>
 800c38e:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800c392:	e00e      	b.n	800c3b2 <_Balloc+0x6e>
 800c394:	2221      	movs	r2, #33	; 0x21
 800c396:	2104      	movs	r1, #4
 800c398:	4620      	mov	r0, r4
 800c39a:	f001 fd6f 	bl	800de7c <_calloc_r>
 800c39e:	69e3      	ldr	r3, [r4, #28]
 800c3a0:	60f0      	str	r0, [r6, #12]
 800c3a2:	68db      	ldr	r3, [r3, #12]
 800c3a4:	2b00      	cmp	r3, #0
 800c3a6:	d1e4      	bne.n	800c372 <_Balloc+0x2e>
 800c3a8:	2000      	movs	r0, #0
 800c3aa:	bd70      	pop	{r4, r5, r6, pc}
 800c3ac:	6802      	ldr	r2, [r0, #0]
 800c3ae:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800c3b2:	2300      	movs	r3, #0
 800c3b4:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800c3b8:	e7f7      	b.n	800c3aa <_Balloc+0x66>
 800c3ba:	bf00      	nop
 800c3bc:	08011e36 	.word	0x08011e36
 800c3c0:	08011eb6 	.word	0x08011eb6

0800c3c4 <_Bfree>:
 800c3c4:	b570      	push	{r4, r5, r6, lr}
 800c3c6:	69c6      	ldr	r6, [r0, #28]
 800c3c8:	4605      	mov	r5, r0
 800c3ca:	460c      	mov	r4, r1
 800c3cc:	b976      	cbnz	r6, 800c3ec <_Bfree+0x28>
 800c3ce:	2010      	movs	r0, #16
 800c3d0:	f7fd ffc0 	bl	800a354 <malloc>
 800c3d4:	4602      	mov	r2, r0
 800c3d6:	61e8      	str	r0, [r5, #28]
 800c3d8:	b920      	cbnz	r0, 800c3e4 <_Bfree+0x20>
 800c3da:	4b09      	ldr	r3, [pc, #36]	; (800c400 <_Bfree+0x3c>)
 800c3dc:	4809      	ldr	r0, [pc, #36]	; (800c404 <_Bfree+0x40>)
 800c3de:	218f      	movs	r1, #143	; 0x8f
 800c3e0:	f001 fd2e 	bl	800de40 <__assert_func>
 800c3e4:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800c3e8:	6006      	str	r6, [r0, #0]
 800c3ea:	60c6      	str	r6, [r0, #12]
 800c3ec:	b13c      	cbz	r4, 800c3fe <_Bfree+0x3a>
 800c3ee:	69eb      	ldr	r3, [r5, #28]
 800c3f0:	6862      	ldr	r2, [r4, #4]
 800c3f2:	68db      	ldr	r3, [r3, #12]
 800c3f4:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800c3f8:	6021      	str	r1, [r4, #0]
 800c3fa:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800c3fe:	bd70      	pop	{r4, r5, r6, pc}
 800c400:	08011e36 	.word	0x08011e36
 800c404:	08011eb6 	.word	0x08011eb6

0800c408 <__multadd>:
 800c408:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c40c:	690d      	ldr	r5, [r1, #16]
 800c40e:	4607      	mov	r7, r0
 800c410:	460c      	mov	r4, r1
 800c412:	461e      	mov	r6, r3
 800c414:	f101 0c14 	add.w	ip, r1, #20
 800c418:	2000      	movs	r0, #0
 800c41a:	f8dc 3000 	ldr.w	r3, [ip]
 800c41e:	b299      	uxth	r1, r3
 800c420:	fb02 6101 	mla	r1, r2, r1, r6
 800c424:	0c1e      	lsrs	r6, r3, #16
 800c426:	0c0b      	lsrs	r3, r1, #16
 800c428:	fb02 3306 	mla	r3, r2, r6, r3
 800c42c:	b289      	uxth	r1, r1
 800c42e:	3001      	adds	r0, #1
 800c430:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800c434:	4285      	cmp	r5, r0
 800c436:	f84c 1b04 	str.w	r1, [ip], #4
 800c43a:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800c43e:	dcec      	bgt.n	800c41a <__multadd+0x12>
 800c440:	b30e      	cbz	r6, 800c486 <__multadd+0x7e>
 800c442:	68a3      	ldr	r3, [r4, #8]
 800c444:	42ab      	cmp	r3, r5
 800c446:	dc19      	bgt.n	800c47c <__multadd+0x74>
 800c448:	6861      	ldr	r1, [r4, #4]
 800c44a:	4638      	mov	r0, r7
 800c44c:	3101      	adds	r1, #1
 800c44e:	f7ff ff79 	bl	800c344 <_Balloc>
 800c452:	4680      	mov	r8, r0
 800c454:	b928      	cbnz	r0, 800c462 <__multadd+0x5a>
 800c456:	4602      	mov	r2, r0
 800c458:	4b0c      	ldr	r3, [pc, #48]	; (800c48c <__multadd+0x84>)
 800c45a:	480d      	ldr	r0, [pc, #52]	; (800c490 <__multadd+0x88>)
 800c45c:	21ba      	movs	r1, #186	; 0xba
 800c45e:	f001 fcef 	bl	800de40 <__assert_func>
 800c462:	6922      	ldr	r2, [r4, #16]
 800c464:	3202      	adds	r2, #2
 800c466:	f104 010c 	add.w	r1, r4, #12
 800c46a:	0092      	lsls	r2, r2, #2
 800c46c:	300c      	adds	r0, #12
 800c46e:	f7ff f88c 	bl	800b58a <memcpy>
 800c472:	4621      	mov	r1, r4
 800c474:	4638      	mov	r0, r7
 800c476:	f7ff ffa5 	bl	800c3c4 <_Bfree>
 800c47a:	4644      	mov	r4, r8
 800c47c:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800c480:	3501      	adds	r5, #1
 800c482:	615e      	str	r6, [r3, #20]
 800c484:	6125      	str	r5, [r4, #16]
 800c486:	4620      	mov	r0, r4
 800c488:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c48c:	08011ea5 	.word	0x08011ea5
 800c490:	08011eb6 	.word	0x08011eb6

0800c494 <__s2b>:
 800c494:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c498:	460c      	mov	r4, r1
 800c49a:	4615      	mov	r5, r2
 800c49c:	461f      	mov	r7, r3
 800c49e:	2209      	movs	r2, #9
 800c4a0:	3308      	adds	r3, #8
 800c4a2:	4606      	mov	r6, r0
 800c4a4:	fb93 f3f2 	sdiv	r3, r3, r2
 800c4a8:	2100      	movs	r1, #0
 800c4aa:	2201      	movs	r2, #1
 800c4ac:	429a      	cmp	r2, r3
 800c4ae:	db09      	blt.n	800c4c4 <__s2b+0x30>
 800c4b0:	4630      	mov	r0, r6
 800c4b2:	f7ff ff47 	bl	800c344 <_Balloc>
 800c4b6:	b940      	cbnz	r0, 800c4ca <__s2b+0x36>
 800c4b8:	4602      	mov	r2, r0
 800c4ba:	4b19      	ldr	r3, [pc, #100]	; (800c520 <__s2b+0x8c>)
 800c4bc:	4819      	ldr	r0, [pc, #100]	; (800c524 <__s2b+0x90>)
 800c4be:	21d3      	movs	r1, #211	; 0xd3
 800c4c0:	f001 fcbe 	bl	800de40 <__assert_func>
 800c4c4:	0052      	lsls	r2, r2, #1
 800c4c6:	3101      	adds	r1, #1
 800c4c8:	e7f0      	b.n	800c4ac <__s2b+0x18>
 800c4ca:	9b08      	ldr	r3, [sp, #32]
 800c4cc:	6143      	str	r3, [r0, #20]
 800c4ce:	2d09      	cmp	r5, #9
 800c4d0:	f04f 0301 	mov.w	r3, #1
 800c4d4:	6103      	str	r3, [r0, #16]
 800c4d6:	dd16      	ble.n	800c506 <__s2b+0x72>
 800c4d8:	f104 0909 	add.w	r9, r4, #9
 800c4dc:	46c8      	mov	r8, r9
 800c4de:	442c      	add	r4, r5
 800c4e0:	f818 3b01 	ldrb.w	r3, [r8], #1
 800c4e4:	4601      	mov	r1, r0
 800c4e6:	3b30      	subs	r3, #48	; 0x30
 800c4e8:	220a      	movs	r2, #10
 800c4ea:	4630      	mov	r0, r6
 800c4ec:	f7ff ff8c 	bl	800c408 <__multadd>
 800c4f0:	45a0      	cmp	r8, r4
 800c4f2:	d1f5      	bne.n	800c4e0 <__s2b+0x4c>
 800c4f4:	f1a5 0408 	sub.w	r4, r5, #8
 800c4f8:	444c      	add	r4, r9
 800c4fa:	1b2d      	subs	r5, r5, r4
 800c4fc:	1963      	adds	r3, r4, r5
 800c4fe:	42bb      	cmp	r3, r7
 800c500:	db04      	blt.n	800c50c <__s2b+0x78>
 800c502:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800c506:	340a      	adds	r4, #10
 800c508:	2509      	movs	r5, #9
 800c50a:	e7f6      	b.n	800c4fa <__s2b+0x66>
 800c50c:	f814 3b01 	ldrb.w	r3, [r4], #1
 800c510:	4601      	mov	r1, r0
 800c512:	3b30      	subs	r3, #48	; 0x30
 800c514:	220a      	movs	r2, #10
 800c516:	4630      	mov	r0, r6
 800c518:	f7ff ff76 	bl	800c408 <__multadd>
 800c51c:	e7ee      	b.n	800c4fc <__s2b+0x68>
 800c51e:	bf00      	nop
 800c520:	08011ea5 	.word	0x08011ea5
 800c524:	08011eb6 	.word	0x08011eb6

0800c528 <__hi0bits>:
 800c528:	0c03      	lsrs	r3, r0, #16
 800c52a:	041b      	lsls	r3, r3, #16
 800c52c:	b9d3      	cbnz	r3, 800c564 <__hi0bits+0x3c>
 800c52e:	0400      	lsls	r0, r0, #16
 800c530:	2310      	movs	r3, #16
 800c532:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800c536:	bf04      	itt	eq
 800c538:	0200      	lsleq	r0, r0, #8
 800c53a:	3308      	addeq	r3, #8
 800c53c:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 800c540:	bf04      	itt	eq
 800c542:	0100      	lsleq	r0, r0, #4
 800c544:	3304      	addeq	r3, #4
 800c546:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 800c54a:	bf04      	itt	eq
 800c54c:	0080      	lsleq	r0, r0, #2
 800c54e:	3302      	addeq	r3, #2
 800c550:	2800      	cmp	r0, #0
 800c552:	db05      	blt.n	800c560 <__hi0bits+0x38>
 800c554:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 800c558:	f103 0301 	add.w	r3, r3, #1
 800c55c:	bf08      	it	eq
 800c55e:	2320      	moveq	r3, #32
 800c560:	4618      	mov	r0, r3
 800c562:	4770      	bx	lr
 800c564:	2300      	movs	r3, #0
 800c566:	e7e4      	b.n	800c532 <__hi0bits+0xa>

0800c568 <__lo0bits>:
 800c568:	6803      	ldr	r3, [r0, #0]
 800c56a:	f013 0207 	ands.w	r2, r3, #7
 800c56e:	d00c      	beq.n	800c58a <__lo0bits+0x22>
 800c570:	07d9      	lsls	r1, r3, #31
 800c572:	d422      	bmi.n	800c5ba <__lo0bits+0x52>
 800c574:	079a      	lsls	r2, r3, #30
 800c576:	bf49      	itett	mi
 800c578:	085b      	lsrmi	r3, r3, #1
 800c57a:	089b      	lsrpl	r3, r3, #2
 800c57c:	6003      	strmi	r3, [r0, #0]
 800c57e:	2201      	movmi	r2, #1
 800c580:	bf5c      	itt	pl
 800c582:	6003      	strpl	r3, [r0, #0]
 800c584:	2202      	movpl	r2, #2
 800c586:	4610      	mov	r0, r2
 800c588:	4770      	bx	lr
 800c58a:	b299      	uxth	r1, r3
 800c58c:	b909      	cbnz	r1, 800c592 <__lo0bits+0x2a>
 800c58e:	0c1b      	lsrs	r3, r3, #16
 800c590:	2210      	movs	r2, #16
 800c592:	b2d9      	uxtb	r1, r3
 800c594:	b909      	cbnz	r1, 800c59a <__lo0bits+0x32>
 800c596:	3208      	adds	r2, #8
 800c598:	0a1b      	lsrs	r3, r3, #8
 800c59a:	0719      	lsls	r1, r3, #28
 800c59c:	bf04      	itt	eq
 800c59e:	091b      	lsreq	r3, r3, #4
 800c5a0:	3204      	addeq	r2, #4
 800c5a2:	0799      	lsls	r1, r3, #30
 800c5a4:	bf04      	itt	eq
 800c5a6:	089b      	lsreq	r3, r3, #2
 800c5a8:	3202      	addeq	r2, #2
 800c5aa:	07d9      	lsls	r1, r3, #31
 800c5ac:	d403      	bmi.n	800c5b6 <__lo0bits+0x4e>
 800c5ae:	085b      	lsrs	r3, r3, #1
 800c5b0:	f102 0201 	add.w	r2, r2, #1
 800c5b4:	d003      	beq.n	800c5be <__lo0bits+0x56>
 800c5b6:	6003      	str	r3, [r0, #0]
 800c5b8:	e7e5      	b.n	800c586 <__lo0bits+0x1e>
 800c5ba:	2200      	movs	r2, #0
 800c5bc:	e7e3      	b.n	800c586 <__lo0bits+0x1e>
 800c5be:	2220      	movs	r2, #32
 800c5c0:	e7e1      	b.n	800c586 <__lo0bits+0x1e>
	...

0800c5c4 <__i2b>:
 800c5c4:	b510      	push	{r4, lr}
 800c5c6:	460c      	mov	r4, r1
 800c5c8:	2101      	movs	r1, #1
 800c5ca:	f7ff febb 	bl	800c344 <_Balloc>
 800c5ce:	4602      	mov	r2, r0
 800c5d0:	b928      	cbnz	r0, 800c5de <__i2b+0x1a>
 800c5d2:	4b05      	ldr	r3, [pc, #20]	; (800c5e8 <__i2b+0x24>)
 800c5d4:	4805      	ldr	r0, [pc, #20]	; (800c5ec <__i2b+0x28>)
 800c5d6:	f240 1145 	movw	r1, #325	; 0x145
 800c5da:	f001 fc31 	bl	800de40 <__assert_func>
 800c5de:	2301      	movs	r3, #1
 800c5e0:	6144      	str	r4, [r0, #20]
 800c5e2:	6103      	str	r3, [r0, #16]
 800c5e4:	bd10      	pop	{r4, pc}
 800c5e6:	bf00      	nop
 800c5e8:	08011ea5 	.word	0x08011ea5
 800c5ec:	08011eb6 	.word	0x08011eb6

0800c5f0 <__multiply>:
 800c5f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c5f4:	4691      	mov	r9, r2
 800c5f6:	690a      	ldr	r2, [r1, #16]
 800c5f8:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800c5fc:	429a      	cmp	r2, r3
 800c5fe:	bfb8      	it	lt
 800c600:	460b      	movlt	r3, r1
 800c602:	460c      	mov	r4, r1
 800c604:	bfbc      	itt	lt
 800c606:	464c      	movlt	r4, r9
 800c608:	4699      	movlt	r9, r3
 800c60a:	6927      	ldr	r7, [r4, #16]
 800c60c:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800c610:	68a3      	ldr	r3, [r4, #8]
 800c612:	6861      	ldr	r1, [r4, #4]
 800c614:	eb07 060a 	add.w	r6, r7, sl
 800c618:	42b3      	cmp	r3, r6
 800c61a:	b085      	sub	sp, #20
 800c61c:	bfb8      	it	lt
 800c61e:	3101      	addlt	r1, #1
 800c620:	f7ff fe90 	bl	800c344 <_Balloc>
 800c624:	b930      	cbnz	r0, 800c634 <__multiply+0x44>
 800c626:	4602      	mov	r2, r0
 800c628:	4b44      	ldr	r3, [pc, #272]	; (800c73c <__multiply+0x14c>)
 800c62a:	4845      	ldr	r0, [pc, #276]	; (800c740 <__multiply+0x150>)
 800c62c:	f44f 71b1 	mov.w	r1, #354	; 0x162
 800c630:	f001 fc06 	bl	800de40 <__assert_func>
 800c634:	f100 0514 	add.w	r5, r0, #20
 800c638:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800c63c:	462b      	mov	r3, r5
 800c63e:	2200      	movs	r2, #0
 800c640:	4543      	cmp	r3, r8
 800c642:	d321      	bcc.n	800c688 <__multiply+0x98>
 800c644:	f104 0314 	add.w	r3, r4, #20
 800c648:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 800c64c:	f109 0314 	add.w	r3, r9, #20
 800c650:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 800c654:	9202      	str	r2, [sp, #8]
 800c656:	1b3a      	subs	r2, r7, r4
 800c658:	3a15      	subs	r2, #21
 800c65a:	f022 0203 	bic.w	r2, r2, #3
 800c65e:	3204      	adds	r2, #4
 800c660:	f104 0115 	add.w	r1, r4, #21
 800c664:	428f      	cmp	r7, r1
 800c666:	bf38      	it	cc
 800c668:	2204      	movcc	r2, #4
 800c66a:	9201      	str	r2, [sp, #4]
 800c66c:	9a02      	ldr	r2, [sp, #8]
 800c66e:	9303      	str	r3, [sp, #12]
 800c670:	429a      	cmp	r2, r3
 800c672:	d80c      	bhi.n	800c68e <__multiply+0x9e>
 800c674:	2e00      	cmp	r6, #0
 800c676:	dd03      	ble.n	800c680 <__multiply+0x90>
 800c678:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800c67c:	2b00      	cmp	r3, #0
 800c67e:	d05b      	beq.n	800c738 <__multiply+0x148>
 800c680:	6106      	str	r6, [r0, #16]
 800c682:	b005      	add	sp, #20
 800c684:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c688:	f843 2b04 	str.w	r2, [r3], #4
 800c68c:	e7d8      	b.n	800c640 <__multiply+0x50>
 800c68e:	f8b3 a000 	ldrh.w	sl, [r3]
 800c692:	f1ba 0f00 	cmp.w	sl, #0
 800c696:	d024      	beq.n	800c6e2 <__multiply+0xf2>
 800c698:	f104 0e14 	add.w	lr, r4, #20
 800c69c:	46a9      	mov	r9, r5
 800c69e:	f04f 0c00 	mov.w	ip, #0
 800c6a2:	f85e 2b04 	ldr.w	r2, [lr], #4
 800c6a6:	f8d9 1000 	ldr.w	r1, [r9]
 800c6aa:	fa1f fb82 	uxth.w	fp, r2
 800c6ae:	b289      	uxth	r1, r1
 800c6b0:	fb0a 110b 	mla	r1, sl, fp, r1
 800c6b4:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 800c6b8:	f8d9 2000 	ldr.w	r2, [r9]
 800c6bc:	4461      	add	r1, ip
 800c6be:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800c6c2:	fb0a c20b 	mla	r2, sl, fp, ip
 800c6c6:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800c6ca:	b289      	uxth	r1, r1
 800c6cc:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800c6d0:	4577      	cmp	r7, lr
 800c6d2:	f849 1b04 	str.w	r1, [r9], #4
 800c6d6:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800c6da:	d8e2      	bhi.n	800c6a2 <__multiply+0xb2>
 800c6dc:	9a01      	ldr	r2, [sp, #4]
 800c6de:	f845 c002 	str.w	ip, [r5, r2]
 800c6e2:	9a03      	ldr	r2, [sp, #12]
 800c6e4:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800c6e8:	3304      	adds	r3, #4
 800c6ea:	f1b9 0f00 	cmp.w	r9, #0
 800c6ee:	d021      	beq.n	800c734 <__multiply+0x144>
 800c6f0:	6829      	ldr	r1, [r5, #0]
 800c6f2:	f104 0c14 	add.w	ip, r4, #20
 800c6f6:	46ae      	mov	lr, r5
 800c6f8:	f04f 0a00 	mov.w	sl, #0
 800c6fc:	f8bc b000 	ldrh.w	fp, [ip]
 800c700:	f8be 2002 	ldrh.w	r2, [lr, #2]
 800c704:	fb09 220b 	mla	r2, r9, fp, r2
 800c708:	4452      	add	r2, sl
 800c70a:	b289      	uxth	r1, r1
 800c70c:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800c710:	f84e 1b04 	str.w	r1, [lr], #4
 800c714:	f85c 1b04 	ldr.w	r1, [ip], #4
 800c718:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800c71c:	f8be 1000 	ldrh.w	r1, [lr]
 800c720:	fb09 110a 	mla	r1, r9, sl, r1
 800c724:	eb01 4112 	add.w	r1, r1, r2, lsr #16
 800c728:	4567      	cmp	r7, ip
 800c72a:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800c72e:	d8e5      	bhi.n	800c6fc <__multiply+0x10c>
 800c730:	9a01      	ldr	r2, [sp, #4]
 800c732:	50a9      	str	r1, [r5, r2]
 800c734:	3504      	adds	r5, #4
 800c736:	e799      	b.n	800c66c <__multiply+0x7c>
 800c738:	3e01      	subs	r6, #1
 800c73a:	e79b      	b.n	800c674 <__multiply+0x84>
 800c73c:	08011ea5 	.word	0x08011ea5
 800c740:	08011eb6 	.word	0x08011eb6

0800c744 <__pow5mult>:
 800c744:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c748:	4615      	mov	r5, r2
 800c74a:	f012 0203 	ands.w	r2, r2, #3
 800c74e:	4606      	mov	r6, r0
 800c750:	460f      	mov	r7, r1
 800c752:	d007      	beq.n	800c764 <__pow5mult+0x20>
 800c754:	4c25      	ldr	r4, [pc, #148]	; (800c7ec <__pow5mult+0xa8>)
 800c756:	3a01      	subs	r2, #1
 800c758:	2300      	movs	r3, #0
 800c75a:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800c75e:	f7ff fe53 	bl	800c408 <__multadd>
 800c762:	4607      	mov	r7, r0
 800c764:	10ad      	asrs	r5, r5, #2
 800c766:	d03d      	beq.n	800c7e4 <__pow5mult+0xa0>
 800c768:	69f4      	ldr	r4, [r6, #28]
 800c76a:	b97c      	cbnz	r4, 800c78c <__pow5mult+0x48>
 800c76c:	2010      	movs	r0, #16
 800c76e:	f7fd fdf1 	bl	800a354 <malloc>
 800c772:	4602      	mov	r2, r0
 800c774:	61f0      	str	r0, [r6, #28]
 800c776:	b928      	cbnz	r0, 800c784 <__pow5mult+0x40>
 800c778:	4b1d      	ldr	r3, [pc, #116]	; (800c7f0 <__pow5mult+0xac>)
 800c77a:	481e      	ldr	r0, [pc, #120]	; (800c7f4 <__pow5mult+0xb0>)
 800c77c:	f240 11b3 	movw	r1, #435	; 0x1b3
 800c780:	f001 fb5e 	bl	800de40 <__assert_func>
 800c784:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800c788:	6004      	str	r4, [r0, #0]
 800c78a:	60c4      	str	r4, [r0, #12]
 800c78c:	f8d6 801c 	ldr.w	r8, [r6, #28]
 800c790:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800c794:	b94c      	cbnz	r4, 800c7aa <__pow5mult+0x66>
 800c796:	f240 2171 	movw	r1, #625	; 0x271
 800c79a:	4630      	mov	r0, r6
 800c79c:	f7ff ff12 	bl	800c5c4 <__i2b>
 800c7a0:	2300      	movs	r3, #0
 800c7a2:	f8c8 0008 	str.w	r0, [r8, #8]
 800c7a6:	4604      	mov	r4, r0
 800c7a8:	6003      	str	r3, [r0, #0]
 800c7aa:	f04f 0900 	mov.w	r9, #0
 800c7ae:	07eb      	lsls	r3, r5, #31
 800c7b0:	d50a      	bpl.n	800c7c8 <__pow5mult+0x84>
 800c7b2:	4639      	mov	r1, r7
 800c7b4:	4622      	mov	r2, r4
 800c7b6:	4630      	mov	r0, r6
 800c7b8:	f7ff ff1a 	bl	800c5f0 <__multiply>
 800c7bc:	4639      	mov	r1, r7
 800c7be:	4680      	mov	r8, r0
 800c7c0:	4630      	mov	r0, r6
 800c7c2:	f7ff fdff 	bl	800c3c4 <_Bfree>
 800c7c6:	4647      	mov	r7, r8
 800c7c8:	106d      	asrs	r5, r5, #1
 800c7ca:	d00b      	beq.n	800c7e4 <__pow5mult+0xa0>
 800c7cc:	6820      	ldr	r0, [r4, #0]
 800c7ce:	b938      	cbnz	r0, 800c7e0 <__pow5mult+0x9c>
 800c7d0:	4622      	mov	r2, r4
 800c7d2:	4621      	mov	r1, r4
 800c7d4:	4630      	mov	r0, r6
 800c7d6:	f7ff ff0b 	bl	800c5f0 <__multiply>
 800c7da:	6020      	str	r0, [r4, #0]
 800c7dc:	f8c0 9000 	str.w	r9, [r0]
 800c7e0:	4604      	mov	r4, r0
 800c7e2:	e7e4      	b.n	800c7ae <__pow5mult+0x6a>
 800c7e4:	4638      	mov	r0, r7
 800c7e6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800c7ea:	bf00      	nop
 800c7ec:	08012000 	.word	0x08012000
 800c7f0:	08011e36 	.word	0x08011e36
 800c7f4:	08011eb6 	.word	0x08011eb6

0800c7f8 <__lshift>:
 800c7f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c7fc:	460c      	mov	r4, r1
 800c7fe:	6849      	ldr	r1, [r1, #4]
 800c800:	6923      	ldr	r3, [r4, #16]
 800c802:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800c806:	68a3      	ldr	r3, [r4, #8]
 800c808:	4607      	mov	r7, r0
 800c80a:	4691      	mov	r9, r2
 800c80c:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800c810:	f108 0601 	add.w	r6, r8, #1
 800c814:	42b3      	cmp	r3, r6
 800c816:	db0b      	blt.n	800c830 <__lshift+0x38>
 800c818:	4638      	mov	r0, r7
 800c81a:	f7ff fd93 	bl	800c344 <_Balloc>
 800c81e:	4605      	mov	r5, r0
 800c820:	b948      	cbnz	r0, 800c836 <__lshift+0x3e>
 800c822:	4602      	mov	r2, r0
 800c824:	4b28      	ldr	r3, [pc, #160]	; (800c8c8 <__lshift+0xd0>)
 800c826:	4829      	ldr	r0, [pc, #164]	; (800c8cc <__lshift+0xd4>)
 800c828:	f44f 71ef 	mov.w	r1, #478	; 0x1de
 800c82c:	f001 fb08 	bl	800de40 <__assert_func>
 800c830:	3101      	adds	r1, #1
 800c832:	005b      	lsls	r3, r3, #1
 800c834:	e7ee      	b.n	800c814 <__lshift+0x1c>
 800c836:	2300      	movs	r3, #0
 800c838:	f100 0114 	add.w	r1, r0, #20
 800c83c:	f100 0210 	add.w	r2, r0, #16
 800c840:	4618      	mov	r0, r3
 800c842:	4553      	cmp	r3, sl
 800c844:	db33      	blt.n	800c8ae <__lshift+0xb6>
 800c846:	6920      	ldr	r0, [r4, #16]
 800c848:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800c84c:	f104 0314 	add.w	r3, r4, #20
 800c850:	f019 091f 	ands.w	r9, r9, #31
 800c854:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800c858:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 800c85c:	d02b      	beq.n	800c8b6 <__lshift+0xbe>
 800c85e:	f1c9 0e20 	rsb	lr, r9, #32
 800c862:	468a      	mov	sl, r1
 800c864:	2200      	movs	r2, #0
 800c866:	6818      	ldr	r0, [r3, #0]
 800c868:	fa00 f009 	lsl.w	r0, r0, r9
 800c86c:	4310      	orrs	r0, r2
 800c86e:	f84a 0b04 	str.w	r0, [sl], #4
 800c872:	f853 2b04 	ldr.w	r2, [r3], #4
 800c876:	459c      	cmp	ip, r3
 800c878:	fa22 f20e 	lsr.w	r2, r2, lr
 800c87c:	d8f3      	bhi.n	800c866 <__lshift+0x6e>
 800c87e:	ebac 0304 	sub.w	r3, ip, r4
 800c882:	3b15      	subs	r3, #21
 800c884:	f023 0303 	bic.w	r3, r3, #3
 800c888:	3304      	adds	r3, #4
 800c88a:	f104 0015 	add.w	r0, r4, #21
 800c88e:	4584      	cmp	ip, r0
 800c890:	bf38      	it	cc
 800c892:	2304      	movcc	r3, #4
 800c894:	50ca      	str	r2, [r1, r3]
 800c896:	b10a      	cbz	r2, 800c89c <__lshift+0xa4>
 800c898:	f108 0602 	add.w	r6, r8, #2
 800c89c:	3e01      	subs	r6, #1
 800c89e:	4638      	mov	r0, r7
 800c8a0:	612e      	str	r6, [r5, #16]
 800c8a2:	4621      	mov	r1, r4
 800c8a4:	f7ff fd8e 	bl	800c3c4 <_Bfree>
 800c8a8:	4628      	mov	r0, r5
 800c8aa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c8ae:	f842 0f04 	str.w	r0, [r2, #4]!
 800c8b2:	3301      	adds	r3, #1
 800c8b4:	e7c5      	b.n	800c842 <__lshift+0x4a>
 800c8b6:	3904      	subs	r1, #4
 800c8b8:	f853 2b04 	ldr.w	r2, [r3], #4
 800c8bc:	f841 2f04 	str.w	r2, [r1, #4]!
 800c8c0:	459c      	cmp	ip, r3
 800c8c2:	d8f9      	bhi.n	800c8b8 <__lshift+0xc0>
 800c8c4:	e7ea      	b.n	800c89c <__lshift+0xa4>
 800c8c6:	bf00      	nop
 800c8c8:	08011ea5 	.word	0x08011ea5
 800c8cc:	08011eb6 	.word	0x08011eb6

0800c8d0 <__mcmp>:
 800c8d0:	b530      	push	{r4, r5, lr}
 800c8d2:	6902      	ldr	r2, [r0, #16]
 800c8d4:	690c      	ldr	r4, [r1, #16]
 800c8d6:	1b12      	subs	r2, r2, r4
 800c8d8:	d10e      	bne.n	800c8f8 <__mcmp+0x28>
 800c8da:	f100 0314 	add.w	r3, r0, #20
 800c8de:	3114      	adds	r1, #20
 800c8e0:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 800c8e4:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 800c8e8:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 800c8ec:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 800c8f0:	42a5      	cmp	r5, r4
 800c8f2:	d003      	beq.n	800c8fc <__mcmp+0x2c>
 800c8f4:	d305      	bcc.n	800c902 <__mcmp+0x32>
 800c8f6:	2201      	movs	r2, #1
 800c8f8:	4610      	mov	r0, r2
 800c8fa:	bd30      	pop	{r4, r5, pc}
 800c8fc:	4283      	cmp	r3, r0
 800c8fe:	d3f3      	bcc.n	800c8e8 <__mcmp+0x18>
 800c900:	e7fa      	b.n	800c8f8 <__mcmp+0x28>
 800c902:	f04f 32ff 	mov.w	r2, #4294967295
 800c906:	e7f7      	b.n	800c8f8 <__mcmp+0x28>

0800c908 <__mdiff>:
 800c908:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c90c:	460c      	mov	r4, r1
 800c90e:	4606      	mov	r6, r0
 800c910:	4611      	mov	r1, r2
 800c912:	4620      	mov	r0, r4
 800c914:	4690      	mov	r8, r2
 800c916:	f7ff ffdb 	bl	800c8d0 <__mcmp>
 800c91a:	1e05      	subs	r5, r0, #0
 800c91c:	d110      	bne.n	800c940 <__mdiff+0x38>
 800c91e:	4629      	mov	r1, r5
 800c920:	4630      	mov	r0, r6
 800c922:	f7ff fd0f 	bl	800c344 <_Balloc>
 800c926:	b930      	cbnz	r0, 800c936 <__mdiff+0x2e>
 800c928:	4b3a      	ldr	r3, [pc, #232]	; (800ca14 <__mdiff+0x10c>)
 800c92a:	4602      	mov	r2, r0
 800c92c:	f240 2137 	movw	r1, #567	; 0x237
 800c930:	4839      	ldr	r0, [pc, #228]	; (800ca18 <__mdiff+0x110>)
 800c932:	f001 fa85 	bl	800de40 <__assert_func>
 800c936:	2301      	movs	r3, #1
 800c938:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800c93c:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c940:	bfa4      	itt	ge
 800c942:	4643      	movge	r3, r8
 800c944:	46a0      	movge	r8, r4
 800c946:	4630      	mov	r0, r6
 800c948:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800c94c:	bfa6      	itte	ge
 800c94e:	461c      	movge	r4, r3
 800c950:	2500      	movge	r5, #0
 800c952:	2501      	movlt	r5, #1
 800c954:	f7ff fcf6 	bl	800c344 <_Balloc>
 800c958:	b920      	cbnz	r0, 800c964 <__mdiff+0x5c>
 800c95a:	4b2e      	ldr	r3, [pc, #184]	; (800ca14 <__mdiff+0x10c>)
 800c95c:	4602      	mov	r2, r0
 800c95e:	f240 2145 	movw	r1, #581	; 0x245
 800c962:	e7e5      	b.n	800c930 <__mdiff+0x28>
 800c964:	f8d8 7010 	ldr.w	r7, [r8, #16]
 800c968:	6926      	ldr	r6, [r4, #16]
 800c96a:	60c5      	str	r5, [r0, #12]
 800c96c:	f104 0914 	add.w	r9, r4, #20
 800c970:	f108 0514 	add.w	r5, r8, #20
 800c974:	f100 0e14 	add.w	lr, r0, #20
 800c978:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 800c97c:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 800c980:	f108 0210 	add.w	r2, r8, #16
 800c984:	46f2      	mov	sl, lr
 800c986:	2100      	movs	r1, #0
 800c988:	f859 3b04 	ldr.w	r3, [r9], #4
 800c98c:	f852 bf04 	ldr.w	fp, [r2, #4]!
 800c990:	fa11 f88b 	uxtah	r8, r1, fp
 800c994:	b299      	uxth	r1, r3
 800c996:	0c1b      	lsrs	r3, r3, #16
 800c998:	eba8 0801 	sub.w	r8, r8, r1
 800c99c:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800c9a0:	eb03 4328 	add.w	r3, r3, r8, asr #16
 800c9a4:	fa1f f888 	uxth.w	r8, r8
 800c9a8:	1419      	asrs	r1, r3, #16
 800c9aa:	454e      	cmp	r6, r9
 800c9ac:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 800c9b0:	f84a 3b04 	str.w	r3, [sl], #4
 800c9b4:	d8e8      	bhi.n	800c988 <__mdiff+0x80>
 800c9b6:	1b33      	subs	r3, r6, r4
 800c9b8:	3b15      	subs	r3, #21
 800c9ba:	f023 0303 	bic.w	r3, r3, #3
 800c9be:	3304      	adds	r3, #4
 800c9c0:	3415      	adds	r4, #21
 800c9c2:	42a6      	cmp	r6, r4
 800c9c4:	bf38      	it	cc
 800c9c6:	2304      	movcc	r3, #4
 800c9c8:	441d      	add	r5, r3
 800c9ca:	4473      	add	r3, lr
 800c9cc:	469e      	mov	lr, r3
 800c9ce:	462e      	mov	r6, r5
 800c9d0:	4566      	cmp	r6, ip
 800c9d2:	d30e      	bcc.n	800c9f2 <__mdiff+0xea>
 800c9d4:	f10c 0203 	add.w	r2, ip, #3
 800c9d8:	1b52      	subs	r2, r2, r5
 800c9da:	f022 0203 	bic.w	r2, r2, #3
 800c9de:	3d03      	subs	r5, #3
 800c9e0:	45ac      	cmp	ip, r5
 800c9e2:	bf38      	it	cc
 800c9e4:	2200      	movcc	r2, #0
 800c9e6:	4413      	add	r3, r2
 800c9e8:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 800c9ec:	b17a      	cbz	r2, 800ca0e <__mdiff+0x106>
 800c9ee:	6107      	str	r7, [r0, #16]
 800c9f0:	e7a4      	b.n	800c93c <__mdiff+0x34>
 800c9f2:	f856 8b04 	ldr.w	r8, [r6], #4
 800c9f6:	fa11 f288 	uxtah	r2, r1, r8
 800c9fa:	1414      	asrs	r4, r2, #16
 800c9fc:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800ca00:	b292      	uxth	r2, r2
 800ca02:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800ca06:	f84e 2b04 	str.w	r2, [lr], #4
 800ca0a:	1421      	asrs	r1, r4, #16
 800ca0c:	e7e0      	b.n	800c9d0 <__mdiff+0xc8>
 800ca0e:	3f01      	subs	r7, #1
 800ca10:	e7ea      	b.n	800c9e8 <__mdiff+0xe0>
 800ca12:	bf00      	nop
 800ca14:	08011ea5 	.word	0x08011ea5
 800ca18:	08011eb6 	.word	0x08011eb6

0800ca1c <__ulp>:
 800ca1c:	b082      	sub	sp, #8
 800ca1e:	ed8d 0b00 	vstr	d0, [sp]
 800ca22:	9a01      	ldr	r2, [sp, #4]
 800ca24:	4b0f      	ldr	r3, [pc, #60]	; (800ca64 <__ulp+0x48>)
 800ca26:	4013      	ands	r3, r2
 800ca28:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
 800ca2c:	2b00      	cmp	r3, #0
 800ca2e:	dc08      	bgt.n	800ca42 <__ulp+0x26>
 800ca30:	425b      	negs	r3, r3
 800ca32:	f1b3 7fa0 	cmp.w	r3, #20971520	; 0x1400000
 800ca36:	ea4f 5223 	mov.w	r2, r3, asr #20
 800ca3a:	da04      	bge.n	800ca46 <__ulp+0x2a>
 800ca3c:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 800ca40:	4113      	asrs	r3, r2
 800ca42:	2200      	movs	r2, #0
 800ca44:	e008      	b.n	800ca58 <__ulp+0x3c>
 800ca46:	f1a2 0314 	sub.w	r3, r2, #20
 800ca4a:	2b1e      	cmp	r3, #30
 800ca4c:	bfda      	itte	le
 800ca4e:	f04f 4200 	movle.w	r2, #2147483648	; 0x80000000
 800ca52:	40da      	lsrle	r2, r3
 800ca54:	2201      	movgt	r2, #1
 800ca56:	2300      	movs	r3, #0
 800ca58:	4619      	mov	r1, r3
 800ca5a:	4610      	mov	r0, r2
 800ca5c:	ec41 0b10 	vmov	d0, r0, r1
 800ca60:	b002      	add	sp, #8
 800ca62:	4770      	bx	lr
 800ca64:	7ff00000 	.word	0x7ff00000

0800ca68 <__b2d>:
 800ca68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ca6c:	6906      	ldr	r6, [r0, #16]
 800ca6e:	f100 0814 	add.w	r8, r0, #20
 800ca72:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 800ca76:	1f37      	subs	r7, r6, #4
 800ca78:	f856 2c04 	ldr.w	r2, [r6, #-4]
 800ca7c:	4610      	mov	r0, r2
 800ca7e:	f7ff fd53 	bl	800c528 <__hi0bits>
 800ca82:	f1c0 0320 	rsb	r3, r0, #32
 800ca86:	280a      	cmp	r0, #10
 800ca88:	600b      	str	r3, [r1, #0]
 800ca8a:	491b      	ldr	r1, [pc, #108]	; (800caf8 <__b2d+0x90>)
 800ca8c:	dc15      	bgt.n	800caba <__b2d+0x52>
 800ca8e:	f1c0 0c0b 	rsb	ip, r0, #11
 800ca92:	fa22 f30c 	lsr.w	r3, r2, ip
 800ca96:	45b8      	cmp	r8, r7
 800ca98:	ea43 0501 	orr.w	r5, r3, r1
 800ca9c:	bf34      	ite	cc
 800ca9e:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 800caa2:	2300      	movcs	r3, #0
 800caa4:	3015      	adds	r0, #21
 800caa6:	fa02 f000 	lsl.w	r0, r2, r0
 800caaa:	fa23 f30c 	lsr.w	r3, r3, ip
 800caae:	4303      	orrs	r3, r0
 800cab0:	461c      	mov	r4, r3
 800cab2:	ec45 4b10 	vmov	d0, r4, r5
 800cab6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800caba:	45b8      	cmp	r8, r7
 800cabc:	bf3a      	itte	cc
 800cabe:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 800cac2:	f1a6 0708 	subcc.w	r7, r6, #8
 800cac6:	2300      	movcs	r3, #0
 800cac8:	380b      	subs	r0, #11
 800caca:	d012      	beq.n	800caf2 <__b2d+0x8a>
 800cacc:	f1c0 0120 	rsb	r1, r0, #32
 800cad0:	fa23 f401 	lsr.w	r4, r3, r1
 800cad4:	4082      	lsls	r2, r0
 800cad6:	4322      	orrs	r2, r4
 800cad8:	4547      	cmp	r7, r8
 800cada:	f042 557f 	orr.w	r5, r2, #1069547520	; 0x3fc00000
 800cade:	bf8c      	ite	hi
 800cae0:	f857 2c04 	ldrhi.w	r2, [r7, #-4]
 800cae4:	2200      	movls	r2, #0
 800cae6:	4083      	lsls	r3, r0
 800cae8:	40ca      	lsrs	r2, r1
 800caea:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 800caee:	4313      	orrs	r3, r2
 800caf0:	e7de      	b.n	800cab0 <__b2d+0x48>
 800caf2:	ea42 0501 	orr.w	r5, r2, r1
 800caf6:	e7db      	b.n	800cab0 <__b2d+0x48>
 800caf8:	3ff00000 	.word	0x3ff00000

0800cafc <__d2b>:
 800cafc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800cb00:	460f      	mov	r7, r1
 800cb02:	2101      	movs	r1, #1
 800cb04:	ec59 8b10 	vmov	r8, r9, d0
 800cb08:	4616      	mov	r6, r2
 800cb0a:	f7ff fc1b 	bl	800c344 <_Balloc>
 800cb0e:	4604      	mov	r4, r0
 800cb10:	b930      	cbnz	r0, 800cb20 <__d2b+0x24>
 800cb12:	4602      	mov	r2, r0
 800cb14:	4b24      	ldr	r3, [pc, #144]	; (800cba8 <__d2b+0xac>)
 800cb16:	4825      	ldr	r0, [pc, #148]	; (800cbac <__d2b+0xb0>)
 800cb18:	f240 310f 	movw	r1, #783	; 0x30f
 800cb1c:	f001 f990 	bl	800de40 <__assert_func>
 800cb20:	f3c9 550a 	ubfx	r5, r9, #20, #11
 800cb24:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800cb28:	bb2d      	cbnz	r5, 800cb76 <__d2b+0x7a>
 800cb2a:	9301      	str	r3, [sp, #4]
 800cb2c:	f1b8 0300 	subs.w	r3, r8, #0
 800cb30:	d026      	beq.n	800cb80 <__d2b+0x84>
 800cb32:	4668      	mov	r0, sp
 800cb34:	9300      	str	r3, [sp, #0]
 800cb36:	f7ff fd17 	bl	800c568 <__lo0bits>
 800cb3a:	e9dd 1200 	ldrd	r1, r2, [sp]
 800cb3e:	b1e8      	cbz	r0, 800cb7c <__d2b+0x80>
 800cb40:	f1c0 0320 	rsb	r3, r0, #32
 800cb44:	fa02 f303 	lsl.w	r3, r2, r3
 800cb48:	430b      	orrs	r3, r1
 800cb4a:	40c2      	lsrs	r2, r0
 800cb4c:	6163      	str	r3, [r4, #20]
 800cb4e:	9201      	str	r2, [sp, #4]
 800cb50:	9b01      	ldr	r3, [sp, #4]
 800cb52:	61a3      	str	r3, [r4, #24]
 800cb54:	2b00      	cmp	r3, #0
 800cb56:	bf14      	ite	ne
 800cb58:	2202      	movne	r2, #2
 800cb5a:	2201      	moveq	r2, #1
 800cb5c:	6122      	str	r2, [r4, #16]
 800cb5e:	b1bd      	cbz	r5, 800cb90 <__d2b+0x94>
 800cb60:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 800cb64:	4405      	add	r5, r0
 800cb66:	603d      	str	r5, [r7, #0]
 800cb68:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800cb6c:	6030      	str	r0, [r6, #0]
 800cb6e:	4620      	mov	r0, r4
 800cb70:	b003      	add	sp, #12
 800cb72:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cb76:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800cb7a:	e7d6      	b.n	800cb2a <__d2b+0x2e>
 800cb7c:	6161      	str	r1, [r4, #20]
 800cb7e:	e7e7      	b.n	800cb50 <__d2b+0x54>
 800cb80:	a801      	add	r0, sp, #4
 800cb82:	f7ff fcf1 	bl	800c568 <__lo0bits>
 800cb86:	9b01      	ldr	r3, [sp, #4]
 800cb88:	6163      	str	r3, [r4, #20]
 800cb8a:	3020      	adds	r0, #32
 800cb8c:	2201      	movs	r2, #1
 800cb8e:	e7e5      	b.n	800cb5c <__d2b+0x60>
 800cb90:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800cb94:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800cb98:	6038      	str	r0, [r7, #0]
 800cb9a:	6918      	ldr	r0, [r3, #16]
 800cb9c:	f7ff fcc4 	bl	800c528 <__hi0bits>
 800cba0:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800cba4:	e7e2      	b.n	800cb6c <__d2b+0x70>
 800cba6:	bf00      	nop
 800cba8:	08011ea5 	.word	0x08011ea5
 800cbac:	08011eb6 	.word	0x08011eb6

0800cbb0 <__ratio>:
 800cbb0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cbb4:	4688      	mov	r8, r1
 800cbb6:	4669      	mov	r1, sp
 800cbb8:	4681      	mov	r9, r0
 800cbba:	f7ff ff55 	bl	800ca68 <__b2d>
 800cbbe:	a901      	add	r1, sp, #4
 800cbc0:	4640      	mov	r0, r8
 800cbc2:	ec55 4b10 	vmov	r4, r5, d0
 800cbc6:	f7ff ff4f 	bl	800ca68 <__b2d>
 800cbca:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800cbce:	f8d8 2010 	ldr.w	r2, [r8, #16]
 800cbd2:	eba3 0c02 	sub.w	ip, r3, r2
 800cbd6:	e9dd 3200 	ldrd	r3, r2, [sp]
 800cbda:	1a9b      	subs	r3, r3, r2
 800cbdc:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 800cbe0:	ec51 0b10 	vmov	r0, r1, d0
 800cbe4:	2b00      	cmp	r3, #0
 800cbe6:	bfd6      	itet	le
 800cbe8:	460a      	movle	r2, r1
 800cbea:	462a      	movgt	r2, r5
 800cbec:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 800cbf0:	468b      	mov	fp, r1
 800cbf2:	462f      	mov	r7, r5
 800cbf4:	bfd4      	ite	le
 800cbf6:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 800cbfa:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 800cbfe:	4620      	mov	r0, r4
 800cc00:	ee10 2a10 	vmov	r2, s0
 800cc04:	465b      	mov	r3, fp
 800cc06:	4639      	mov	r1, r7
 800cc08:	f7f3 fe20 	bl	800084c <__aeabi_ddiv>
 800cc0c:	ec41 0b10 	vmov	d0, r0, r1
 800cc10:	b003      	add	sp, #12
 800cc12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800cc16 <__copybits>:
 800cc16:	3901      	subs	r1, #1
 800cc18:	b570      	push	{r4, r5, r6, lr}
 800cc1a:	1149      	asrs	r1, r1, #5
 800cc1c:	6914      	ldr	r4, [r2, #16]
 800cc1e:	3101      	adds	r1, #1
 800cc20:	f102 0314 	add.w	r3, r2, #20
 800cc24:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800cc28:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800cc2c:	1f05      	subs	r5, r0, #4
 800cc2e:	42a3      	cmp	r3, r4
 800cc30:	d30c      	bcc.n	800cc4c <__copybits+0x36>
 800cc32:	1aa3      	subs	r3, r4, r2
 800cc34:	3b11      	subs	r3, #17
 800cc36:	f023 0303 	bic.w	r3, r3, #3
 800cc3a:	3211      	adds	r2, #17
 800cc3c:	42a2      	cmp	r2, r4
 800cc3e:	bf88      	it	hi
 800cc40:	2300      	movhi	r3, #0
 800cc42:	4418      	add	r0, r3
 800cc44:	2300      	movs	r3, #0
 800cc46:	4288      	cmp	r0, r1
 800cc48:	d305      	bcc.n	800cc56 <__copybits+0x40>
 800cc4a:	bd70      	pop	{r4, r5, r6, pc}
 800cc4c:	f853 6b04 	ldr.w	r6, [r3], #4
 800cc50:	f845 6f04 	str.w	r6, [r5, #4]!
 800cc54:	e7eb      	b.n	800cc2e <__copybits+0x18>
 800cc56:	f840 3b04 	str.w	r3, [r0], #4
 800cc5a:	e7f4      	b.n	800cc46 <__copybits+0x30>

0800cc5c <__any_on>:
 800cc5c:	f100 0214 	add.w	r2, r0, #20
 800cc60:	6900      	ldr	r0, [r0, #16]
 800cc62:	114b      	asrs	r3, r1, #5
 800cc64:	4298      	cmp	r0, r3
 800cc66:	b510      	push	{r4, lr}
 800cc68:	db11      	blt.n	800cc8e <__any_on+0x32>
 800cc6a:	dd0a      	ble.n	800cc82 <__any_on+0x26>
 800cc6c:	f011 011f 	ands.w	r1, r1, #31
 800cc70:	d007      	beq.n	800cc82 <__any_on+0x26>
 800cc72:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 800cc76:	fa24 f001 	lsr.w	r0, r4, r1
 800cc7a:	fa00 f101 	lsl.w	r1, r0, r1
 800cc7e:	428c      	cmp	r4, r1
 800cc80:	d10b      	bne.n	800cc9a <__any_on+0x3e>
 800cc82:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800cc86:	4293      	cmp	r3, r2
 800cc88:	d803      	bhi.n	800cc92 <__any_on+0x36>
 800cc8a:	2000      	movs	r0, #0
 800cc8c:	bd10      	pop	{r4, pc}
 800cc8e:	4603      	mov	r3, r0
 800cc90:	e7f7      	b.n	800cc82 <__any_on+0x26>
 800cc92:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800cc96:	2900      	cmp	r1, #0
 800cc98:	d0f5      	beq.n	800cc86 <__any_on+0x2a>
 800cc9a:	2001      	movs	r0, #1
 800cc9c:	e7f6      	b.n	800cc8c <__any_on+0x30>

0800cc9e <sulp>:
 800cc9e:	b570      	push	{r4, r5, r6, lr}
 800cca0:	4604      	mov	r4, r0
 800cca2:	460d      	mov	r5, r1
 800cca4:	ec45 4b10 	vmov	d0, r4, r5
 800cca8:	4616      	mov	r6, r2
 800ccaa:	f7ff feb7 	bl	800ca1c <__ulp>
 800ccae:	ec51 0b10 	vmov	r0, r1, d0
 800ccb2:	b17e      	cbz	r6, 800ccd4 <sulp+0x36>
 800ccb4:	f3c5 530a 	ubfx	r3, r5, #20, #11
 800ccb8:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800ccbc:	2b00      	cmp	r3, #0
 800ccbe:	dd09      	ble.n	800ccd4 <sulp+0x36>
 800ccc0:	051b      	lsls	r3, r3, #20
 800ccc2:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 800ccc6:	2400      	movs	r4, #0
 800ccc8:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 800cccc:	4622      	mov	r2, r4
 800ccce:	462b      	mov	r3, r5
 800ccd0:	f7f3 fc92 	bl	80005f8 <__aeabi_dmul>
 800ccd4:	bd70      	pop	{r4, r5, r6, pc}
	...

0800ccd8 <_strtod_l>:
 800ccd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ccdc:	ed2d 8b02 	vpush	{d8}
 800cce0:	b09b      	sub	sp, #108	; 0x6c
 800cce2:	4604      	mov	r4, r0
 800cce4:	9213      	str	r2, [sp, #76]	; 0x4c
 800cce6:	2200      	movs	r2, #0
 800cce8:	9216      	str	r2, [sp, #88]	; 0x58
 800ccea:	460d      	mov	r5, r1
 800ccec:	f04f 0800 	mov.w	r8, #0
 800ccf0:	f04f 0900 	mov.w	r9, #0
 800ccf4:	460a      	mov	r2, r1
 800ccf6:	9215      	str	r2, [sp, #84]	; 0x54
 800ccf8:	7811      	ldrb	r1, [r2, #0]
 800ccfa:	292b      	cmp	r1, #43	; 0x2b
 800ccfc:	d04c      	beq.n	800cd98 <_strtod_l+0xc0>
 800ccfe:	d83a      	bhi.n	800cd76 <_strtod_l+0x9e>
 800cd00:	290d      	cmp	r1, #13
 800cd02:	d834      	bhi.n	800cd6e <_strtod_l+0x96>
 800cd04:	2908      	cmp	r1, #8
 800cd06:	d834      	bhi.n	800cd72 <_strtod_l+0x9a>
 800cd08:	2900      	cmp	r1, #0
 800cd0a:	d03d      	beq.n	800cd88 <_strtod_l+0xb0>
 800cd0c:	2200      	movs	r2, #0
 800cd0e:	920a      	str	r2, [sp, #40]	; 0x28
 800cd10:	9e15      	ldr	r6, [sp, #84]	; 0x54
 800cd12:	7832      	ldrb	r2, [r6, #0]
 800cd14:	2a30      	cmp	r2, #48	; 0x30
 800cd16:	f040 80b4 	bne.w	800ce82 <_strtod_l+0x1aa>
 800cd1a:	7872      	ldrb	r2, [r6, #1]
 800cd1c:	f002 02df 	and.w	r2, r2, #223	; 0xdf
 800cd20:	2a58      	cmp	r2, #88	; 0x58
 800cd22:	d170      	bne.n	800ce06 <_strtod_l+0x12e>
 800cd24:	9302      	str	r3, [sp, #8]
 800cd26:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800cd28:	9301      	str	r3, [sp, #4]
 800cd2a:	ab16      	add	r3, sp, #88	; 0x58
 800cd2c:	9300      	str	r3, [sp, #0]
 800cd2e:	4a8e      	ldr	r2, [pc, #568]	; (800cf68 <_strtod_l+0x290>)
 800cd30:	ab17      	add	r3, sp, #92	; 0x5c
 800cd32:	a915      	add	r1, sp, #84	; 0x54
 800cd34:	4620      	mov	r0, r4
 800cd36:	f001 f91f 	bl	800df78 <__gethex>
 800cd3a:	f010 070f 	ands.w	r7, r0, #15
 800cd3e:	4605      	mov	r5, r0
 800cd40:	d005      	beq.n	800cd4e <_strtod_l+0x76>
 800cd42:	2f06      	cmp	r7, #6
 800cd44:	d12a      	bne.n	800cd9c <_strtod_l+0xc4>
 800cd46:	3601      	adds	r6, #1
 800cd48:	2300      	movs	r3, #0
 800cd4a:	9615      	str	r6, [sp, #84]	; 0x54
 800cd4c:	930a      	str	r3, [sp, #40]	; 0x28
 800cd4e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800cd50:	2b00      	cmp	r3, #0
 800cd52:	f040 857f 	bne.w	800d854 <_strtod_l+0xb7c>
 800cd56:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800cd58:	b1db      	cbz	r3, 800cd92 <_strtod_l+0xba>
 800cd5a:	4642      	mov	r2, r8
 800cd5c:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 800cd60:	ec43 2b10 	vmov	d0, r2, r3
 800cd64:	b01b      	add	sp, #108	; 0x6c
 800cd66:	ecbd 8b02 	vpop	{d8}
 800cd6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cd6e:	2920      	cmp	r1, #32
 800cd70:	d1cc      	bne.n	800cd0c <_strtod_l+0x34>
 800cd72:	3201      	adds	r2, #1
 800cd74:	e7bf      	b.n	800ccf6 <_strtod_l+0x1e>
 800cd76:	292d      	cmp	r1, #45	; 0x2d
 800cd78:	d1c8      	bne.n	800cd0c <_strtod_l+0x34>
 800cd7a:	2101      	movs	r1, #1
 800cd7c:	910a      	str	r1, [sp, #40]	; 0x28
 800cd7e:	1c51      	adds	r1, r2, #1
 800cd80:	9115      	str	r1, [sp, #84]	; 0x54
 800cd82:	7852      	ldrb	r2, [r2, #1]
 800cd84:	2a00      	cmp	r2, #0
 800cd86:	d1c3      	bne.n	800cd10 <_strtod_l+0x38>
 800cd88:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800cd8a:	9515      	str	r5, [sp, #84]	; 0x54
 800cd8c:	2b00      	cmp	r3, #0
 800cd8e:	f040 855f 	bne.w	800d850 <_strtod_l+0xb78>
 800cd92:	4642      	mov	r2, r8
 800cd94:	464b      	mov	r3, r9
 800cd96:	e7e3      	b.n	800cd60 <_strtod_l+0x88>
 800cd98:	2100      	movs	r1, #0
 800cd9a:	e7ef      	b.n	800cd7c <_strtod_l+0xa4>
 800cd9c:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800cd9e:	b13a      	cbz	r2, 800cdb0 <_strtod_l+0xd8>
 800cda0:	2135      	movs	r1, #53	; 0x35
 800cda2:	a818      	add	r0, sp, #96	; 0x60
 800cda4:	f7ff ff37 	bl	800cc16 <__copybits>
 800cda8:	9916      	ldr	r1, [sp, #88]	; 0x58
 800cdaa:	4620      	mov	r0, r4
 800cdac:	f7ff fb0a 	bl	800c3c4 <_Bfree>
 800cdb0:	3f01      	subs	r7, #1
 800cdb2:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800cdb4:	2f04      	cmp	r7, #4
 800cdb6:	d806      	bhi.n	800cdc6 <_strtod_l+0xee>
 800cdb8:	e8df f007 	tbb	[pc, r7]
 800cdbc:	201d0314 	.word	0x201d0314
 800cdc0:	14          	.byte	0x14
 800cdc1:	00          	.byte	0x00
 800cdc2:	e9dd 8918 	ldrd	r8, r9, [sp, #96]	; 0x60
 800cdc6:	05e9      	lsls	r1, r5, #23
 800cdc8:	bf48      	it	mi
 800cdca:	f049 4900 	orrmi.w	r9, r9, #2147483648	; 0x80000000
 800cdce:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800cdd2:	0d1b      	lsrs	r3, r3, #20
 800cdd4:	051b      	lsls	r3, r3, #20
 800cdd6:	2b00      	cmp	r3, #0
 800cdd8:	d1b9      	bne.n	800cd4e <_strtod_l+0x76>
 800cdda:	f7fe fba9 	bl	800b530 <__errno>
 800cdde:	2322      	movs	r3, #34	; 0x22
 800cde0:	6003      	str	r3, [r0, #0]
 800cde2:	e7b4      	b.n	800cd4e <_strtod_l+0x76>
 800cde4:	e9dd 8318 	ldrd	r8, r3, [sp, #96]	; 0x60
 800cde8:	f202 4233 	addw	r2, r2, #1075	; 0x433
 800cdec:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 800cdf0:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
 800cdf4:	e7e7      	b.n	800cdc6 <_strtod_l+0xee>
 800cdf6:	f8df 9178 	ldr.w	r9, [pc, #376]	; 800cf70 <_strtod_l+0x298>
 800cdfa:	e7e4      	b.n	800cdc6 <_strtod_l+0xee>
 800cdfc:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
 800ce00:	f04f 38ff 	mov.w	r8, #4294967295
 800ce04:	e7df      	b.n	800cdc6 <_strtod_l+0xee>
 800ce06:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800ce08:	1c5a      	adds	r2, r3, #1
 800ce0a:	9215      	str	r2, [sp, #84]	; 0x54
 800ce0c:	785b      	ldrb	r3, [r3, #1]
 800ce0e:	2b30      	cmp	r3, #48	; 0x30
 800ce10:	d0f9      	beq.n	800ce06 <_strtod_l+0x12e>
 800ce12:	2b00      	cmp	r3, #0
 800ce14:	d09b      	beq.n	800cd4e <_strtod_l+0x76>
 800ce16:	2301      	movs	r3, #1
 800ce18:	f04f 0a00 	mov.w	sl, #0
 800ce1c:	9304      	str	r3, [sp, #16]
 800ce1e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800ce20:	930b      	str	r3, [sp, #44]	; 0x2c
 800ce22:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 800ce26:	46d3      	mov	fp, sl
 800ce28:	220a      	movs	r2, #10
 800ce2a:	9815      	ldr	r0, [sp, #84]	; 0x54
 800ce2c:	7806      	ldrb	r6, [r0, #0]
 800ce2e:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 800ce32:	b2d9      	uxtb	r1, r3
 800ce34:	2909      	cmp	r1, #9
 800ce36:	d926      	bls.n	800ce86 <_strtod_l+0x1ae>
 800ce38:	494c      	ldr	r1, [pc, #304]	; (800cf6c <_strtod_l+0x294>)
 800ce3a:	2201      	movs	r2, #1
 800ce3c:	f000 ffe6 	bl	800de0c <strncmp>
 800ce40:	2800      	cmp	r0, #0
 800ce42:	d030      	beq.n	800cea6 <_strtod_l+0x1ce>
 800ce44:	2000      	movs	r0, #0
 800ce46:	4632      	mov	r2, r6
 800ce48:	9005      	str	r0, [sp, #20]
 800ce4a:	465e      	mov	r6, fp
 800ce4c:	4603      	mov	r3, r0
 800ce4e:	2a65      	cmp	r2, #101	; 0x65
 800ce50:	d001      	beq.n	800ce56 <_strtod_l+0x17e>
 800ce52:	2a45      	cmp	r2, #69	; 0x45
 800ce54:	d113      	bne.n	800ce7e <_strtod_l+0x1a6>
 800ce56:	b91e      	cbnz	r6, 800ce60 <_strtod_l+0x188>
 800ce58:	9a04      	ldr	r2, [sp, #16]
 800ce5a:	4302      	orrs	r2, r0
 800ce5c:	d094      	beq.n	800cd88 <_strtod_l+0xb0>
 800ce5e:	2600      	movs	r6, #0
 800ce60:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800ce62:	1c6a      	adds	r2, r5, #1
 800ce64:	9215      	str	r2, [sp, #84]	; 0x54
 800ce66:	786a      	ldrb	r2, [r5, #1]
 800ce68:	2a2b      	cmp	r2, #43	; 0x2b
 800ce6a:	d074      	beq.n	800cf56 <_strtod_l+0x27e>
 800ce6c:	2a2d      	cmp	r2, #45	; 0x2d
 800ce6e:	d078      	beq.n	800cf62 <_strtod_l+0x28a>
 800ce70:	f04f 0c00 	mov.w	ip, #0
 800ce74:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 800ce78:	2909      	cmp	r1, #9
 800ce7a:	d97f      	bls.n	800cf7c <_strtod_l+0x2a4>
 800ce7c:	9515      	str	r5, [sp, #84]	; 0x54
 800ce7e:	2700      	movs	r7, #0
 800ce80:	e09e      	b.n	800cfc0 <_strtod_l+0x2e8>
 800ce82:	2300      	movs	r3, #0
 800ce84:	e7c8      	b.n	800ce18 <_strtod_l+0x140>
 800ce86:	f1bb 0f08 	cmp.w	fp, #8
 800ce8a:	bfd8      	it	le
 800ce8c:	9909      	ldrle	r1, [sp, #36]	; 0x24
 800ce8e:	f100 0001 	add.w	r0, r0, #1
 800ce92:	bfda      	itte	le
 800ce94:	fb02 3301 	mlale	r3, r2, r1, r3
 800ce98:	9309      	strle	r3, [sp, #36]	; 0x24
 800ce9a:	fb02 3a0a 	mlagt	sl, r2, sl, r3
 800ce9e:	f10b 0b01 	add.w	fp, fp, #1
 800cea2:	9015      	str	r0, [sp, #84]	; 0x54
 800cea4:	e7c1      	b.n	800ce2a <_strtod_l+0x152>
 800cea6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800cea8:	1c5a      	adds	r2, r3, #1
 800ceaa:	9215      	str	r2, [sp, #84]	; 0x54
 800ceac:	785a      	ldrb	r2, [r3, #1]
 800ceae:	f1bb 0f00 	cmp.w	fp, #0
 800ceb2:	d037      	beq.n	800cf24 <_strtod_l+0x24c>
 800ceb4:	9005      	str	r0, [sp, #20]
 800ceb6:	465e      	mov	r6, fp
 800ceb8:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 800cebc:	2b09      	cmp	r3, #9
 800cebe:	d912      	bls.n	800cee6 <_strtod_l+0x20e>
 800cec0:	2301      	movs	r3, #1
 800cec2:	e7c4      	b.n	800ce4e <_strtod_l+0x176>
 800cec4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800cec6:	1c5a      	adds	r2, r3, #1
 800cec8:	9215      	str	r2, [sp, #84]	; 0x54
 800ceca:	785a      	ldrb	r2, [r3, #1]
 800cecc:	3001      	adds	r0, #1
 800cece:	2a30      	cmp	r2, #48	; 0x30
 800ced0:	d0f8      	beq.n	800cec4 <_strtod_l+0x1ec>
 800ced2:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 800ced6:	2b08      	cmp	r3, #8
 800ced8:	f200 84c1 	bhi.w	800d85e <_strtod_l+0xb86>
 800cedc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800cede:	9005      	str	r0, [sp, #20]
 800cee0:	2000      	movs	r0, #0
 800cee2:	930b      	str	r3, [sp, #44]	; 0x2c
 800cee4:	4606      	mov	r6, r0
 800cee6:	3a30      	subs	r2, #48	; 0x30
 800cee8:	f100 0301 	add.w	r3, r0, #1
 800ceec:	d014      	beq.n	800cf18 <_strtod_l+0x240>
 800ceee:	9905      	ldr	r1, [sp, #20]
 800cef0:	4419      	add	r1, r3
 800cef2:	9105      	str	r1, [sp, #20]
 800cef4:	4633      	mov	r3, r6
 800cef6:	eb00 0c06 	add.w	ip, r0, r6
 800cefa:	210a      	movs	r1, #10
 800cefc:	4563      	cmp	r3, ip
 800cefe:	d113      	bne.n	800cf28 <_strtod_l+0x250>
 800cf00:	1833      	adds	r3, r6, r0
 800cf02:	2b08      	cmp	r3, #8
 800cf04:	f106 0601 	add.w	r6, r6, #1
 800cf08:	4406      	add	r6, r0
 800cf0a:	dc1a      	bgt.n	800cf42 <_strtod_l+0x26a>
 800cf0c:	9909      	ldr	r1, [sp, #36]	; 0x24
 800cf0e:	230a      	movs	r3, #10
 800cf10:	fb03 2301 	mla	r3, r3, r1, r2
 800cf14:	9309      	str	r3, [sp, #36]	; 0x24
 800cf16:	2300      	movs	r3, #0
 800cf18:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800cf1a:	1c51      	adds	r1, r2, #1
 800cf1c:	9115      	str	r1, [sp, #84]	; 0x54
 800cf1e:	7852      	ldrb	r2, [r2, #1]
 800cf20:	4618      	mov	r0, r3
 800cf22:	e7c9      	b.n	800ceb8 <_strtod_l+0x1e0>
 800cf24:	4658      	mov	r0, fp
 800cf26:	e7d2      	b.n	800cece <_strtod_l+0x1f6>
 800cf28:	2b08      	cmp	r3, #8
 800cf2a:	f103 0301 	add.w	r3, r3, #1
 800cf2e:	dc03      	bgt.n	800cf38 <_strtod_l+0x260>
 800cf30:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800cf32:	434f      	muls	r7, r1
 800cf34:	9709      	str	r7, [sp, #36]	; 0x24
 800cf36:	e7e1      	b.n	800cefc <_strtod_l+0x224>
 800cf38:	2b10      	cmp	r3, #16
 800cf3a:	bfd8      	it	le
 800cf3c:	fb01 fa0a 	mulle.w	sl, r1, sl
 800cf40:	e7dc      	b.n	800cefc <_strtod_l+0x224>
 800cf42:	2e10      	cmp	r6, #16
 800cf44:	bfdc      	itt	le
 800cf46:	230a      	movle	r3, #10
 800cf48:	fb03 2a0a 	mlale	sl, r3, sl, r2
 800cf4c:	e7e3      	b.n	800cf16 <_strtod_l+0x23e>
 800cf4e:	2300      	movs	r3, #0
 800cf50:	9305      	str	r3, [sp, #20]
 800cf52:	2301      	movs	r3, #1
 800cf54:	e780      	b.n	800ce58 <_strtod_l+0x180>
 800cf56:	f04f 0c00 	mov.w	ip, #0
 800cf5a:	1caa      	adds	r2, r5, #2
 800cf5c:	9215      	str	r2, [sp, #84]	; 0x54
 800cf5e:	78aa      	ldrb	r2, [r5, #2]
 800cf60:	e788      	b.n	800ce74 <_strtod_l+0x19c>
 800cf62:	f04f 0c01 	mov.w	ip, #1
 800cf66:	e7f8      	b.n	800cf5a <_strtod_l+0x282>
 800cf68:	08012010 	.word	0x08012010
 800cf6c:	0801200c 	.word	0x0801200c
 800cf70:	7ff00000 	.word	0x7ff00000
 800cf74:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800cf76:	1c51      	adds	r1, r2, #1
 800cf78:	9115      	str	r1, [sp, #84]	; 0x54
 800cf7a:	7852      	ldrb	r2, [r2, #1]
 800cf7c:	2a30      	cmp	r2, #48	; 0x30
 800cf7e:	d0f9      	beq.n	800cf74 <_strtod_l+0x29c>
 800cf80:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 800cf84:	2908      	cmp	r1, #8
 800cf86:	f63f af7a 	bhi.w	800ce7e <_strtod_l+0x1a6>
 800cf8a:	3a30      	subs	r2, #48	; 0x30
 800cf8c:	9208      	str	r2, [sp, #32]
 800cf8e:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800cf90:	920c      	str	r2, [sp, #48]	; 0x30
 800cf92:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800cf94:	1c57      	adds	r7, r2, #1
 800cf96:	9715      	str	r7, [sp, #84]	; 0x54
 800cf98:	7852      	ldrb	r2, [r2, #1]
 800cf9a:	f1a2 0e30 	sub.w	lr, r2, #48	; 0x30
 800cf9e:	f1be 0f09 	cmp.w	lr, #9
 800cfa2:	d938      	bls.n	800d016 <_strtod_l+0x33e>
 800cfa4:	990c      	ldr	r1, [sp, #48]	; 0x30
 800cfa6:	1a7f      	subs	r7, r7, r1
 800cfa8:	2f08      	cmp	r7, #8
 800cfaa:	f644 671f 	movw	r7, #19999	; 0x4e1f
 800cfae:	dc03      	bgt.n	800cfb8 <_strtod_l+0x2e0>
 800cfb0:	9908      	ldr	r1, [sp, #32]
 800cfb2:	428f      	cmp	r7, r1
 800cfb4:	bfa8      	it	ge
 800cfb6:	460f      	movge	r7, r1
 800cfb8:	f1bc 0f00 	cmp.w	ip, #0
 800cfbc:	d000      	beq.n	800cfc0 <_strtod_l+0x2e8>
 800cfbe:	427f      	negs	r7, r7
 800cfc0:	2e00      	cmp	r6, #0
 800cfc2:	d14f      	bne.n	800d064 <_strtod_l+0x38c>
 800cfc4:	9904      	ldr	r1, [sp, #16]
 800cfc6:	4301      	orrs	r1, r0
 800cfc8:	f47f aec1 	bne.w	800cd4e <_strtod_l+0x76>
 800cfcc:	2b00      	cmp	r3, #0
 800cfce:	f47f aedb 	bne.w	800cd88 <_strtod_l+0xb0>
 800cfd2:	2a69      	cmp	r2, #105	; 0x69
 800cfd4:	d029      	beq.n	800d02a <_strtod_l+0x352>
 800cfd6:	dc26      	bgt.n	800d026 <_strtod_l+0x34e>
 800cfd8:	2a49      	cmp	r2, #73	; 0x49
 800cfda:	d026      	beq.n	800d02a <_strtod_l+0x352>
 800cfdc:	2a4e      	cmp	r2, #78	; 0x4e
 800cfde:	f47f aed3 	bne.w	800cd88 <_strtod_l+0xb0>
 800cfe2:	499b      	ldr	r1, [pc, #620]	; (800d250 <_strtod_l+0x578>)
 800cfe4:	a815      	add	r0, sp, #84	; 0x54
 800cfe6:	f001 fa07 	bl	800e3f8 <__match>
 800cfea:	2800      	cmp	r0, #0
 800cfec:	f43f aecc 	beq.w	800cd88 <_strtod_l+0xb0>
 800cff0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800cff2:	781b      	ldrb	r3, [r3, #0]
 800cff4:	2b28      	cmp	r3, #40	; 0x28
 800cff6:	d12f      	bne.n	800d058 <_strtod_l+0x380>
 800cff8:	4996      	ldr	r1, [pc, #600]	; (800d254 <_strtod_l+0x57c>)
 800cffa:	aa18      	add	r2, sp, #96	; 0x60
 800cffc:	a815      	add	r0, sp, #84	; 0x54
 800cffe:	f001 fa0f 	bl	800e420 <__hexnan>
 800d002:	2805      	cmp	r0, #5
 800d004:	d128      	bne.n	800d058 <_strtod_l+0x380>
 800d006:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800d008:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 800d00c:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
 800d010:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
 800d014:	e69b      	b.n	800cd4e <_strtod_l+0x76>
 800d016:	9f08      	ldr	r7, [sp, #32]
 800d018:	210a      	movs	r1, #10
 800d01a:	fb01 2107 	mla	r1, r1, r7, r2
 800d01e:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
 800d022:	9208      	str	r2, [sp, #32]
 800d024:	e7b5      	b.n	800cf92 <_strtod_l+0x2ba>
 800d026:	2a6e      	cmp	r2, #110	; 0x6e
 800d028:	e7d9      	b.n	800cfde <_strtod_l+0x306>
 800d02a:	498b      	ldr	r1, [pc, #556]	; (800d258 <_strtod_l+0x580>)
 800d02c:	a815      	add	r0, sp, #84	; 0x54
 800d02e:	f001 f9e3 	bl	800e3f8 <__match>
 800d032:	2800      	cmp	r0, #0
 800d034:	f43f aea8 	beq.w	800cd88 <_strtod_l+0xb0>
 800d038:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d03a:	4988      	ldr	r1, [pc, #544]	; (800d25c <_strtod_l+0x584>)
 800d03c:	3b01      	subs	r3, #1
 800d03e:	a815      	add	r0, sp, #84	; 0x54
 800d040:	9315      	str	r3, [sp, #84]	; 0x54
 800d042:	f001 f9d9 	bl	800e3f8 <__match>
 800d046:	b910      	cbnz	r0, 800d04e <_strtod_l+0x376>
 800d048:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d04a:	3301      	adds	r3, #1
 800d04c:	9315      	str	r3, [sp, #84]	; 0x54
 800d04e:	f8df 921c 	ldr.w	r9, [pc, #540]	; 800d26c <_strtod_l+0x594>
 800d052:	f04f 0800 	mov.w	r8, #0
 800d056:	e67a      	b.n	800cd4e <_strtod_l+0x76>
 800d058:	4881      	ldr	r0, [pc, #516]	; (800d260 <_strtod_l+0x588>)
 800d05a:	f000 fee9 	bl	800de30 <nan>
 800d05e:	ec59 8b10 	vmov	r8, r9, d0
 800d062:	e674      	b.n	800cd4e <_strtod_l+0x76>
 800d064:	9b05      	ldr	r3, [sp, #20]
 800d066:	9809      	ldr	r0, [sp, #36]	; 0x24
 800d068:	1afb      	subs	r3, r7, r3
 800d06a:	f1bb 0f00 	cmp.w	fp, #0
 800d06e:	bf08      	it	eq
 800d070:	46b3      	moveq	fp, r6
 800d072:	2e10      	cmp	r6, #16
 800d074:	9308      	str	r3, [sp, #32]
 800d076:	4635      	mov	r5, r6
 800d078:	bfa8      	it	ge
 800d07a:	2510      	movge	r5, #16
 800d07c:	f7f3 fa42 	bl	8000504 <__aeabi_ui2d>
 800d080:	2e09      	cmp	r6, #9
 800d082:	4680      	mov	r8, r0
 800d084:	4689      	mov	r9, r1
 800d086:	dd13      	ble.n	800d0b0 <_strtod_l+0x3d8>
 800d088:	4b76      	ldr	r3, [pc, #472]	; (800d264 <_strtod_l+0x58c>)
 800d08a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d08e:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 800d092:	f7f3 fab1 	bl	80005f8 <__aeabi_dmul>
 800d096:	4680      	mov	r8, r0
 800d098:	4650      	mov	r0, sl
 800d09a:	4689      	mov	r9, r1
 800d09c:	f7f3 fa32 	bl	8000504 <__aeabi_ui2d>
 800d0a0:	4602      	mov	r2, r0
 800d0a2:	460b      	mov	r3, r1
 800d0a4:	4640      	mov	r0, r8
 800d0a6:	4649      	mov	r1, r9
 800d0a8:	f7f3 f8f0 	bl	800028c <__adddf3>
 800d0ac:	4680      	mov	r8, r0
 800d0ae:	4689      	mov	r9, r1
 800d0b0:	2e0f      	cmp	r6, #15
 800d0b2:	dc38      	bgt.n	800d126 <_strtod_l+0x44e>
 800d0b4:	9b08      	ldr	r3, [sp, #32]
 800d0b6:	2b00      	cmp	r3, #0
 800d0b8:	f43f ae49 	beq.w	800cd4e <_strtod_l+0x76>
 800d0bc:	dd24      	ble.n	800d108 <_strtod_l+0x430>
 800d0be:	2b16      	cmp	r3, #22
 800d0c0:	dc0b      	bgt.n	800d0da <_strtod_l+0x402>
 800d0c2:	4968      	ldr	r1, [pc, #416]	; (800d264 <_strtod_l+0x58c>)
 800d0c4:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800d0c8:	e9d1 0100 	ldrd	r0, r1, [r1]
 800d0cc:	4642      	mov	r2, r8
 800d0ce:	464b      	mov	r3, r9
 800d0d0:	f7f3 fa92 	bl	80005f8 <__aeabi_dmul>
 800d0d4:	4680      	mov	r8, r0
 800d0d6:	4689      	mov	r9, r1
 800d0d8:	e639      	b.n	800cd4e <_strtod_l+0x76>
 800d0da:	9a08      	ldr	r2, [sp, #32]
 800d0dc:	f1c6 0325 	rsb	r3, r6, #37	; 0x25
 800d0e0:	4293      	cmp	r3, r2
 800d0e2:	db20      	blt.n	800d126 <_strtod_l+0x44e>
 800d0e4:	4c5f      	ldr	r4, [pc, #380]	; (800d264 <_strtod_l+0x58c>)
 800d0e6:	f1c6 060f 	rsb	r6, r6, #15
 800d0ea:	eb04 01c6 	add.w	r1, r4, r6, lsl #3
 800d0ee:	4642      	mov	r2, r8
 800d0f0:	464b      	mov	r3, r9
 800d0f2:	e9d1 0100 	ldrd	r0, r1, [r1]
 800d0f6:	f7f3 fa7f 	bl	80005f8 <__aeabi_dmul>
 800d0fa:	9b08      	ldr	r3, [sp, #32]
 800d0fc:	1b9e      	subs	r6, r3, r6
 800d0fe:	eb04 04c6 	add.w	r4, r4, r6, lsl #3
 800d102:	e9d4 2300 	ldrd	r2, r3, [r4]
 800d106:	e7e3      	b.n	800d0d0 <_strtod_l+0x3f8>
 800d108:	9b08      	ldr	r3, [sp, #32]
 800d10a:	3316      	adds	r3, #22
 800d10c:	db0b      	blt.n	800d126 <_strtod_l+0x44e>
 800d10e:	9b05      	ldr	r3, [sp, #20]
 800d110:	1bdf      	subs	r7, r3, r7
 800d112:	4b54      	ldr	r3, [pc, #336]	; (800d264 <_strtod_l+0x58c>)
 800d114:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 800d118:	e9d7 2300 	ldrd	r2, r3, [r7]
 800d11c:	4640      	mov	r0, r8
 800d11e:	4649      	mov	r1, r9
 800d120:	f7f3 fb94 	bl	800084c <__aeabi_ddiv>
 800d124:	e7d6      	b.n	800d0d4 <_strtod_l+0x3fc>
 800d126:	9b08      	ldr	r3, [sp, #32]
 800d128:	1b75      	subs	r5, r6, r5
 800d12a:	441d      	add	r5, r3
 800d12c:	2d00      	cmp	r5, #0
 800d12e:	dd70      	ble.n	800d212 <_strtod_l+0x53a>
 800d130:	f015 030f 	ands.w	r3, r5, #15
 800d134:	d00a      	beq.n	800d14c <_strtod_l+0x474>
 800d136:	494b      	ldr	r1, [pc, #300]	; (800d264 <_strtod_l+0x58c>)
 800d138:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 800d13c:	4642      	mov	r2, r8
 800d13e:	464b      	mov	r3, r9
 800d140:	e9d1 0100 	ldrd	r0, r1, [r1]
 800d144:	f7f3 fa58 	bl	80005f8 <__aeabi_dmul>
 800d148:	4680      	mov	r8, r0
 800d14a:	4689      	mov	r9, r1
 800d14c:	f035 050f 	bics.w	r5, r5, #15
 800d150:	d04d      	beq.n	800d1ee <_strtod_l+0x516>
 800d152:	f5b5 7f9a 	cmp.w	r5, #308	; 0x134
 800d156:	dd22      	ble.n	800d19e <_strtod_l+0x4c6>
 800d158:	2500      	movs	r5, #0
 800d15a:	46ab      	mov	fp, r5
 800d15c:	9509      	str	r5, [sp, #36]	; 0x24
 800d15e:	9505      	str	r5, [sp, #20]
 800d160:	2322      	movs	r3, #34	; 0x22
 800d162:	f8df 9108 	ldr.w	r9, [pc, #264]	; 800d26c <_strtod_l+0x594>
 800d166:	6023      	str	r3, [r4, #0]
 800d168:	f04f 0800 	mov.w	r8, #0
 800d16c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d16e:	2b00      	cmp	r3, #0
 800d170:	f43f aded 	beq.w	800cd4e <_strtod_l+0x76>
 800d174:	9916      	ldr	r1, [sp, #88]	; 0x58
 800d176:	4620      	mov	r0, r4
 800d178:	f7ff f924 	bl	800c3c4 <_Bfree>
 800d17c:	9905      	ldr	r1, [sp, #20]
 800d17e:	4620      	mov	r0, r4
 800d180:	f7ff f920 	bl	800c3c4 <_Bfree>
 800d184:	4659      	mov	r1, fp
 800d186:	4620      	mov	r0, r4
 800d188:	f7ff f91c 	bl	800c3c4 <_Bfree>
 800d18c:	9909      	ldr	r1, [sp, #36]	; 0x24
 800d18e:	4620      	mov	r0, r4
 800d190:	f7ff f918 	bl	800c3c4 <_Bfree>
 800d194:	4629      	mov	r1, r5
 800d196:	4620      	mov	r0, r4
 800d198:	f7ff f914 	bl	800c3c4 <_Bfree>
 800d19c:	e5d7      	b.n	800cd4e <_strtod_l+0x76>
 800d19e:	4b32      	ldr	r3, [pc, #200]	; (800d268 <_strtod_l+0x590>)
 800d1a0:	9304      	str	r3, [sp, #16]
 800d1a2:	2300      	movs	r3, #0
 800d1a4:	112d      	asrs	r5, r5, #4
 800d1a6:	4640      	mov	r0, r8
 800d1a8:	4649      	mov	r1, r9
 800d1aa:	469a      	mov	sl, r3
 800d1ac:	2d01      	cmp	r5, #1
 800d1ae:	dc21      	bgt.n	800d1f4 <_strtod_l+0x51c>
 800d1b0:	b10b      	cbz	r3, 800d1b6 <_strtod_l+0x4de>
 800d1b2:	4680      	mov	r8, r0
 800d1b4:	4689      	mov	r9, r1
 800d1b6:	492c      	ldr	r1, [pc, #176]	; (800d268 <_strtod_l+0x590>)
 800d1b8:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
 800d1bc:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
 800d1c0:	4642      	mov	r2, r8
 800d1c2:	464b      	mov	r3, r9
 800d1c4:	e9d1 0100 	ldrd	r0, r1, [r1]
 800d1c8:	f7f3 fa16 	bl	80005f8 <__aeabi_dmul>
 800d1cc:	4b27      	ldr	r3, [pc, #156]	; (800d26c <_strtod_l+0x594>)
 800d1ce:	460a      	mov	r2, r1
 800d1d0:	400b      	ands	r3, r1
 800d1d2:	4927      	ldr	r1, [pc, #156]	; (800d270 <_strtod_l+0x598>)
 800d1d4:	428b      	cmp	r3, r1
 800d1d6:	4680      	mov	r8, r0
 800d1d8:	d8be      	bhi.n	800d158 <_strtod_l+0x480>
 800d1da:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 800d1de:	428b      	cmp	r3, r1
 800d1e0:	bf86      	itte	hi
 800d1e2:	f8df 9090 	ldrhi.w	r9, [pc, #144]	; 800d274 <_strtod_l+0x59c>
 800d1e6:	f04f 38ff 	movhi.w	r8, #4294967295
 800d1ea:	f102 7954 	addls.w	r9, r2, #55574528	; 0x3500000
 800d1ee:	2300      	movs	r3, #0
 800d1f0:	9304      	str	r3, [sp, #16]
 800d1f2:	e07b      	b.n	800d2ec <_strtod_l+0x614>
 800d1f4:	07ea      	lsls	r2, r5, #31
 800d1f6:	d505      	bpl.n	800d204 <_strtod_l+0x52c>
 800d1f8:	9b04      	ldr	r3, [sp, #16]
 800d1fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d1fe:	f7f3 f9fb 	bl	80005f8 <__aeabi_dmul>
 800d202:	2301      	movs	r3, #1
 800d204:	9a04      	ldr	r2, [sp, #16]
 800d206:	3208      	adds	r2, #8
 800d208:	f10a 0a01 	add.w	sl, sl, #1
 800d20c:	106d      	asrs	r5, r5, #1
 800d20e:	9204      	str	r2, [sp, #16]
 800d210:	e7cc      	b.n	800d1ac <_strtod_l+0x4d4>
 800d212:	d0ec      	beq.n	800d1ee <_strtod_l+0x516>
 800d214:	426d      	negs	r5, r5
 800d216:	f015 020f 	ands.w	r2, r5, #15
 800d21a:	d00a      	beq.n	800d232 <_strtod_l+0x55a>
 800d21c:	4b11      	ldr	r3, [pc, #68]	; (800d264 <_strtod_l+0x58c>)
 800d21e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800d222:	4640      	mov	r0, r8
 800d224:	4649      	mov	r1, r9
 800d226:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d22a:	f7f3 fb0f 	bl	800084c <__aeabi_ddiv>
 800d22e:	4680      	mov	r8, r0
 800d230:	4689      	mov	r9, r1
 800d232:	112d      	asrs	r5, r5, #4
 800d234:	d0db      	beq.n	800d1ee <_strtod_l+0x516>
 800d236:	2d1f      	cmp	r5, #31
 800d238:	dd1e      	ble.n	800d278 <_strtod_l+0x5a0>
 800d23a:	2500      	movs	r5, #0
 800d23c:	46ab      	mov	fp, r5
 800d23e:	9509      	str	r5, [sp, #36]	; 0x24
 800d240:	9505      	str	r5, [sp, #20]
 800d242:	2322      	movs	r3, #34	; 0x22
 800d244:	f04f 0800 	mov.w	r8, #0
 800d248:	f04f 0900 	mov.w	r9, #0
 800d24c:	6023      	str	r3, [r4, #0]
 800d24e:	e78d      	b.n	800d16c <_strtod_l+0x494>
 800d250:	08011dfd 	.word	0x08011dfd
 800d254:	08012024 	.word	0x08012024
 800d258:	08011df5 	.word	0x08011df5
 800d25c:	08011e2c 	.word	0x08011e2c
 800d260:	080121b5 	.word	0x080121b5
 800d264:	08011f38 	.word	0x08011f38
 800d268:	08011f10 	.word	0x08011f10
 800d26c:	7ff00000 	.word	0x7ff00000
 800d270:	7ca00000 	.word	0x7ca00000
 800d274:	7fefffff 	.word	0x7fefffff
 800d278:	f015 0310 	ands.w	r3, r5, #16
 800d27c:	bf18      	it	ne
 800d27e:	236a      	movne	r3, #106	; 0x6a
 800d280:	f8df a3a0 	ldr.w	sl, [pc, #928]	; 800d624 <_strtod_l+0x94c>
 800d284:	9304      	str	r3, [sp, #16]
 800d286:	4640      	mov	r0, r8
 800d288:	4649      	mov	r1, r9
 800d28a:	2300      	movs	r3, #0
 800d28c:	07ea      	lsls	r2, r5, #31
 800d28e:	d504      	bpl.n	800d29a <_strtod_l+0x5c2>
 800d290:	e9da 2300 	ldrd	r2, r3, [sl]
 800d294:	f7f3 f9b0 	bl	80005f8 <__aeabi_dmul>
 800d298:	2301      	movs	r3, #1
 800d29a:	106d      	asrs	r5, r5, #1
 800d29c:	f10a 0a08 	add.w	sl, sl, #8
 800d2a0:	d1f4      	bne.n	800d28c <_strtod_l+0x5b4>
 800d2a2:	b10b      	cbz	r3, 800d2a8 <_strtod_l+0x5d0>
 800d2a4:	4680      	mov	r8, r0
 800d2a6:	4689      	mov	r9, r1
 800d2a8:	9b04      	ldr	r3, [sp, #16]
 800d2aa:	b1bb      	cbz	r3, 800d2dc <_strtod_l+0x604>
 800d2ac:	f3c9 520a 	ubfx	r2, r9, #20, #11
 800d2b0:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 800d2b4:	2b00      	cmp	r3, #0
 800d2b6:	4649      	mov	r1, r9
 800d2b8:	dd10      	ble.n	800d2dc <_strtod_l+0x604>
 800d2ba:	2b1f      	cmp	r3, #31
 800d2bc:	f340 811e 	ble.w	800d4fc <_strtod_l+0x824>
 800d2c0:	2b34      	cmp	r3, #52	; 0x34
 800d2c2:	bfde      	ittt	le
 800d2c4:	f04f 33ff 	movle.w	r3, #4294967295
 800d2c8:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 800d2cc:	4093      	lslle	r3, r2
 800d2ce:	f04f 0800 	mov.w	r8, #0
 800d2d2:	bfcc      	ite	gt
 800d2d4:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
 800d2d8:	ea03 0901 	andle.w	r9, r3, r1
 800d2dc:	2200      	movs	r2, #0
 800d2de:	2300      	movs	r3, #0
 800d2e0:	4640      	mov	r0, r8
 800d2e2:	4649      	mov	r1, r9
 800d2e4:	f7f3 fbf0 	bl	8000ac8 <__aeabi_dcmpeq>
 800d2e8:	2800      	cmp	r0, #0
 800d2ea:	d1a6      	bne.n	800d23a <_strtod_l+0x562>
 800d2ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d2ee:	9300      	str	r3, [sp, #0]
 800d2f0:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800d2f2:	4633      	mov	r3, r6
 800d2f4:	465a      	mov	r2, fp
 800d2f6:	4620      	mov	r0, r4
 800d2f8:	f7ff f8cc 	bl	800c494 <__s2b>
 800d2fc:	9009      	str	r0, [sp, #36]	; 0x24
 800d2fe:	2800      	cmp	r0, #0
 800d300:	f43f af2a 	beq.w	800d158 <_strtod_l+0x480>
 800d304:	9a08      	ldr	r2, [sp, #32]
 800d306:	9b05      	ldr	r3, [sp, #20]
 800d308:	2a00      	cmp	r2, #0
 800d30a:	eba3 0307 	sub.w	r3, r3, r7
 800d30e:	bfa8      	it	ge
 800d310:	2300      	movge	r3, #0
 800d312:	930c      	str	r3, [sp, #48]	; 0x30
 800d314:	2500      	movs	r5, #0
 800d316:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 800d31a:	9312      	str	r3, [sp, #72]	; 0x48
 800d31c:	46ab      	mov	fp, r5
 800d31e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d320:	4620      	mov	r0, r4
 800d322:	6859      	ldr	r1, [r3, #4]
 800d324:	f7ff f80e 	bl	800c344 <_Balloc>
 800d328:	9005      	str	r0, [sp, #20]
 800d32a:	2800      	cmp	r0, #0
 800d32c:	f43f af18 	beq.w	800d160 <_strtod_l+0x488>
 800d330:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d332:	691a      	ldr	r2, [r3, #16]
 800d334:	3202      	adds	r2, #2
 800d336:	f103 010c 	add.w	r1, r3, #12
 800d33a:	0092      	lsls	r2, r2, #2
 800d33c:	300c      	adds	r0, #12
 800d33e:	f7fe f924 	bl	800b58a <memcpy>
 800d342:	ec49 8b10 	vmov	d0, r8, r9
 800d346:	aa18      	add	r2, sp, #96	; 0x60
 800d348:	a917      	add	r1, sp, #92	; 0x5c
 800d34a:	4620      	mov	r0, r4
 800d34c:	f7ff fbd6 	bl	800cafc <__d2b>
 800d350:	ec49 8b18 	vmov	d8, r8, r9
 800d354:	9016      	str	r0, [sp, #88]	; 0x58
 800d356:	2800      	cmp	r0, #0
 800d358:	f43f af02 	beq.w	800d160 <_strtod_l+0x488>
 800d35c:	2101      	movs	r1, #1
 800d35e:	4620      	mov	r0, r4
 800d360:	f7ff f930 	bl	800c5c4 <__i2b>
 800d364:	4683      	mov	fp, r0
 800d366:	2800      	cmp	r0, #0
 800d368:	f43f aefa 	beq.w	800d160 <_strtod_l+0x488>
 800d36c:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 800d36e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 800d370:	2e00      	cmp	r6, #0
 800d372:	bfab      	itete	ge
 800d374:	9b0c      	ldrge	r3, [sp, #48]	; 0x30
 800d376:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
 800d378:	9f12      	ldrge	r7, [sp, #72]	; 0x48
 800d37a:	f8dd a030 	ldrlt.w	sl, [sp, #48]	; 0x30
 800d37e:	bfac      	ite	ge
 800d380:	eb06 0a03 	addge.w	sl, r6, r3
 800d384:	1b9f      	sublt	r7, r3, r6
 800d386:	9b04      	ldr	r3, [sp, #16]
 800d388:	1af6      	subs	r6, r6, r3
 800d38a:	4416      	add	r6, r2
 800d38c:	4ba0      	ldr	r3, [pc, #640]	; (800d610 <_strtod_l+0x938>)
 800d38e:	3e01      	subs	r6, #1
 800d390:	429e      	cmp	r6, r3
 800d392:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 800d396:	f280 80c4 	bge.w	800d522 <_strtod_l+0x84a>
 800d39a:	1b9b      	subs	r3, r3, r6
 800d39c:	2b1f      	cmp	r3, #31
 800d39e:	eba2 0203 	sub.w	r2, r2, r3
 800d3a2:	f04f 0101 	mov.w	r1, #1
 800d3a6:	f300 80b0 	bgt.w	800d50a <_strtod_l+0x832>
 800d3aa:	fa01 f303 	lsl.w	r3, r1, r3
 800d3ae:	930e      	str	r3, [sp, #56]	; 0x38
 800d3b0:	2300      	movs	r3, #0
 800d3b2:	930d      	str	r3, [sp, #52]	; 0x34
 800d3b4:	eb0a 0602 	add.w	r6, sl, r2
 800d3b8:	9b04      	ldr	r3, [sp, #16]
 800d3ba:	45b2      	cmp	sl, r6
 800d3bc:	4417      	add	r7, r2
 800d3be:	441f      	add	r7, r3
 800d3c0:	4653      	mov	r3, sl
 800d3c2:	bfa8      	it	ge
 800d3c4:	4633      	movge	r3, r6
 800d3c6:	42bb      	cmp	r3, r7
 800d3c8:	bfa8      	it	ge
 800d3ca:	463b      	movge	r3, r7
 800d3cc:	2b00      	cmp	r3, #0
 800d3ce:	bfc2      	ittt	gt
 800d3d0:	1af6      	subgt	r6, r6, r3
 800d3d2:	1aff      	subgt	r7, r7, r3
 800d3d4:	ebaa 0a03 	subgt.w	sl, sl, r3
 800d3d8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800d3da:	2b00      	cmp	r3, #0
 800d3dc:	dd17      	ble.n	800d40e <_strtod_l+0x736>
 800d3de:	4659      	mov	r1, fp
 800d3e0:	461a      	mov	r2, r3
 800d3e2:	4620      	mov	r0, r4
 800d3e4:	f7ff f9ae 	bl	800c744 <__pow5mult>
 800d3e8:	4683      	mov	fp, r0
 800d3ea:	2800      	cmp	r0, #0
 800d3ec:	f43f aeb8 	beq.w	800d160 <_strtod_l+0x488>
 800d3f0:	4601      	mov	r1, r0
 800d3f2:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800d3f4:	4620      	mov	r0, r4
 800d3f6:	f7ff f8fb 	bl	800c5f0 <__multiply>
 800d3fa:	900b      	str	r0, [sp, #44]	; 0x2c
 800d3fc:	2800      	cmp	r0, #0
 800d3fe:	f43f aeaf 	beq.w	800d160 <_strtod_l+0x488>
 800d402:	9916      	ldr	r1, [sp, #88]	; 0x58
 800d404:	4620      	mov	r0, r4
 800d406:	f7fe ffdd 	bl	800c3c4 <_Bfree>
 800d40a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d40c:	9316      	str	r3, [sp, #88]	; 0x58
 800d40e:	2e00      	cmp	r6, #0
 800d410:	f300 808c 	bgt.w	800d52c <_strtod_l+0x854>
 800d414:	9b08      	ldr	r3, [sp, #32]
 800d416:	2b00      	cmp	r3, #0
 800d418:	dd08      	ble.n	800d42c <_strtod_l+0x754>
 800d41a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800d41c:	9905      	ldr	r1, [sp, #20]
 800d41e:	4620      	mov	r0, r4
 800d420:	f7ff f990 	bl	800c744 <__pow5mult>
 800d424:	9005      	str	r0, [sp, #20]
 800d426:	2800      	cmp	r0, #0
 800d428:	f43f ae9a 	beq.w	800d160 <_strtod_l+0x488>
 800d42c:	2f00      	cmp	r7, #0
 800d42e:	dd08      	ble.n	800d442 <_strtod_l+0x76a>
 800d430:	9905      	ldr	r1, [sp, #20]
 800d432:	463a      	mov	r2, r7
 800d434:	4620      	mov	r0, r4
 800d436:	f7ff f9df 	bl	800c7f8 <__lshift>
 800d43a:	9005      	str	r0, [sp, #20]
 800d43c:	2800      	cmp	r0, #0
 800d43e:	f43f ae8f 	beq.w	800d160 <_strtod_l+0x488>
 800d442:	f1ba 0f00 	cmp.w	sl, #0
 800d446:	dd08      	ble.n	800d45a <_strtod_l+0x782>
 800d448:	4659      	mov	r1, fp
 800d44a:	4652      	mov	r2, sl
 800d44c:	4620      	mov	r0, r4
 800d44e:	f7ff f9d3 	bl	800c7f8 <__lshift>
 800d452:	4683      	mov	fp, r0
 800d454:	2800      	cmp	r0, #0
 800d456:	f43f ae83 	beq.w	800d160 <_strtod_l+0x488>
 800d45a:	9a05      	ldr	r2, [sp, #20]
 800d45c:	9916      	ldr	r1, [sp, #88]	; 0x58
 800d45e:	4620      	mov	r0, r4
 800d460:	f7ff fa52 	bl	800c908 <__mdiff>
 800d464:	4605      	mov	r5, r0
 800d466:	2800      	cmp	r0, #0
 800d468:	f43f ae7a 	beq.w	800d160 <_strtod_l+0x488>
 800d46c:	68c3      	ldr	r3, [r0, #12]
 800d46e:	930b      	str	r3, [sp, #44]	; 0x2c
 800d470:	2300      	movs	r3, #0
 800d472:	60c3      	str	r3, [r0, #12]
 800d474:	4659      	mov	r1, fp
 800d476:	f7ff fa2b 	bl	800c8d0 <__mcmp>
 800d47a:	2800      	cmp	r0, #0
 800d47c:	da60      	bge.n	800d540 <_strtod_l+0x868>
 800d47e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d480:	ea53 0308 	orrs.w	r3, r3, r8
 800d484:	f040 8084 	bne.w	800d590 <_strtod_l+0x8b8>
 800d488:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800d48c:	2b00      	cmp	r3, #0
 800d48e:	d17f      	bne.n	800d590 <_strtod_l+0x8b8>
 800d490:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800d494:	0d1b      	lsrs	r3, r3, #20
 800d496:	051b      	lsls	r3, r3, #20
 800d498:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 800d49c:	d978      	bls.n	800d590 <_strtod_l+0x8b8>
 800d49e:	696b      	ldr	r3, [r5, #20]
 800d4a0:	b913      	cbnz	r3, 800d4a8 <_strtod_l+0x7d0>
 800d4a2:	692b      	ldr	r3, [r5, #16]
 800d4a4:	2b01      	cmp	r3, #1
 800d4a6:	dd73      	ble.n	800d590 <_strtod_l+0x8b8>
 800d4a8:	4629      	mov	r1, r5
 800d4aa:	2201      	movs	r2, #1
 800d4ac:	4620      	mov	r0, r4
 800d4ae:	f7ff f9a3 	bl	800c7f8 <__lshift>
 800d4b2:	4659      	mov	r1, fp
 800d4b4:	4605      	mov	r5, r0
 800d4b6:	f7ff fa0b 	bl	800c8d0 <__mcmp>
 800d4ba:	2800      	cmp	r0, #0
 800d4bc:	dd68      	ble.n	800d590 <_strtod_l+0x8b8>
 800d4be:	9904      	ldr	r1, [sp, #16]
 800d4c0:	4a54      	ldr	r2, [pc, #336]	; (800d614 <_strtod_l+0x93c>)
 800d4c2:	464b      	mov	r3, r9
 800d4c4:	2900      	cmp	r1, #0
 800d4c6:	f000 8084 	beq.w	800d5d2 <_strtod_l+0x8fa>
 800d4ca:	ea02 0109 	and.w	r1, r2, r9
 800d4ce:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 800d4d2:	dc7e      	bgt.n	800d5d2 <_strtod_l+0x8fa>
 800d4d4:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 800d4d8:	f77f aeb3 	ble.w	800d242 <_strtod_l+0x56a>
 800d4dc:	4b4e      	ldr	r3, [pc, #312]	; (800d618 <_strtod_l+0x940>)
 800d4de:	4640      	mov	r0, r8
 800d4e0:	4649      	mov	r1, r9
 800d4e2:	2200      	movs	r2, #0
 800d4e4:	f7f3 f888 	bl	80005f8 <__aeabi_dmul>
 800d4e8:	4b4a      	ldr	r3, [pc, #296]	; (800d614 <_strtod_l+0x93c>)
 800d4ea:	400b      	ands	r3, r1
 800d4ec:	4680      	mov	r8, r0
 800d4ee:	4689      	mov	r9, r1
 800d4f0:	2b00      	cmp	r3, #0
 800d4f2:	f47f ae3f 	bne.w	800d174 <_strtod_l+0x49c>
 800d4f6:	2322      	movs	r3, #34	; 0x22
 800d4f8:	6023      	str	r3, [r4, #0]
 800d4fa:	e63b      	b.n	800d174 <_strtod_l+0x49c>
 800d4fc:	f04f 32ff 	mov.w	r2, #4294967295
 800d500:	fa02 f303 	lsl.w	r3, r2, r3
 800d504:	ea03 0808 	and.w	r8, r3, r8
 800d508:	e6e8      	b.n	800d2dc <_strtod_l+0x604>
 800d50a:	f1c6 467f 	rsb	r6, r6, #4278190080	; 0xff000000
 800d50e:	f506 067f 	add.w	r6, r6, #16711680	; 0xff0000
 800d512:	f506 467b 	add.w	r6, r6, #64256	; 0xfb00
 800d516:	36e2      	adds	r6, #226	; 0xe2
 800d518:	fa01 f306 	lsl.w	r3, r1, r6
 800d51c:	e9cd 310d 	strd	r3, r1, [sp, #52]	; 0x34
 800d520:	e748      	b.n	800d3b4 <_strtod_l+0x6dc>
 800d522:	2100      	movs	r1, #0
 800d524:	2301      	movs	r3, #1
 800d526:	e9cd 130d 	strd	r1, r3, [sp, #52]	; 0x34
 800d52a:	e743      	b.n	800d3b4 <_strtod_l+0x6dc>
 800d52c:	9916      	ldr	r1, [sp, #88]	; 0x58
 800d52e:	4632      	mov	r2, r6
 800d530:	4620      	mov	r0, r4
 800d532:	f7ff f961 	bl	800c7f8 <__lshift>
 800d536:	9016      	str	r0, [sp, #88]	; 0x58
 800d538:	2800      	cmp	r0, #0
 800d53a:	f47f af6b 	bne.w	800d414 <_strtod_l+0x73c>
 800d53e:	e60f      	b.n	800d160 <_strtod_l+0x488>
 800d540:	46ca      	mov	sl, r9
 800d542:	d171      	bne.n	800d628 <_strtod_l+0x950>
 800d544:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d546:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800d54a:	b352      	cbz	r2, 800d5a2 <_strtod_l+0x8ca>
 800d54c:	4a33      	ldr	r2, [pc, #204]	; (800d61c <_strtod_l+0x944>)
 800d54e:	4293      	cmp	r3, r2
 800d550:	d12a      	bne.n	800d5a8 <_strtod_l+0x8d0>
 800d552:	9b04      	ldr	r3, [sp, #16]
 800d554:	4641      	mov	r1, r8
 800d556:	b1fb      	cbz	r3, 800d598 <_strtod_l+0x8c0>
 800d558:	4b2e      	ldr	r3, [pc, #184]	; (800d614 <_strtod_l+0x93c>)
 800d55a:	ea09 0303 	and.w	r3, r9, r3
 800d55e:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 800d562:	f04f 32ff 	mov.w	r2, #4294967295
 800d566:	d81a      	bhi.n	800d59e <_strtod_l+0x8c6>
 800d568:	0d1b      	lsrs	r3, r3, #20
 800d56a:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 800d56e:	fa02 f303 	lsl.w	r3, r2, r3
 800d572:	4299      	cmp	r1, r3
 800d574:	d118      	bne.n	800d5a8 <_strtod_l+0x8d0>
 800d576:	4b2a      	ldr	r3, [pc, #168]	; (800d620 <_strtod_l+0x948>)
 800d578:	459a      	cmp	sl, r3
 800d57a:	d102      	bne.n	800d582 <_strtod_l+0x8aa>
 800d57c:	3101      	adds	r1, #1
 800d57e:	f43f adef 	beq.w	800d160 <_strtod_l+0x488>
 800d582:	4b24      	ldr	r3, [pc, #144]	; (800d614 <_strtod_l+0x93c>)
 800d584:	ea0a 0303 	and.w	r3, sl, r3
 800d588:	f503 1980 	add.w	r9, r3, #1048576	; 0x100000
 800d58c:	f04f 0800 	mov.w	r8, #0
 800d590:	9b04      	ldr	r3, [sp, #16]
 800d592:	2b00      	cmp	r3, #0
 800d594:	d1a2      	bne.n	800d4dc <_strtod_l+0x804>
 800d596:	e5ed      	b.n	800d174 <_strtod_l+0x49c>
 800d598:	f04f 33ff 	mov.w	r3, #4294967295
 800d59c:	e7e9      	b.n	800d572 <_strtod_l+0x89a>
 800d59e:	4613      	mov	r3, r2
 800d5a0:	e7e7      	b.n	800d572 <_strtod_l+0x89a>
 800d5a2:	ea53 0308 	orrs.w	r3, r3, r8
 800d5a6:	d08a      	beq.n	800d4be <_strtod_l+0x7e6>
 800d5a8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d5aa:	b1e3      	cbz	r3, 800d5e6 <_strtod_l+0x90e>
 800d5ac:	ea13 0f0a 	tst.w	r3, sl
 800d5b0:	d0ee      	beq.n	800d590 <_strtod_l+0x8b8>
 800d5b2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d5b4:	9a04      	ldr	r2, [sp, #16]
 800d5b6:	4640      	mov	r0, r8
 800d5b8:	4649      	mov	r1, r9
 800d5ba:	b1c3      	cbz	r3, 800d5ee <_strtod_l+0x916>
 800d5bc:	f7ff fb6f 	bl	800cc9e <sulp>
 800d5c0:	4602      	mov	r2, r0
 800d5c2:	460b      	mov	r3, r1
 800d5c4:	ec51 0b18 	vmov	r0, r1, d8
 800d5c8:	f7f2 fe60 	bl	800028c <__adddf3>
 800d5cc:	4680      	mov	r8, r0
 800d5ce:	4689      	mov	r9, r1
 800d5d0:	e7de      	b.n	800d590 <_strtod_l+0x8b8>
 800d5d2:	4013      	ands	r3, r2
 800d5d4:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 800d5d8:	ea6f 5913 	mvn.w	r9, r3, lsr #20
 800d5dc:	ea6f 5909 	mvn.w	r9, r9, lsl #20
 800d5e0:	f04f 38ff 	mov.w	r8, #4294967295
 800d5e4:	e7d4      	b.n	800d590 <_strtod_l+0x8b8>
 800d5e6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800d5e8:	ea13 0f08 	tst.w	r3, r8
 800d5ec:	e7e0      	b.n	800d5b0 <_strtod_l+0x8d8>
 800d5ee:	f7ff fb56 	bl	800cc9e <sulp>
 800d5f2:	4602      	mov	r2, r0
 800d5f4:	460b      	mov	r3, r1
 800d5f6:	ec51 0b18 	vmov	r0, r1, d8
 800d5fa:	f7f2 fe45 	bl	8000288 <__aeabi_dsub>
 800d5fe:	2200      	movs	r2, #0
 800d600:	2300      	movs	r3, #0
 800d602:	4680      	mov	r8, r0
 800d604:	4689      	mov	r9, r1
 800d606:	f7f3 fa5f 	bl	8000ac8 <__aeabi_dcmpeq>
 800d60a:	2800      	cmp	r0, #0
 800d60c:	d0c0      	beq.n	800d590 <_strtod_l+0x8b8>
 800d60e:	e618      	b.n	800d242 <_strtod_l+0x56a>
 800d610:	fffffc02 	.word	0xfffffc02
 800d614:	7ff00000 	.word	0x7ff00000
 800d618:	39500000 	.word	0x39500000
 800d61c:	000fffff 	.word	0x000fffff
 800d620:	7fefffff 	.word	0x7fefffff
 800d624:	08012038 	.word	0x08012038
 800d628:	4659      	mov	r1, fp
 800d62a:	4628      	mov	r0, r5
 800d62c:	f7ff fac0 	bl	800cbb0 <__ratio>
 800d630:	ec57 6b10 	vmov	r6, r7, d0
 800d634:	ee10 0a10 	vmov	r0, s0
 800d638:	2200      	movs	r2, #0
 800d63a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800d63e:	4639      	mov	r1, r7
 800d640:	f7f3 fa56 	bl	8000af0 <__aeabi_dcmple>
 800d644:	2800      	cmp	r0, #0
 800d646:	d071      	beq.n	800d72c <_strtod_l+0xa54>
 800d648:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d64a:	2b00      	cmp	r3, #0
 800d64c:	d17c      	bne.n	800d748 <_strtod_l+0xa70>
 800d64e:	f1b8 0f00 	cmp.w	r8, #0
 800d652:	d15a      	bne.n	800d70a <_strtod_l+0xa32>
 800d654:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800d658:	2b00      	cmp	r3, #0
 800d65a:	d15d      	bne.n	800d718 <_strtod_l+0xa40>
 800d65c:	4b90      	ldr	r3, [pc, #576]	; (800d8a0 <_strtod_l+0xbc8>)
 800d65e:	2200      	movs	r2, #0
 800d660:	4630      	mov	r0, r6
 800d662:	4639      	mov	r1, r7
 800d664:	f7f3 fa3a 	bl	8000adc <__aeabi_dcmplt>
 800d668:	2800      	cmp	r0, #0
 800d66a:	d15c      	bne.n	800d726 <_strtod_l+0xa4e>
 800d66c:	4630      	mov	r0, r6
 800d66e:	4639      	mov	r1, r7
 800d670:	4b8c      	ldr	r3, [pc, #560]	; (800d8a4 <_strtod_l+0xbcc>)
 800d672:	2200      	movs	r2, #0
 800d674:	f7f2 ffc0 	bl	80005f8 <__aeabi_dmul>
 800d678:	4606      	mov	r6, r0
 800d67a:	460f      	mov	r7, r1
 800d67c:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
 800d680:	9606      	str	r6, [sp, #24]
 800d682:	9307      	str	r3, [sp, #28]
 800d684:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800d688:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 800d68c:	4b86      	ldr	r3, [pc, #536]	; (800d8a8 <_strtod_l+0xbd0>)
 800d68e:	ea0a 0303 	and.w	r3, sl, r3
 800d692:	930d      	str	r3, [sp, #52]	; 0x34
 800d694:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800d696:	4b85      	ldr	r3, [pc, #532]	; (800d8ac <_strtod_l+0xbd4>)
 800d698:	429a      	cmp	r2, r3
 800d69a:	f040 8090 	bne.w	800d7be <_strtod_l+0xae6>
 800d69e:	f1aa 7954 	sub.w	r9, sl, #55574528	; 0x3500000
 800d6a2:	ec49 8b10 	vmov	d0, r8, r9
 800d6a6:	f7ff f9b9 	bl	800ca1c <__ulp>
 800d6aa:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800d6ae:	ec51 0b10 	vmov	r0, r1, d0
 800d6b2:	f7f2 ffa1 	bl	80005f8 <__aeabi_dmul>
 800d6b6:	4642      	mov	r2, r8
 800d6b8:	464b      	mov	r3, r9
 800d6ba:	f7f2 fde7 	bl	800028c <__adddf3>
 800d6be:	460b      	mov	r3, r1
 800d6c0:	4979      	ldr	r1, [pc, #484]	; (800d8a8 <_strtod_l+0xbd0>)
 800d6c2:	4a7b      	ldr	r2, [pc, #492]	; (800d8b0 <_strtod_l+0xbd8>)
 800d6c4:	4019      	ands	r1, r3
 800d6c6:	4291      	cmp	r1, r2
 800d6c8:	4680      	mov	r8, r0
 800d6ca:	d944      	bls.n	800d756 <_strtod_l+0xa7e>
 800d6cc:	ee18 2a90 	vmov	r2, s17
 800d6d0:	4b78      	ldr	r3, [pc, #480]	; (800d8b4 <_strtod_l+0xbdc>)
 800d6d2:	429a      	cmp	r2, r3
 800d6d4:	d104      	bne.n	800d6e0 <_strtod_l+0xa08>
 800d6d6:	ee18 3a10 	vmov	r3, s16
 800d6da:	3301      	adds	r3, #1
 800d6dc:	f43f ad40 	beq.w	800d160 <_strtod_l+0x488>
 800d6e0:	f8df 91d0 	ldr.w	r9, [pc, #464]	; 800d8b4 <_strtod_l+0xbdc>
 800d6e4:	f04f 38ff 	mov.w	r8, #4294967295
 800d6e8:	9916      	ldr	r1, [sp, #88]	; 0x58
 800d6ea:	4620      	mov	r0, r4
 800d6ec:	f7fe fe6a 	bl	800c3c4 <_Bfree>
 800d6f0:	9905      	ldr	r1, [sp, #20]
 800d6f2:	4620      	mov	r0, r4
 800d6f4:	f7fe fe66 	bl	800c3c4 <_Bfree>
 800d6f8:	4659      	mov	r1, fp
 800d6fa:	4620      	mov	r0, r4
 800d6fc:	f7fe fe62 	bl	800c3c4 <_Bfree>
 800d700:	4629      	mov	r1, r5
 800d702:	4620      	mov	r0, r4
 800d704:	f7fe fe5e 	bl	800c3c4 <_Bfree>
 800d708:	e609      	b.n	800d31e <_strtod_l+0x646>
 800d70a:	f1b8 0f01 	cmp.w	r8, #1
 800d70e:	d103      	bne.n	800d718 <_strtod_l+0xa40>
 800d710:	f1b9 0f00 	cmp.w	r9, #0
 800d714:	f43f ad95 	beq.w	800d242 <_strtod_l+0x56a>
 800d718:	ed9f 7b55 	vldr	d7, [pc, #340]	; 800d870 <_strtod_l+0xb98>
 800d71c:	4f60      	ldr	r7, [pc, #384]	; (800d8a0 <_strtod_l+0xbc8>)
 800d71e:	ed8d 7b06 	vstr	d7, [sp, #24]
 800d722:	2600      	movs	r6, #0
 800d724:	e7ae      	b.n	800d684 <_strtod_l+0x9ac>
 800d726:	4f5f      	ldr	r7, [pc, #380]	; (800d8a4 <_strtod_l+0xbcc>)
 800d728:	2600      	movs	r6, #0
 800d72a:	e7a7      	b.n	800d67c <_strtod_l+0x9a4>
 800d72c:	4b5d      	ldr	r3, [pc, #372]	; (800d8a4 <_strtod_l+0xbcc>)
 800d72e:	4630      	mov	r0, r6
 800d730:	4639      	mov	r1, r7
 800d732:	2200      	movs	r2, #0
 800d734:	f7f2 ff60 	bl	80005f8 <__aeabi_dmul>
 800d738:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d73a:	4606      	mov	r6, r0
 800d73c:	460f      	mov	r7, r1
 800d73e:	2b00      	cmp	r3, #0
 800d740:	d09c      	beq.n	800d67c <_strtod_l+0x9a4>
 800d742:	e9cd 6706 	strd	r6, r7, [sp, #24]
 800d746:	e79d      	b.n	800d684 <_strtod_l+0x9ac>
 800d748:	ed9f 7b4b 	vldr	d7, [pc, #300]	; 800d878 <_strtod_l+0xba0>
 800d74c:	ed8d 7b06 	vstr	d7, [sp, #24]
 800d750:	ec57 6b17 	vmov	r6, r7, d7
 800d754:	e796      	b.n	800d684 <_strtod_l+0x9ac>
 800d756:	f103 7954 	add.w	r9, r3, #55574528	; 0x3500000
 800d75a:	9b04      	ldr	r3, [sp, #16]
 800d75c:	46ca      	mov	sl, r9
 800d75e:	2b00      	cmp	r3, #0
 800d760:	d1c2      	bne.n	800d6e8 <_strtod_l+0xa10>
 800d762:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800d766:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800d768:	0d1b      	lsrs	r3, r3, #20
 800d76a:	051b      	lsls	r3, r3, #20
 800d76c:	429a      	cmp	r2, r3
 800d76e:	d1bb      	bne.n	800d6e8 <_strtod_l+0xa10>
 800d770:	4630      	mov	r0, r6
 800d772:	4639      	mov	r1, r7
 800d774:	f7f3 faa0 	bl	8000cb8 <__aeabi_d2lz>
 800d778:	f7f2 ff10 	bl	800059c <__aeabi_l2d>
 800d77c:	4602      	mov	r2, r0
 800d77e:	460b      	mov	r3, r1
 800d780:	4630      	mov	r0, r6
 800d782:	4639      	mov	r1, r7
 800d784:	f7f2 fd80 	bl	8000288 <__aeabi_dsub>
 800d788:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d78a:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800d78e:	ea43 0308 	orr.w	r3, r3, r8
 800d792:	4313      	orrs	r3, r2
 800d794:	4606      	mov	r6, r0
 800d796:	460f      	mov	r7, r1
 800d798:	d054      	beq.n	800d844 <_strtod_l+0xb6c>
 800d79a:	a339      	add	r3, pc, #228	; (adr r3, 800d880 <_strtod_l+0xba8>)
 800d79c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d7a0:	f7f3 f99c 	bl	8000adc <__aeabi_dcmplt>
 800d7a4:	2800      	cmp	r0, #0
 800d7a6:	f47f ace5 	bne.w	800d174 <_strtod_l+0x49c>
 800d7aa:	a337      	add	r3, pc, #220	; (adr r3, 800d888 <_strtod_l+0xbb0>)
 800d7ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d7b0:	4630      	mov	r0, r6
 800d7b2:	4639      	mov	r1, r7
 800d7b4:	f7f3 f9b0 	bl	8000b18 <__aeabi_dcmpgt>
 800d7b8:	2800      	cmp	r0, #0
 800d7ba:	d095      	beq.n	800d6e8 <_strtod_l+0xa10>
 800d7bc:	e4da      	b.n	800d174 <_strtod_l+0x49c>
 800d7be:	9b04      	ldr	r3, [sp, #16]
 800d7c0:	b333      	cbz	r3, 800d810 <_strtod_l+0xb38>
 800d7c2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800d7c4:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 800d7c8:	d822      	bhi.n	800d810 <_strtod_l+0xb38>
 800d7ca:	a331      	add	r3, pc, #196	; (adr r3, 800d890 <_strtod_l+0xbb8>)
 800d7cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d7d0:	4630      	mov	r0, r6
 800d7d2:	4639      	mov	r1, r7
 800d7d4:	f7f3 f98c 	bl	8000af0 <__aeabi_dcmple>
 800d7d8:	b1a0      	cbz	r0, 800d804 <_strtod_l+0xb2c>
 800d7da:	4639      	mov	r1, r7
 800d7dc:	4630      	mov	r0, r6
 800d7de:	f7f3 f9e3 	bl	8000ba8 <__aeabi_d2uiz>
 800d7e2:	2801      	cmp	r0, #1
 800d7e4:	bf38      	it	cc
 800d7e6:	2001      	movcc	r0, #1
 800d7e8:	f7f2 fe8c 	bl	8000504 <__aeabi_ui2d>
 800d7ec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800d7ee:	4606      	mov	r6, r0
 800d7f0:	460f      	mov	r7, r1
 800d7f2:	bb23      	cbnz	r3, 800d83e <_strtod_l+0xb66>
 800d7f4:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800d7f8:	9010      	str	r0, [sp, #64]	; 0x40
 800d7fa:	9311      	str	r3, [sp, #68]	; 0x44
 800d7fc:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 800d800:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 800d804:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800d806:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800d808:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 800d80c:	1a9b      	subs	r3, r3, r2
 800d80e:	930f      	str	r3, [sp, #60]	; 0x3c
 800d810:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 800d814:	eeb0 0a48 	vmov.f32	s0, s16
 800d818:	eef0 0a68 	vmov.f32	s1, s17
 800d81c:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
 800d820:	f7ff f8fc 	bl	800ca1c <__ulp>
 800d824:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 800d828:	ec53 2b10 	vmov	r2, r3, d0
 800d82c:	f7f2 fee4 	bl	80005f8 <__aeabi_dmul>
 800d830:	ec53 2b18 	vmov	r2, r3, d8
 800d834:	f7f2 fd2a 	bl	800028c <__adddf3>
 800d838:	4680      	mov	r8, r0
 800d83a:	4689      	mov	r9, r1
 800d83c:	e78d      	b.n	800d75a <_strtod_l+0xa82>
 800d83e:	e9cd 6710 	strd	r6, r7, [sp, #64]	; 0x40
 800d842:	e7db      	b.n	800d7fc <_strtod_l+0xb24>
 800d844:	a314      	add	r3, pc, #80	; (adr r3, 800d898 <_strtod_l+0xbc0>)
 800d846:	e9d3 2300 	ldrd	r2, r3, [r3]
 800d84a:	f7f3 f947 	bl	8000adc <__aeabi_dcmplt>
 800d84e:	e7b3      	b.n	800d7b8 <_strtod_l+0xae0>
 800d850:	2300      	movs	r3, #0
 800d852:	930a      	str	r3, [sp, #40]	; 0x28
 800d854:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800d856:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800d858:	6013      	str	r3, [r2, #0]
 800d85a:	f7ff ba7c 	b.w	800cd56 <_strtod_l+0x7e>
 800d85e:	2a65      	cmp	r2, #101	; 0x65
 800d860:	f43f ab75 	beq.w	800cf4e <_strtod_l+0x276>
 800d864:	2a45      	cmp	r2, #69	; 0x45
 800d866:	f43f ab72 	beq.w	800cf4e <_strtod_l+0x276>
 800d86a:	2301      	movs	r3, #1
 800d86c:	f7ff bbaa 	b.w	800cfc4 <_strtod_l+0x2ec>
 800d870:	00000000 	.word	0x00000000
 800d874:	bff00000 	.word	0xbff00000
 800d878:	00000000 	.word	0x00000000
 800d87c:	3ff00000 	.word	0x3ff00000
 800d880:	94a03595 	.word	0x94a03595
 800d884:	3fdfffff 	.word	0x3fdfffff
 800d888:	35afe535 	.word	0x35afe535
 800d88c:	3fe00000 	.word	0x3fe00000
 800d890:	ffc00000 	.word	0xffc00000
 800d894:	41dfffff 	.word	0x41dfffff
 800d898:	94a03595 	.word	0x94a03595
 800d89c:	3fcfffff 	.word	0x3fcfffff
 800d8a0:	3ff00000 	.word	0x3ff00000
 800d8a4:	3fe00000 	.word	0x3fe00000
 800d8a8:	7ff00000 	.word	0x7ff00000
 800d8ac:	7fe00000 	.word	0x7fe00000
 800d8b0:	7c9fffff 	.word	0x7c9fffff
 800d8b4:	7fefffff 	.word	0x7fefffff

0800d8b8 <_strtod_r>:
 800d8b8:	4b01      	ldr	r3, [pc, #4]	; (800d8c0 <_strtod_r+0x8>)
 800d8ba:	f7ff ba0d 	b.w	800ccd8 <_strtod_l>
 800d8be:	bf00      	nop
 800d8c0:	20000068 	.word	0x20000068

0800d8c4 <_strtol_l.constprop.0>:
 800d8c4:	2b01      	cmp	r3, #1
 800d8c6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d8ca:	d001      	beq.n	800d8d0 <_strtol_l.constprop.0+0xc>
 800d8cc:	2b24      	cmp	r3, #36	; 0x24
 800d8ce:	d906      	bls.n	800d8de <_strtol_l.constprop.0+0x1a>
 800d8d0:	f7fd fe2e 	bl	800b530 <__errno>
 800d8d4:	2316      	movs	r3, #22
 800d8d6:	6003      	str	r3, [r0, #0]
 800d8d8:	2000      	movs	r0, #0
 800d8da:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d8de:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 800d9c4 <_strtol_l.constprop.0+0x100>
 800d8e2:	460d      	mov	r5, r1
 800d8e4:	462e      	mov	r6, r5
 800d8e6:	f815 4b01 	ldrb.w	r4, [r5], #1
 800d8ea:	f81c 7004 	ldrb.w	r7, [ip, r4]
 800d8ee:	f017 0708 	ands.w	r7, r7, #8
 800d8f2:	d1f7      	bne.n	800d8e4 <_strtol_l.constprop.0+0x20>
 800d8f4:	2c2d      	cmp	r4, #45	; 0x2d
 800d8f6:	d132      	bne.n	800d95e <_strtol_l.constprop.0+0x9a>
 800d8f8:	782c      	ldrb	r4, [r5, #0]
 800d8fa:	2701      	movs	r7, #1
 800d8fc:	1cb5      	adds	r5, r6, #2
 800d8fe:	2b00      	cmp	r3, #0
 800d900:	d05b      	beq.n	800d9ba <_strtol_l.constprop.0+0xf6>
 800d902:	2b10      	cmp	r3, #16
 800d904:	d109      	bne.n	800d91a <_strtol_l.constprop.0+0x56>
 800d906:	2c30      	cmp	r4, #48	; 0x30
 800d908:	d107      	bne.n	800d91a <_strtol_l.constprop.0+0x56>
 800d90a:	782c      	ldrb	r4, [r5, #0]
 800d90c:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 800d910:	2c58      	cmp	r4, #88	; 0x58
 800d912:	d14d      	bne.n	800d9b0 <_strtol_l.constprop.0+0xec>
 800d914:	786c      	ldrb	r4, [r5, #1]
 800d916:	2310      	movs	r3, #16
 800d918:	3502      	adds	r5, #2
 800d91a:	f107 4800 	add.w	r8, r7, #2147483648	; 0x80000000
 800d91e:	f108 38ff 	add.w	r8, r8, #4294967295
 800d922:	f04f 0e00 	mov.w	lr, #0
 800d926:	fbb8 f9f3 	udiv	r9, r8, r3
 800d92a:	4676      	mov	r6, lr
 800d92c:	fb03 8a19 	mls	sl, r3, r9, r8
 800d930:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 800d934:	f1bc 0f09 	cmp.w	ip, #9
 800d938:	d816      	bhi.n	800d968 <_strtol_l.constprop.0+0xa4>
 800d93a:	4664      	mov	r4, ip
 800d93c:	42a3      	cmp	r3, r4
 800d93e:	dd24      	ble.n	800d98a <_strtol_l.constprop.0+0xc6>
 800d940:	f1be 3fff 	cmp.w	lr, #4294967295
 800d944:	d008      	beq.n	800d958 <_strtol_l.constprop.0+0x94>
 800d946:	45b1      	cmp	r9, r6
 800d948:	d31c      	bcc.n	800d984 <_strtol_l.constprop.0+0xc0>
 800d94a:	d101      	bne.n	800d950 <_strtol_l.constprop.0+0x8c>
 800d94c:	45a2      	cmp	sl, r4
 800d94e:	db19      	blt.n	800d984 <_strtol_l.constprop.0+0xc0>
 800d950:	fb06 4603 	mla	r6, r6, r3, r4
 800d954:	f04f 0e01 	mov.w	lr, #1
 800d958:	f815 4b01 	ldrb.w	r4, [r5], #1
 800d95c:	e7e8      	b.n	800d930 <_strtol_l.constprop.0+0x6c>
 800d95e:	2c2b      	cmp	r4, #43	; 0x2b
 800d960:	bf04      	itt	eq
 800d962:	782c      	ldrbeq	r4, [r5, #0]
 800d964:	1cb5      	addeq	r5, r6, #2
 800d966:	e7ca      	b.n	800d8fe <_strtol_l.constprop.0+0x3a>
 800d968:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 800d96c:	f1bc 0f19 	cmp.w	ip, #25
 800d970:	d801      	bhi.n	800d976 <_strtol_l.constprop.0+0xb2>
 800d972:	3c37      	subs	r4, #55	; 0x37
 800d974:	e7e2      	b.n	800d93c <_strtol_l.constprop.0+0x78>
 800d976:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 800d97a:	f1bc 0f19 	cmp.w	ip, #25
 800d97e:	d804      	bhi.n	800d98a <_strtol_l.constprop.0+0xc6>
 800d980:	3c57      	subs	r4, #87	; 0x57
 800d982:	e7db      	b.n	800d93c <_strtol_l.constprop.0+0x78>
 800d984:	f04f 3eff 	mov.w	lr, #4294967295
 800d988:	e7e6      	b.n	800d958 <_strtol_l.constprop.0+0x94>
 800d98a:	f1be 3fff 	cmp.w	lr, #4294967295
 800d98e:	d105      	bne.n	800d99c <_strtol_l.constprop.0+0xd8>
 800d990:	2322      	movs	r3, #34	; 0x22
 800d992:	6003      	str	r3, [r0, #0]
 800d994:	4646      	mov	r6, r8
 800d996:	b942      	cbnz	r2, 800d9aa <_strtol_l.constprop.0+0xe6>
 800d998:	4630      	mov	r0, r6
 800d99a:	e79e      	b.n	800d8da <_strtol_l.constprop.0+0x16>
 800d99c:	b107      	cbz	r7, 800d9a0 <_strtol_l.constprop.0+0xdc>
 800d99e:	4276      	negs	r6, r6
 800d9a0:	2a00      	cmp	r2, #0
 800d9a2:	d0f9      	beq.n	800d998 <_strtol_l.constprop.0+0xd4>
 800d9a4:	f1be 0f00 	cmp.w	lr, #0
 800d9a8:	d000      	beq.n	800d9ac <_strtol_l.constprop.0+0xe8>
 800d9aa:	1e69      	subs	r1, r5, #1
 800d9ac:	6011      	str	r1, [r2, #0]
 800d9ae:	e7f3      	b.n	800d998 <_strtol_l.constprop.0+0xd4>
 800d9b0:	2430      	movs	r4, #48	; 0x30
 800d9b2:	2b00      	cmp	r3, #0
 800d9b4:	d1b1      	bne.n	800d91a <_strtol_l.constprop.0+0x56>
 800d9b6:	2308      	movs	r3, #8
 800d9b8:	e7af      	b.n	800d91a <_strtol_l.constprop.0+0x56>
 800d9ba:	2c30      	cmp	r4, #48	; 0x30
 800d9bc:	d0a5      	beq.n	800d90a <_strtol_l.constprop.0+0x46>
 800d9be:	230a      	movs	r3, #10
 800d9c0:	e7ab      	b.n	800d91a <_strtol_l.constprop.0+0x56>
 800d9c2:	bf00      	nop
 800d9c4:	08012061 	.word	0x08012061

0800d9c8 <_strtol_r>:
 800d9c8:	f7ff bf7c 	b.w	800d8c4 <_strtol_l.constprop.0>

0800d9cc <__ssputs_r>:
 800d9cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d9d0:	688e      	ldr	r6, [r1, #8]
 800d9d2:	461f      	mov	r7, r3
 800d9d4:	42be      	cmp	r6, r7
 800d9d6:	680b      	ldr	r3, [r1, #0]
 800d9d8:	4682      	mov	sl, r0
 800d9da:	460c      	mov	r4, r1
 800d9dc:	4690      	mov	r8, r2
 800d9de:	d82c      	bhi.n	800da3a <__ssputs_r+0x6e>
 800d9e0:	898a      	ldrh	r2, [r1, #12]
 800d9e2:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800d9e6:	d026      	beq.n	800da36 <__ssputs_r+0x6a>
 800d9e8:	6965      	ldr	r5, [r4, #20]
 800d9ea:	6909      	ldr	r1, [r1, #16]
 800d9ec:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800d9f0:	eba3 0901 	sub.w	r9, r3, r1
 800d9f4:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800d9f8:	1c7b      	adds	r3, r7, #1
 800d9fa:	444b      	add	r3, r9
 800d9fc:	106d      	asrs	r5, r5, #1
 800d9fe:	429d      	cmp	r5, r3
 800da00:	bf38      	it	cc
 800da02:	461d      	movcc	r5, r3
 800da04:	0553      	lsls	r3, r2, #21
 800da06:	d527      	bpl.n	800da58 <__ssputs_r+0x8c>
 800da08:	4629      	mov	r1, r5
 800da0a:	f7fc fcd3 	bl	800a3b4 <_malloc_r>
 800da0e:	4606      	mov	r6, r0
 800da10:	b360      	cbz	r0, 800da6c <__ssputs_r+0xa0>
 800da12:	6921      	ldr	r1, [r4, #16]
 800da14:	464a      	mov	r2, r9
 800da16:	f7fd fdb8 	bl	800b58a <memcpy>
 800da1a:	89a3      	ldrh	r3, [r4, #12]
 800da1c:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800da20:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800da24:	81a3      	strh	r3, [r4, #12]
 800da26:	6126      	str	r6, [r4, #16]
 800da28:	6165      	str	r5, [r4, #20]
 800da2a:	444e      	add	r6, r9
 800da2c:	eba5 0509 	sub.w	r5, r5, r9
 800da30:	6026      	str	r6, [r4, #0]
 800da32:	60a5      	str	r5, [r4, #8]
 800da34:	463e      	mov	r6, r7
 800da36:	42be      	cmp	r6, r7
 800da38:	d900      	bls.n	800da3c <__ssputs_r+0x70>
 800da3a:	463e      	mov	r6, r7
 800da3c:	6820      	ldr	r0, [r4, #0]
 800da3e:	4632      	mov	r2, r6
 800da40:	4641      	mov	r1, r8
 800da42:	f000 f9c9 	bl	800ddd8 <memmove>
 800da46:	68a3      	ldr	r3, [r4, #8]
 800da48:	1b9b      	subs	r3, r3, r6
 800da4a:	60a3      	str	r3, [r4, #8]
 800da4c:	6823      	ldr	r3, [r4, #0]
 800da4e:	4433      	add	r3, r6
 800da50:	6023      	str	r3, [r4, #0]
 800da52:	2000      	movs	r0, #0
 800da54:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800da58:	462a      	mov	r2, r5
 800da5a:	f000 fd8e 	bl	800e57a <_realloc_r>
 800da5e:	4606      	mov	r6, r0
 800da60:	2800      	cmp	r0, #0
 800da62:	d1e0      	bne.n	800da26 <__ssputs_r+0x5a>
 800da64:	6921      	ldr	r1, [r4, #16]
 800da66:	4650      	mov	r0, sl
 800da68:	f7fe fc20 	bl	800c2ac <_free_r>
 800da6c:	230c      	movs	r3, #12
 800da6e:	f8ca 3000 	str.w	r3, [sl]
 800da72:	89a3      	ldrh	r3, [r4, #12]
 800da74:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800da78:	81a3      	strh	r3, [r4, #12]
 800da7a:	f04f 30ff 	mov.w	r0, #4294967295
 800da7e:	e7e9      	b.n	800da54 <__ssputs_r+0x88>

0800da80 <_svfiprintf_r>:
 800da80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800da84:	4698      	mov	r8, r3
 800da86:	898b      	ldrh	r3, [r1, #12]
 800da88:	061b      	lsls	r3, r3, #24
 800da8a:	b09d      	sub	sp, #116	; 0x74
 800da8c:	4607      	mov	r7, r0
 800da8e:	460d      	mov	r5, r1
 800da90:	4614      	mov	r4, r2
 800da92:	d50e      	bpl.n	800dab2 <_svfiprintf_r+0x32>
 800da94:	690b      	ldr	r3, [r1, #16]
 800da96:	b963      	cbnz	r3, 800dab2 <_svfiprintf_r+0x32>
 800da98:	2140      	movs	r1, #64	; 0x40
 800da9a:	f7fc fc8b 	bl	800a3b4 <_malloc_r>
 800da9e:	6028      	str	r0, [r5, #0]
 800daa0:	6128      	str	r0, [r5, #16]
 800daa2:	b920      	cbnz	r0, 800daae <_svfiprintf_r+0x2e>
 800daa4:	230c      	movs	r3, #12
 800daa6:	603b      	str	r3, [r7, #0]
 800daa8:	f04f 30ff 	mov.w	r0, #4294967295
 800daac:	e0d0      	b.n	800dc50 <_svfiprintf_r+0x1d0>
 800daae:	2340      	movs	r3, #64	; 0x40
 800dab0:	616b      	str	r3, [r5, #20]
 800dab2:	2300      	movs	r3, #0
 800dab4:	9309      	str	r3, [sp, #36]	; 0x24
 800dab6:	2320      	movs	r3, #32
 800dab8:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800dabc:	f8cd 800c 	str.w	r8, [sp, #12]
 800dac0:	2330      	movs	r3, #48	; 0x30
 800dac2:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 800dc68 <_svfiprintf_r+0x1e8>
 800dac6:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800daca:	f04f 0901 	mov.w	r9, #1
 800dace:	4623      	mov	r3, r4
 800dad0:	469a      	mov	sl, r3
 800dad2:	f813 2b01 	ldrb.w	r2, [r3], #1
 800dad6:	b10a      	cbz	r2, 800dadc <_svfiprintf_r+0x5c>
 800dad8:	2a25      	cmp	r2, #37	; 0x25
 800dada:	d1f9      	bne.n	800dad0 <_svfiprintf_r+0x50>
 800dadc:	ebba 0b04 	subs.w	fp, sl, r4
 800dae0:	d00b      	beq.n	800dafa <_svfiprintf_r+0x7a>
 800dae2:	465b      	mov	r3, fp
 800dae4:	4622      	mov	r2, r4
 800dae6:	4629      	mov	r1, r5
 800dae8:	4638      	mov	r0, r7
 800daea:	f7ff ff6f 	bl	800d9cc <__ssputs_r>
 800daee:	3001      	adds	r0, #1
 800daf0:	f000 80a9 	beq.w	800dc46 <_svfiprintf_r+0x1c6>
 800daf4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800daf6:	445a      	add	r2, fp
 800daf8:	9209      	str	r2, [sp, #36]	; 0x24
 800dafa:	f89a 3000 	ldrb.w	r3, [sl]
 800dafe:	2b00      	cmp	r3, #0
 800db00:	f000 80a1 	beq.w	800dc46 <_svfiprintf_r+0x1c6>
 800db04:	2300      	movs	r3, #0
 800db06:	f04f 32ff 	mov.w	r2, #4294967295
 800db0a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800db0e:	f10a 0a01 	add.w	sl, sl, #1
 800db12:	9304      	str	r3, [sp, #16]
 800db14:	9307      	str	r3, [sp, #28]
 800db16:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800db1a:	931a      	str	r3, [sp, #104]	; 0x68
 800db1c:	4654      	mov	r4, sl
 800db1e:	2205      	movs	r2, #5
 800db20:	f814 1b01 	ldrb.w	r1, [r4], #1
 800db24:	4850      	ldr	r0, [pc, #320]	; (800dc68 <_svfiprintf_r+0x1e8>)
 800db26:	f7f2 fb53 	bl	80001d0 <memchr>
 800db2a:	9a04      	ldr	r2, [sp, #16]
 800db2c:	b9d8      	cbnz	r0, 800db66 <_svfiprintf_r+0xe6>
 800db2e:	06d0      	lsls	r0, r2, #27
 800db30:	bf44      	itt	mi
 800db32:	2320      	movmi	r3, #32
 800db34:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800db38:	0711      	lsls	r1, r2, #28
 800db3a:	bf44      	itt	mi
 800db3c:	232b      	movmi	r3, #43	; 0x2b
 800db3e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800db42:	f89a 3000 	ldrb.w	r3, [sl]
 800db46:	2b2a      	cmp	r3, #42	; 0x2a
 800db48:	d015      	beq.n	800db76 <_svfiprintf_r+0xf6>
 800db4a:	9a07      	ldr	r2, [sp, #28]
 800db4c:	4654      	mov	r4, sl
 800db4e:	2000      	movs	r0, #0
 800db50:	f04f 0c0a 	mov.w	ip, #10
 800db54:	4621      	mov	r1, r4
 800db56:	f811 3b01 	ldrb.w	r3, [r1], #1
 800db5a:	3b30      	subs	r3, #48	; 0x30
 800db5c:	2b09      	cmp	r3, #9
 800db5e:	d94d      	bls.n	800dbfc <_svfiprintf_r+0x17c>
 800db60:	b1b0      	cbz	r0, 800db90 <_svfiprintf_r+0x110>
 800db62:	9207      	str	r2, [sp, #28]
 800db64:	e014      	b.n	800db90 <_svfiprintf_r+0x110>
 800db66:	eba0 0308 	sub.w	r3, r0, r8
 800db6a:	fa09 f303 	lsl.w	r3, r9, r3
 800db6e:	4313      	orrs	r3, r2
 800db70:	9304      	str	r3, [sp, #16]
 800db72:	46a2      	mov	sl, r4
 800db74:	e7d2      	b.n	800db1c <_svfiprintf_r+0x9c>
 800db76:	9b03      	ldr	r3, [sp, #12]
 800db78:	1d19      	adds	r1, r3, #4
 800db7a:	681b      	ldr	r3, [r3, #0]
 800db7c:	9103      	str	r1, [sp, #12]
 800db7e:	2b00      	cmp	r3, #0
 800db80:	bfbb      	ittet	lt
 800db82:	425b      	neglt	r3, r3
 800db84:	f042 0202 	orrlt.w	r2, r2, #2
 800db88:	9307      	strge	r3, [sp, #28]
 800db8a:	9307      	strlt	r3, [sp, #28]
 800db8c:	bfb8      	it	lt
 800db8e:	9204      	strlt	r2, [sp, #16]
 800db90:	7823      	ldrb	r3, [r4, #0]
 800db92:	2b2e      	cmp	r3, #46	; 0x2e
 800db94:	d10c      	bne.n	800dbb0 <_svfiprintf_r+0x130>
 800db96:	7863      	ldrb	r3, [r4, #1]
 800db98:	2b2a      	cmp	r3, #42	; 0x2a
 800db9a:	d134      	bne.n	800dc06 <_svfiprintf_r+0x186>
 800db9c:	9b03      	ldr	r3, [sp, #12]
 800db9e:	1d1a      	adds	r2, r3, #4
 800dba0:	681b      	ldr	r3, [r3, #0]
 800dba2:	9203      	str	r2, [sp, #12]
 800dba4:	2b00      	cmp	r3, #0
 800dba6:	bfb8      	it	lt
 800dba8:	f04f 33ff 	movlt.w	r3, #4294967295
 800dbac:	3402      	adds	r4, #2
 800dbae:	9305      	str	r3, [sp, #20]
 800dbb0:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 800dc78 <_svfiprintf_r+0x1f8>
 800dbb4:	7821      	ldrb	r1, [r4, #0]
 800dbb6:	2203      	movs	r2, #3
 800dbb8:	4650      	mov	r0, sl
 800dbba:	f7f2 fb09 	bl	80001d0 <memchr>
 800dbbe:	b138      	cbz	r0, 800dbd0 <_svfiprintf_r+0x150>
 800dbc0:	9b04      	ldr	r3, [sp, #16]
 800dbc2:	eba0 000a 	sub.w	r0, r0, sl
 800dbc6:	2240      	movs	r2, #64	; 0x40
 800dbc8:	4082      	lsls	r2, r0
 800dbca:	4313      	orrs	r3, r2
 800dbcc:	3401      	adds	r4, #1
 800dbce:	9304      	str	r3, [sp, #16]
 800dbd0:	f814 1b01 	ldrb.w	r1, [r4], #1
 800dbd4:	4825      	ldr	r0, [pc, #148]	; (800dc6c <_svfiprintf_r+0x1ec>)
 800dbd6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800dbda:	2206      	movs	r2, #6
 800dbdc:	f7f2 faf8 	bl	80001d0 <memchr>
 800dbe0:	2800      	cmp	r0, #0
 800dbe2:	d038      	beq.n	800dc56 <_svfiprintf_r+0x1d6>
 800dbe4:	4b22      	ldr	r3, [pc, #136]	; (800dc70 <_svfiprintf_r+0x1f0>)
 800dbe6:	bb1b      	cbnz	r3, 800dc30 <_svfiprintf_r+0x1b0>
 800dbe8:	9b03      	ldr	r3, [sp, #12]
 800dbea:	3307      	adds	r3, #7
 800dbec:	f023 0307 	bic.w	r3, r3, #7
 800dbf0:	3308      	adds	r3, #8
 800dbf2:	9303      	str	r3, [sp, #12]
 800dbf4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dbf6:	4433      	add	r3, r6
 800dbf8:	9309      	str	r3, [sp, #36]	; 0x24
 800dbfa:	e768      	b.n	800dace <_svfiprintf_r+0x4e>
 800dbfc:	fb0c 3202 	mla	r2, ip, r2, r3
 800dc00:	460c      	mov	r4, r1
 800dc02:	2001      	movs	r0, #1
 800dc04:	e7a6      	b.n	800db54 <_svfiprintf_r+0xd4>
 800dc06:	2300      	movs	r3, #0
 800dc08:	3401      	adds	r4, #1
 800dc0a:	9305      	str	r3, [sp, #20]
 800dc0c:	4619      	mov	r1, r3
 800dc0e:	f04f 0c0a 	mov.w	ip, #10
 800dc12:	4620      	mov	r0, r4
 800dc14:	f810 2b01 	ldrb.w	r2, [r0], #1
 800dc18:	3a30      	subs	r2, #48	; 0x30
 800dc1a:	2a09      	cmp	r2, #9
 800dc1c:	d903      	bls.n	800dc26 <_svfiprintf_r+0x1a6>
 800dc1e:	2b00      	cmp	r3, #0
 800dc20:	d0c6      	beq.n	800dbb0 <_svfiprintf_r+0x130>
 800dc22:	9105      	str	r1, [sp, #20]
 800dc24:	e7c4      	b.n	800dbb0 <_svfiprintf_r+0x130>
 800dc26:	fb0c 2101 	mla	r1, ip, r1, r2
 800dc2a:	4604      	mov	r4, r0
 800dc2c:	2301      	movs	r3, #1
 800dc2e:	e7f0      	b.n	800dc12 <_svfiprintf_r+0x192>
 800dc30:	ab03      	add	r3, sp, #12
 800dc32:	9300      	str	r3, [sp, #0]
 800dc34:	462a      	mov	r2, r5
 800dc36:	4b0f      	ldr	r3, [pc, #60]	; (800dc74 <_svfiprintf_r+0x1f4>)
 800dc38:	a904      	add	r1, sp, #16
 800dc3a:	4638      	mov	r0, r7
 800dc3c:	f7fc fce6 	bl	800a60c <_printf_float>
 800dc40:	1c42      	adds	r2, r0, #1
 800dc42:	4606      	mov	r6, r0
 800dc44:	d1d6      	bne.n	800dbf4 <_svfiprintf_r+0x174>
 800dc46:	89ab      	ldrh	r3, [r5, #12]
 800dc48:	065b      	lsls	r3, r3, #25
 800dc4a:	f53f af2d 	bmi.w	800daa8 <_svfiprintf_r+0x28>
 800dc4e:	9809      	ldr	r0, [sp, #36]	; 0x24
 800dc50:	b01d      	add	sp, #116	; 0x74
 800dc52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dc56:	ab03      	add	r3, sp, #12
 800dc58:	9300      	str	r3, [sp, #0]
 800dc5a:	462a      	mov	r2, r5
 800dc5c:	4b05      	ldr	r3, [pc, #20]	; (800dc74 <_svfiprintf_r+0x1f4>)
 800dc5e:	a904      	add	r1, sp, #16
 800dc60:	4638      	mov	r0, r7
 800dc62:	f7fc ff77 	bl	800ab54 <_printf_i>
 800dc66:	e7eb      	b.n	800dc40 <_svfiprintf_r+0x1c0>
 800dc68:	08012161 	.word	0x08012161
 800dc6c:	0801216b 	.word	0x0801216b
 800dc70:	0800a60d 	.word	0x0800a60d
 800dc74:	0800d9cd 	.word	0x0800d9cd
 800dc78:	08012167 	.word	0x08012167

0800dc7c <__sflush_r>:
 800dc7c:	898a      	ldrh	r2, [r1, #12]
 800dc7e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dc82:	4605      	mov	r5, r0
 800dc84:	0710      	lsls	r0, r2, #28
 800dc86:	460c      	mov	r4, r1
 800dc88:	d458      	bmi.n	800dd3c <__sflush_r+0xc0>
 800dc8a:	684b      	ldr	r3, [r1, #4]
 800dc8c:	2b00      	cmp	r3, #0
 800dc8e:	dc05      	bgt.n	800dc9c <__sflush_r+0x20>
 800dc90:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800dc92:	2b00      	cmp	r3, #0
 800dc94:	dc02      	bgt.n	800dc9c <__sflush_r+0x20>
 800dc96:	2000      	movs	r0, #0
 800dc98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dc9c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800dc9e:	2e00      	cmp	r6, #0
 800dca0:	d0f9      	beq.n	800dc96 <__sflush_r+0x1a>
 800dca2:	2300      	movs	r3, #0
 800dca4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800dca8:	682f      	ldr	r7, [r5, #0]
 800dcaa:	6a21      	ldr	r1, [r4, #32]
 800dcac:	602b      	str	r3, [r5, #0]
 800dcae:	d032      	beq.n	800dd16 <__sflush_r+0x9a>
 800dcb0:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800dcb2:	89a3      	ldrh	r3, [r4, #12]
 800dcb4:	075a      	lsls	r2, r3, #29
 800dcb6:	d505      	bpl.n	800dcc4 <__sflush_r+0x48>
 800dcb8:	6863      	ldr	r3, [r4, #4]
 800dcba:	1ac0      	subs	r0, r0, r3
 800dcbc:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800dcbe:	b10b      	cbz	r3, 800dcc4 <__sflush_r+0x48>
 800dcc0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800dcc2:	1ac0      	subs	r0, r0, r3
 800dcc4:	2300      	movs	r3, #0
 800dcc6:	4602      	mov	r2, r0
 800dcc8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800dcca:	6a21      	ldr	r1, [r4, #32]
 800dccc:	4628      	mov	r0, r5
 800dcce:	47b0      	blx	r6
 800dcd0:	1c43      	adds	r3, r0, #1
 800dcd2:	89a3      	ldrh	r3, [r4, #12]
 800dcd4:	d106      	bne.n	800dce4 <__sflush_r+0x68>
 800dcd6:	6829      	ldr	r1, [r5, #0]
 800dcd8:	291d      	cmp	r1, #29
 800dcda:	d82b      	bhi.n	800dd34 <__sflush_r+0xb8>
 800dcdc:	4a29      	ldr	r2, [pc, #164]	; (800dd84 <__sflush_r+0x108>)
 800dcde:	410a      	asrs	r2, r1
 800dce0:	07d6      	lsls	r6, r2, #31
 800dce2:	d427      	bmi.n	800dd34 <__sflush_r+0xb8>
 800dce4:	2200      	movs	r2, #0
 800dce6:	6062      	str	r2, [r4, #4]
 800dce8:	04d9      	lsls	r1, r3, #19
 800dcea:	6922      	ldr	r2, [r4, #16]
 800dcec:	6022      	str	r2, [r4, #0]
 800dcee:	d504      	bpl.n	800dcfa <__sflush_r+0x7e>
 800dcf0:	1c42      	adds	r2, r0, #1
 800dcf2:	d101      	bne.n	800dcf8 <__sflush_r+0x7c>
 800dcf4:	682b      	ldr	r3, [r5, #0]
 800dcf6:	b903      	cbnz	r3, 800dcfa <__sflush_r+0x7e>
 800dcf8:	6560      	str	r0, [r4, #84]	; 0x54
 800dcfa:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800dcfc:	602f      	str	r7, [r5, #0]
 800dcfe:	2900      	cmp	r1, #0
 800dd00:	d0c9      	beq.n	800dc96 <__sflush_r+0x1a>
 800dd02:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800dd06:	4299      	cmp	r1, r3
 800dd08:	d002      	beq.n	800dd10 <__sflush_r+0x94>
 800dd0a:	4628      	mov	r0, r5
 800dd0c:	f7fe face 	bl	800c2ac <_free_r>
 800dd10:	2000      	movs	r0, #0
 800dd12:	6360      	str	r0, [r4, #52]	; 0x34
 800dd14:	e7c0      	b.n	800dc98 <__sflush_r+0x1c>
 800dd16:	2301      	movs	r3, #1
 800dd18:	4628      	mov	r0, r5
 800dd1a:	47b0      	blx	r6
 800dd1c:	1c41      	adds	r1, r0, #1
 800dd1e:	d1c8      	bne.n	800dcb2 <__sflush_r+0x36>
 800dd20:	682b      	ldr	r3, [r5, #0]
 800dd22:	2b00      	cmp	r3, #0
 800dd24:	d0c5      	beq.n	800dcb2 <__sflush_r+0x36>
 800dd26:	2b1d      	cmp	r3, #29
 800dd28:	d001      	beq.n	800dd2e <__sflush_r+0xb2>
 800dd2a:	2b16      	cmp	r3, #22
 800dd2c:	d101      	bne.n	800dd32 <__sflush_r+0xb6>
 800dd2e:	602f      	str	r7, [r5, #0]
 800dd30:	e7b1      	b.n	800dc96 <__sflush_r+0x1a>
 800dd32:	89a3      	ldrh	r3, [r4, #12]
 800dd34:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800dd38:	81a3      	strh	r3, [r4, #12]
 800dd3a:	e7ad      	b.n	800dc98 <__sflush_r+0x1c>
 800dd3c:	690f      	ldr	r7, [r1, #16]
 800dd3e:	2f00      	cmp	r7, #0
 800dd40:	d0a9      	beq.n	800dc96 <__sflush_r+0x1a>
 800dd42:	0793      	lsls	r3, r2, #30
 800dd44:	680e      	ldr	r6, [r1, #0]
 800dd46:	bf08      	it	eq
 800dd48:	694b      	ldreq	r3, [r1, #20]
 800dd4a:	600f      	str	r7, [r1, #0]
 800dd4c:	bf18      	it	ne
 800dd4e:	2300      	movne	r3, #0
 800dd50:	eba6 0807 	sub.w	r8, r6, r7
 800dd54:	608b      	str	r3, [r1, #8]
 800dd56:	f1b8 0f00 	cmp.w	r8, #0
 800dd5a:	dd9c      	ble.n	800dc96 <__sflush_r+0x1a>
 800dd5c:	6a21      	ldr	r1, [r4, #32]
 800dd5e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800dd60:	4643      	mov	r3, r8
 800dd62:	463a      	mov	r2, r7
 800dd64:	4628      	mov	r0, r5
 800dd66:	47b0      	blx	r6
 800dd68:	2800      	cmp	r0, #0
 800dd6a:	dc06      	bgt.n	800dd7a <__sflush_r+0xfe>
 800dd6c:	89a3      	ldrh	r3, [r4, #12]
 800dd6e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800dd72:	81a3      	strh	r3, [r4, #12]
 800dd74:	f04f 30ff 	mov.w	r0, #4294967295
 800dd78:	e78e      	b.n	800dc98 <__sflush_r+0x1c>
 800dd7a:	4407      	add	r7, r0
 800dd7c:	eba8 0800 	sub.w	r8, r8, r0
 800dd80:	e7e9      	b.n	800dd56 <__sflush_r+0xda>
 800dd82:	bf00      	nop
 800dd84:	dfbffffe 	.word	0xdfbffffe

0800dd88 <_fflush_r>:
 800dd88:	b538      	push	{r3, r4, r5, lr}
 800dd8a:	690b      	ldr	r3, [r1, #16]
 800dd8c:	4605      	mov	r5, r0
 800dd8e:	460c      	mov	r4, r1
 800dd90:	b913      	cbnz	r3, 800dd98 <_fflush_r+0x10>
 800dd92:	2500      	movs	r5, #0
 800dd94:	4628      	mov	r0, r5
 800dd96:	bd38      	pop	{r3, r4, r5, pc}
 800dd98:	b118      	cbz	r0, 800dda2 <_fflush_r+0x1a>
 800dd9a:	6a03      	ldr	r3, [r0, #32]
 800dd9c:	b90b      	cbnz	r3, 800dda2 <_fflush_r+0x1a>
 800dd9e:	f7fd fa97 	bl	800b2d0 <__sinit>
 800dda2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800dda6:	2b00      	cmp	r3, #0
 800dda8:	d0f3      	beq.n	800dd92 <_fflush_r+0xa>
 800ddaa:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800ddac:	07d0      	lsls	r0, r2, #31
 800ddae:	d404      	bmi.n	800ddba <_fflush_r+0x32>
 800ddb0:	0599      	lsls	r1, r3, #22
 800ddb2:	d402      	bmi.n	800ddba <_fflush_r+0x32>
 800ddb4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800ddb6:	f7fd fbe6 	bl	800b586 <__retarget_lock_acquire_recursive>
 800ddba:	4628      	mov	r0, r5
 800ddbc:	4621      	mov	r1, r4
 800ddbe:	f7ff ff5d 	bl	800dc7c <__sflush_r>
 800ddc2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800ddc4:	07da      	lsls	r2, r3, #31
 800ddc6:	4605      	mov	r5, r0
 800ddc8:	d4e4      	bmi.n	800dd94 <_fflush_r+0xc>
 800ddca:	89a3      	ldrh	r3, [r4, #12]
 800ddcc:	059b      	lsls	r3, r3, #22
 800ddce:	d4e1      	bmi.n	800dd94 <_fflush_r+0xc>
 800ddd0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800ddd2:	f7fd fbd9 	bl	800b588 <__retarget_lock_release_recursive>
 800ddd6:	e7dd      	b.n	800dd94 <_fflush_r+0xc>

0800ddd8 <memmove>:
 800ddd8:	4288      	cmp	r0, r1
 800ddda:	b510      	push	{r4, lr}
 800dddc:	eb01 0402 	add.w	r4, r1, r2
 800dde0:	d902      	bls.n	800dde8 <memmove+0x10>
 800dde2:	4284      	cmp	r4, r0
 800dde4:	4623      	mov	r3, r4
 800dde6:	d807      	bhi.n	800ddf8 <memmove+0x20>
 800dde8:	1e43      	subs	r3, r0, #1
 800ddea:	42a1      	cmp	r1, r4
 800ddec:	d008      	beq.n	800de00 <memmove+0x28>
 800ddee:	f811 2b01 	ldrb.w	r2, [r1], #1
 800ddf2:	f803 2f01 	strb.w	r2, [r3, #1]!
 800ddf6:	e7f8      	b.n	800ddea <memmove+0x12>
 800ddf8:	4402      	add	r2, r0
 800ddfa:	4601      	mov	r1, r0
 800ddfc:	428a      	cmp	r2, r1
 800ddfe:	d100      	bne.n	800de02 <memmove+0x2a>
 800de00:	bd10      	pop	{r4, pc}
 800de02:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800de06:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800de0a:	e7f7      	b.n	800ddfc <memmove+0x24>

0800de0c <strncmp>:
 800de0c:	b510      	push	{r4, lr}
 800de0e:	b16a      	cbz	r2, 800de2c <strncmp+0x20>
 800de10:	3901      	subs	r1, #1
 800de12:	1884      	adds	r4, r0, r2
 800de14:	f810 2b01 	ldrb.w	r2, [r0], #1
 800de18:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800de1c:	429a      	cmp	r2, r3
 800de1e:	d103      	bne.n	800de28 <strncmp+0x1c>
 800de20:	42a0      	cmp	r0, r4
 800de22:	d001      	beq.n	800de28 <strncmp+0x1c>
 800de24:	2a00      	cmp	r2, #0
 800de26:	d1f5      	bne.n	800de14 <strncmp+0x8>
 800de28:	1ad0      	subs	r0, r2, r3
 800de2a:	bd10      	pop	{r4, pc}
 800de2c:	4610      	mov	r0, r2
 800de2e:	e7fc      	b.n	800de2a <strncmp+0x1e>

0800de30 <nan>:
 800de30:	ed9f 0b01 	vldr	d0, [pc, #4]	; 800de38 <nan+0x8>
 800de34:	4770      	bx	lr
 800de36:	bf00      	nop
 800de38:	00000000 	.word	0x00000000
 800de3c:	7ff80000 	.word	0x7ff80000

0800de40 <__assert_func>:
 800de40:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800de42:	4614      	mov	r4, r2
 800de44:	461a      	mov	r2, r3
 800de46:	4b09      	ldr	r3, [pc, #36]	; (800de6c <__assert_func+0x2c>)
 800de48:	681b      	ldr	r3, [r3, #0]
 800de4a:	4605      	mov	r5, r0
 800de4c:	68d8      	ldr	r0, [r3, #12]
 800de4e:	b14c      	cbz	r4, 800de64 <__assert_func+0x24>
 800de50:	4b07      	ldr	r3, [pc, #28]	; (800de70 <__assert_func+0x30>)
 800de52:	9100      	str	r1, [sp, #0]
 800de54:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800de58:	4906      	ldr	r1, [pc, #24]	; (800de74 <__assert_func+0x34>)
 800de5a:	462b      	mov	r3, r5
 800de5c:	f000 fbca 	bl	800e5f4 <fiprintf>
 800de60:	f000 fbda 	bl	800e618 <abort>
 800de64:	4b04      	ldr	r3, [pc, #16]	; (800de78 <__assert_func+0x38>)
 800de66:	461c      	mov	r4, r3
 800de68:	e7f3      	b.n	800de52 <__assert_func+0x12>
 800de6a:	bf00      	nop
 800de6c:	20000064 	.word	0x20000064
 800de70:	0801217a 	.word	0x0801217a
 800de74:	08012187 	.word	0x08012187
 800de78:	080121b5 	.word	0x080121b5

0800de7c <_calloc_r>:
 800de7c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800de7e:	fba1 2402 	umull	r2, r4, r1, r2
 800de82:	b94c      	cbnz	r4, 800de98 <_calloc_r+0x1c>
 800de84:	4611      	mov	r1, r2
 800de86:	9201      	str	r2, [sp, #4]
 800de88:	f7fc fa94 	bl	800a3b4 <_malloc_r>
 800de8c:	9a01      	ldr	r2, [sp, #4]
 800de8e:	4605      	mov	r5, r0
 800de90:	b930      	cbnz	r0, 800dea0 <_calloc_r+0x24>
 800de92:	4628      	mov	r0, r5
 800de94:	b003      	add	sp, #12
 800de96:	bd30      	pop	{r4, r5, pc}
 800de98:	220c      	movs	r2, #12
 800de9a:	6002      	str	r2, [r0, #0]
 800de9c:	2500      	movs	r5, #0
 800de9e:	e7f8      	b.n	800de92 <_calloc_r+0x16>
 800dea0:	4621      	mov	r1, r4
 800dea2:	f7fd fae2 	bl	800b46a <memset>
 800dea6:	e7f4      	b.n	800de92 <_calloc_r+0x16>

0800dea8 <rshift>:
 800dea8:	6903      	ldr	r3, [r0, #16]
 800deaa:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 800deae:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800deb2:	ea4f 1261 	mov.w	r2, r1, asr #5
 800deb6:	f100 0414 	add.w	r4, r0, #20
 800deba:	dd45      	ble.n	800df48 <rshift+0xa0>
 800debc:	f011 011f 	ands.w	r1, r1, #31
 800dec0:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 800dec4:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 800dec8:	d10c      	bne.n	800dee4 <rshift+0x3c>
 800deca:	f100 0710 	add.w	r7, r0, #16
 800dece:	4629      	mov	r1, r5
 800ded0:	42b1      	cmp	r1, r6
 800ded2:	d334      	bcc.n	800df3e <rshift+0x96>
 800ded4:	1a9b      	subs	r3, r3, r2
 800ded6:	009b      	lsls	r3, r3, #2
 800ded8:	1eea      	subs	r2, r5, #3
 800deda:	4296      	cmp	r6, r2
 800dedc:	bf38      	it	cc
 800dede:	2300      	movcc	r3, #0
 800dee0:	4423      	add	r3, r4
 800dee2:	e015      	b.n	800df10 <rshift+0x68>
 800dee4:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 800dee8:	f1c1 0820 	rsb	r8, r1, #32
 800deec:	40cf      	lsrs	r7, r1
 800deee:	f105 0e04 	add.w	lr, r5, #4
 800def2:	46a1      	mov	r9, r4
 800def4:	4576      	cmp	r6, lr
 800def6:	46f4      	mov	ip, lr
 800def8:	d815      	bhi.n	800df26 <rshift+0x7e>
 800defa:	1a9a      	subs	r2, r3, r2
 800defc:	0092      	lsls	r2, r2, #2
 800defe:	3a04      	subs	r2, #4
 800df00:	3501      	adds	r5, #1
 800df02:	42ae      	cmp	r6, r5
 800df04:	bf38      	it	cc
 800df06:	2200      	movcc	r2, #0
 800df08:	18a3      	adds	r3, r4, r2
 800df0a:	50a7      	str	r7, [r4, r2]
 800df0c:	b107      	cbz	r7, 800df10 <rshift+0x68>
 800df0e:	3304      	adds	r3, #4
 800df10:	1b1a      	subs	r2, r3, r4
 800df12:	42a3      	cmp	r3, r4
 800df14:	ea4f 02a2 	mov.w	r2, r2, asr #2
 800df18:	bf08      	it	eq
 800df1a:	2300      	moveq	r3, #0
 800df1c:	6102      	str	r2, [r0, #16]
 800df1e:	bf08      	it	eq
 800df20:	6143      	streq	r3, [r0, #20]
 800df22:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800df26:	f8dc c000 	ldr.w	ip, [ip]
 800df2a:	fa0c fc08 	lsl.w	ip, ip, r8
 800df2e:	ea4c 0707 	orr.w	r7, ip, r7
 800df32:	f849 7b04 	str.w	r7, [r9], #4
 800df36:	f85e 7b04 	ldr.w	r7, [lr], #4
 800df3a:	40cf      	lsrs	r7, r1
 800df3c:	e7da      	b.n	800def4 <rshift+0x4c>
 800df3e:	f851 cb04 	ldr.w	ip, [r1], #4
 800df42:	f847 cf04 	str.w	ip, [r7, #4]!
 800df46:	e7c3      	b.n	800ded0 <rshift+0x28>
 800df48:	4623      	mov	r3, r4
 800df4a:	e7e1      	b.n	800df10 <rshift+0x68>

0800df4c <__hexdig_fun>:
 800df4c:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 800df50:	2b09      	cmp	r3, #9
 800df52:	d802      	bhi.n	800df5a <__hexdig_fun+0xe>
 800df54:	3820      	subs	r0, #32
 800df56:	b2c0      	uxtb	r0, r0
 800df58:	4770      	bx	lr
 800df5a:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 800df5e:	2b05      	cmp	r3, #5
 800df60:	d801      	bhi.n	800df66 <__hexdig_fun+0x1a>
 800df62:	3847      	subs	r0, #71	; 0x47
 800df64:	e7f7      	b.n	800df56 <__hexdig_fun+0xa>
 800df66:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800df6a:	2b05      	cmp	r3, #5
 800df6c:	d801      	bhi.n	800df72 <__hexdig_fun+0x26>
 800df6e:	3827      	subs	r0, #39	; 0x27
 800df70:	e7f1      	b.n	800df56 <__hexdig_fun+0xa>
 800df72:	2000      	movs	r0, #0
 800df74:	4770      	bx	lr
	...

0800df78 <__gethex>:
 800df78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800df7c:	4617      	mov	r7, r2
 800df7e:	680a      	ldr	r2, [r1, #0]
 800df80:	b085      	sub	sp, #20
 800df82:	f102 0b02 	add.w	fp, r2, #2
 800df86:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 800df8a:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 800df8e:	4681      	mov	r9, r0
 800df90:	468a      	mov	sl, r1
 800df92:	9302      	str	r3, [sp, #8]
 800df94:	32fe      	adds	r2, #254	; 0xfe
 800df96:	eb02 030b 	add.w	r3, r2, fp
 800df9a:	46d8      	mov	r8, fp
 800df9c:	f81b 0b01 	ldrb.w	r0, [fp], #1
 800dfa0:	9301      	str	r3, [sp, #4]
 800dfa2:	2830      	cmp	r0, #48	; 0x30
 800dfa4:	d0f7      	beq.n	800df96 <__gethex+0x1e>
 800dfa6:	f7ff ffd1 	bl	800df4c <__hexdig_fun>
 800dfaa:	4604      	mov	r4, r0
 800dfac:	2800      	cmp	r0, #0
 800dfae:	d138      	bne.n	800e022 <__gethex+0xaa>
 800dfb0:	49a7      	ldr	r1, [pc, #668]	; (800e250 <__gethex+0x2d8>)
 800dfb2:	2201      	movs	r2, #1
 800dfb4:	4640      	mov	r0, r8
 800dfb6:	f7ff ff29 	bl	800de0c <strncmp>
 800dfba:	4606      	mov	r6, r0
 800dfbc:	2800      	cmp	r0, #0
 800dfbe:	d169      	bne.n	800e094 <__gethex+0x11c>
 800dfc0:	f898 0001 	ldrb.w	r0, [r8, #1]
 800dfc4:	465d      	mov	r5, fp
 800dfc6:	f7ff ffc1 	bl	800df4c <__hexdig_fun>
 800dfca:	2800      	cmp	r0, #0
 800dfcc:	d064      	beq.n	800e098 <__gethex+0x120>
 800dfce:	465a      	mov	r2, fp
 800dfd0:	7810      	ldrb	r0, [r2, #0]
 800dfd2:	2830      	cmp	r0, #48	; 0x30
 800dfd4:	4690      	mov	r8, r2
 800dfd6:	f102 0201 	add.w	r2, r2, #1
 800dfda:	d0f9      	beq.n	800dfd0 <__gethex+0x58>
 800dfdc:	f7ff ffb6 	bl	800df4c <__hexdig_fun>
 800dfe0:	2301      	movs	r3, #1
 800dfe2:	fab0 f480 	clz	r4, r0
 800dfe6:	0964      	lsrs	r4, r4, #5
 800dfe8:	465e      	mov	r6, fp
 800dfea:	9301      	str	r3, [sp, #4]
 800dfec:	4642      	mov	r2, r8
 800dfee:	4615      	mov	r5, r2
 800dff0:	3201      	adds	r2, #1
 800dff2:	7828      	ldrb	r0, [r5, #0]
 800dff4:	f7ff ffaa 	bl	800df4c <__hexdig_fun>
 800dff8:	2800      	cmp	r0, #0
 800dffa:	d1f8      	bne.n	800dfee <__gethex+0x76>
 800dffc:	4994      	ldr	r1, [pc, #592]	; (800e250 <__gethex+0x2d8>)
 800dffe:	2201      	movs	r2, #1
 800e000:	4628      	mov	r0, r5
 800e002:	f7ff ff03 	bl	800de0c <strncmp>
 800e006:	b978      	cbnz	r0, 800e028 <__gethex+0xb0>
 800e008:	b946      	cbnz	r6, 800e01c <__gethex+0xa4>
 800e00a:	1c6e      	adds	r6, r5, #1
 800e00c:	4632      	mov	r2, r6
 800e00e:	4615      	mov	r5, r2
 800e010:	3201      	adds	r2, #1
 800e012:	7828      	ldrb	r0, [r5, #0]
 800e014:	f7ff ff9a 	bl	800df4c <__hexdig_fun>
 800e018:	2800      	cmp	r0, #0
 800e01a:	d1f8      	bne.n	800e00e <__gethex+0x96>
 800e01c:	1b73      	subs	r3, r6, r5
 800e01e:	009e      	lsls	r6, r3, #2
 800e020:	e004      	b.n	800e02c <__gethex+0xb4>
 800e022:	2400      	movs	r4, #0
 800e024:	4626      	mov	r6, r4
 800e026:	e7e1      	b.n	800dfec <__gethex+0x74>
 800e028:	2e00      	cmp	r6, #0
 800e02a:	d1f7      	bne.n	800e01c <__gethex+0xa4>
 800e02c:	782b      	ldrb	r3, [r5, #0]
 800e02e:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 800e032:	2b50      	cmp	r3, #80	; 0x50
 800e034:	d13d      	bne.n	800e0b2 <__gethex+0x13a>
 800e036:	786b      	ldrb	r3, [r5, #1]
 800e038:	2b2b      	cmp	r3, #43	; 0x2b
 800e03a:	d02f      	beq.n	800e09c <__gethex+0x124>
 800e03c:	2b2d      	cmp	r3, #45	; 0x2d
 800e03e:	d031      	beq.n	800e0a4 <__gethex+0x12c>
 800e040:	1c69      	adds	r1, r5, #1
 800e042:	f04f 0b00 	mov.w	fp, #0
 800e046:	7808      	ldrb	r0, [r1, #0]
 800e048:	f7ff ff80 	bl	800df4c <__hexdig_fun>
 800e04c:	1e42      	subs	r2, r0, #1
 800e04e:	b2d2      	uxtb	r2, r2
 800e050:	2a18      	cmp	r2, #24
 800e052:	d82e      	bhi.n	800e0b2 <__gethex+0x13a>
 800e054:	f1a0 0210 	sub.w	r2, r0, #16
 800e058:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800e05c:	f7ff ff76 	bl	800df4c <__hexdig_fun>
 800e060:	f100 3cff 	add.w	ip, r0, #4294967295
 800e064:	fa5f fc8c 	uxtb.w	ip, ip
 800e068:	f1bc 0f18 	cmp.w	ip, #24
 800e06c:	d91d      	bls.n	800e0aa <__gethex+0x132>
 800e06e:	f1bb 0f00 	cmp.w	fp, #0
 800e072:	d000      	beq.n	800e076 <__gethex+0xfe>
 800e074:	4252      	negs	r2, r2
 800e076:	4416      	add	r6, r2
 800e078:	f8ca 1000 	str.w	r1, [sl]
 800e07c:	b1dc      	cbz	r4, 800e0b6 <__gethex+0x13e>
 800e07e:	9b01      	ldr	r3, [sp, #4]
 800e080:	2b00      	cmp	r3, #0
 800e082:	bf14      	ite	ne
 800e084:	f04f 0800 	movne.w	r8, #0
 800e088:	f04f 0806 	moveq.w	r8, #6
 800e08c:	4640      	mov	r0, r8
 800e08e:	b005      	add	sp, #20
 800e090:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e094:	4645      	mov	r5, r8
 800e096:	4626      	mov	r6, r4
 800e098:	2401      	movs	r4, #1
 800e09a:	e7c7      	b.n	800e02c <__gethex+0xb4>
 800e09c:	f04f 0b00 	mov.w	fp, #0
 800e0a0:	1ca9      	adds	r1, r5, #2
 800e0a2:	e7d0      	b.n	800e046 <__gethex+0xce>
 800e0a4:	f04f 0b01 	mov.w	fp, #1
 800e0a8:	e7fa      	b.n	800e0a0 <__gethex+0x128>
 800e0aa:	230a      	movs	r3, #10
 800e0ac:	fb03 0002 	mla	r0, r3, r2, r0
 800e0b0:	e7d0      	b.n	800e054 <__gethex+0xdc>
 800e0b2:	4629      	mov	r1, r5
 800e0b4:	e7e0      	b.n	800e078 <__gethex+0x100>
 800e0b6:	eba5 0308 	sub.w	r3, r5, r8
 800e0ba:	3b01      	subs	r3, #1
 800e0bc:	4621      	mov	r1, r4
 800e0be:	2b07      	cmp	r3, #7
 800e0c0:	dc0a      	bgt.n	800e0d8 <__gethex+0x160>
 800e0c2:	4648      	mov	r0, r9
 800e0c4:	f7fe f93e 	bl	800c344 <_Balloc>
 800e0c8:	4604      	mov	r4, r0
 800e0ca:	b940      	cbnz	r0, 800e0de <__gethex+0x166>
 800e0cc:	4b61      	ldr	r3, [pc, #388]	; (800e254 <__gethex+0x2dc>)
 800e0ce:	4602      	mov	r2, r0
 800e0d0:	21e4      	movs	r1, #228	; 0xe4
 800e0d2:	4861      	ldr	r0, [pc, #388]	; (800e258 <__gethex+0x2e0>)
 800e0d4:	f7ff feb4 	bl	800de40 <__assert_func>
 800e0d8:	3101      	adds	r1, #1
 800e0da:	105b      	asrs	r3, r3, #1
 800e0dc:	e7ef      	b.n	800e0be <__gethex+0x146>
 800e0de:	f100 0a14 	add.w	sl, r0, #20
 800e0e2:	2300      	movs	r3, #0
 800e0e4:	495a      	ldr	r1, [pc, #360]	; (800e250 <__gethex+0x2d8>)
 800e0e6:	f8cd a004 	str.w	sl, [sp, #4]
 800e0ea:	469b      	mov	fp, r3
 800e0ec:	45a8      	cmp	r8, r5
 800e0ee:	d342      	bcc.n	800e176 <__gethex+0x1fe>
 800e0f0:	9801      	ldr	r0, [sp, #4]
 800e0f2:	f840 bb04 	str.w	fp, [r0], #4
 800e0f6:	eba0 000a 	sub.w	r0, r0, sl
 800e0fa:	1080      	asrs	r0, r0, #2
 800e0fc:	6120      	str	r0, [r4, #16]
 800e0fe:	ea4f 1840 	mov.w	r8, r0, lsl #5
 800e102:	4658      	mov	r0, fp
 800e104:	f7fe fa10 	bl	800c528 <__hi0bits>
 800e108:	683d      	ldr	r5, [r7, #0]
 800e10a:	eba8 0000 	sub.w	r0, r8, r0
 800e10e:	42a8      	cmp	r0, r5
 800e110:	dd59      	ble.n	800e1c6 <__gethex+0x24e>
 800e112:	eba0 0805 	sub.w	r8, r0, r5
 800e116:	4641      	mov	r1, r8
 800e118:	4620      	mov	r0, r4
 800e11a:	f7fe fd9f 	bl	800cc5c <__any_on>
 800e11e:	4683      	mov	fp, r0
 800e120:	b1b8      	cbz	r0, 800e152 <__gethex+0x1da>
 800e122:	f108 33ff 	add.w	r3, r8, #4294967295
 800e126:	1159      	asrs	r1, r3, #5
 800e128:	f003 021f 	and.w	r2, r3, #31
 800e12c:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 800e130:	f04f 0b01 	mov.w	fp, #1
 800e134:	fa0b f202 	lsl.w	r2, fp, r2
 800e138:	420a      	tst	r2, r1
 800e13a:	d00a      	beq.n	800e152 <__gethex+0x1da>
 800e13c:	455b      	cmp	r3, fp
 800e13e:	dd06      	ble.n	800e14e <__gethex+0x1d6>
 800e140:	f1a8 0102 	sub.w	r1, r8, #2
 800e144:	4620      	mov	r0, r4
 800e146:	f7fe fd89 	bl	800cc5c <__any_on>
 800e14a:	2800      	cmp	r0, #0
 800e14c:	d138      	bne.n	800e1c0 <__gethex+0x248>
 800e14e:	f04f 0b02 	mov.w	fp, #2
 800e152:	4641      	mov	r1, r8
 800e154:	4620      	mov	r0, r4
 800e156:	f7ff fea7 	bl	800dea8 <rshift>
 800e15a:	4446      	add	r6, r8
 800e15c:	68bb      	ldr	r3, [r7, #8]
 800e15e:	42b3      	cmp	r3, r6
 800e160:	da41      	bge.n	800e1e6 <__gethex+0x26e>
 800e162:	4621      	mov	r1, r4
 800e164:	4648      	mov	r0, r9
 800e166:	f7fe f92d 	bl	800c3c4 <_Bfree>
 800e16a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800e16c:	2300      	movs	r3, #0
 800e16e:	6013      	str	r3, [r2, #0]
 800e170:	f04f 08a3 	mov.w	r8, #163	; 0xa3
 800e174:	e78a      	b.n	800e08c <__gethex+0x114>
 800e176:	f815 2d01 	ldrb.w	r2, [r5, #-1]!
 800e17a:	2a2e      	cmp	r2, #46	; 0x2e
 800e17c:	d014      	beq.n	800e1a8 <__gethex+0x230>
 800e17e:	2b20      	cmp	r3, #32
 800e180:	d106      	bne.n	800e190 <__gethex+0x218>
 800e182:	9b01      	ldr	r3, [sp, #4]
 800e184:	f843 bb04 	str.w	fp, [r3], #4
 800e188:	f04f 0b00 	mov.w	fp, #0
 800e18c:	9301      	str	r3, [sp, #4]
 800e18e:	465b      	mov	r3, fp
 800e190:	7828      	ldrb	r0, [r5, #0]
 800e192:	9303      	str	r3, [sp, #12]
 800e194:	f7ff feda 	bl	800df4c <__hexdig_fun>
 800e198:	9b03      	ldr	r3, [sp, #12]
 800e19a:	f000 000f 	and.w	r0, r0, #15
 800e19e:	4098      	lsls	r0, r3
 800e1a0:	ea4b 0b00 	orr.w	fp, fp, r0
 800e1a4:	3304      	adds	r3, #4
 800e1a6:	e7a1      	b.n	800e0ec <__gethex+0x174>
 800e1a8:	45a8      	cmp	r8, r5
 800e1aa:	d8e8      	bhi.n	800e17e <__gethex+0x206>
 800e1ac:	2201      	movs	r2, #1
 800e1ae:	4628      	mov	r0, r5
 800e1b0:	9303      	str	r3, [sp, #12]
 800e1b2:	f7ff fe2b 	bl	800de0c <strncmp>
 800e1b6:	4926      	ldr	r1, [pc, #152]	; (800e250 <__gethex+0x2d8>)
 800e1b8:	9b03      	ldr	r3, [sp, #12]
 800e1ba:	2800      	cmp	r0, #0
 800e1bc:	d1df      	bne.n	800e17e <__gethex+0x206>
 800e1be:	e795      	b.n	800e0ec <__gethex+0x174>
 800e1c0:	f04f 0b03 	mov.w	fp, #3
 800e1c4:	e7c5      	b.n	800e152 <__gethex+0x1da>
 800e1c6:	da0b      	bge.n	800e1e0 <__gethex+0x268>
 800e1c8:	eba5 0800 	sub.w	r8, r5, r0
 800e1cc:	4621      	mov	r1, r4
 800e1ce:	4642      	mov	r2, r8
 800e1d0:	4648      	mov	r0, r9
 800e1d2:	f7fe fb11 	bl	800c7f8 <__lshift>
 800e1d6:	eba6 0608 	sub.w	r6, r6, r8
 800e1da:	4604      	mov	r4, r0
 800e1dc:	f100 0a14 	add.w	sl, r0, #20
 800e1e0:	f04f 0b00 	mov.w	fp, #0
 800e1e4:	e7ba      	b.n	800e15c <__gethex+0x1e4>
 800e1e6:	687b      	ldr	r3, [r7, #4]
 800e1e8:	42b3      	cmp	r3, r6
 800e1ea:	dd73      	ble.n	800e2d4 <__gethex+0x35c>
 800e1ec:	1b9e      	subs	r6, r3, r6
 800e1ee:	42b5      	cmp	r5, r6
 800e1f0:	dc34      	bgt.n	800e25c <__gethex+0x2e4>
 800e1f2:	68fb      	ldr	r3, [r7, #12]
 800e1f4:	2b02      	cmp	r3, #2
 800e1f6:	d023      	beq.n	800e240 <__gethex+0x2c8>
 800e1f8:	2b03      	cmp	r3, #3
 800e1fa:	d025      	beq.n	800e248 <__gethex+0x2d0>
 800e1fc:	2b01      	cmp	r3, #1
 800e1fe:	d115      	bne.n	800e22c <__gethex+0x2b4>
 800e200:	42b5      	cmp	r5, r6
 800e202:	d113      	bne.n	800e22c <__gethex+0x2b4>
 800e204:	2d01      	cmp	r5, #1
 800e206:	d10b      	bne.n	800e220 <__gethex+0x2a8>
 800e208:	9a02      	ldr	r2, [sp, #8]
 800e20a:	687b      	ldr	r3, [r7, #4]
 800e20c:	6013      	str	r3, [r2, #0]
 800e20e:	2301      	movs	r3, #1
 800e210:	6123      	str	r3, [r4, #16]
 800e212:	f8ca 3000 	str.w	r3, [sl]
 800e216:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e218:	f04f 0862 	mov.w	r8, #98	; 0x62
 800e21c:	601c      	str	r4, [r3, #0]
 800e21e:	e735      	b.n	800e08c <__gethex+0x114>
 800e220:	1e69      	subs	r1, r5, #1
 800e222:	4620      	mov	r0, r4
 800e224:	f7fe fd1a 	bl	800cc5c <__any_on>
 800e228:	2800      	cmp	r0, #0
 800e22a:	d1ed      	bne.n	800e208 <__gethex+0x290>
 800e22c:	4621      	mov	r1, r4
 800e22e:	4648      	mov	r0, r9
 800e230:	f7fe f8c8 	bl	800c3c4 <_Bfree>
 800e234:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800e236:	2300      	movs	r3, #0
 800e238:	6013      	str	r3, [r2, #0]
 800e23a:	f04f 0850 	mov.w	r8, #80	; 0x50
 800e23e:	e725      	b.n	800e08c <__gethex+0x114>
 800e240:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800e242:	2b00      	cmp	r3, #0
 800e244:	d1f2      	bne.n	800e22c <__gethex+0x2b4>
 800e246:	e7df      	b.n	800e208 <__gethex+0x290>
 800e248:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800e24a:	2b00      	cmp	r3, #0
 800e24c:	d1dc      	bne.n	800e208 <__gethex+0x290>
 800e24e:	e7ed      	b.n	800e22c <__gethex+0x2b4>
 800e250:	0801200c 	.word	0x0801200c
 800e254:	08011ea5 	.word	0x08011ea5
 800e258:	080121b6 	.word	0x080121b6
 800e25c:	f106 38ff 	add.w	r8, r6, #4294967295
 800e260:	f1bb 0f00 	cmp.w	fp, #0
 800e264:	d133      	bne.n	800e2ce <__gethex+0x356>
 800e266:	f1b8 0f00 	cmp.w	r8, #0
 800e26a:	d004      	beq.n	800e276 <__gethex+0x2fe>
 800e26c:	4641      	mov	r1, r8
 800e26e:	4620      	mov	r0, r4
 800e270:	f7fe fcf4 	bl	800cc5c <__any_on>
 800e274:	4683      	mov	fp, r0
 800e276:	ea4f 1268 	mov.w	r2, r8, asr #5
 800e27a:	2301      	movs	r3, #1
 800e27c:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 800e280:	f008 081f 	and.w	r8, r8, #31
 800e284:	fa03 f308 	lsl.w	r3, r3, r8
 800e288:	4213      	tst	r3, r2
 800e28a:	4631      	mov	r1, r6
 800e28c:	4620      	mov	r0, r4
 800e28e:	bf18      	it	ne
 800e290:	f04b 0b02 	orrne.w	fp, fp, #2
 800e294:	1bad      	subs	r5, r5, r6
 800e296:	f7ff fe07 	bl	800dea8 <rshift>
 800e29a:	687e      	ldr	r6, [r7, #4]
 800e29c:	f04f 0802 	mov.w	r8, #2
 800e2a0:	f1bb 0f00 	cmp.w	fp, #0
 800e2a4:	d04a      	beq.n	800e33c <__gethex+0x3c4>
 800e2a6:	68fb      	ldr	r3, [r7, #12]
 800e2a8:	2b02      	cmp	r3, #2
 800e2aa:	d016      	beq.n	800e2da <__gethex+0x362>
 800e2ac:	2b03      	cmp	r3, #3
 800e2ae:	d018      	beq.n	800e2e2 <__gethex+0x36a>
 800e2b0:	2b01      	cmp	r3, #1
 800e2b2:	d109      	bne.n	800e2c8 <__gethex+0x350>
 800e2b4:	f01b 0f02 	tst.w	fp, #2
 800e2b8:	d006      	beq.n	800e2c8 <__gethex+0x350>
 800e2ba:	f8da 3000 	ldr.w	r3, [sl]
 800e2be:	ea4b 0b03 	orr.w	fp, fp, r3
 800e2c2:	f01b 0f01 	tst.w	fp, #1
 800e2c6:	d10f      	bne.n	800e2e8 <__gethex+0x370>
 800e2c8:	f048 0810 	orr.w	r8, r8, #16
 800e2cc:	e036      	b.n	800e33c <__gethex+0x3c4>
 800e2ce:	f04f 0b01 	mov.w	fp, #1
 800e2d2:	e7d0      	b.n	800e276 <__gethex+0x2fe>
 800e2d4:	f04f 0801 	mov.w	r8, #1
 800e2d8:	e7e2      	b.n	800e2a0 <__gethex+0x328>
 800e2da:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800e2dc:	f1c3 0301 	rsb	r3, r3, #1
 800e2e0:	930f      	str	r3, [sp, #60]	; 0x3c
 800e2e2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800e2e4:	2b00      	cmp	r3, #0
 800e2e6:	d0ef      	beq.n	800e2c8 <__gethex+0x350>
 800e2e8:	f8d4 b010 	ldr.w	fp, [r4, #16]
 800e2ec:	f104 0214 	add.w	r2, r4, #20
 800e2f0:	ea4f 038b 	mov.w	r3, fp, lsl #2
 800e2f4:	9301      	str	r3, [sp, #4]
 800e2f6:	eb02 008b 	add.w	r0, r2, fp, lsl #2
 800e2fa:	2300      	movs	r3, #0
 800e2fc:	4694      	mov	ip, r2
 800e2fe:	f852 1b04 	ldr.w	r1, [r2], #4
 800e302:	f1b1 3fff 	cmp.w	r1, #4294967295
 800e306:	d01e      	beq.n	800e346 <__gethex+0x3ce>
 800e308:	3101      	adds	r1, #1
 800e30a:	f8cc 1000 	str.w	r1, [ip]
 800e30e:	f1b8 0f02 	cmp.w	r8, #2
 800e312:	f104 0214 	add.w	r2, r4, #20
 800e316:	d13d      	bne.n	800e394 <__gethex+0x41c>
 800e318:	683b      	ldr	r3, [r7, #0]
 800e31a:	3b01      	subs	r3, #1
 800e31c:	42ab      	cmp	r3, r5
 800e31e:	d10b      	bne.n	800e338 <__gethex+0x3c0>
 800e320:	1169      	asrs	r1, r5, #5
 800e322:	2301      	movs	r3, #1
 800e324:	f005 051f 	and.w	r5, r5, #31
 800e328:	fa03 f505 	lsl.w	r5, r3, r5
 800e32c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800e330:	421d      	tst	r5, r3
 800e332:	bf18      	it	ne
 800e334:	f04f 0801 	movne.w	r8, #1
 800e338:	f048 0820 	orr.w	r8, r8, #32
 800e33c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e33e:	601c      	str	r4, [r3, #0]
 800e340:	9b02      	ldr	r3, [sp, #8]
 800e342:	601e      	str	r6, [r3, #0]
 800e344:	e6a2      	b.n	800e08c <__gethex+0x114>
 800e346:	4290      	cmp	r0, r2
 800e348:	f842 3c04 	str.w	r3, [r2, #-4]
 800e34c:	d8d6      	bhi.n	800e2fc <__gethex+0x384>
 800e34e:	68a2      	ldr	r2, [r4, #8]
 800e350:	4593      	cmp	fp, r2
 800e352:	db17      	blt.n	800e384 <__gethex+0x40c>
 800e354:	6861      	ldr	r1, [r4, #4]
 800e356:	4648      	mov	r0, r9
 800e358:	3101      	adds	r1, #1
 800e35a:	f7fd fff3 	bl	800c344 <_Balloc>
 800e35e:	4682      	mov	sl, r0
 800e360:	b918      	cbnz	r0, 800e36a <__gethex+0x3f2>
 800e362:	4b1b      	ldr	r3, [pc, #108]	; (800e3d0 <__gethex+0x458>)
 800e364:	4602      	mov	r2, r0
 800e366:	2184      	movs	r1, #132	; 0x84
 800e368:	e6b3      	b.n	800e0d2 <__gethex+0x15a>
 800e36a:	6922      	ldr	r2, [r4, #16]
 800e36c:	3202      	adds	r2, #2
 800e36e:	f104 010c 	add.w	r1, r4, #12
 800e372:	0092      	lsls	r2, r2, #2
 800e374:	300c      	adds	r0, #12
 800e376:	f7fd f908 	bl	800b58a <memcpy>
 800e37a:	4621      	mov	r1, r4
 800e37c:	4648      	mov	r0, r9
 800e37e:	f7fe f821 	bl	800c3c4 <_Bfree>
 800e382:	4654      	mov	r4, sl
 800e384:	6922      	ldr	r2, [r4, #16]
 800e386:	1c51      	adds	r1, r2, #1
 800e388:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 800e38c:	6121      	str	r1, [r4, #16]
 800e38e:	2101      	movs	r1, #1
 800e390:	6151      	str	r1, [r2, #20]
 800e392:	e7bc      	b.n	800e30e <__gethex+0x396>
 800e394:	6921      	ldr	r1, [r4, #16]
 800e396:	4559      	cmp	r1, fp
 800e398:	dd0b      	ble.n	800e3b2 <__gethex+0x43a>
 800e39a:	2101      	movs	r1, #1
 800e39c:	4620      	mov	r0, r4
 800e39e:	f7ff fd83 	bl	800dea8 <rshift>
 800e3a2:	68bb      	ldr	r3, [r7, #8]
 800e3a4:	3601      	adds	r6, #1
 800e3a6:	42b3      	cmp	r3, r6
 800e3a8:	f6ff aedb 	blt.w	800e162 <__gethex+0x1ea>
 800e3ac:	f04f 0801 	mov.w	r8, #1
 800e3b0:	e7c2      	b.n	800e338 <__gethex+0x3c0>
 800e3b2:	f015 051f 	ands.w	r5, r5, #31
 800e3b6:	d0f9      	beq.n	800e3ac <__gethex+0x434>
 800e3b8:	9b01      	ldr	r3, [sp, #4]
 800e3ba:	441a      	add	r2, r3
 800e3bc:	f1c5 0520 	rsb	r5, r5, #32
 800e3c0:	f852 0c04 	ldr.w	r0, [r2, #-4]
 800e3c4:	f7fe f8b0 	bl	800c528 <__hi0bits>
 800e3c8:	42a8      	cmp	r0, r5
 800e3ca:	dbe6      	blt.n	800e39a <__gethex+0x422>
 800e3cc:	e7ee      	b.n	800e3ac <__gethex+0x434>
 800e3ce:	bf00      	nop
 800e3d0:	08011ea5 	.word	0x08011ea5

0800e3d4 <L_shift>:
 800e3d4:	f1c2 0208 	rsb	r2, r2, #8
 800e3d8:	0092      	lsls	r2, r2, #2
 800e3da:	b570      	push	{r4, r5, r6, lr}
 800e3dc:	f1c2 0620 	rsb	r6, r2, #32
 800e3e0:	6843      	ldr	r3, [r0, #4]
 800e3e2:	6804      	ldr	r4, [r0, #0]
 800e3e4:	fa03 f506 	lsl.w	r5, r3, r6
 800e3e8:	432c      	orrs	r4, r5
 800e3ea:	40d3      	lsrs	r3, r2
 800e3ec:	6004      	str	r4, [r0, #0]
 800e3ee:	f840 3f04 	str.w	r3, [r0, #4]!
 800e3f2:	4288      	cmp	r0, r1
 800e3f4:	d3f4      	bcc.n	800e3e0 <L_shift+0xc>
 800e3f6:	bd70      	pop	{r4, r5, r6, pc}

0800e3f8 <__match>:
 800e3f8:	b530      	push	{r4, r5, lr}
 800e3fa:	6803      	ldr	r3, [r0, #0]
 800e3fc:	3301      	adds	r3, #1
 800e3fe:	f811 4b01 	ldrb.w	r4, [r1], #1
 800e402:	b914      	cbnz	r4, 800e40a <__match+0x12>
 800e404:	6003      	str	r3, [r0, #0]
 800e406:	2001      	movs	r0, #1
 800e408:	bd30      	pop	{r4, r5, pc}
 800e40a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e40e:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 800e412:	2d19      	cmp	r5, #25
 800e414:	bf98      	it	ls
 800e416:	3220      	addls	r2, #32
 800e418:	42a2      	cmp	r2, r4
 800e41a:	d0f0      	beq.n	800e3fe <__match+0x6>
 800e41c:	2000      	movs	r0, #0
 800e41e:	e7f3      	b.n	800e408 <__match+0x10>

0800e420 <__hexnan>:
 800e420:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e424:	680b      	ldr	r3, [r1, #0]
 800e426:	6801      	ldr	r1, [r0, #0]
 800e428:	115e      	asrs	r6, r3, #5
 800e42a:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 800e42e:	f013 031f 	ands.w	r3, r3, #31
 800e432:	b087      	sub	sp, #28
 800e434:	bf18      	it	ne
 800e436:	3604      	addne	r6, #4
 800e438:	2500      	movs	r5, #0
 800e43a:	1f37      	subs	r7, r6, #4
 800e43c:	4682      	mov	sl, r0
 800e43e:	4690      	mov	r8, r2
 800e440:	9301      	str	r3, [sp, #4]
 800e442:	f846 5c04 	str.w	r5, [r6, #-4]
 800e446:	46b9      	mov	r9, r7
 800e448:	463c      	mov	r4, r7
 800e44a:	9502      	str	r5, [sp, #8]
 800e44c:	46ab      	mov	fp, r5
 800e44e:	784a      	ldrb	r2, [r1, #1]
 800e450:	1c4b      	adds	r3, r1, #1
 800e452:	9303      	str	r3, [sp, #12]
 800e454:	b342      	cbz	r2, 800e4a8 <__hexnan+0x88>
 800e456:	4610      	mov	r0, r2
 800e458:	9105      	str	r1, [sp, #20]
 800e45a:	9204      	str	r2, [sp, #16]
 800e45c:	f7ff fd76 	bl	800df4c <__hexdig_fun>
 800e460:	2800      	cmp	r0, #0
 800e462:	d14f      	bne.n	800e504 <__hexnan+0xe4>
 800e464:	9a04      	ldr	r2, [sp, #16]
 800e466:	9905      	ldr	r1, [sp, #20]
 800e468:	2a20      	cmp	r2, #32
 800e46a:	d818      	bhi.n	800e49e <__hexnan+0x7e>
 800e46c:	9b02      	ldr	r3, [sp, #8]
 800e46e:	459b      	cmp	fp, r3
 800e470:	dd13      	ble.n	800e49a <__hexnan+0x7a>
 800e472:	454c      	cmp	r4, r9
 800e474:	d206      	bcs.n	800e484 <__hexnan+0x64>
 800e476:	2d07      	cmp	r5, #7
 800e478:	dc04      	bgt.n	800e484 <__hexnan+0x64>
 800e47a:	462a      	mov	r2, r5
 800e47c:	4649      	mov	r1, r9
 800e47e:	4620      	mov	r0, r4
 800e480:	f7ff ffa8 	bl	800e3d4 <L_shift>
 800e484:	4544      	cmp	r4, r8
 800e486:	d950      	bls.n	800e52a <__hexnan+0x10a>
 800e488:	2300      	movs	r3, #0
 800e48a:	f1a4 0904 	sub.w	r9, r4, #4
 800e48e:	f844 3c04 	str.w	r3, [r4, #-4]
 800e492:	f8cd b008 	str.w	fp, [sp, #8]
 800e496:	464c      	mov	r4, r9
 800e498:	461d      	mov	r5, r3
 800e49a:	9903      	ldr	r1, [sp, #12]
 800e49c:	e7d7      	b.n	800e44e <__hexnan+0x2e>
 800e49e:	2a29      	cmp	r2, #41	; 0x29
 800e4a0:	d155      	bne.n	800e54e <__hexnan+0x12e>
 800e4a2:	3102      	adds	r1, #2
 800e4a4:	f8ca 1000 	str.w	r1, [sl]
 800e4a8:	f1bb 0f00 	cmp.w	fp, #0
 800e4ac:	d04f      	beq.n	800e54e <__hexnan+0x12e>
 800e4ae:	454c      	cmp	r4, r9
 800e4b0:	d206      	bcs.n	800e4c0 <__hexnan+0xa0>
 800e4b2:	2d07      	cmp	r5, #7
 800e4b4:	dc04      	bgt.n	800e4c0 <__hexnan+0xa0>
 800e4b6:	462a      	mov	r2, r5
 800e4b8:	4649      	mov	r1, r9
 800e4ba:	4620      	mov	r0, r4
 800e4bc:	f7ff ff8a 	bl	800e3d4 <L_shift>
 800e4c0:	4544      	cmp	r4, r8
 800e4c2:	d934      	bls.n	800e52e <__hexnan+0x10e>
 800e4c4:	f1a8 0204 	sub.w	r2, r8, #4
 800e4c8:	4623      	mov	r3, r4
 800e4ca:	f853 1b04 	ldr.w	r1, [r3], #4
 800e4ce:	f842 1f04 	str.w	r1, [r2, #4]!
 800e4d2:	429f      	cmp	r7, r3
 800e4d4:	d2f9      	bcs.n	800e4ca <__hexnan+0xaa>
 800e4d6:	1b3b      	subs	r3, r7, r4
 800e4d8:	f023 0303 	bic.w	r3, r3, #3
 800e4dc:	3304      	adds	r3, #4
 800e4de:	3e03      	subs	r6, #3
 800e4e0:	3401      	adds	r4, #1
 800e4e2:	42a6      	cmp	r6, r4
 800e4e4:	bf38      	it	cc
 800e4e6:	2304      	movcc	r3, #4
 800e4e8:	4443      	add	r3, r8
 800e4ea:	2200      	movs	r2, #0
 800e4ec:	f843 2b04 	str.w	r2, [r3], #4
 800e4f0:	429f      	cmp	r7, r3
 800e4f2:	d2fb      	bcs.n	800e4ec <__hexnan+0xcc>
 800e4f4:	683b      	ldr	r3, [r7, #0]
 800e4f6:	b91b      	cbnz	r3, 800e500 <__hexnan+0xe0>
 800e4f8:	4547      	cmp	r7, r8
 800e4fa:	d126      	bne.n	800e54a <__hexnan+0x12a>
 800e4fc:	2301      	movs	r3, #1
 800e4fe:	603b      	str	r3, [r7, #0]
 800e500:	2005      	movs	r0, #5
 800e502:	e025      	b.n	800e550 <__hexnan+0x130>
 800e504:	3501      	adds	r5, #1
 800e506:	2d08      	cmp	r5, #8
 800e508:	f10b 0b01 	add.w	fp, fp, #1
 800e50c:	dd06      	ble.n	800e51c <__hexnan+0xfc>
 800e50e:	4544      	cmp	r4, r8
 800e510:	d9c3      	bls.n	800e49a <__hexnan+0x7a>
 800e512:	2300      	movs	r3, #0
 800e514:	f844 3c04 	str.w	r3, [r4, #-4]
 800e518:	2501      	movs	r5, #1
 800e51a:	3c04      	subs	r4, #4
 800e51c:	6822      	ldr	r2, [r4, #0]
 800e51e:	f000 000f 	and.w	r0, r0, #15
 800e522:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 800e526:	6020      	str	r0, [r4, #0]
 800e528:	e7b7      	b.n	800e49a <__hexnan+0x7a>
 800e52a:	2508      	movs	r5, #8
 800e52c:	e7b5      	b.n	800e49a <__hexnan+0x7a>
 800e52e:	9b01      	ldr	r3, [sp, #4]
 800e530:	2b00      	cmp	r3, #0
 800e532:	d0df      	beq.n	800e4f4 <__hexnan+0xd4>
 800e534:	f1c3 0320 	rsb	r3, r3, #32
 800e538:	f04f 32ff 	mov.w	r2, #4294967295
 800e53c:	40da      	lsrs	r2, r3
 800e53e:	f856 3c04 	ldr.w	r3, [r6, #-4]
 800e542:	4013      	ands	r3, r2
 800e544:	f846 3c04 	str.w	r3, [r6, #-4]
 800e548:	e7d4      	b.n	800e4f4 <__hexnan+0xd4>
 800e54a:	3f04      	subs	r7, #4
 800e54c:	e7d2      	b.n	800e4f4 <__hexnan+0xd4>
 800e54e:	2004      	movs	r0, #4
 800e550:	b007      	add	sp, #28
 800e552:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e556 <__ascii_mbtowc>:
 800e556:	b082      	sub	sp, #8
 800e558:	b901      	cbnz	r1, 800e55c <__ascii_mbtowc+0x6>
 800e55a:	a901      	add	r1, sp, #4
 800e55c:	b142      	cbz	r2, 800e570 <__ascii_mbtowc+0x1a>
 800e55e:	b14b      	cbz	r3, 800e574 <__ascii_mbtowc+0x1e>
 800e560:	7813      	ldrb	r3, [r2, #0]
 800e562:	600b      	str	r3, [r1, #0]
 800e564:	7812      	ldrb	r2, [r2, #0]
 800e566:	1e10      	subs	r0, r2, #0
 800e568:	bf18      	it	ne
 800e56a:	2001      	movne	r0, #1
 800e56c:	b002      	add	sp, #8
 800e56e:	4770      	bx	lr
 800e570:	4610      	mov	r0, r2
 800e572:	e7fb      	b.n	800e56c <__ascii_mbtowc+0x16>
 800e574:	f06f 0001 	mvn.w	r0, #1
 800e578:	e7f8      	b.n	800e56c <__ascii_mbtowc+0x16>

0800e57a <_realloc_r>:
 800e57a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e57e:	4680      	mov	r8, r0
 800e580:	4614      	mov	r4, r2
 800e582:	460e      	mov	r6, r1
 800e584:	b921      	cbnz	r1, 800e590 <_realloc_r+0x16>
 800e586:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800e58a:	4611      	mov	r1, r2
 800e58c:	f7fb bf12 	b.w	800a3b4 <_malloc_r>
 800e590:	b92a      	cbnz	r2, 800e59e <_realloc_r+0x24>
 800e592:	f7fd fe8b 	bl	800c2ac <_free_r>
 800e596:	4625      	mov	r5, r4
 800e598:	4628      	mov	r0, r5
 800e59a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e59e:	f000 f842 	bl	800e626 <_malloc_usable_size_r>
 800e5a2:	4284      	cmp	r4, r0
 800e5a4:	4607      	mov	r7, r0
 800e5a6:	d802      	bhi.n	800e5ae <_realloc_r+0x34>
 800e5a8:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800e5ac:	d812      	bhi.n	800e5d4 <_realloc_r+0x5a>
 800e5ae:	4621      	mov	r1, r4
 800e5b0:	4640      	mov	r0, r8
 800e5b2:	f7fb feff 	bl	800a3b4 <_malloc_r>
 800e5b6:	4605      	mov	r5, r0
 800e5b8:	2800      	cmp	r0, #0
 800e5ba:	d0ed      	beq.n	800e598 <_realloc_r+0x1e>
 800e5bc:	42bc      	cmp	r4, r7
 800e5be:	4622      	mov	r2, r4
 800e5c0:	4631      	mov	r1, r6
 800e5c2:	bf28      	it	cs
 800e5c4:	463a      	movcs	r2, r7
 800e5c6:	f7fc ffe0 	bl	800b58a <memcpy>
 800e5ca:	4631      	mov	r1, r6
 800e5cc:	4640      	mov	r0, r8
 800e5ce:	f7fd fe6d 	bl	800c2ac <_free_r>
 800e5d2:	e7e1      	b.n	800e598 <_realloc_r+0x1e>
 800e5d4:	4635      	mov	r5, r6
 800e5d6:	e7df      	b.n	800e598 <_realloc_r+0x1e>

0800e5d8 <__ascii_wctomb>:
 800e5d8:	b149      	cbz	r1, 800e5ee <__ascii_wctomb+0x16>
 800e5da:	2aff      	cmp	r2, #255	; 0xff
 800e5dc:	bf85      	ittet	hi
 800e5de:	238a      	movhi	r3, #138	; 0x8a
 800e5e0:	6003      	strhi	r3, [r0, #0]
 800e5e2:	700a      	strbls	r2, [r1, #0]
 800e5e4:	f04f 30ff 	movhi.w	r0, #4294967295
 800e5e8:	bf98      	it	ls
 800e5ea:	2001      	movls	r0, #1
 800e5ec:	4770      	bx	lr
 800e5ee:	4608      	mov	r0, r1
 800e5f0:	4770      	bx	lr
	...

0800e5f4 <fiprintf>:
 800e5f4:	b40e      	push	{r1, r2, r3}
 800e5f6:	b503      	push	{r0, r1, lr}
 800e5f8:	4601      	mov	r1, r0
 800e5fa:	ab03      	add	r3, sp, #12
 800e5fc:	4805      	ldr	r0, [pc, #20]	; (800e614 <fiprintf+0x20>)
 800e5fe:	f853 2b04 	ldr.w	r2, [r3], #4
 800e602:	6800      	ldr	r0, [r0, #0]
 800e604:	9301      	str	r3, [sp, #4]
 800e606:	f000 f83f 	bl	800e688 <_vfiprintf_r>
 800e60a:	b002      	add	sp, #8
 800e60c:	f85d eb04 	ldr.w	lr, [sp], #4
 800e610:	b003      	add	sp, #12
 800e612:	4770      	bx	lr
 800e614:	20000064 	.word	0x20000064

0800e618 <abort>:
 800e618:	b508      	push	{r3, lr}
 800e61a:	2006      	movs	r0, #6
 800e61c:	f000 fa0c 	bl	800ea38 <raise>
 800e620:	2001      	movs	r0, #1
 800e622:	f7f6 fb37 	bl	8004c94 <_exit>

0800e626 <_malloc_usable_size_r>:
 800e626:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800e62a:	1f18      	subs	r0, r3, #4
 800e62c:	2b00      	cmp	r3, #0
 800e62e:	bfbc      	itt	lt
 800e630:	580b      	ldrlt	r3, [r1, r0]
 800e632:	18c0      	addlt	r0, r0, r3
 800e634:	4770      	bx	lr

0800e636 <__sfputc_r>:
 800e636:	6893      	ldr	r3, [r2, #8]
 800e638:	3b01      	subs	r3, #1
 800e63a:	2b00      	cmp	r3, #0
 800e63c:	b410      	push	{r4}
 800e63e:	6093      	str	r3, [r2, #8]
 800e640:	da08      	bge.n	800e654 <__sfputc_r+0x1e>
 800e642:	6994      	ldr	r4, [r2, #24]
 800e644:	42a3      	cmp	r3, r4
 800e646:	db01      	blt.n	800e64c <__sfputc_r+0x16>
 800e648:	290a      	cmp	r1, #10
 800e64a:	d103      	bne.n	800e654 <__sfputc_r+0x1e>
 800e64c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e650:	f000 b934 	b.w	800e8bc <__swbuf_r>
 800e654:	6813      	ldr	r3, [r2, #0]
 800e656:	1c58      	adds	r0, r3, #1
 800e658:	6010      	str	r0, [r2, #0]
 800e65a:	7019      	strb	r1, [r3, #0]
 800e65c:	4608      	mov	r0, r1
 800e65e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e662:	4770      	bx	lr

0800e664 <__sfputs_r>:
 800e664:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e666:	4606      	mov	r6, r0
 800e668:	460f      	mov	r7, r1
 800e66a:	4614      	mov	r4, r2
 800e66c:	18d5      	adds	r5, r2, r3
 800e66e:	42ac      	cmp	r4, r5
 800e670:	d101      	bne.n	800e676 <__sfputs_r+0x12>
 800e672:	2000      	movs	r0, #0
 800e674:	e007      	b.n	800e686 <__sfputs_r+0x22>
 800e676:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e67a:	463a      	mov	r2, r7
 800e67c:	4630      	mov	r0, r6
 800e67e:	f7ff ffda 	bl	800e636 <__sfputc_r>
 800e682:	1c43      	adds	r3, r0, #1
 800e684:	d1f3      	bne.n	800e66e <__sfputs_r+0xa>
 800e686:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e688 <_vfiprintf_r>:
 800e688:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e68c:	460d      	mov	r5, r1
 800e68e:	b09d      	sub	sp, #116	; 0x74
 800e690:	4614      	mov	r4, r2
 800e692:	4698      	mov	r8, r3
 800e694:	4606      	mov	r6, r0
 800e696:	b118      	cbz	r0, 800e6a0 <_vfiprintf_r+0x18>
 800e698:	6a03      	ldr	r3, [r0, #32]
 800e69a:	b90b      	cbnz	r3, 800e6a0 <_vfiprintf_r+0x18>
 800e69c:	f7fc fe18 	bl	800b2d0 <__sinit>
 800e6a0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800e6a2:	07d9      	lsls	r1, r3, #31
 800e6a4:	d405      	bmi.n	800e6b2 <_vfiprintf_r+0x2a>
 800e6a6:	89ab      	ldrh	r3, [r5, #12]
 800e6a8:	059a      	lsls	r2, r3, #22
 800e6aa:	d402      	bmi.n	800e6b2 <_vfiprintf_r+0x2a>
 800e6ac:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800e6ae:	f7fc ff6a 	bl	800b586 <__retarget_lock_acquire_recursive>
 800e6b2:	89ab      	ldrh	r3, [r5, #12]
 800e6b4:	071b      	lsls	r3, r3, #28
 800e6b6:	d501      	bpl.n	800e6bc <_vfiprintf_r+0x34>
 800e6b8:	692b      	ldr	r3, [r5, #16]
 800e6ba:	b99b      	cbnz	r3, 800e6e4 <_vfiprintf_r+0x5c>
 800e6bc:	4629      	mov	r1, r5
 800e6be:	4630      	mov	r0, r6
 800e6c0:	f000 f93a 	bl	800e938 <__swsetup_r>
 800e6c4:	b170      	cbz	r0, 800e6e4 <_vfiprintf_r+0x5c>
 800e6c6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800e6c8:	07dc      	lsls	r4, r3, #31
 800e6ca:	d504      	bpl.n	800e6d6 <_vfiprintf_r+0x4e>
 800e6cc:	f04f 30ff 	mov.w	r0, #4294967295
 800e6d0:	b01d      	add	sp, #116	; 0x74
 800e6d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e6d6:	89ab      	ldrh	r3, [r5, #12]
 800e6d8:	0598      	lsls	r0, r3, #22
 800e6da:	d4f7      	bmi.n	800e6cc <_vfiprintf_r+0x44>
 800e6dc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800e6de:	f7fc ff53 	bl	800b588 <__retarget_lock_release_recursive>
 800e6e2:	e7f3      	b.n	800e6cc <_vfiprintf_r+0x44>
 800e6e4:	2300      	movs	r3, #0
 800e6e6:	9309      	str	r3, [sp, #36]	; 0x24
 800e6e8:	2320      	movs	r3, #32
 800e6ea:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800e6ee:	f8cd 800c 	str.w	r8, [sp, #12]
 800e6f2:	2330      	movs	r3, #48	; 0x30
 800e6f4:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 800e8a8 <_vfiprintf_r+0x220>
 800e6f8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800e6fc:	f04f 0901 	mov.w	r9, #1
 800e700:	4623      	mov	r3, r4
 800e702:	469a      	mov	sl, r3
 800e704:	f813 2b01 	ldrb.w	r2, [r3], #1
 800e708:	b10a      	cbz	r2, 800e70e <_vfiprintf_r+0x86>
 800e70a:	2a25      	cmp	r2, #37	; 0x25
 800e70c:	d1f9      	bne.n	800e702 <_vfiprintf_r+0x7a>
 800e70e:	ebba 0b04 	subs.w	fp, sl, r4
 800e712:	d00b      	beq.n	800e72c <_vfiprintf_r+0xa4>
 800e714:	465b      	mov	r3, fp
 800e716:	4622      	mov	r2, r4
 800e718:	4629      	mov	r1, r5
 800e71a:	4630      	mov	r0, r6
 800e71c:	f7ff ffa2 	bl	800e664 <__sfputs_r>
 800e720:	3001      	adds	r0, #1
 800e722:	f000 80a9 	beq.w	800e878 <_vfiprintf_r+0x1f0>
 800e726:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800e728:	445a      	add	r2, fp
 800e72a:	9209      	str	r2, [sp, #36]	; 0x24
 800e72c:	f89a 3000 	ldrb.w	r3, [sl]
 800e730:	2b00      	cmp	r3, #0
 800e732:	f000 80a1 	beq.w	800e878 <_vfiprintf_r+0x1f0>
 800e736:	2300      	movs	r3, #0
 800e738:	f04f 32ff 	mov.w	r2, #4294967295
 800e73c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800e740:	f10a 0a01 	add.w	sl, sl, #1
 800e744:	9304      	str	r3, [sp, #16]
 800e746:	9307      	str	r3, [sp, #28]
 800e748:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800e74c:	931a      	str	r3, [sp, #104]	; 0x68
 800e74e:	4654      	mov	r4, sl
 800e750:	2205      	movs	r2, #5
 800e752:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e756:	4854      	ldr	r0, [pc, #336]	; (800e8a8 <_vfiprintf_r+0x220>)
 800e758:	f7f1 fd3a 	bl	80001d0 <memchr>
 800e75c:	9a04      	ldr	r2, [sp, #16]
 800e75e:	b9d8      	cbnz	r0, 800e798 <_vfiprintf_r+0x110>
 800e760:	06d1      	lsls	r1, r2, #27
 800e762:	bf44      	itt	mi
 800e764:	2320      	movmi	r3, #32
 800e766:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800e76a:	0713      	lsls	r3, r2, #28
 800e76c:	bf44      	itt	mi
 800e76e:	232b      	movmi	r3, #43	; 0x2b
 800e770:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800e774:	f89a 3000 	ldrb.w	r3, [sl]
 800e778:	2b2a      	cmp	r3, #42	; 0x2a
 800e77a:	d015      	beq.n	800e7a8 <_vfiprintf_r+0x120>
 800e77c:	9a07      	ldr	r2, [sp, #28]
 800e77e:	4654      	mov	r4, sl
 800e780:	2000      	movs	r0, #0
 800e782:	f04f 0c0a 	mov.w	ip, #10
 800e786:	4621      	mov	r1, r4
 800e788:	f811 3b01 	ldrb.w	r3, [r1], #1
 800e78c:	3b30      	subs	r3, #48	; 0x30
 800e78e:	2b09      	cmp	r3, #9
 800e790:	d94d      	bls.n	800e82e <_vfiprintf_r+0x1a6>
 800e792:	b1b0      	cbz	r0, 800e7c2 <_vfiprintf_r+0x13a>
 800e794:	9207      	str	r2, [sp, #28]
 800e796:	e014      	b.n	800e7c2 <_vfiprintf_r+0x13a>
 800e798:	eba0 0308 	sub.w	r3, r0, r8
 800e79c:	fa09 f303 	lsl.w	r3, r9, r3
 800e7a0:	4313      	orrs	r3, r2
 800e7a2:	9304      	str	r3, [sp, #16]
 800e7a4:	46a2      	mov	sl, r4
 800e7a6:	e7d2      	b.n	800e74e <_vfiprintf_r+0xc6>
 800e7a8:	9b03      	ldr	r3, [sp, #12]
 800e7aa:	1d19      	adds	r1, r3, #4
 800e7ac:	681b      	ldr	r3, [r3, #0]
 800e7ae:	9103      	str	r1, [sp, #12]
 800e7b0:	2b00      	cmp	r3, #0
 800e7b2:	bfbb      	ittet	lt
 800e7b4:	425b      	neglt	r3, r3
 800e7b6:	f042 0202 	orrlt.w	r2, r2, #2
 800e7ba:	9307      	strge	r3, [sp, #28]
 800e7bc:	9307      	strlt	r3, [sp, #28]
 800e7be:	bfb8      	it	lt
 800e7c0:	9204      	strlt	r2, [sp, #16]
 800e7c2:	7823      	ldrb	r3, [r4, #0]
 800e7c4:	2b2e      	cmp	r3, #46	; 0x2e
 800e7c6:	d10c      	bne.n	800e7e2 <_vfiprintf_r+0x15a>
 800e7c8:	7863      	ldrb	r3, [r4, #1]
 800e7ca:	2b2a      	cmp	r3, #42	; 0x2a
 800e7cc:	d134      	bne.n	800e838 <_vfiprintf_r+0x1b0>
 800e7ce:	9b03      	ldr	r3, [sp, #12]
 800e7d0:	1d1a      	adds	r2, r3, #4
 800e7d2:	681b      	ldr	r3, [r3, #0]
 800e7d4:	9203      	str	r2, [sp, #12]
 800e7d6:	2b00      	cmp	r3, #0
 800e7d8:	bfb8      	it	lt
 800e7da:	f04f 33ff 	movlt.w	r3, #4294967295
 800e7de:	3402      	adds	r4, #2
 800e7e0:	9305      	str	r3, [sp, #20]
 800e7e2:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 800e8b8 <_vfiprintf_r+0x230>
 800e7e6:	7821      	ldrb	r1, [r4, #0]
 800e7e8:	2203      	movs	r2, #3
 800e7ea:	4650      	mov	r0, sl
 800e7ec:	f7f1 fcf0 	bl	80001d0 <memchr>
 800e7f0:	b138      	cbz	r0, 800e802 <_vfiprintf_r+0x17a>
 800e7f2:	9b04      	ldr	r3, [sp, #16]
 800e7f4:	eba0 000a 	sub.w	r0, r0, sl
 800e7f8:	2240      	movs	r2, #64	; 0x40
 800e7fa:	4082      	lsls	r2, r0
 800e7fc:	4313      	orrs	r3, r2
 800e7fe:	3401      	adds	r4, #1
 800e800:	9304      	str	r3, [sp, #16]
 800e802:	f814 1b01 	ldrb.w	r1, [r4], #1
 800e806:	4829      	ldr	r0, [pc, #164]	; (800e8ac <_vfiprintf_r+0x224>)
 800e808:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800e80c:	2206      	movs	r2, #6
 800e80e:	f7f1 fcdf 	bl	80001d0 <memchr>
 800e812:	2800      	cmp	r0, #0
 800e814:	d03f      	beq.n	800e896 <_vfiprintf_r+0x20e>
 800e816:	4b26      	ldr	r3, [pc, #152]	; (800e8b0 <_vfiprintf_r+0x228>)
 800e818:	bb1b      	cbnz	r3, 800e862 <_vfiprintf_r+0x1da>
 800e81a:	9b03      	ldr	r3, [sp, #12]
 800e81c:	3307      	adds	r3, #7
 800e81e:	f023 0307 	bic.w	r3, r3, #7
 800e822:	3308      	adds	r3, #8
 800e824:	9303      	str	r3, [sp, #12]
 800e826:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e828:	443b      	add	r3, r7
 800e82a:	9309      	str	r3, [sp, #36]	; 0x24
 800e82c:	e768      	b.n	800e700 <_vfiprintf_r+0x78>
 800e82e:	fb0c 3202 	mla	r2, ip, r2, r3
 800e832:	460c      	mov	r4, r1
 800e834:	2001      	movs	r0, #1
 800e836:	e7a6      	b.n	800e786 <_vfiprintf_r+0xfe>
 800e838:	2300      	movs	r3, #0
 800e83a:	3401      	adds	r4, #1
 800e83c:	9305      	str	r3, [sp, #20]
 800e83e:	4619      	mov	r1, r3
 800e840:	f04f 0c0a 	mov.w	ip, #10
 800e844:	4620      	mov	r0, r4
 800e846:	f810 2b01 	ldrb.w	r2, [r0], #1
 800e84a:	3a30      	subs	r2, #48	; 0x30
 800e84c:	2a09      	cmp	r2, #9
 800e84e:	d903      	bls.n	800e858 <_vfiprintf_r+0x1d0>
 800e850:	2b00      	cmp	r3, #0
 800e852:	d0c6      	beq.n	800e7e2 <_vfiprintf_r+0x15a>
 800e854:	9105      	str	r1, [sp, #20]
 800e856:	e7c4      	b.n	800e7e2 <_vfiprintf_r+0x15a>
 800e858:	fb0c 2101 	mla	r1, ip, r1, r2
 800e85c:	4604      	mov	r4, r0
 800e85e:	2301      	movs	r3, #1
 800e860:	e7f0      	b.n	800e844 <_vfiprintf_r+0x1bc>
 800e862:	ab03      	add	r3, sp, #12
 800e864:	9300      	str	r3, [sp, #0]
 800e866:	462a      	mov	r2, r5
 800e868:	4b12      	ldr	r3, [pc, #72]	; (800e8b4 <_vfiprintf_r+0x22c>)
 800e86a:	a904      	add	r1, sp, #16
 800e86c:	4630      	mov	r0, r6
 800e86e:	f7fb fecd 	bl	800a60c <_printf_float>
 800e872:	4607      	mov	r7, r0
 800e874:	1c78      	adds	r0, r7, #1
 800e876:	d1d6      	bne.n	800e826 <_vfiprintf_r+0x19e>
 800e878:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800e87a:	07d9      	lsls	r1, r3, #31
 800e87c:	d405      	bmi.n	800e88a <_vfiprintf_r+0x202>
 800e87e:	89ab      	ldrh	r3, [r5, #12]
 800e880:	059a      	lsls	r2, r3, #22
 800e882:	d402      	bmi.n	800e88a <_vfiprintf_r+0x202>
 800e884:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800e886:	f7fc fe7f 	bl	800b588 <__retarget_lock_release_recursive>
 800e88a:	89ab      	ldrh	r3, [r5, #12]
 800e88c:	065b      	lsls	r3, r3, #25
 800e88e:	f53f af1d 	bmi.w	800e6cc <_vfiprintf_r+0x44>
 800e892:	9809      	ldr	r0, [sp, #36]	; 0x24
 800e894:	e71c      	b.n	800e6d0 <_vfiprintf_r+0x48>
 800e896:	ab03      	add	r3, sp, #12
 800e898:	9300      	str	r3, [sp, #0]
 800e89a:	462a      	mov	r2, r5
 800e89c:	4b05      	ldr	r3, [pc, #20]	; (800e8b4 <_vfiprintf_r+0x22c>)
 800e89e:	a904      	add	r1, sp, #16
 800e8a0:	4630      	mov	r0, r6
 800e8a2:	f7fc f957 	bl	800ab54 <_printf_i>
 800e8a6:	e7e4      	b.n	800e872 <_vfiprintf_r+0x1ea>
 800e8a8:	08012161 	.word	0x08012161
 800e8ac:	0801216b 	.word	0x0801216b
 800e8b0:	0800a60d 	.word	0x0800a60d
 800e8b4:	0800e665 	.word	0x0800e665
 800e8b8:	08012167 	.word	0x08012167

0800e8bc <__swbuf_r>:
 800e8bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e8be:	460e      	mov	r6, r1
 800e8c0:	4614      	mov	r4, r2
 800e8c2:	4605      	mov	r5, r0
 800e8c4:	b118      	cbz	r0, 800e8ce <__swbuf_r+0x12>
 800e8c6:	6a03      	ldr	r3, [r0, #32]
 800e8c8:	b90b      	cbnz	r3, 800e8ce <__swbuf_r+0x12>
 800e8ca:	f7fc fd01 	bl	800b2d0 <__sinit>
 800e8ce:	69a3      	ldr	r3, [r4, #24]
 800e8d0:	60a3      	str	r3, [r4, #8]
 800e8d2:	89a3      	ldrh	r3, [r4, #12]
 800e8d4:	071a      	lsls	r2, r3, #28
 800e8d6:	d525      	bpl.n	800e924 <__swbuf_r+0x68>
 800e8d8:	6923      	ldr	r3, [r4, #16]
 800e8da:	b31b      	cbz	r3, 800e924 <__swbuf_r+0x68>
 800e8dc:	6823      	ldr	r3, [r4, #0]
 800e8de:	6922      	ldr	r2, [r4, #16]
 800e8e0:	1a98      	subs	r0, r3, r2
 800e8e2:	6963      	ldr	r3, [r4, #20]
 800e8e4:	b2f6      	uxtb	r6, r6
 800e8e6:	4283      	cmp	r3, r0
 800e8e8:	4637      	mov	r7, r6
 800e8ea:	dc04      	bgt.n	800e8f6 <__swbuf_r+0x3a>
 800e8ec:	4621      	mov	r1, r4
 800e8ee:	4628      	mov	r0, r5
 800e8f0:	f7ff fa4a 	bl	800dd88 <_fflush_r>
 800e8f4:	b9e0      	cbnz	r0, 800e930 <__swbuf_r+0x74>
 800e8f6:	68a3      	ldr	r3, [r4, #8]
 800e8f8:	3b01      	subs	r3, #1
 800e8fa:	60a3      	str	r3, [r4, #8]
 800e8fc:	6823      	ldr	r3, [r4, #0]
 800e8fe:	1c5a      	adds	r2, r3, #1
 800e900:	6022      	str	r2, [r4, #0]
 800e902:	701e      	strb	r6, [r3, #0]
 800e904:	6962      	ldr	r2, [r4, #20]
 800e906:	1c43      	adds	r3, r0, #1
 800e908:	429a      	cmp	r2, r3
 800e90a:	d004      	beq.n	800e916 <__swbuf_r+0x5a>
 800e90c:	89a3      	ldrh	r3, [r4, #12]
 800e90e:	07db      	lsls	r3, r3, #31
 800e910:	d506      	bpl.n	800e920 <__swbuf_r+0x64>
 800e912:	2e0a      	cmp	r6, #10
 800e914:	d104      	bne.n	800e920 <__swbuf_r+0x64>
 800e916:	4621      	mov	r1, r4
 800e918:	4628      	mov	r0, r5
 800e91a:	f7ff fa35 	bl	800dd88 <_fflush_r>
 800e91e:	b938      	cbnz	r0, 800e930 <__swbuf_r+0x74>
 800e920:	4638      	mov	r0, r7
 800e922:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e924:	4621      	mov	r1, r4
 800e926:	4628      	mov	r0, r5
 800e928:	f000 f806 	bl	800e938 <__swsetup_r>
 800e92c:	2800      	cmp	r0, #0
 800e92e:	d0d5      	beq.n	800e8dc <__swbuf_r+0x20>
 800e930:	f04f 37ff 	mov.w	r7, #4294967295
 800e934:	e7f4      	b.n	800e920 <__swbuf_r+0x64>
	...

0800e938 <__swsetup_r>:
 800e938:	b538      	push	{r3, r4, r5, lr}
 800e93a:	4b2a      	ldr	r3, [pc, #168]	; (800e9e4 <__swsetup_r+0xac>)
 800e93c:	4605      	mov	r5, r0
 800e93e:	6818      	ldr	r0, [r3, #0]
 800e940:	460c      	mov	r4, r1
 800e942:	b118      	cbz	r0, 800e94c <__swsetup_r+0x14>
 800e944:	6a03      	ldr	r3, [r0, #32]
 800e946:	b90b      	cbnz	r3, 800e94c <__swsetup_r+0x14>
 800e948:	f7fc fcc2 	bl	800b2d0 <__sinit>
 800e94c:	89a3      	ldrh	r3, [r4, #12]
 800e94e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800e952:	0718      	lsls	r0, r3, #28
 800e954:	d422      	bmi.n	800e99c <__swsetup_r+0x64>
 800e956:	06d9      	lsls	r1, r3, #27
 800e958:	d407      	bmi.n	800e96a <__swsetup_r+0x32>
 800e95a:	2309      	movs	r3, #9
 800e95c:	602b      	str	r3, [r5, #0]
 800e95e:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800e962:	81a3      	strh	r3, [r4, #12]
 800e964:	f04f 30ff 	mov.w	r0, #4294967295
 800e968:	e034      	b.n	800e9d4 <__swsetup_r+0x9c>
 800e96a:	0758      	lsls	r0, r3, #29
 800e96c:	d512      	bpl.n	800e994 <__swsetup_r+0x5c>
 800e96e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800e970:	b141      	cbz	r1, 800e984 <__swsetup_r+0x4c>
 800e972:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800e976:	4299      	cmp	r1, r3
 800e978:	d002      	beq.n	800e980 <__swsetup_r+0x48>
 800e97a:	4628      	mov	r0, r5
 800e97c:	f7fd fc96 	bl	800c2ac <_free_r>
 800e980:	2300      	movs	r3, #0
 800e982:	6363      	str	r3, [r4, #52]	; 0x34
 800e984:	89a3      	ldrh	r3, [r4, #12]
 800e986:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800e98a:	81a3      	strh	r3, [r4, #12]
 800e98c:	2300      	movs	r3, #0
 800e98e:	6063      	str	r3, [r4, #4]
 800e990:	6923      	ldr	r3, [r4, #16]
 800e992:	6023      	str	r3, [r4, #0]
 800e994:	89a3      	ldrh	r3, [r4, #12]
 800e996:	f043 0308 	orr.w	r3, r3, #8
 800e99a:	81a3      	strh	r3, [r4, #12]
 800e99c:	6923      	ldr	r3, [r4, #16]
 800e99e:	b94b      	cbnz	r3, 800e9b4 <__swsetup_r+0x7c>
 800e9a0:	89a3      	ldrh	r3, [r4, #12]
 800e9a2:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800e9a6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800e9aa:	d003      	beq.n	800e9b4 <__swsetup_r+0x7c>
 800e9ac:	4621      	mov	r1, r4
 800e9ae:	4628      	mov	r0, r5
 800e9b0:	f000 f884 	bl	800eabc <__smakebuf_r>
 800e9b4:	89a0      	ldrh	r0, [r4, #12]
 800e9b6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800e9ba:	f010 0301 	ands.w	r3, r0, #1
 800e9be:	d00a      	beq.n	800e9d6 <__swsetup_r+0x9e>
 800e9c0:	2300      	movs	r3, #0
 800e9c2:	60a3      	str	r3, [r4, #8]
 800e9c4:	6963      	ldr	r3, [r4, #20]
 800e9c6:	425b      	negs	r3, r3
 800e9c8:	61a3      	str	r3, [r4, #24]
 800e9ca:	6923      	ldr	r3, [r4, #16]
 800e9cc:	b943      	cbnz	r3, 800e9e0 <__swsetup_r+0xa8>
 800e9ce:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800e9d2:	d1c4      	bne.n	800e95e <__swsetup_r+0x26>
 800e9d4:	bd38      	pop	{r3, r4, r5, pc}
 800e9d6:	0781      	lsls	r1, r0, #30
 800e9d8:	bf58      	it	pl
 800e9da:	6963      	ldrpl	r3, [r4, #20]
 800e9dc:	60a3      	str	r3, [r4, #8]
 800e9de:	e7f4      	b.n	800e9ca <__swsetup_r+0x92>
 800e9e0:	2000      	movs	r0, #0
 800e9e2:	e7f7      	b.n	800e9d4 <__swsetup_r+0x9c>
 800e9e4:	20000064 	.word	0x20000064

0800e9e8 <_raise_r>:
 800e9e8:	291f      	cmp	r1, #31
 800e9ea:	b538      	push	{r3, r4, r5, lr}
 800e9ec:	4604      	mov	r4, r0
 800e9ee:	460d      	mov	r5, r1
 800e9f0:	d904      	bls.n	800e9fc <_raise_r+0x14>
 800e9f2:	2316      	movs	r3, #22
 800e9f4:	6003      	str	r3, [r0, #0]
 800e9f6:	f04f 30ff 	mov.w	r0, #4294967295
 800e9fa:	bd38      	pop	{r3, r4, r5, pc}
 800e9fc:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 800e9fe:	b112      	cbz	r2, 800ea06 <_raise_r+0x1e>
 800ea00:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800ea04:	b94b      	cbnz	r3, 800ea1a <_raise_r+0x32>
 800ea06:	4620      	mov	r0, r4
 800ea08:	f000 f830 	bl	800ea6c <_getpid_r>
 800ea0c:	462a      	mov	r2, r5
 800ea0e:	4601      	mov	r1, r0
 800ea10:	4620      	mov	r0, r4
 800ea12:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800ea16:	f000 b817 	b.w	800ea48 <_kill_r>
 800ea1a:	2b01      	cmp	r3, #1
 800ea1c:	d00a      	beq.n	800ea34 <_raise_r+0x4c>
 800ea1e:	1c59      	adds	r1, r3, #1
 800ea20:	d103      	bne.n	800ea2a <_raise_r+0x42>
 800ea22:	2316      	movs	r3, #22
 800ea24:	6003      	str	r3, [r0, #0]
 800ea26:	2001      	movs	r0, #1
 800ea28:	e7e7      	b.n	800e9fa <_raise_r+0x12>
 800ea2a:	2400      	movs	r4, #0
 800ea2c:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800ea30:	4628      	mov	r0, r5
 800ea32:	4798      	blx	r3
 800ea34:	2000      	movs	r0, #0
 800ea36:	e7e0      	b.n	800e9fa <_raise_r+0x12>

0800ea38 <raise>:
 800ea38:	4b02      	ldr	r3, [pc, #8]	; (800ea44 <raise+0xc>)
 800ea3a:	4601      	mov	r1, r0
 800ea3c:	6818      	ldr	r0, [r3, #0]
 800ea3e:	f7ff bfd3 	b.w	800e9e8 <_raise_r>
 800ea42:	bf00      	nop
 800ea44:	20000064 	.word	0x20000064

0800ea48 <_kill_r>:
 800ea48:	b538      	push	{r3, r4, r5, lr}
 800ea4a:	4d07      	ldr	r5, [pc, #28]	; (800ea68 <_kill_r+0x20>)
 800ea4c:	2300      	movs	r3, #0
 800ea4e:	4604      	mov	r4, r0
 800ea50:	4608      	mov	r0, r1
 800ea52:	4611      	mov	r1, r2
 800ea54:	602b      	str	r3, [r5, #0]
 800ea56:	f7f6 f90d 	bl	8004c74 <_kill>
 800ea5a:	1c43      	adds	r3, r0, #1
 800ea5c:	d102      	bne.n	800ea64 <_kill_r+0x1c>
 800ea5e:	682b      	ldr	r3, [r5, #0]
 800ea60:	b103      	cbz	r3, 800ea64 <_kill_r+0x1c>
 800ea62:	6023      	str	r3, [r4, #0]
 800ea64:	bd38      	pop	{r3, r4, r5, pc}
 800ea66:	bf00      	nop
 800ea68:	20000b28 	.word	0x20000b28

0800ea6c <_getpid_r>:
 800ea6c:	f7f6 b8fa 	b.w	8004c64 <_getpid>

0800ea70 <__swhatbuf_r>:
 800ea70:	b570      	push	{r4, r5, r6, lr}
 800ea72:	460c      	mov	r4, r1
 800ea74:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800ea78:	2900      	cmp	r1, #0
 800ea7a:	b096      	sub	sp, #88	; 0x58
 800ea7c:	4615      	mov	r5, r2
 800ea7e:	461e      	mov	r6, r3
 800ea80:	da0d      	bge.n	800ea9e <__swhatbuf_r+0x2e>
 800ea82:	89a3      	ldrh	r3, [r4, #12]
 800ea84:	f013 0f80 	tst.w	r3, #128	; 0x80
 800ea88:	f04f 0100 	mov.w	r1, #0
 800ea8c:	bf0c      	ite	eq
 800ea8e:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 800ea92:	2340      	movne	r3, #64	; 0x40
 800ea94:	2000      	movs	r0, #0
 800ea96:	6031      	str	r1, [r6, #0]
 800ea98:	602b      	str	r3, [r5, #0]
 800ea9a:	b016      	add	sp, #88	; 0x58
 800ea9c:	bd70      	pop	{r4, r5, r6, pc}
 800ea9e:	466a      	mov	r2, sp
 800eaa0:	f000 f848 	bl	800eb34 <_fstat_r>
 800eaa4:	2800      	cmp	r0, #0
 800eaa6:	dbec      	blt.n	800ea82 <__swhatbuf_r+0x12>
 800eaa8:	9901      	ldr	r1, [sp, #4]
 800eaaa:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 800eaae:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 800eab2:	4259      	negs	r1, r3
 800eab4:	4159      	adcs	r1, r3
 800eab6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800eaba:	e7eb      	b.n	800ea94 <__swhatbuf_r+0x24>

0800eabc <__smakebuf_r>:
 800eabc:	898b      	ldrh	r3, [r1, #12]
 800eabe:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800eac0:	079d      	lsls	r5, r3, #30
 800eac2:	4606      	mov	r6, r0
 800eac4:	460c      	mov	r4, r1
 800eac6:	d507      	bpl.n	800ead8 <__smakebuf_r+0x1c>
 800eac8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800eacc:	6023      	str	r3, [r4, #0]
 800eace:	6123      	str	r3, [r4, #16]
 800ead0:	2301      	movs	r3, #1
 800ead2:	6163      	str	r3, [r4, #20]
 800ead4:	b002      	add	sp, #8
 800ead6:	bd70      	pop	{r4, r5, r6, pc}
 800ead8:	ab01      	add	r3, sp, #4
 800eada:	466a      	mov	r2, sp
 800eadc:	f7ff ffc8 	bl	800ea70 <__swhatbuf_r>
 800eae0:	9900      	ldr	r1, [sp, #0]
 800eae2:	4605      	mov	r5, r0
 800eae4:	4630      	mov	r0, r6
 800eae6:	f7fb fc65 	bl	800a3b4 <_malloc_r>
 800eaea:	b948      	cbnz	r0, 800eb00 <__smakebuf_r+0x44>
 800eaec:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800eaf0:	059a      	lsls	r2, r3, #22
 800eaf2:	d4ef      	bmi.n	800ead4 <__smakebuf_r+0x18>
 800eaf4:	f023 0303 	bic.w	r3, r3, #3
 800eaf8:	f043 0302 	orr.w	r3, r3, #2
 800eafc:	81a3      	strh	r3, [r4, #12]
 800eafe:	e7e3      	b.n	800eac8 <__smakebuf_r+0xc>
 800eb00:	89a3      	ldrh	r3, [r4, #12]
 800eb02:	6020      	str	r0, [r4, #0]
 800eb04:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800eb08:	81a3      	strh	r3, [r4, #12]
 800eb0a:	9b00      	ldr	r3, [sp, #0]
 800eb0c:	6163      	str	r3, [r4, #20]
 800eb0e:	9b01      	ldr	r3, [sp, #4]
 800eb10:	6120      	str	r0, [r4, #16]
 800eb12:	b15b      	cbz	r3, 800eb2c <__smakebuf_r+0x70>
 800eb14:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800eb18:	4630      	mov	r0, r6
 800eb1a:	f000 f81d 	bl	800eb58 <_isatty_r>
 800eb1e:	b128      	cbz	r0, 800eb2c <__smakebuf_r+0x70>
 800eb20:	89a3      	ldrh	r3, [r4, #12]
 800eb22:	f023 0303 	bic.w	r3, r3, #3
 800eb26:	f043 0301 	orr.w	r3, r3, #1
 800eb2a:	81a3      	strh	r3, [r4, #12]
 800eb2c:	89a3      	ldrh	r3, [r4, #12]
 800eb2e:	431d      	orrs	r5, r3
 800eb30:	81a5      	strh	r5, [r4, #12]
 800eb32:	e7cf      	b.n	800ead4 <__smakebuf_r+0x18>

0800eb34 <_fstat_r>:
 800eb34:	b538      	push	{r3, r4, r5, lr}
 800eb36:	4d07      	ldr	r5, [pc, #28]	; (800eb54 <_fstat_r+0x20>)
 800eb38:	2300      	movs	r3, #0
 800eb3a:	4604      	mov	r4, r0
 800eb3c:	4608      	mov	r0, r1
 800eb3e:	4611      	mov	r1, r2
 800eb40:	602b      	str	r3, [r5, #0]
 800eb42:	f7f6 f8f6 	bl	8004d32 <_fstat>
 800eb46:	1c43      	adds	r3, r0, #1
 800eb48:	d102      	bne.n	800eb50 <_fstat_r+0x1c>
 800eb4a:	682b      	ldr	r3, [r5, #0]
 800eb4c:	b103      	cbz	r3, 800eb50 <_fstat_r+0x1c>
 800eb4e:	6023      	str	r3, [r4, #0]
 800eb50:	bd38      	pop	{r3, r4, r5, pc}
 800eb52:	bf00      	nop
 800eb54:	20000b28 	.word	0x20000b28

0800eb58 <_isatty_r>:
 800eb58:	b538      	push	{r3, r4, r5, lr}
 800eb5a:	4d06      	ldr	r5, [pc, #24]	; (800eb74 <_isatty_r+0x1c>)
 800eb5c:	2300      	movs	r3, #0
 800eb5e:	4604      	mov	r4, r0
 800eb60:	4608      	mov	r0, r1
 800eb62:	602b      	str	r3, [r5, #0]
 800eb64:	f7f6 f8f5 	bl	8004d52 <_isatty>
 800eb68:	1c43      	adds	r3, r0, #1
 800eb6a:	d102      	bne.n	800eb72 <_isatty_r+0x1a>
 800eb6c:	682b      	ldr	r3, [r5, #0]
 800eb6e:	b103      	cbz	r3, 800eb72 <_isatty_r+0x1a>
 800eb70:	6023      	str	r3, [r4, #0]
 800eb72:	bd38      	pop	{r3, r4, r5, pc}
 800eb74:	20000b28 	.word	0x20000b28

0800eb78 <atan2>:
 800eb78:	f000 bda6 	b.w	800f6c8 <__ieee754_atan2>

0800eb7c <pow>:
 800eb7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800eb7e:	ed2d 8b02 	vpush	{d8}
 800eb82:	eeb0 8a40 	vmov.f32	s16, s0
 800eb86:	eef0 8a60 	vmov.f32	s17, s1
 800eb8a:	ec55 4b11 	vmov	r4, r5, d1
 800eb8e:	f000 fe63 	bl	800f858 <__ieee754_pow>
 800eb92:	4622      	mov	r2, r4
 800eb94:	462b      	mov	r3, r5
 800eb96:	4620      	mov	r0, r4
 800eb98:	4629      	mov	r1, r5
 800eb9a:	ec57 6b10 	vmov	r6, r7, d0
 800eb9e:	f7f1 ffc5 	bl	8000b2c <__aeabi_dcmpun>
 800eba2:	2800      	cmp	r0, #0
 800eba4:	d13b      	bne.n	800ec1e <pow+0xa2>
 800eba6:	ec51 0b18 	vmov	r0, r1, d8
 800ebaa:	2200      	movs	r2, #0
 800ebac:	2300      	movs	r3, #0
 800ebae:	f7f1 ff8b 	bl	8000ac8 <__aeabi_dcmpeq>
 800ebb2:	b1b8      	cbz	r0, 800ebe4 <pow+0x68>
 800ebb4:	2200      	movs	r2, #0
 800ebb6:	2300      	movs	r3, #0
 800ebb8:	4620      	mov	r0, r4
 800ebba:	4629      	mov	r1, r5
 800ebbc:	f7f1 ff84 	bl	8000ac8 <__aeabi_dcmpeq>
 800ebc0:	2800      	cmp	r0, #0
 800ebc2:	d146      	bne.n	800ec52 <pow+0xd6>
 800ebc4:	ec45 4b10 	vmov	d0, r4, r5
 800ebc8:	f000 f902 	bl	800edd0 <finite>
 800ebcc:	b338      	cbz	r0, 800ec1e <pow+0xa2>
 800ebce:	2200      	movs	r2, #0
 800ebd0:	2300      	movs	r3, #0
 800ebd2:	4620      	mov	r0, r4
 800ebd4:	4629      	mov	r1, r5
 800ebd6:	f7f1 ff81 	bl	8000adc <__aeabi_dcmplt>
 800ebda:	b300      	cbz	r0, 800ec1e <pow+0xa2>
 800ebdc:	f7fc fca8 	bl	800b530 <__errno>
 800ebe0:	2322      	movs	r3, #34	; 0x22
 800ebe2:	e01b      	b.n	800ec1c <pow+0xa0>
 800ebe4:	ec47 6b10 	vmov	d0, r6, r7
 800ebe8:	f000 f8f2 	bl	800edd0 <finite>
 800ebec:	b9e0      	cbnz	r0, 800ec28 <pow+0xac>
 800ebee:	eeb0 0a48 	vmov.f32	s0, s16
 800ebf2:	eef0 0a68 	vmov.f32	s1, s17
 800ebf6:	f000 f8eb 	bl	800edd0 <finite>
 800ebfa:	b1a8      	cbz	r0, 800ec28 <pow+0xac>
 800ebfc:	ec45 4b10 	vmov	d0, r4, r5
 800ec00:	f000 f8e6 	bl	800edd0 <finite>
 800ec04:	b180      	cbz	r0, 800ec28 <pow+0xac>
 800ec06:	4632      	mov	r2, r6
 800ec08:	463b      	mov	r3, r7
 800ec0a:	4630      	mov	r0, r6
 800ec0c:	4639      	mov	r1, r7
 800ec0e:	f7f1 ff8d 	bl	8000b2c <__aeabi_dcmpun>
 800ec12:	2800      	cmp	r0, #0
 800ec14:	d0e2      	beq.n	800ebdc <pow+0x60>
 800ec16:	f7fc fc8b 	bl	800b530 <__errno>
 800ec1a:	2321      	movs	r3, #33	; 0x21
 800ec1c:	6003      	str	r3, [r0, #0]
 800ec1e:	ecbd 8b02 	vpop	{d8}
 800ec22:	ec47 6b10 	vmov	d0, r6, r7
 800ec26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ec28:	2200      	movs	r2, #0
 800ec2a:	2300      	movs	r3, #0
 800ec2c:	4630      	mov	r0, r6
 800ec2e:	4639      	mov	r1, r7
 800ec30:	f7f1 ff4a 	bl	8000ac8 <__aeabi_dcmpeq>
 800ec34:	2800      	cmp	r0, #0
 800ec36:	d0f2      	beq.n	800ec1e <pow+0xa2>
 800ec38:	eeb0 0a48 	vmov.f32	s0, s16
 800ec3c:	eef0 0a68 	vmov.f32	s1, s17
 800ec40:	f000 f8c6 	bl	800edd0 <finite>
 800ec44:	2800      	cmp	r0, #0
 800ec46:	d0ea      	beq.n	800ec1e <pow+0xa2>
 800ec48:	ec45 4b10 	vmov	d0, r4, r5
 800ec4c:	f000 f8c0 	bl	800edd0 <finite>
 800ec50:	e7c3      	b.n	800ebda <pow+0x5e>
 800ec52:	4f01      	ldr	r7, [pc, #4]	; (800ec58 <pow+0xdc>)
 800ec54:	2600      	movs	r6, #0
 800ec56:	e7e2      	b.n	800ec1e <pow+0xa2>
 800ec58:	3ff00000 	.word	0x3ff00000

0800ec5c <sqrt>:
 800ec5c:	b538      	push	{r3, r4, r5, lr}
 800ec5e:	ed2d 8b02 	vpush	{d8}
 800ec62:	ec55 4b10 	vmov	r4, r5, d0
 800ec66:	f000 f8bf 	bl	800ede8 <__ieee754_sqrt>
 800ec6a:	4622      	mov	r2, r4
 800ec6c:	462b      	mov	r3, r5
 800ec6e:	4620      	mov	r0, r4
 800ec70:	4629      	mov	r1, r5
 800ec72:	eeb0 8a40 	vmov.f32	s16, s0
 800ec76:	eef0 8a60 	vmov.f32	s17, s1
 800ec7a:	f7f1 ff57 	bl	8000b2c <__aeabi_dcmpun>
 800ec7e:	b990      	cbnz	r0, 800eca6 <sqrt+0x4a>
 800ec80:	2200      	movs	r2, #0
 800ec82:	2300      	movs	r3, #0
 800ec84:	4620      	mov	r0, r4
 800ec86:	4629      	mov	r1, r5
 800ec88:	f7f1 ff28 	bl	8000adc <__aeabi_dcmplt>
 800ec8c:	b158      	cbz	r0, 800eca6 <sqrt+0x4a>
 800ec8e:	f7fc fc4f 	bl	800b530 <__errno>
 800ec92:	2321      	movs	r3, #33	; 0x21
 800ec94:	6003      	str	r3, [r0, #0]
 800ec96:	2200      	movs	r2, #0
 800ec98:	2300      	movs	r3, #0
 800ec9a:	4610      	mov	r0, r2
 800ec9c:	4619      	mov	r1, r3
 800ec9e:	f7f1 fdd5 	bl	800084c <__aeabi_ddiv>
 800eca2:	ec41 0b18 	vmov	d8, r0, r1
 800eca6:	eeb0 0a48 	vmov.f32	s0, s16
 800ecaa:	eef0 0a68 	vmov.f32	s1, s17
 800ecae:	ecbd 8b02 	vpop	{d8}
 800ecb2:	bd38      	pop	{r3, r4, r5, pc}
 800ecb4:	0000      	movs	r0, r0
	...

0800ecb8 <sin>:
 800ecb8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ecba:	ec53 2b10 	vmov	r2, r3, d0
 800ecbe:	4828      	ldr	r0, [pc, #160]	; (800ed60 <sin+0xa8>)
 800ecc0:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 800ecc4:	4281      	cmp	r1, r0
 800ecc6:	dc07      	bgt.n	800ecd8 <sin+0x20>
 800ecc8:	ed9f 1b23 	vldr	d1, [pc, #140]	; 800ed58 <sin+0xa0>
 800eccc:	2000      	movs	r0, #0
 800ecce:	b005      	add	sp, #20
 800ecd0:	f85d eb04 	ldr.w	lr, [sp], #4
 800ecd4:	f000 ba2c 	b.w	800f130 <__kernel_sin>
 800ecd8:	4822      	ldr	r0, [pc, #136]	; (800ed64 <sin+0xac>)
 800ecda:	4281      	cmp	r1, r0
 800ecdc:	dd09      	ble.n	800ecf2 <sin+0x3a>
 800ecde:	ee10 0a10 	vmov	r0, s0
 800ece2:	4619      	mov	r1, r3
 800ece4:	f7f1 fad0 	bl	8000288 <__aeabi_dsub>
 800ece8:	ec41 0b10 	vmov	d0, r0, r1
 800ecec:	b005      	add	sp, #20
 800ecee:	f85d fb04 	ldr.w	pc, [sp], #4
 800ecf2:	4668      	mov	r0, sp
 800ecf4:	f001 fadc 	bl	80102b0 <__ieee754_rem_pio2>
 800ecf8:	f000 0003 	and.w	r0, r0, #3
 800ecfc:	2801      	cmp	r0, #1
 800ecfe:	d00c      	beq.n	800ed1a <sin+0x62>
 800ed00:	2802      	cmp	r0, #2
 800ed02:	d011      	beq.n	800ed28 <sin+0x70>
 800ed04:	b9f0      	cbnz	r0, 800ed44 <sin+0x8c>
 800ed06:	ed9d 1b02 	vldr	d1, [sp, #8]
 800ed0a:	ed9d 0b00 	vldr	d0, [sp]
 800ed0e:	2001      	movs	r0, #1
 800ed10:	f000 fa0e 	bl	800f130 <__kernel_sin>
 800ed14:	ec51 0b10 	vmov	r0, r1, d0
 800ed18:	e7e6      	b.n	800ece8 <sin+0x30>
 800ed1a:	ed9d 1b02 	vldr	d1, [sp, #8]
 800ed1e:	ed9d 0b00 	vldr	d0, [sp]
 800ed22:	f000 f93d 	bl	800efa0 <__kernel_cos>
 800ed26:	e7f5      	b.n	800ed14 <sin+0x5c>
 800ed28:	ed9d 1b02 	vldr	d1, [sp, #8]
 800ed2c:	ed9d 0b00 	vldr	d0, [sp]
 800ed30:	2001      	movs	r0, #1
 800ed32:	f000 f9fd 	bl	800f130 <__kernel_sin>
 800ed36:	ec53 2b10 	vmov	r2, r3, d0
 800ed3a:	ee10 0a10 	vmov	r0, s0
 800ed3e:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 800ed42:	e7d1      	b.n	800ece8 <sin+0x30>
 800ed44:	ed9d 1b02 	vldr	d1, [sp, #8]
 800ed48:	ed9d 0b00 	vldr	d0, [sp]
 800ed4c:	f000 f928 	bl	800efa0 <__kernel_cos>
 800ed50:	e7f1      	b.n	800ed36 <sin+0x7e>
 800ed52:	bf00      	nop
 800ed54:	f3af 8000 	nop.w
	...
 800ed60:	3fe921fb 	.word	0x3fe921fb
 800ed64:	7fefffff 	.word	0x7fefffff

0800ed68 <tan>:
 800ed68:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ed6a:	ec53 2b10 	vmov	r2, r3, d0
 800ed6e:	4816      	ldr	r0, [pc, #88]	; (800edc8 <tan+0x60>)
 800ed70:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 800ed74:	4281      	cmp	r1, r0
 800ed76:	dc07      	bgt.n	800ed88 <tan+0x20>
 800ed78:	ed9f 1b11 	vldr	d1, [pc, #68]	; 800edc0 <tan+0x58>
 800ed7c:	2001      	movs	r0, #1
 800ed7e:	b005      	add	sp, #20
 800ed80:	f85d eb04 	ldr.w	lr, [sp], #4
 800ed84:	f000 ba94 	b.w	800f2b0 <__kernel_tan>
 800ed88:	4810      	ldr	r0, [pc, #64]	; (800edcc <tan+0x64>)
 800ed8a:	4281      	cmp	r1, r0
 800ed8c:	dd09      	ble.n	800eda2 <tan+0x3a>
 800ed8e:	ee10 0a10 	vmov	r0, s0
 800ed92:	4619      	mov	r1, r3
 800ed94:	f7f1 fa78 	bl	8000288 <__aeabi_dsub>
 800ed98:	ec41 0b10 	vmov	d0, r0, r1
 800ed9c:	b005      	add	sp, #20
 800ed9e:	f85d fb04 	ldr.w	pc, [sp], #4
 800eda2:	4668      	mov	r0, sp
 800eda4:	f001 fa84 	bl	80102b0 <__ieee754_rem_pio2>
 800eda8:	0040      	lsls	r0, r0, #1
 800edaa:	f000 0002 	and.w	r0, r0, #2
 800edae:	ed9d 1b02 	vldr	d1, [sp, #8]
 800edb2:	ed9d 0b00 	vldr	d0, [sp]
 800edb6:	f1c0 0001 	rsb	r0, r0, #1
 800edba:	f000 fa79 	bl	800f2b0 <__kernel_tan>
 800edbe:	e7ed      	b.n	800ed9c <tan+0x34>
	...
 800edc8:	3fe921fb 	.word	0x3fe921fb
 800edcc:	7fefffff 	.word	0x7fefffff

0800edd0 <finite>:
 800edd0:	b082      	sub	sp, #8
 800edd2:	ed8d 0b00 	vstr	d0, [sp]
 800edd6:	9801      	ldr	r0, [sp, #4]
 800edd8:	f040 4000 	orr.w	r0, r0, #2147483648	; 0x80000000
 800eddc:	f500 1080 	add.w	r0, r0, #1048576	; 0x100000
 800ede0:	0fc0      	lsrs	r0, r0, #31
 800ede2:	b002      	add	sp, #8
 800ede4:	4770      	bx	lr
	...

0800ede8 <__ieee754_sqrt>:
 800ede8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800edec:	ec55 4b10 	vmov	r4, r5, d0
 800edf0:	4e67      	ldr	r6, [pc, #412]	; (800ef90 <__ieee754_sqrt+0x1a8>)
 800edf2:	43ae      	bics	r6, r5
 800edf4:	ee10 0a10 	vmov	r0, s0
 800edf8:	ee10 2a10 	vmov	r2, s0
 800edfc:	4629      	mov	r1, r5
 800edfe:	462b      	mov	r3, r5
 800ee00:	d10d      	bne.n	800ee1e <__ieee754_sqrt+0x36>
 800ee02:	f7f1 fbf9 	bl	80005f8 <__aeabi_dmul>
 800ee06:	4602      	mov	r2, r0
 800ee08:	460b      	mov	r3, r1
 800ee0a:	4620      	mov	r0, r4
 800ee0c:	4629      	mov	r1, r5
 800ee0e:	f7f1 fa3d 	bl	800028c <__adddf3>
 800ee12:	4604      	mov	r4, r0
 800ee14:	460d      	mov	r5, r1
 800ee16:	ec45 4b10 	vmov	d0, r4, r5
 800ee1a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ee1e:	2d00      	cmp	r5, #0
 800ee20:	dc0b      	bgt.n	800ee3a <__ieee754_sqrt+0x52>
 800ee22:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 800ee26:	4326      	orrs	r6, r4
 800ee28:	d0f5      	beq.n	800ee16 <__ieee754_sqrt+0x2e>
 800ee2a:	b135      	cbz	r5, 800ee3a <__ieee754_sqrt+0x52>
 800ee2c:	f7f1 fa2c 	bl	8000288 <__aeabi_dsub>
 800ee30:	4602      	mov	r2, r0
 800ee32:	460b      	mov	r3, r1
 800ee34:	f7f1 fd0a 	bl	800084c <__aeabi_ddiv>
 800ee38:	e7eb      	b.n	800ee12 <__ieee754_sqrt+0x2a>
 800ee3a:	1509      	asrs	r1, r1, #20
 800ee3c:	f000 808d 	beq.w	800ef5a <__ieee754_sqrt+0x172>
 800ee40:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800ee44:	f2a1 36ff 	subw	r6, r1, #1023	; 0x3ff
 800ee48:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800ee4c:	07c9      	lsls	r1, r1, #31
 800ee4e:	bf5c      	itt	pl
 800ee50:	005b      	lslpl	r3, r3, #1
 800ee52:	eb03 73d2 	addpl.w	r3, r3, r2, lsr #31
 800ee56:	ea4f 0343 	mov.w	r3, r3, lsl #1
 800ee5a:	bf58      	it	pl
 800ee5c:	0052      	lslpl	r2, r2, #1
 800ee5e:	2500      	movs	r5, #0
 800ee60:	eb03 73d2 	add.w	r3, r3, r2, lsr #31
 800ee64:	1076      	asrs	r6, r6, #1
 800ee66:	0052      	lsls	r2, r2, #1
 800ee68:	f04f 0e16 	mov.w	lr, #22
 800ee6c:	46ac      	mov	ip, r5
 800ee6e:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 800ee72:	eb0c 0001 	add.w	r0, ip, r1
 800ee76:	4298      	cmp	r0, r3
 800ee78:	bfde      	ittt	le
 800ee7a:	1a1b      	suble	r3, r3, r0
 800ee7c:	eb00 0c01 	addle.w	ip, r0, r1
 800ee80:	186d      	addle	r5, r5, r1
 800ee82:	005b      	lsls	r3, r3, #1
 800ee84:	f1be 0e01 	subs.w	lr, lr, #1
 800ee88:	eb03 73d2 	add.w	r3, r3, r2, lsr #31
 800ee8c:	ea4f 0151 	mov.w	r1, r1, lsr #1
 800ee90:	ea4f 0242 	mov.w	r2, r2, lsl #1
 800ee94:	d1ed      	bne.n	800ee72 <__ieee754_sqrt+0x8a>
 800ee96:	4674      	mov	r4, lr
 800ee98:	2720      	movs	r7, #32
 800ee9a:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
 800ee9e:	4563      	cmp	r3, ip
 800eea0:	eb01 000e 	add.w	r0, r1, lr
 800eea4:	dc02      	bgt.n	800eeac <__ieee754_sqrt+0xc4>
 800eea6:	d113      	bne.n	800eed0 <__ieee754_sqrt+0xe8>
 800eea8:	4290      	cmp	r0, r2
 800eeaa:	d811      	bhi.n	800eed0 <__ieee754_sqrt+0xe8>
 800eeac:	2800      	cmp	r0, #0
 800eeae:	eb00 0e01 	add.w	lr, r0, r1
 800eeb2:	da57      	bge.n	800ef64 <__ieee754_sqrt+0x17c>
 800eeb4:	f1be 0f00 	cmp.w	lr, #0
 800eeb8:	db54      	blt.n	800ef64 <__ieee754_sqrt+0x17c>
 800eeba:	f10c 0801 	add.w	r8, ip, #1
 800eebe:	eba3 030c 	sub.w	r3, r3, ip
 800eec2:	4290      	cmp	r0, r2
 800eec4:	bf88      	it	hi
 800eec6:	f103 33ff 	addhi.w	r3, r3, #4294967295
 800eeca:	1a12      	subs	r2, r2, r0
 800eecc:	440c      	add	r4, r1
 800eece:	46c4      	mov	ip, r8
 800eed0:	005b      	lsls	r3, r3, #1
 800eed2:	3f01      	subs	r7, #1
 800eed4:	eb03 73d2 	add.w	r3, r3, r2, lsr #31
 800eed8:	ea4f 0151 	mov.w	r1, r1, lsr #1
 800eedc:	ea4f 0242 	mov.w	r2, r2, lsl #1
 800eee0:	d1dd      	bne.n	800ee9e <__ieee754_sqrt+0xb6>
 800eee2:	4313      	orrs	r3, r2
 800eee4:	d01b      	beq.n	800ef1e <__ieee754_sqrt+0x136>
 800eee6:	f8df a0ac 	ldr.w	sl, [pc, #172]	; 800ef94 <__ieee754_sqrt+0x1ac>
 800eeea:	f8df b0ac 	ldr.w	fp, [pc, #172]	; 800ef98 <__ieee754_sqrt+0x1b0>
 800eeee:	e9da 0100 	ldrd	r0, r1, [sl]
 800eef2:	e9db 2300 	ldrd	r2, r3, [fp]
 800eef6:	f7f1 f9c7 	bl	8000288 <__aeabi_dsub>
 800eefa:	e9da 8900 	ldrd	r8, r9, [sl]
 800eefe:	4602      	mov	r2, r0
 800ef00:	460b      	mov	r3, r1
 800ef02:	4640      	mov	r0, r8
 800ef04:	4649      	mov	r1, r9
 800ef06:	f7f1 fdf3 	bl	8000af0 <__aeabi_dcmple>
 800ef0a:	b140      	cbz	r0, 800ef1e <__ieee754_sqrt+0x136>
 800ef0c:	f1b4 3fff 	cmp.w	r4, #4294967295
 800ef10:	e9da 0100 	ldrd	r0, r1, [sl]
 800ef14:	e9db 2300 	ldrd	r2, r3, [fp]
 800ef18:	d126      	bne.n	800ef68 <__ieee754_sqrt+0x180>
 800ef1a:	3501      	adds	r5, #1
 800ef1c:	463c      	mov	r4, r7
 800ef1e:	106a      	asrs	r2, r5, #1
 800ef20:	0863      	lsrs	r3, r4, #1
 800ef22:	07e9      	lsls	r1, r5, #31
 800ef24:	f102 527f 	add.w	r2, r2, #1069547520	; 0x3fc00000
 800ef28:	f502 1200 	add.w	r2, r2, #2097152	; 0x200000
 800ef2c:	bf48      	it	mi
 800ef2e:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
 800ef32:	eb02 5506 	add.w	r5, r2, r6, lsl #20
 800ef36:	461c      	mov	r4, r3
 800ef38:	e76d      	b.n	800ee16 <__ieee754_sqrt+0x2e>
 800ef3a:	0ad3      	lsrs	r3, r2, #11
 800ef3c:	3815      	subs	r0, #21
 800ef3e:	0552      	lsls	r2, r2, #21
 800ef40:	2b00      	cmp	r3, #0
 800ef42:	d0fa      	beq.n	800ef3a <__ieee754_sqrt+0x152>
 800ef44:	02dc      	lsls	r4, r3, #11
 800ef46:	d50a      	bpl.n	800ef5e <__ieee754_sqrt+0x176>
 800ef48:	f1c1 0420 	rsb	r4, r1, #32
 800ef4c:	fa22 f404 	lsr.w	r4, r2, r4
 800ef50:	1e4d      	subs	r5, r1, #1
 800ef52:	408a      	lsls	r2, r1
 800ef54:	4323      	orrs	r3, r4
 800ef56:	1b41      	subs	r1, r0, r5
 800ef58:	e772      	b.n	800ee40 <__ieee754_sqrt+0x58>
 800ef5a:	4608      	mov	r0, r1
 800ef5c:	e7f0      	b.n	800ef40 <__ieee754_sqrt+0x158>
 800ef5e:	005b      	lsls	r3, r3, #1
 800ef60:	3101      	adds	r1, #1
 800ef62:	e7ef      	b.n	800ef44 <__ieee754_sqrt+0x15c>
 800ef64:	46e0      	mov	r8, ip
 800ef66:	e7aa      	b.n	800eebe <__ieee754_sqrt+0xd6>
 800ef68:	f7f1 f990 	bl	800028c <__adddf3>
 800ef6c:	e9da 8900 	ldrd	r8, r9, [sl]
 800ef70:	4602      	mov	r2, r0
 800ef72:	460b      	mov	r3, r1
 800ef74:	4640      	mov	r0, r8
 800ef76:	4649      	mov	r1, r9
 800ef78:	f7f1 fdb0 	bl	8000adc <__aeabi_dcmplt>
 800ef7c:	b120      	cbz	r0, 800ef88 <__ieee754_sqrt+0x1a0>
 800ef7e:	1ca0      	adds	r0, r4, #2
 800ef80:	bf08      	it	eq
 800ef82:	3501      	addeq	r5, #1
 800ef84:	3402      	adds	r4, #2
 800ef86:	e7ca      	b.n	800ef1e <__ieee754_sqrt+0x136>
 800ef88:	3401      	adds	r4, #1
 800ef8a:	f024 0401 	bic.w	r4, r4, #1
 800ef8e:	e7c6      	b.n	800ef1e <__ieee754_sqrt+0x136>
 800ef90:	7ff00000 	.word	0x7ff00000
 800ef94:	200001d8 	.word	0x200001d8
 800ef98:	200001e0 	.word	0x200001e0
 800ef9c:	00000000 	.word	0x00000000

0800efa0 <__kernel_cos>:
 800efa0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800efa4:	ec57 6b10 	vmov	r6, r7, d0
 800efa8:	f027 4800 	bic.w	r8, r7, #2147483648	; 0x80000000
 800efac:	f1b8 5f79 	cmp.w	r8, #1044381696	; 0x3e400000
 800efb0:	ed8d 1b00 	vstr	d1, [sp]
 800efb4:	da07      	bge.n	800efc6 <__kernel_cos+0x26>
 800efb6:	ee10 0a10 	vmov	r0, s0
 800efba:	4639      	mov	r1, r7
 800efbc:	f7f1 fdcc 	bl	8000b58 <__aeabi_d2iz>
 800efc0:	2800      	cmp	r0, #0
 800efc2:	f000 8088 	beq.w	800f0d6 <__kernel_cos+0x136>
 800efc6:	4632      	mov	r2, r6
 800efc8:	463b      	mov	r3, r7
 800efca:	4630      	mov	r0, r6
 800efcc:	4639      	mov	r1, r7
 800efce:	f7f1 fb13 	bl	80005f8 <__aeabi_dmul>
 800efd2:	4b51      	ldr	r3, [pc, #324]	; (800f118 <__kernel_cos+0x178>)
 800efd4:	2200      	movs	r2, #0
 800efd6:	4604      	mov	r4, r0
 800efd8:	460d      	mov	r5, r1
 800efda:	f7f1 fb0d 	bl	80005f8 <__aeabi_dmul>
 800efde:	a340      	add	r3, pc, #256	; (adr r3, 800f0e0 <__kernel_cos+0x140>)
 800efe0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800efe4:	4682      	mov	sl, r0
 800efe6:	468b      	mov	fp, r1
 800efe8:	4620      	mov	r0, r4
 800efea:	4629      	mov	r1, r5
 800efec:	f7f1 fb04 	bl	80005f8 <__aeabi_dmul>
 800eff0:	a33d      	add	r3, pc, #244	; (adr r3, 800f0e8 <__kernel_cos+0x148>)
 800eff2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800eff6:	f7f1 f949 	bl	800028c <__adddf3>
 800effa:	4622      	mov	r2, r4
 800effc:	462b      	mov	r3, r5
 800effe:	f7f1 fafb 	bl	80005f8 <__aeabi_dmul>
 800f002:	a33b      	add	r3, pc, #236	; (adr r3, 800f0f0 <__kernel_cos+0x150>)
 800f004:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f008:	f7f1 f93e 	bl	8000288 <__aeabi_dsub>
 800f00c:	4622      	mov	r2, r4
 800f00e:	462b      	mov	r3, r5
 800f010:	f7f1 faf2 	bl	80005f8 <__aeabi_dmul>
 800f014:	a338      	add	r3, pc, #224	; (adr r3, 800f0f8 <__kernel_cos+0x158>)
 800f016:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f01a:	f7f1 f937 	bl	800028c <__adddf3>
 800f01e:	4622      	mov	r2, r4
 800f020:	462b      	mov	r3, r5
 800f022:	f7f1 fae9 	bl	80005f8 <__aeabi_dmul>
 800f026:	a336      	add	r3, pc, #216	; (adr r3, 800f100 <__kernel_cos+0x160>)
 800f028:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f02c:	f7f1 f92c 	bl	8000288 <__aeabi_dsub>
 800f030:	4622      	mov	r2, r4
 800f032:	462b      	mov	r3, r5
 800f034:	f7f1 fae0 	bl	80005f8 <__aeabi_dmul>
 800f038:	a333      	add	r3, pc, #204	; (adr r3, 800f108 <__kernel_cos+0x168>)
 800f03a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f03e:	f7f1 f925 	bl	800028c <__adddf3>
 800f042:	4622      	mov	r2, r4
 800f044:	462b      	mov	r3, r5
 800f046:	f7f1 fad7 	bl	80005f8 <__aeabi_dmul>
 800f04a:	4622      	mov	r2, r4
 800f04c:	462b      	mov	r3, r5
 800f04e:	f7f1 fad3 	bl	80005f8 <__aeabi_dmul>
 800f052:	e9dd 2300 	ldrd	r2, r3, [sp]
 800f056:	4604      	mov	r4, r0
 800f058:	460d      	mov	r5, r1
 800f05a:	4630      	mov	r0, r6
 800f05c:	4639      	mov	r1, r7
 800f05e:	f7f1 facb 	bl	80005f8 <__aeabi_dmul>
 800f062:	460b      	mov	r3, r1
 800f064:	4602      	mov	r2, r0
 800f066:	4629      	mov	r1, r5
 800f068:	4620      	mov	r0, r4
 800f06a:	f7f1 f90d 	bl	8000288 <__aeabi_dsub>
 800f06e:	4b2b      	ldr	r3, [pc, #172]	; (800f11c <__kernel_cos+0x17c>)
 800f070:	4598      	cmp	r8, r3
 800f072:	4606      	mov	r6, r0
 800f074:	460f      	mov	r7, r1
 800f076:	dc10      	bgt.n	800f09a <__kernel_cos+0xfa>
 800f078:	4602      	mov	r2, r0
 800f07a:	460b      	mov	r3, r1
 800f07c:	4650      	mov	r0, sl
 800f07e:	4659      	mov	r1, fp
 800f080:	f7f1 f902 	bl	8000288 <__aeabi_dsub>
 800f084:	460b      	mov	r3, r1
 800f086:	4926      	ldr	r1, [pc, #152]	; (800f120 <__kernel_cos+0x180>)
 800f088:	4602      	mov	r2, r0
 800f08a:	2000      	movs	r0, #0
 800f08c:	f7f1 f8fc 	bl	8000288 <__aeabi_dsub>
 800f090:	ec41 0b10 	vmov	d0, r0, r1
 800f094:	b003      	add	sp, #12
 800f096:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f09a:	4b22      	ldr	r3, [pc, #136]	; (800f124 <__kernel_cos+0x184>)
 800f09c:	4920      	ldr	r1, [pc, #128]	; (800f120 <__kernel_cos+0x180>)
 800f09e:	4598      	cmp	r8, r3
 800f0a0:	bfcc      	ite	gt
 800f0a2:	4d21      	ldrgt	r5, [pc, #132]	; (800f128 <__kernel_cos+0x188>)
 800f0a4:	f5a8 1500 	suble.w	r5, r8, #2097152	; 0x200000
 800f0a8:	2400      	movs	r4, #0
 800f0aa:	4622      	mov	r2, r4
 800f0ac:	462b      	mov	r3, r5
 800f0ae:	2000      	movs	r0, #0
 800f0b0:	f7f1 f8ea 	bl	8000288 <__aeabi_dsub>
 800f0b4:	4622      	mov	r2, r4
 800f0b6:	4680      	mov	r8, r0
 800f0b8:	4689      	mov	r9, r1
 800f0ba:	462b      	mov	r3, r5
 800f0bc:	4650      	mov	r0, sl
 800f0be:	4659      	mov	r1, fp
 800f0c0:	f7f1 f8e2 	bl	8000288 <__aeabi_dsub>
 800f0c4:	4632      	mov	r2, r6
 800f0c6:	463b      	mov	r3, r7
 800f0c8:	f7f1 f8de 	bl	8000288 <__aeabi_dsub>
 800f0cc:	4602      	mov	r2, r0
 800f0ce:	460b      	mov	r3, r1
 800f0d0:	4640      	mov	r0, r8
 800f0d2:	4649      	mov	r1, r9
 800f0d4:	e7da      	b.n	800f08c <__kernel_cos+0xec>
 800f0d6:	ed9f 0b0e 	vldr	d0, [pc, #56]	; 800f110 <__kernel_cos+0x170>
 800f0da:	e7db      	b.n	800f094 <__kernel_cos+0xf4>
 800f0dc:	f3af 8000 	nop.w
 800f0e0:	be8838d4 	.word	0xbe8838d4
 800f0e4:	bda8fae9 	.word	0xbda8fae9
 800f0e8:	bdb4b1c4 	.word	0xbdb4b1c4
 800f0ec:	3e21ee9e 	.word	0x3e21ee9e
 800f0f0:	809c52ad 	.word	0x809c52ad
 800f0f4:	3e927e4f 	.word	0x3e927e4f
 800f0f8:	19cb1590 	.word	0x19cb1590
 800f0fc:	3efa01a0 	.word	0x3efa01a0
 800f100:	16c15177 	.word	0x16c15177
 800f104:	3f56c16c 	.word	0x3f56c16c
 800f108:	5555554c 	.word	0x5555554c
 800f10c:	3fa55555 	.word	0x3fa55555
 800f110:	00000000 	.word	0x00000000
 800f114:	3ff00000 	.word	0x3ff00000
 800f118:	3fe00000 	.word	0x3fe00000
 800f11c:	3fd33332 	.word	0x3fd33332
 800f120:	3ff00000 	.word	0x3ff00000
 800f124:	3fe90000 	.word	0x3fe90000
 800f128:	3fd20000 	.word	0x3fd20000
 800f12c:	00000000 	.word	0x00000000

0800f130 <__kernel_sin>:
 800f130:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f134:	ed2d 8b04 	vpush	{d8-d9}
 800f138:	eeb0 8a41 	vmov.f32	s16, s2
 800f13c:	eef0 8a61 	vmov.f32	s17, s3
 800f140:	ec55 4b10 	vmov	r4, r5, d0
 800f144:	b083      	sub	sp, #12
 800f146:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 800f14a:	f1b3 5f79 	cmp.w	r3, #1044381696	; 0x3e400000
 800f14e:	9001      	str	r0, [sp, #4]
 800f150:	da06      	bge.n	800f160 <__kernel_sin+0x30>
 800f152:	ee10 0a10 	vmov	r0, s0
 800f156:	4629      	mov	r1, r5
 800f158:	f7f1 fcfe 	bl	8000b58 <__aeabi_d2iz>
 800f15c:	2800      	cmp	r0, #0
 800f15e:	d051      	beq.n	800f204 <__kernel_sin+0xd4>
 800f160:	4622      	mov	r2, r4
 800f162:	462b      	mov	r3, r5
 800f164:	4620      	mov	r0, r4
 800f166:	4629      	mov	r1, r5
 800f168:	f7f1 fa46 	bl	80005f8 <__aeabi_dmul>
 800f16c:	4682      	mov	sl, r0
 800f16e:	468b      	mov	fp, r1
 800f170:	4602      	mov	r2, r0
 800f172:	460b      	mov	r3, r1
 800f174:	4620      	mov	r0, r4
 800f176:	4629      	mov	r1, r5
 800f178:	f7f1 fa3e 	bl	80005f8 <__aeabi_dmul>
 800f17c:	a341      	add	r3, pc, #260	; (adr r3, 800f284 <__kernel_sin+0x154>)
 800f17e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f182:	4680      	mov	r8, r0
 800f184:	4689      	mov	r9, r1
 800f186:	4650      	mov	r0, sl
 800f188:	4659      	mov	r1, fp
 800f18a:	f7f1 fa35 	bl	80005f8 <__aeabi_dmul>
 800f18e:	a33f      	add	r3, pc, #252	; (adr r3, 800f28c <__kernel_sin+0x15c>)
 800f190:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f194:	f7f1 f878 	bl	8000288 <__aeabi_dsub>
 800f198:	4652      	mov	r2, sl
 800f19a:	465b      	mov	r3, fp
 800f19c:	f7f1 fa2c 	bl	80005f8 <__aeabi_dmul>
 800f1a0:	a33c      	add	r3, pc, #240	; (adr r3, 800f294 <__kernel_sin+0x164>)
 800f1a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f1a6:	f7f1 f871 	bl	800028c <__adddf3>
 800f1aa:	4652      	mov	r2, sl
 800f1ac:	465b      	mov	r3, fp
 800f1ae:	f7f1 fa23 	bl	80005f8 <__aeabi_dmul>
 800f1b2:	a33a      	add	r3, pc, #232	; (adr r3, 800f29c <__kernel_sin+0x16c>)
 800f1b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f1b8:	f7f1 f866 	bl	8000288 <__aeabi_dsub>
 800f1bc:	4652      	mov	r2, sl
 800f1be:	465b      	mov	r3, fp
 800f1c0:	f7f1 fa1a 	bl	80005f8 <__aeabi_dmul>
 800f1c4:	a337      	add	r3, pc, #220	; (adr r3, 800f2a4 <__kernel_sin+0x174>)
 800f1c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f1ca:	f7f1 f85f 	bl	800028c <__adddf3>
 800f1ce:	9b01      	ldr	r3, [sp, #4]
 800f1d0:	4606      	mov	r6, r0
 800f1d2:	460f      	mov	r7, r1
 800f1d4:	b9eb      	cbnz	r3, 800f212 <__kernel_sin+0xe2>
 800f1d6:	4602      	mov	r2, r0
 800f1d8:	460b      	mov	r3, r1
 800f1da:	4650      	mov	r0, sl
 800f1dc:	4659      	mov	r1, fp
 800f1de:	f7f1 fa0b 	bl	80005f8 <__aeabi_dmul>
 800f1e2:	a325      	add	r3, pc, #148	; (adr r3, 800f278 <__kernel_sin+0x148>)
 800f1e4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f1e8:	f7f1 f84e 	bl	8000288 <__aeabi_dsub>
 800f1ec:	4642      	mov	r2, r8
 800f1ee:	464b      	mov	r3, r9
 800f1f0:	f7f1 fa02 	bl	80005f8 <__aeabi_dmul>
 800f1f4:	4602      	mov	r2, r0
 800f1f6:	460b      	mov	r3, r1
 800f1f8:	4620      	mov	r0, r4
 800f1fa:	4629      	mov	r1, r5
 800f1fc:	f7f1 f846 	bl	800028c <__adddf3>
 800f200:	4604      	mov	r4, r0
 800f202:	460d      	mov	r5, r1
 800f204:	ec45 4b10 	vmov	d0, r4, r5
 800f208:	b003      	add	sp, #12
 800f20a:	ecbd 8b04 	vpop	{d8-d9}
 800f20e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f212:	4b1b      	ldr	r3, [pc, #108]	; (800f280 <__kernel_sin+0x150>)
 800f214:	ec51 0b18 	vmov	r0, r1, d8
 800f218:	2200      	movs	r2, #0
 800f21a:	f7f1 f9ed 	bl	80005f8 <__aeabi_dmul>
 800f21e:	4632      	mov	r2, r6
 800f220:	ec41 0b19 	vmov	d9, r0, r1
 800f224:	463b      	mov	r3, r7
 800f226:	4640      	mov	r0, r8
 800f228:	4649      	mov	r1, r9
 800f22a:	f7f1 f9e5 	bl	80005f8 <__aeabi_dmul>
 800f22e:	4602      	mov	r2, r0
 800f230:	460b      	mov	r3, r1
 800f232:	ec51 0b19 	vmov	r0, r1, d9
 800f236:	f7f1 f827 	bl	8000288 <__aeabi_dsub>
 800f23a:	4652      	mov	r2, sl
 800f23c:	465b      	mov	r3, fp
 800f23e:	f7f1 f9db 	bl	80005f8 <__aeabi_dmul>
 800f242:	ec53 2b18 	vmov	r2, r3, d8
 800f246:	f7f1 f81f 	bl	8000288 <__aeabi_dsub>
 800f24a:	a30b      	add	r3, pc, #44	; (adr r3, 800f278 <__kernel_sin+0x148>)
 800f24c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f250:	4606      	mov	r6, r0
 800f252:	460f      	mov	r7, r1
 800f254:	4640      	mov	r0, r8
 800f256:	4649      	mov	r1, r9
 800f258:	f7f1 f9ce 	bl	80005f8 <__aeabi_dmul>
 800f25c:	4602      	mov	r2, r0
 800f25e:	460b      	mov	r3, r1
 800f260:	4630      	mov	r0, r6
 800f262:	4639      	mov	r1, r7
 800f264:	f7f1 f812 	bl	800028c <__adddf3>
 800f268:	4602      	mov	r2, r0
 800f26a:	460b      	mov	r3, r1
 800f26c:	4620      	mov	r0, r4
 800f26e:	4629      	mov	r1, r5
 800f270:	f7f1 f80a 	bl	8000288 <__aeabi_dsub>
 800f274:	e7c4      	b.n	800f200 <__kernel_sin+0xd0>
 800f276:	bf00      	nop
 800f278:	55555549 	.word	0x55555549
 800f27c:	3fc55555 	.word	0x3fc55555
 800f280:	3fe00000 	.word	0x3fe00000
 800f284:	5acfd57c 	.word	0x5acfd57c
 800f288:	3de5d93a 	.word	0x3de5d93a
 800f28c:	8a2b9ceb 	.word	0x8a2b9ceb
 800f290:	3e5ae5e6 	.word	0x3e5ae5e6
 800f294:	57b1fe7d 	.word	0x57b1fe7d
 800f298:	3ec71de3 	.word	0x3ec71de3
 800f29c:	19c161d5 	.word	0x19c161d5
 800f2a0:	3f2a01a0 	.word	0x3f2a01a0
 800f2a4:	1110f8a6 	.word	0x1110f8a6
 800f2a8:	3f811111 	.word	0x3f811111
 800f2ac:	00000000 	.word	0x00000000

0800f2b0 <__kernel_tan>:
 800f2b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f2b4:	ed2d 8b06 	vpush	{d8-d10}
 800f2b8:	ec5b ab10 	vmov	sl, fp, d0
 800f2bc:	4be0      	ldr	r3, [pc, #896]	; (800f640 <__kernel_tan+0x390>)
 800f2be:	b083      	sub	sp, #12
 800f2c0:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
 800f2c4:	429f      	cmp	r7, r3
 800f2c6:	ec59 8b11 	vmov	r8, r9, d1
 800f2ca:	4606      	mov	r6, r0
 800f2cc:	f8cd b000 	str.w	fp, [sp]
 800f2d0:	dc61      	bgt.n	800f396 <__kernel_tan+0xe6>
 800f2d2:	ee10 0a10 	vmov	r0, s0
 800f2d6:	4659      	mov	r1, fp
 800f2d8:	f7f1 fc3e 	bl	8000b58 <__aeabi_d2iz>
 800f2dc:	4605      	mov	r5, r0
 800f2de:	2800      	cmp	r0, #0
 800f2e0:	f040 8083 	bne.w	800f3ea <__kernel_tan+0x13a>
 800f2e4:	1c73      	adds	r3, r6, #1
 800f2e6:	4652      	mov	r2, sl
 800f2e8:	4313      	orrs	r3, r2
 800f2ea:	433b      	orrs	r3, r7
 800f2ec:	d112      	bne.n	800f314 <__kernel_tan+0x64>
 800f2ee:	ec4b ab10 	vmov	d0, sl, fp
 800f2f2:	f001 fb85 	bl	8010a00 <fabs>
 800f2f6:	49d3      	ldr	r1, [pc, #844]	; (800f644 <__kernel_tan+0x394>)
 800f2f8:	ec53 2b10 	vmov	r2, r3, d0
 800f2fc:	2000      	movs	r0, #0
 800f2fe:	f7f1 faa5 	bl	800084c <__aeabi_ddiv>
 800f302:	4682      	mov	sl, r0
 800f304:	468b      	mov	fp, r1
 800f306:	ec4b ab10 	vmov	d0, sl, fp
 800f30a:	b003      	add	sp, #12
 800f30c:	ecbd 8b06 	vpop	{d8-d10}
 800f310:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f314:	2e01      	cmp	r6, #1
 800f316:	d0f6      	beq.n	800f306 <__kernel_tan+0x56>
 800f318:	4642      	mov	r2, r8
 800f31a:	464b      	mov	r3, r9
 800f31c:	4650      	mov	r0, sl
 800f31e:	4659      	mov	r1, fp
 800f320:	f7f0 ffb4 	bl	800028c <__adddf3>
 800f324:	4602      	mov	r2, r0
 800f326:	460b      	mov	r3, r1
 800f328:	460f      	mov	r7, r1
 800f32a:	2000      	movs	r0, #0
 800f32c:	49c6      	ldr	r1, [pc, #792]	; (800f648 <__kernel_tan+0x398>)
 800f32e:	f7f1 fa8d 	bl	800084c <__aeabi_ddiv>
 800f332:	e9cd 0100 	strd	r0, r1, [sp]
 800f336:	e9dd 2300 	ldrd	r2, r3, [sp]
 800f33a:	462e      	mov	r6, r5
 800f33c:	4652      	mov	r2, sl
 800f33e:	462c      	mov	r4, r5
 800f340:	4630      	mov	r0, r6
 800f342:	461d      	mov	r5, r3
 800f344:	4639      	mov	r1, r7
 800f346:	465b      	mov	r3, fp
 800f348:	f7f0 ff9e 	bl	8000288 <__aeabi_dsub>
 800f34c:	4602      	mov	r2, r0
 800f34e:	460b      	mov	r3, r1
 800f350:	4640      	mov	r0, r8
 800f352:	4649      	mov	r1, r9
 800f354:	f7f0 ff98 	bl	8000288 <__aeabi_dsub>
 800f358:	4632      	mov	r2, r6
 800f35a:	462b      	mov	r3, r5
 800f35c:	f7f1 f94c 	bl	80005f8 <__aeabi_dmul>
 800f360:	4632      	mov	r2, r6
 800f362:	4680      	mov	r8, r0
 800f364:	4689      	mov	r9, r1
 800f366:	462b      	mov	r3, r5
 800f368:	4630      	mov	r0, r6
 800f36a:	4639      	mov	r1, r7
 800f36c:	f7f1 f944 	bl	80005f8 <__aeabi_dmul>
 800f370:	4bb4      	ldr	r3, [pc, #720]	; (800f644 <__kernel_tan+0x394>)
 800f372:	2200      	movs	r2, #0
 800f374:	f7f0 ff8a 	bl	800028c <__adddf3>
 800f378:	4602      	mov	r2, r0
 800f37a:	460b      	mov	r3, r1
 800f37c:	4640      	mov	r0, r8
 800f37e:	4649      	mov	r1, r9
 800f380:	f7f0 ff84 	bl	800028c <__adddf3>
 800f384:	e9dd 2300 	ldrd	r2, r3, [sp]
 800f388:	f7f1 f936 	bl	80005f8 <__aeabi_dmul>
 800f38c:	4622      	mov	r2, r4
 800f38e:	462b      	mov	r3, r5
 800f390:	f7f0 ff7c 	bl	800028c <__adddf3>
 800f394:	e7b5      	b.n	800f302 <__kernel_tan+0x52>
 800f396:	4bad      	ldr	r3, [pc, #692]	; (800f64c <__kernel_tan+0x39c>)
 800f398:	429f      	cmp	r7, r3
 800f39a:	dd26      	ble.n	800f3ea <__kernel_tan+0x13a>
 800f39c:	9b00      	ldr	r3, [sp, #0]
 800f39e:	2b00      	cmp	r3, #0
 800f3a0:	da09      	bge.n	800f3b6 <__kernel_tan+0x106>
 800f3a2:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 800f3a6:	469b      	mov	fp, r3
 800f3a8:	ee10 aa10 	vmov	sl, s0
 800f3ac:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 800f3b0:	ee11 8a10 	vmov	r8, s2
 800f3b4:	4699      	mov	r9, r3
 800f3b6:	4652      	mov	r2, sl
 800f3b8:	465b      	mov	r3, fp
 800f3ba:	a183      	add	r1, pc, #524	; (adr r1, 800f5c8 <__kernel_tan+0x318>)
 800f3bc:	e9d1 0100 	ldrd	r0, r1, [r1]
 800f3c0:	f7f0 ff62 	bl	8000288 <__aeabi_dsub>
 800f3c4:	4642      	mov	r2, r8
 800f3c6:	464b      	mov	r3, r9
 800f3c8:	4604      	mov	r4, r0
 800f3ca:	460d      	mov	r5, r1
 800f3cc:	a180      	add	r1, pc, #512	; (adr r1, 800f5d0 <__kernel_tan+0x320>)
 800f3ce:	e9d1 0100 	ldrd	r0, r1, [r1]
 800f3d2:	f7f0 ff59 	bl	8000288 <__aeabi_dsub>
 800f3d6:	4622      	mov	r2, r4
 800f3d8:	462b      	mov	r3, r5
 800f3da:	f7f0 ff57 	bl	800028c <__adddf3>
 800f3de:	f04f 0800 	mov.w	r8, #0
 800f3e2:	4682      	mov	sl, r0
 800f3e4:	468b      	mov	fp, r1
 800f3e6:	f04f 0900 	mov.w	r9, #0
 800f3ea:	4652      	mov	r2, sl
 800f3ec:	465b      	mov	r3, fp
 800f3ee:	4650      	mov	r0, sl
 800f3f0:	4659      	mov	r1, fp
 800f3f2:	f7f1 f901 	bl	80005f8 <__aeabi_dmul>
 800f3f6:	4602      	mov	r2, r0
 800f3f8:	460b      	mov	r3, r1
 800f3fa:	ec43 2b18 	vmov	d8, r2, r3
 800f3fe:	f7f1 f8fb 	bl	80005f8 <__aeabi_dmul>
 800f402:	ec53 2b18 	vmov	r2, r3, d8
 800f406:	4604      	mov	r4, r0
 800f408:	460d      	mov	r5, r1
 800f40a:	4650      	mov	r0, sl
 800f40c:	4659      	mov	r1, fp
 800f40e:	f7f1 f8f3 	bl	80005f8 <__aeabi_dmul>
 800f412:	a371      	add	r3, pc, #452	; (adr r3, 800f5d8 <__kernel_tan+0x328>)
 800f414:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f418:	ec41 0b19 	vmov	d9, r0, r1
 800f41c:	4620      	mov	r0, r4
 800f41e:	4629      	mov	r1, r5
 800f420:	f7f1 f8ea 	bl	80005f8 <__aeabi_dmul>
 800f424:	a36e      	add	r3, pc, #440	; (adr r3, 800f5e0 <__kernel_tan+0x330>)
 800f426:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f42a:	f7f0 ff2f 	bl	800028c <__adddf3>
 800f42e:	4622      	mov	r2, r4
 800f430:	462b      	mov	r3, r5
 800f432:	f7f1 f8e1 	bl	80005f8 <__aeabi_dmul>
 800f436:	a36c      	add	r3, pc, #432	; (adr r3, 800f5e8 <__kernel_tan+0x338>)
 800f438:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f43c:	f7f0 ff26 	bl	800028c <__adddf3>
 800f440:	4622      	mov	r2, r4
 800f442:	462b      	mov	r3, r5
 800f444:	f7f1 f8d8 	bl	80005f8 <__aeabi_dmul>
 800f448:	a369      	add	r3, pc, #420	; (adr r3, 800f5f0 <__kernel_tan+0x340>)
 800f44a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f44e:	f7f0 ff1d 	bl	800028c <__adddf3>
 800f452:	4622      	mov	r2, r4
 800f454:	462b      	mov	r3, r5
 800f456:	f7f1 f8cf 	bl	80005f8 <__aeabi_dmul>
 800f45a:	a367      	add	r3, pc, #412	; (adr r3, 800f5f8 <__kernel_tan+0x348>)
 800f45c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f460:	f7f0 ff14 	bl	800028c <__adddf3>
 800f464:	4622      	mov	r2, r4
 800f466:	462b      	mov	r3, r5
 800f468:	f7f1 f8c6 	bl	80005f8 <__aeabi_dmul>
 800f46c:	a364      	add	r3, pc, #400	; (adr r3, 800f600 <__kernel_tan+0x350>)
 800f46e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f472:	f7f0 ff0b 	bl	800028c <__adddf3>
 800f476:	ec53 2b18 	vmov	r2, r3, d8
 800f47a:	f7f1 f8bd 	bl	80005f8 <__aeabi_dmul>
 800f47e:	a362      	add	r3, pc, #392	; (adr r3, 800f608 <__kernel_tan+0x358>)
 800f480:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f484:	ec41 0b1a 	vmov	d10, r0, r1
 800f488:	4620      	mov	r0, r4
 800f48a:	4629      	mov	r1, r5
 800f48c:	f7f1 f8b4 	bl	80005f8 <__aeabi_dmul>
 800f490:	a35f      	add	r3, pc, #380	; (adr r3, 800f610 <__kernel_tan+0x360>)
 800f492:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f496:	f7f0 fef9 	bl	800028c <__adddf3>
 800f49a:	4622      	mov	r2, r4
 800f49c:	462b      	mov	r3, r5
 800f49e:	f7f1 f8ab 	bl	80005f8 <__aeabi_dmul>
 800f4a2:	a35d      	add	r3, pc, #372	; (adr r3, 800f618 <__kernel_tan+0x368>)
 800f4a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f4a8:	f7f0 fef0 	bl	800028c <__adddf3>
 800f4ac:	4622      	mov	r2, r4
 800f4ae:	462b      	mov	r3, r5
 800f4b0:	f7f1 f8a2 	bl	80005f8 <__aeabi_dmul>
 800f4b4:	a35a      	add	r3, pc, #360	; (adr r3, 800f620 <__kernel_tan+0x370>)
 800f4b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f4ba:	f7f0 fee7 	bl	800028c <__adddf3>
 800f4be:	4622      	mov	r2, r4
 800f4c0:	462b      	mov	r3, r5
 800f4c2:	f7f1 f899 	bl	80005f8 <__aeabi_dmul>
 800f4c6:	a358      	add	r3, pc, #352	; (adr r3, 800f628 <__kernel_tan+0x378>)
 800f4c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f4cc:	f7f0 fede 	bl	800028c <__adddf3>
 800f4d0:	4622      	mov	r2, r4
 800f4d2:	462b      	mov	r3, r5
 800f4d4:	f7f1 f890 	bl	80005f8 <__aeabi_dmul>
 800f4d8:	a355      	add	r3, pc, #340	; (adr r3, 800f630 <__kernel_tan+0x380>)
 800f4da:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f4de:	f7f0 fed5 	bl	800028c <__adddf3>
 800f4e2:	4602      	mov	r2, r0
 800f4e4:	460b      	mov	r3, r1
 800f4e6:	ec51 0b1a 	vmov	r0, r1, d10
 800f4ea:	f7f0 fecf 	bl	800028c <__adddf3>
 800f4ee:	ec53 2b19 	vmov	r2, r3, d9
 800f4f2:	f7f1 f881 	bl	80005f8 <__aeabi_dmul>
 800f4f6:	4642      	mov	r2, r8
 800f4f8:	464b      	mov	r3, r9
 800f4fa:	f7f0 fec7 	bl	800028c <__adddf3>
 800f4fe:	ec53 2b18 	vmov	r2, r3, d8
 800f502:	f7f1 f879 	bl	80005f8 <__aeabi_dmul>
 800f506:	4642      	mov	r2, r8
 800f508:	464b      	mov	r3, r9
 800f50a:	f7f0 febf 	bl	800028c <__adddf3>
 800f50e:	a34a      	add	r3, pc, #296	; (adr r3, 800f638 <__kernel_tan+0x388>)
 800f510:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f514:	4604      	mov	r4, r0
 800f516:	460d      	mov	r5, r1
 800f518:	ec51 0b19 	vmov	r0, r1, d9
 800f51c:	f7f1 f86c 	bl	80005f8 <__aeabi_dmul>
 800f520:	4622      	mov	r2, r4
 800f522:	462b      	mov	r3, r5
 800f524:	f7f0 feb2 	bl	800028c <__adddf3>
 800f528:	460b      	mov	r3, r1
 800f52a:	ec41 0b18 	vmov	d8, r0, r1
 800f52e:	4602      	mov	r2, r0
 800f530:	4659      	mov	r1, fp
 800f532:	4650      	mov	r0, sl
 800f534:	f7f0 feaa 	bl	800028c <__adddf3>
 800f538:	4b44      	ldr	r3, [pc, #272]	; (800f64c <__kernel_tan+0x39c>)
 800f53a:	429f      	cmp	r7, r3
 800f53c:	4604      	mov	r4, r0
 800f53e:	460d      	mov	r5, r1
 800f540:	f340 8086 	ble.w	800f650 <__kernel_tan+0x3a0>
 800f544:	4630      	mov	r0, r6
 800f546:	f7f0 ffed 	bl	8000524 <__aeabi_i2d>
 800f54a:	4622      	mov	r2, r4
 800f54c:	4680      	mov	r8, r0
 800f54e:	4689      	mov	r9, r1
 800f550:	462b      	mov	r3, r5
 800f552:	4620      	mov	r0, r4
 800f554:	4629      	mov	r1, r5
 800f556:	f7f1 f84f 	bl	80005f8 <__aeabi_dmul>
 800f55a:	4642      	mov	r2, r8
 800f55c:	4606      	mov	r6, r0
 800f55e:	460f      	mov	r7, r1
 800f560:	464b      	mov	r3, r9
 800f562:	4620      	mov	r0, r4
 800f564:	4629      	mov	r1, r5
 800f566:	f7f0 fe91 	bl	800028c <__adddf3>
 800f56a:	4602      	mov	r2, r0
 800f56c:	460b      	mov	r3, r1
 800f56e:	4630      	mov	r0, r6
 800f570:	4639      	mov	r1, r7
 800f572:	f7f1 f96b 	bl	800084c <__aeabi_ddiv>
 800f576:	ec53 2b18 	vmov	r2, r3, d8
 800f57a:	f7f0 fe85 	bl	8000288 <__aeabi_dsub>
 800f57e:	4602      	mov	r2, r0
 800f580:	460b      	mov	r3, r1
 800f582:	4650      	mov	r0, sl
 800f584:	4659      	mov	r1, fp
 800f586:	f7f0 fe7f 	bl	8000288 <__aeabi_dsub>
 800f58a:	4602      	mov	r2, r0
 800f58c:	460b      	mov	r3, r1
 800f58e:	f7f0 fe7d 	bl	800028c <__adddf3>
 800f592:	4602      	mov	r2, r0
 800f594:	460b      	mov	r3, r1
 800f596:	4640      	mov	r0, r8
 800f598:	4649      	mov	r1, r9
 800f59a:	f7f0 fe75 	bl	8000288 <__aeabi_dsub>
 800f59e:	9b00      	ldr	r3, [sp, #0]
 800f5a0:	ea4f 7aa3 	mov.w	sl, r3, asr #30
 800f5a4:	f00a 0a02 	and.w	sl, sl, #2
 800f5a8:	4604      	mov	r4, r0
 800f5aa:	f1ca 0001 	rsb	r0, sl, #1
 800f5ae:	460d      	mov	r5, r1
 800f5b0:	f7f0 ffb8 	bl	8000524 <__aeabi_i2d>
 800f5b4:	4602      	mov	r2, r0
 800f5b6:	460b      	mov	r3, r1
 800f5b8:	4620      	mov	r0, r4
 800f5ba:	4629      	mov	r1, r5
 800f5bc:	f7f1 f81c 	bl	80005f8 <__aeabi_dmul>
 800f5c0:	e69f      	b.n	800f302 <__kernel_tan+0x52>
 800f5c2:	bf00      	nop
 800f5c4:	f3af 8000 	nop.w
 800f5c8:	54442d18 	.word	0x54442d18
 800f5cc:	3fe921fb 	.word	0x3fe921fb
 800f5d0:	33145c07 	.word	0x33145c07
 800f5d4:	3c81a626 	.word	0x3c81a626
 800f5d8:	74bf7ad4 	.word	0x74bf7ad4
 800f5dc:	3efb2a70 	.word	0x3efb2a70
 800f5e0:	32f0a7e9 	.word	0x32f0a7e9
 800f5e4:	3f12b80f 	.word	0x3f12b80f
 800f5e8:	1a8d1068 	.word	0x1a8d1068
 800f5ec:	3f3026f7 	.word	0x3f3026f7
 800f5f0:	fee08315 	.word	0xfee08315
 800f5f4:	3f57dbc8 	.word	0x3f57dbc8
 800f5f8:	e96e8493 	.word	0xe96e8493
 800f5fc:	3f8226e3 	.word	0x3f8226e3
 800f600:	1bb341fe 	.word	0x1bb341fe
 800f604:	3faba1ba 	.word	0x3faba1ba
 800f608:	db605373 	.word	0xdb605373
 800f60c:	bef375cb 	.word	0xbef375cb
 800f610:	a03792a6 	.word	0xa03792a6
 800f614:	3f147e88 	.word	0x3f147e88
 800f618:	f2f26501 	.word	0xf2f26501
 800f61c:	3f4344d8 	.word	0x3f4344d8
 800f620:	c9560328 	.word	0xc9560328
 800f624:	3f6d6d22 	.word	0x3f6d6d22
 800f628:	8406d637 	.word	0x8406d637
 800f62c:	3f9664f4 	.word	0x3f9664f4
 800f630:	1110fe7a 	.word	0x1110fe7a
 800f634:	3fc11111 	.word	0x3fc11111
 800f638:	55555563 	.word	0x55555563
 800f63c:	3fd55555 	.word	0x3fd55555
 800f640:	3e2fffff 	.word	0x3e2fffff
 800f644:	3ff00000 	.word	0x3ff00000
 800f648:	bff00000 	.word	0xbff00000
 800f64c:	3fe59427 	.word	0x3fe59427
 800f650:	2e01      	cmp	r6, #1
 800f652:	d02f      	beq.n	800f6b4 <__kernel_tan+0x404>
 800f654:	460f      	mov	r7, r1
 800f656:	4602      	mov	r2, r0
 800f658:	460b      	mov	r3, r1
 800f65a:	4689      	mov	r9, r1
 800f65c:	2000      	movs	r0, #0
 800f65e:	4917      	ldr	r1, [pc, #92]	; (800f6bc <__kernel_tan+0x40c>)
 800f660:	f7f1 f8f4 	bl	800084c <__aeabi_ddiv>
 800f664:	2600      	movs	r6, #0
 800f666:	e9cd 0100 	strd	r0, r1, [sp]
 800f66a:	4652      	mov	r2, sl
 800f66c:	465b      	mov	r3, fp
 800f66e:	4630      	mov	r0, r6
 800f670:	4639      	mov	r1, r7
 800f672:	f7f0 fe09 	bl	8000288 <__aeabi_dsub>
 800f676:	e9dd 4500 	ldrd	r4, r5, [sp]
 800f67a:	4602      	mov	r2, r0
 800f67c:	460b      	mov	r3, r1
 800f67e:	ec51 0b18 	vmov	r0, r1, d8
 800f682:	f7f0 fe01 	bl	8000288 <__aeabi_dsub>
 800f686:	4632      	mov	r2, r6
 800f688:	462b      	mov	r3, r5
 800f68a:	f7f0 ffb5 	bl	80005f8 <__aeabi_dmul>
 800f68e:	46b0      	mov	r8, r6
 800f690:	460f      	mov	r7, r1
 800f692:	4642      	mov	r2, r8
 800f694:	462b      	mov	r3, r5
 800f696:	4634      	mov	r4, r6
 800f698:	4649      	mov	r1, r9
 800f69a:	4606      	mov	r6, r0
 800f69c:	4640      	mov	r0, r8
 800f69e:	f7f0 ffab 	bl	80005f8 <__aeabi_dmul>
 800f6a2:	4b07      	ldr	r3, [pc, #28]	; (800f6c0 <__kernel_tan+0x410>)
 800f6a4:	2200      	movs	r2, #0
 800f6a6:	f7f0 fdf1 	bl	800028c <__adddf3>
 800f6aa:	4602      	mov	r2, r0
 800f6ac:	460b      	mov	r3, r1
 800f6ae:	4630      	mov	r0, r6
 800f6b0:	4639      	mov	r1, r7
 800f6b2:	e665      	b.n	800f380 <__kernel_tan+0xd0>
 800f6b4:	4682      	mov	sl, r0
 800f6b6:	468b      	mov	fp, r1
 800f6b8:	e625      	b.n	800f306 <__kernel_tan+0x56>
 800f6ba:	bf00      	nop
 800f6bc:	bff00000 	.word	0xbff00000
 800f6c0:	3ff00000 	.word	0x3ff00000
 800f6c4:	00000000 	.word	0x00000000

0800f6c8 <__ieee754_atan2>:
 800f6c8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f6cc:	ec57 6b11 	vmov	r6, r7, d1
 800f6d0:	4273      	negs	r3, r6
 800f6d2:	f8df 817c 	ldr.w	r8, [pc, #380]	; 800f850 <__ieee754_atan2+0x188>
 800f6d6:	f027 4200 	bic.w	r2, r7, #2147483648	; 0x80000000
 800f6da:	4333      	orrs	r3, r6
 800f6dc:	ea42 73d3 	orr.w	r3, r2, r3, lsr #31
 800f6e0:	4543      	cmp	r3, r8
 800f6e2:	ec51 0b10 	vmov	r0, r1, d0
 800f6e6:	ee11 5a10 	vmov	r5, s2
 800f6ea:	d80a      	bhi.n	800f702 <__ieee754_atan2+0x3a>
 800f6ec:	4244      	negs	r4, r0
 800f6ee:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 800f6f2:	4304      	orrs	r4, r0
 800f6f4:	ea43 74d4 	orr.w	r4, r3, r4, lsr #31
 800f6f8:	4544      	cmp	r4, r8
 800f6fa:	ee10 9a10 	vmov	r9, s0
 800f6fe:	468e      	mov	lr, r1
 800f700:	d907      	bls.n	800f712 <__ieee754_atan2+0x4a>
 800f702:	4632      	mov	r2, r6
 800f704:	463b      	mov	r3, r7
 800f706:	f7f0 fdc1 	bl	800028c <__adddf3>
 800f70a:	ec41 0b10 	vmov	d0, r0, r1
 800f70e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800f712:	f107 4440 	add.w	r4, r7, #3221225472	; 0xc0000000
 800f716:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 800f71a:	4334      	orrs	r4, r6
 800f71c:	d103      	bne.n	800f726 <__ieee754_atan2+0x5e>
 800f71e:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800f722:	f000 bfcd 	b.w	80106c0 <atan>
 800f726:	17bc      	asrs	r4, r7, #30
 800f728:	f004 0402 	and.w	r4, r4, #2
 800f72c:	ea53 0909 	orrs.w	r9, r3, r9
 800f730:	ea44 74d1 	orr.w	r4, r4, r1, lsr #31
 800f734:	d107      	bne.n	800f746 <__ieee754_atan2+0x7e>
 800f736:	2c02      	cmp	r4, #2
 800f738:	d05f      	beq.n	800f7fa <__ieee754_atan2+0x132>
 800f73a:	2c03      	cmp	r4, #3
 800f73c:	d1e5      	bne.n	800f70a <__ieee754_atan2+0x42>
 800f73e:	a140      	add	r1, pc, #256	; (adr r1, 800f840 <__ieee754_atan2+0x178>)
 800f740:	e9d1 0100 	ldrd	r0, r1, [r1]
 800f744:	e7e1      	b.n	800f70a <__ieee754_atan2+0x42>
 800f746:	4315      	orrs	r5, r2
 800f748:	d106      	bne.n	800f758 <__ieee754_atan2+0x90>
 800f74a:	f1be 0f00 	cmp.w	lr, #0
 800f74e:	da5f      	bge.n	800f810 <__ieee754_atan2+0x148>
 800f750:	a13d      	add	r1, pc, #244	; (adr r1, 800f848 <__ieee754_atan2+0x180>)
 800f752:	e9d1 0100 	ldrd	r0, r1, [r1]
 800f756:	e7d8      	b.n	800f70a <__ieee754_atan2+0x42>
 800f758:	4542      	cmp	r2, r8
 800f75a:	d10f      	bne.n	800f77c <__ieee754_atan2+0xb4>
 800f75c:	4293      	cmp	r3, r2
 800f75e:	f104 34ff 	add.w	r4, r4, #4294967295
 800f762:	d107      	bne.n	800f774 <__ieee754_atan2+0xac>
 800f764:	2c02      	cmp	r4, #2
 800f766:	d84c      	bhi.n	800f802 <__ieee754_atan2+0x13a>
 800f768:	4b33      	ldr	r3, [pc, #204]	; (800f838 <__ieee754_atan2+0x170>)
 800f76a:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800f76e:	e9d3 0100 	ldrd	r0, r1, [r3]
 800f772:	e7ca      	b.n	800f70a <__ieee754_atan2+0x42>
 800f774:	2c02      	cmp	r4, #2
 800f776:	d848      	bhi.n	800f80a <__ieee754_atan2+0x142>
 800f778:	4b30      	ldr	r3, [pc, #192]	; (800f83c <__ieee754_atan2+0x174>)
 800f77a:	e7f6      	b.n	800f76a <__ieee754_atan2+0xa2>
 800f77c:	4543      	cmp	r3, r8
 800f77e:	d0e4      	beq.n	800f74a <__ieee754_atan2+0x82>
 800f780:	1a9b      	subs	r3, r3, r2
 800f782:	f1b3 7f74 	cmp.w	r3, #63963136	; 0x3d00000
 800f786:	ea4f 5223 	mov.w	r2, r3, asr #20
 800f78a:	da1e      	bge.n	800f7ca <__ieee754_atan2+0x102>
 800f78c:	2f00      	cmp	r7, #0
 800f78e:	da01      	bge.n	800f794 <__ieee754_atan2+0xcc>
 800f790:	323c      	adds	r2, #60	; 0x3c
 800f792:	db1e      	blt.n	800f7d2 <__ieee754_atan2+0x10a>
 800f794:	4632      	mov	r2, r6
 800f796:	463b      	mov	r3, r7
 800f798:	f7f1 f858 	bl	800084c <__aeabi_ddiv>
 800f79c:	ec41 0b10 	vmov	d0, r0, r1
 800f7a0:	f001 f92e 	bl	8010a00 <fabs>
 800f7a4:	f000 ff8c 	bl	80106c0 <atan>
 800f7a8:	ec51 0b10 	vmov	r0, r1, d0
 800f7ac:	2c01      	cmp	r4, #1
 800f7ae:	d013      	beq.n	800f7d8 <__ieee754_atan2+0x110>
 800f7b0:	2c02      	cmp	r4, #2
 800f7b2:	d015      	beq.n	800f7e0 <__ieee754_atan2+0x118>
 800f7b4:	2c00      	cmp	r4, #0
 800f7b6:	d0a8      	beq.n	800f70a <__ieee754_atan2+0x42>
 800f7b8:	a317      	add	r3, pc, #92	; (adr r3, 800f818 <__ieee754_atan2+0x150>)
 800f7ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f7be:	f7f0 fd63 	bl	8000288 <__aeabi_dsub>
 800f7c2:	a317      	add	r3, pc, #92	; (adr r3, 800f820 <__ieee754_atan2+0x158>)
 800f7c4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f7c8:	e014      	b.n	800f7f4 <__ieee754_atan2+0x12c>
 800f7ca:	a117      	add	r1, pc, #92	; (adr r1, 800f828 <__ieee754_atan2+0x160>)
 800f7cc:	e9d1 0100 	ldrd	r0, r1, [r1]
 800f7d0:	e7ec      	b.n	800f7ac <__ieee754_atan2+0xe4>
 800f7d2:	2000      	movs	r0, #0
 800f7d4:	2100      	movs	r1, #0
 800f7d6:	e7e9      	b.n	800f7ac <__ieee754_atan2+0xe4>
 800f7d8:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800f7dc:	4619      	mov	r1, r3
 800f7de:	e794      	b.n	800f70a <__ieee754_atan2+0x42>
 800f7e0:	a30d      	add	r3, pc, #52	; (adr r3, 800f818 <__ieee754_atan2+0x150>)
 800f7e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800f7e6:	f7f0 fd4f 	bl	8000288 <__aeabi_dsub>
 800f7ea:	4602      	mov	r2, r0
 800f7ec:	460b      	mov	r3, r1
 800f7ee:	a10c      	add	r1, pc, #48	; (adr r1, 800f820 <__ieee754_atan2+0x158>)
 800f7f0:	e9d1 0100 	ldrd	r0, r1, [r1]
 800f7f4:	f7f0 fd48 	bl	8000288 <__aeabi_dsub>
 800f7f8:	e787      	b.n	800f70a <__ieee754_atan2+0x42>
 800f7fa:	a109      	add	r1, pc, #36	; (adr r1, 800f820 <__ieee754_atan2+0x158>)
 800f7fc:	e9d1 0100 	ldrd	r0, r1, [r1]
 800f800:	e783      	b.n	800f70a <__ieee754_atan2+0x42>
 800f802:	a10b      	add	r1, pc, #44	; (adr r1, 800f830 <__ieee754_atan2+0x168>)
 800f804:	e9d1 0100 	ldrd	r0, r1, [r1]
 800f808:	e77f      	b.n	800f70a <__ieee754_atan2+0x42>
 800f80a:	2000      	movs	r0, #0
 800f80c:	2100      	movs	r1, #0
 800f80e:	e77c      	b.n	800f70a <__ieee754_atan2+0x42>
 800f810:	a105      	add	r1, pc, #20	; (adr r1, 800f828 <__ieee754_atan2+0x160>)
 800f812:	e9d1 0100 	ldrd	r0, r1, [r1]
 800f816:	e778      	b.n	800f70a <__ieee754_atan2+0x42>
 800f818:	33145c07 	.word	0x33145c07
 800f81c:	3ca1a626 	.word	0x3ca1a626
 800f820:	54442d18 	.word	0x54442d18
 800f824:	400921fb 	.word	0x400921fb
 800f828:	54442d18 	.word	0x54442d18
 800f82c:	3ff921fb 	.word	0x3ff921fb
 800f830:	54442d18 	.word	0x54442d18
 800f834:	3fe921fb 	.word	0x3fe921fb
 800f838:	08012218 	.word	0x08012218
 800f83c:	08012230 	.word	0x08012230
 800f840:	54442d18 	.word	0x54442d18
 800f844:	c00921fb 	.word	0xc00921fb
 800f848:	54442d18 	.word	0x54442d18
 800f84c:	bff921fb 	.word	0xbff921fb
 800f850:	7ff00000 	.word	0x7ff00000
 800f854:	00000000 	.word	0x00000000

0800f858 <__ieee754_pow>:
 800f858:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f85c:	ed2d 8b06 	vpush	{d8-d10}
 800f860:	b089      	sub	sp, #36	; 0x24
 800f862:	ed8d 1b00 	vstr	d1, [sp]
 800f866:	e9dd 2900 	ldrd	r2, r9, [sp]
 800f86a:	f029 4800 	bic.w	r8, r9, #2147483648	; 0x80000000
 800f86e:	ea58 0102 	orrs.w	r1, r8, r2
 800f872:	ec57 6b10 	vmov	r6, r7, d0
 800f876:	d115      	bne.n	800f8a4 <__ieee754_pow+0x4c>
 800f878:	19b3      	adds	r3, r6, r6
 800f87a:	f487 2200 	eor.w	r2, r7, #524288	; 0x80000
 800f87e:	4152      	adcs	r2, r2
 800f880:	4299      	cmp	r1, r3
 800f882:	4b89      	ldr	r3, [pc, #548]	; (800faa8 <__ieee754_pow+0x250>)
 800f884:	4193      	sbcs	r3, r2
 800f886:	f080 84d1 	bcs.w	801022c <__ieee754_pow+0x9d4>
 800f88a:	e9dd 2300 	ldrd	r2, r3, [sp]
 800f88e:	4630      	mov	r0, r6
 800f890:	4639      	mov	r1, r7
 800f892:	f7f0 fcfb 	bl	800028c <__adddf3>
 800f896:	ec41 0b10 	vmov	d0, r0, r1
 800f89a:	b009      	add	sp, #36	; 0x24
 800f89c:	ecbd 8b06 	vpop	{d8-d10}
 800f8a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f8a4:	4b81      	ldr	r3, [pc, #516]	; (800faac <__ieee754_pow+0x254>)
 800f8a6:	f027 4400 	bic.w	r4, r7, #2147483648	; 0x80000000
 800f8aa:	429c      	cmp	r4, r3
 800f8ac:	ee10 aa10 	vmov	sl, s0
 800f8b0:	463d      	mov	r5, r7
 800f8b2:	dc06      	bgt.n	800f8c2 <__ieee754_pow+0x6a>
 800f8b4:	d101      	bne.n	800f8ba <__ieee754_pow+0x62>
 800f8b6:	2e00      	cmp	r6, #0
 800f8b8:	d1e7      	bne.n	800f88a <__ieee754_pow+0x32>
 800f8ba:	4598      	cmp	r8, r3
 800f8bc:	dc01      	bgt.n	800f8c2 <__ieee754_pow+0x6a>
 800f8be:	d10f      	bne.n	800f8e0 <__ieee754_pow+0x88>
 800f8c0:	b172      	cbz	r2, 800f8e0 <__ieee754_pow+0x88>
 800f8c2:	f105 4540 	add.w	r5, r5, #3221225472	; 0xc0000000
 800f8c6:	f505 1580 	add.w	r5, r5, #1048576	; 0x100000
 800f8ca:	ea55 050a 	orrs.w	r5, r5, sl
 800f8ce:	d1dc      	bne.n	800f88a <__ieee754_pow+0x32>
 800f8d0:	e9dd 3200 	ldrd	r3, r2, [sp]
 800f8d4:	18db      	adds	r3, r3, r3
 800f8d6:	f482 2200 	eor.w	r2, r2, #524288	; 0x80000
 800f8da:	4152      	adcs	r2, r2
 800f8dc:	429d      	cmp	r5, r3
 800f8de:	e7d0      	b.n	800f882 <__ieee754_pow+0x2a>
 800f8e0:	2d00      	cmp	r5, #0
 800f8e2:	da3b      	bge.n	800f95c <__ieee754_pow+0x104>
 800f8e4:	4b72      	ldr	r3, [pc, #456]	; (800fab0 <__ieee754_pow+0x258>)
 800f8e6:	4598      	cmp	r8, r3
 800f8e8:	dc51      	bgt.n	800f98e <__ieee754_pow+0x136>
 800f8ea:	f1a3 7354 	sub.w	r3, r3, #55574528	; 0x3500000
 800f8ee:	4598      	cmp	r8, r3
 800f8f0:	f340 84ab 	ble.w	801024a <__ieee754_pow+0x9f2>
 800f8f4:	ea4f 5328 	mov.w	r3, r8, asr #20
 800f8f8:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 800f8fc:	2b14      	cmp	r3, #20
 800f8fe:	dd0f      	ble.n	800f920 <__ieee754_pow+0xc8>
 800f900:	f1c3 0334 	rsb	r3, r3, #52	; 0x34
 800f904:	fa22 f103 	lsr.w	r1, r2, r3
 800f908:	fa01 f303 	lsl.w	r3, r1, r3
 800f90c:	4293      	cmp	r3, r2
 800f90e:	f040 849c 	bne.w	801024a <__ieee754_pow+0x9f2>
 800f912:	f001 0101 	and.w	r1, r1, #1
 800f916:	f1c1 0302 	rsb	r3, r1, #2
 800f91a:	9304      	str	r3, [sp, #16]
 800f91c:	b182      	cbz	r2, 800f940 <__ieee754_pow+0xe8>
 800f91e:	e05f      	b.n	800f9e0 <__ieee754_pow+0x188>
 800f920:	2a00      	cmp	r2, #0
 800f922:	d15b      	bne.n	800f9dc <__ieee754_pow+0x184>
 800f924:	f1c3 0314 	rsb	r3, r3, #20
 800f928:	fa48 f103 	asr.w	r1, r8, r3
 800f92c:	fa01 f303 	lsl.w	r3, r1, r3
 800f930:	4543      	cmp	r3, r8
 800f932:	f040 8487 	bne.w	8010244 <__ieee754_pow+0x9ec>
 800f936:	f001 0101 	and.w	r1, r1, #1
 800f93a:	f1c1 0302 	rsb	r3, r1, #2
 800f93e:	9304      	str	r3, [sp, #16]
 800f940:	4b5c      	ldr	r3, [pc, #368]	; (800fab4 <__ieee754_pow+0x25c>)
 800f942:	4598      	cmp	r8, r3
 800f944:	d132      	bne.n	800f9ac <__ieee754_pow+0x154>
 800f946:	f1b9 0f00 	cmp.w	r9, #0
 800f94a:	f280 8477 	bge.w	801023c <__ieee754_pow+0x9e4>
 800f94e:	4959      	ldr	r1, [pc, #356]	; (800fab4 <__ieee754_pow+0x25c>)
 800f950:	4632      	mov	r2, r6
 800f952:	463b      	mov	r3, r7
 800f954:	2000      	movs	r0, #0
 800f956:	f7f0 ff79 	bl	800084c <__aeabi_ddiv>
 800f95a:	e79c      	b.n	800f896 <__ieee754_pow+0x3e>
 800f95c:	2300      	movs	r3, #0
 800f95e:	9304      	str	r3, [sp, #16]
 800f960:	2a00      	cmp	r2, #0
 800f962:	d13d      	bne.n	800f9e0 <__ieee754_pow+0x188>
 800f964:	4b51      	ldr	r3, [pc, #324]	; (800faac <__ieee754_pow+0x254>)
 800f966:	4598      	cmp	r8, r3
 800f968:	d1ea      	bne.n	800f940 <__ieee754_pow+0xe8>
 800f96a:	f104 4340 	add.w	r3, r4, #3221225472	; 0xc0000000
 800f96e:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
 800f972:	ea53 030a 	orrs.w	r3, r3, sl
 800f976:	f000 8459 	beq.w	801022c <__ieee754_pow+0x9d4>
 800f97a:	4b4f      	ldr	r3, [pc, #316]	; (800fab8 <__ieee754_pow+0x260>)
 800f97c:	429c      	cmp	r4, r3
 800f97e:	dd08      	ble.n	800f992 <__ieee754_pow+0x13a>
 800f980:	f1b9 0f00 	cmp.w	r9, #0
 800f984:	f2c0 8456 	blt.w	8010234 <__ieee754_pow+0x9dc>
 800f988:	e9dd 0100 	ldrd	r0, r1, [sp]
 800f98c:	e783      	b.n	800f896 <__ieee754_pow+0x3e>
 800f98e:	2302      	movs	r3, #2
 800f990:	e7e5      	b.n	800f95e <__ieee754_pow+0x106>
 800f992:	f1b9 0f00 	cmp.w	r9, #0
 800f996:	f04f 0000 	mov.w	r0, #0
 800f99a:	f04f 0100 	mov.w	r1, #0
 800f99e:	f6bf af7a 	bge.w	800f896 <__ieee754_pow+0x3e>
 800f9a2:	e9dd 0300 	ldrd	r0, r3, [sp]
 800f9a6:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 800f9aa:	e774      	b.n	800f896 <__ieee754_pow+0x3e>
 800f9ac:	f1b9 4f80 	cmp.w	r9, #1073741824	; 0x40000000
 800f9b0:	d106      	bne.n	800f9c0 <__ieee754_pow+0x168>
 800f9b2:	4632      	mov	r2, r6
 800f9b4:	463b      	mov	r3, r7
 800f9b6:	4630      	mov	r0, r6
 800f9b8:	4639      	mov	r1, r7
 800f9ba:	f7f0 fe1d 	bl	80005f8 <__aeabi_dmul>
 800f9be:	e76a      	b.n	800f896 <__ieee754_pow+0x3e>
 800f9c0:	4b3e      	ldr	r3, [pc, #248]	; (800fabc <__ieee754_pow+0x264>)
 800f9c2:	4599      	cmp	r9, r3
 800f9c4:	d10c      	bne.n	800f9e0 <__ieee754_pow+0x188>
 800f9c6:	2d00      	cmp	r5, #0
 800f9c8:	db0a      	blt.n	800f9e0 <__ieee754_pow+0x188>
 800f9ca:	ec47 6b10 	vmov	d0, r6, r7
 800f9ce:	b009      	add	sp, #36	; 0x24
 800f9d0:	ecbd 8b06 	vpop	{d8-d10}
 800f9d4:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f9d8:	f7ff ba06 	b.w	800ede8 <__ieee754_sqrt>
 800f9dc:	2300      	movs	r3, #0
 800f9de:	9304      	str	r3, [sp, #16]
 800f9e0:	ec47 6b10 	vmov	d0, r6, r7
 800f9e4:	f001 f80c 	bl	8010a00 <fabs>
 800f9e8:	ec51 0b10 	vmov	r0, r1, d0
 800f9ec:	f1ba 0f00 	cmp.w	sl, #0
 800f9f0:	d129      	bne.n	800fa46 <__ieee754_pow+0x1ee>
 800f9f2:	b124      	cbz	r4, 800f9fe <__ieee754_pow+0x1a6>
 800f9f4:	4b2f      	ldr	r3, [pc, #188]	; (800fab4 <__ieee754_pow+0x25c>)
 800f9f6:	f025 4240 	bic.w	r2, r5, #3221225472	; 0xc0000000
 800f9fa:	429a      	cmp	r2, r3
 800f9fc:	d123      	bne.n	800fa46 <__ieee754_pow+0x1ee>
 800f9fe:	f1b9 0f00 	cmp.w	r9, #0
 800fa02:	da05      	bge.n	800fa10 <__ieee754_pow+0x1b8>
 800fa04:	4602      	mov	r2, r0
 800fa06:	460b      	mov	r3, r1
 800fa08:	2000      	movs	r0, #0
 800fa0a:	492a      	ldr	r1, [pc, #168]	; (800fab4 <__ieee754_pow+0x25c>)
 800fa0c:	f7f0 ff1e 	bl	800084c <__aeabi_ddiv>
 800fa10:	2d00      	cmp	r5, #0
 800fa12:	f6bf af40 	bge.w	800f896 <__ieee754_pow+0x3e>
 800fa16:	9b04      	ldr	r3, [sp, #16]
 800fa18:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 800fa1c:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 800fa20:	431c      	orrs	r4, r3
 800fa22:	d108      	bne.n	800fa36 <__ieee754_pow+0x1de>
 800fa24:	4602      	mov	r2, r0
 800fa26:	460b      	mov	r3, r1
 800fa28:	4610      	mov	r0, r2
 800fa2a:	4619      	mov	r1, r3
 800fa2c:	f7f0 fc2c 	bl	8000288 <__aeabi_dsub>
 800fa30:	4602      	mov	r2, r0
 800fa32:	460b      	mov	r3, r1
 800fa34:	e78f      	b.n	800f956 <__ieee754_pow+0xfe>
 800fa36:	9b04      	ldr	r3, [sp, #16]
 800fa38:	2b01      	cmp	r3, #1
 800fa3a:	f47f af2c 	bne.w	800f896 <__ieee754_pow+0x3e>
 800fa3e:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800fa42:	4619      	mov	r1, r3
 800fa44:	e727      	b.n	800f896 <__ieee754_pow+0x3e>
 800fa46:	0feb      	lsrs	r3, r5, #31
 800fa48:	3b01      	subs	r3, #1
 800fa4a:	9306      	str	r3, [sp, #24]
 800fa4c:	9a06      	ldr	r2, [sp, #24]
 800fa4e:	9b04      	ldr	r3, [sp, #16]
 800fa50:	4313      	orrs	r3, r2
 800fa52:	d102      	bne.n	800fa5a <__ieee754_pow+0x202>
 800fa54:	4632      	mov	r2, r6
 800fa56:	463b      	mov	r3, r7
 800fa58:	e7e6      	b.n	800fa28 <__ieee754_pow+0x1d0>
 800fa5a:	4b19      	ldr	r3, [pc, #100]	; (800fac0 <__ieee754_pow+0x268>)
 800fa5c:	4598      	cmp	r8, r3
 800fa5e:	f340 80fb 	ble.w	800fc58 <__ieee754_pow+0x400>
 800fa62:	f103 7304 	add.w	r3, r3, #34603008	; 0x2100000
 800fa66:	4598      	cmp	r8, r3
 800fa68:	4b13      	ldr	r3, [pc, #76]	; (800fab8 <__ieee754_pow+0x260>)
 800fa6a:	dd0c      	ble.n	800fa86 <__ieee754_pow+0x22e>
 800fa6c:	429c      	cmp	r4, r3
 800fa6e:	dc0f      	bgt.n	800fa90 <__ieee754_pow+0x238>
 800fa70:	f1b9 0f00 	cmp.w	r9, #0
 800fa74:	da0f      	bge.n	800fa96 <__ieee754_pow+0x23e>
 800fa76:	2000      	movs	r0, #0
 800fa78:	b009      	add	sp, #36	; 0x24
 800fa7a:	ecbd 8b06 	vpop	{d8-d10}
 800fa7e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fa82:	f001 b86e 	b.w	8010b62 <__math_oflow>
 800fa86:	429c      	cmp	r4, r3
 800fa88:	dbf2      	blt.n	800fa70 <__ieee754_pow+0x218>
 800fa8a:	4b0a      	ldr	r3, [pc, #40]	; (800fab4 <__ieee754_pow+0x25c>)
 800fa8c:	429c      	cmp	r4, r3
 800fa8e:	dd19      	ble.n	800fac4 <__ieee754_pow+0x26c>
 800fa90:	f1b9 0f00 	cmp.w	r9, #0
 800fa94:	dcef      	bgt.n	800fa76 <__ieee754_pow+0x21e>
 800fa96:	2000      	movs	r0, #0
 800fa98:	b009      	add	sp, #36	; 0x24
 800fa9a:	ecbd 8b06 	vpop	{d8-d10}
 800fa9e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800faa2:	f001 b855 	b.w	8010b50 <__math_uflow>
 800faa6:	bf00      	nop
 800faa8:	fff00000 	.word	0xfff00000
 800faac:	7ff00000 	.word	0x7ff00000
 800fab0:	433fffff 	.word	0x433fffff
 800fab4:	3ff00000 	.word	0x3ff00000
 800fab8:	3fefffff 	.word	0x3fefffff
 800fabc:	3fe00000 	.word	0x3fe00000
 800fac0:	41e00000 	.word	0x41e00000
 800fac4:	4b60      	ldr	r3, [pc, #384]	; (800fc48 <__ieee754_pow+0x3f0>)
 800fac6:	2200      	movs	r2, #0
 800fac8:	f7f0 fbde 	bl	8000288 <__aeabi_dsub>
 800facc:	a354      	add	r3, pc, #336	; (adr r3, 800fc20 <__ieee754_pow+0x3c8>)
 800face:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fad2:	4604      	mov	r4, r0
 800fad4:	460d      	mov	r5, r1
 800fad6:	f7f0 fd8f 	bl	80005f8 <__aeabi_dmul>
 800fada:	a353      	add	r3, pc, #332	; (adr r3, 800fc28 <__ieee754_pow+0x3d0>)
 800fadc:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fae0:	4606      	mov	r6, r0
 800fae2:	460f      	mov	r7, r1
 800fae4:	4620      	mov	r0, r4
 800fae6:	4629      	mov	r1, r5
 800fae8:	f7f0 fd86 	bl	80005f8 <__aeabi_dmul>
 800faec:	4b57      	ldr	r3, [pc, #348]	; (800fc4c <__ieee754_pow+0x3f4>)
 800faee:	4682      	mov	sl, r0
 800faf0:	468b      	mov	fp, r1
 800faf2:	2200      	movs	r2, #0
 800faf4:	4620      	mov	r0, r4
 800faf6:	4629      	mov	r1, r5
 800faf8:	f7f0 fd7e 	bl	80005f8 <__aeabi_dmul>
 800fafc:	4602      	mov	r2, r0
 800fafe:	460b      	mov	r3, r1
 800fb00:	a14b      	add	r1, pc, #300	; (adr r1, 800fc30 <__ieee754_pow+0x3d8>)
 800fb02:	e9d1 0100 	ldrd	r0, r1, [r1]
 800fb06:	f7f0 fbbf 	bl	8000288 <__aeabi_dsub>
 800fb0a:	4622      	mov	r2, r4
 800fb0c:	462b      	mov	r3, r5
 800fb0e:	f7f0 fd73 	bl	80005f8 <__aeabi_dmul>
 800fb12:	4602      	mov	r2, r0
 800fb14:	460b      	mov	r3, r1
 800fb16:	2000      	movs	r0, #0
 800fb18:	494d      	ldr	r1, [pc, #308]	; (800fc50 <__ieee754_pow+0x3f8>)
 800fb1a:	f7f0 fbb5 	bl	8000288 <__aeabi_dsub>
 800fb1e:	4622      	mov	r2, r4
 800fb20:	4680      	mov	r8, r0
 800fb22:	4689      	mov	r9, r1
 800fb24:	462b      	mov	r3, r5
 800fb26:	4620      	mov	r0, r4
 800fb28:	4629      	mov	r1, r5
 800fb2a:	f7f0 fd65 	bl	80005f8 <__aeabi_dmul>
 800fb2e:	4602      	mov	r2, r0
 800fb30:	460b      	mov	r3, r1
 800fb32:	4640      	mov	r0, r8
 800fb34:	4649      	mov	r1, r9
 800fb36:	f7f0 fd5f 	bl	80005f8 <__aeabi_dmul>
 800fb3a:	a33f      	add	r3, pc, #252	; (adr r3, 800fc38 <__ieee754_pow+0x3e0>)
 800fb3c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fb40:	f7f0 fd5a 	bl	80005f8 <__aeabi_dmul>
 800fb44:	4602      	mov	r2, r0
 800fb46:	460b      	mov	r3, r1
 800fb48:	4650      	mov	r0, sl
 800fb4a:	4659      	mov	r1, fp
 800fb4c:	f7f0 fb9c 	bl	8000288 <__aeabi_dsub>
 800fb50:	4602      	mov	r2, r0
 800fb52:	460b      	mov	r3, r1
 800fb54:	4680      	mov	r8, r0
 800fb56:	4689      	mov	r9, r1
 800fb58:	4630      	mov	r0, r6
 800fb5a:	4639      	mov	r1, r7
 800fb5c:	f7f0 fb96 	bl	800028c <__adddf3>
 800fb60:	2000      	movs	r0, #0
 800fb62:	4632      	mov	r2, r6
 800fb64:	463b      	mov	r3, r7
 800fb66:	4604      	mov	r4, r0
 800fb68:	460d      	mov	r5, r1
 800fb6a:	f7f0 fb8d 	bl	8000288 <__aeabi_dsub>
 800fb6e:	4602      	mov	r2, r0
 800fb70:	460b      	mov	r3, r1
 800fb72:	4640      	mov	r0, r8
 800fb74:	4649      	mov	r1, r9
 800fb76:	f7f0 fb87 	bl	8000288 <__aeabi_dsub>
 800fb7a:	9b04      	ldr	r3, [sp, #16]
 800fb7c:	9a06      	ldr	r2, [sp, #24]
 800fb7e:	3b01      	subs	r3, #1
 800fb80:	4313      	orrs	r3, r2
 800fb82:	4682      	mov	sl, r0
 800fb84:	468b      	mov	fp, r1
 800fb86:	f040 81e7 	bne.w	800ff58 <__ieee754_pow+0x700>
 800fb8a:	ed9f 7b2d 	vldr	d7, [pc, #180]	; 800fc40 <__ieee754_pow+0x3e8>
 800fb8e:	eeb0 8a47 	vmov.f32	s16, s14
 800fb92:	eef0 8a67 	vmov.f32	s17, s15
 800fb96:	e9dd 6700 	ldrd	r6, r7, [sp]
 800fb9a:	2600      	movs	r6, #0
 800fb9c:	4632      	mov	r2, r6
 800fb9e:	463b      	mov	r3, r7
 800fba0:	e9dd 0100 	ldrd	r0, r1, [sp]
 800fba4:	f7f0 fb70 	bl	8000288 <__aeabi_dsub>
 800fba8:	4622      	mov	r2, r4
 800fbaa:	462b      	mov	r3, r5
 800fbac:	f7f0 fd24 	bl	80005f8 <__aeabi_dmul>
 800fbb0:	e9dd 2300 	ldrd	r2, r3, [sp]
 800fbb4:	4680      	mov	r8, r0
 800fbb6:	4689      	mov	r9, r1
 800fbb8:	4650      	mov	r0, sl
 800fbba:	4659      	mov	r1, fp
 800fbbc:	f7f0 fd1c 	bl	80005f8 <__aeabi_dmul>
 800fbc0:	4602      	mov	r2, r0
 800fbc2:	460b      	mov	r3, r1
 800fbc4:	4640      	mov	r0, r8
 800fbc6:	4649      	mov	r1, r9
 800fbc8:	f7f0 fb60 	bl	800028c <__adddf3>
 800fbcc:	4632      	mov	r2, r6
 800fbce:	463b      	mov	r3, r7
 800fbd0:	4680      	mov	r8, r0
 800fbd2:	4689      	mov	r9, r1
 800fbd4:	4620      	mov	r0, r4
 800fbd6:	4629      	mov	r1, r5
 800fbd8:	f7f0 fd0e 	bl	80005f8 <__aeabi_dmul>
 800fbdc:	460b      	mov	r3, r1
 800fbde:	4604      	mov	r4, r0
 800fbe0:	460d      	mov	r5, r1
 800fbe2:	4602      	mov	r2, r0
 800fbe4:	4649      	mov	r1, r9
 800fbe6:	4640      	mov	r0, r8
 800fbe8:	f7f0 fb50 	bl	800028c <__adddf3>
 800fbec:	4b19      	ldr	r3, [pc, #100]	; (800fc54 <__ieee754_pow+0x3fc>)
 800fbee:	4299      	cmp	r1, r3
 800fbf0:	ec45 4b19 	vmov	d9, r4, r5
 800fbf4:	4606      	mov	r6, r0
 800fbf6:	460f      	mov	r7, r1
 800fbf8:	468b      	mov	fp, r1
 800fbfa:	f340 82f0 	ble.w	80101de <__ieee754_pow+0x986>
 800fbfe:	f101 433f 	add.w	r3, r1, #3204448256	; 0xbf000000
 800fc02:	f503 03e0 	add.w	r3, r3, #7340032	; 0x700000
 800fc06:	4303      	orrs	r3, r0
 800fc08:	f000 81e4 	beq.w	800ffd4 <__ieee754_pow+0x77c>
 800fc0c:	ec51 0b18 	vmov	r0, r1, d8
 800fc10:	2200      	movs	r2, #0
 800fc12:	2300      	movs	r3, #0
 800fc14:	f7f0 ff62 	bl	8000adc <__aeabi_dcmplt>
 800fc18:	3800      	subs	r0, #0
 800fc1a:	bf18      	it	ne
 800fc1c:	2001      	movne	r0, #1
 800fc1e:	e72b      	b.n	800fa78 <__ieee754_pow+0x220>
 800fc20:	60000000 	.word	0x60000000
 800fc24:	3ff71547 	.word	0x3ff71547
 800fc28:	f85ddf44 	.word	0xf85ddf44
 800fc2c:	3e54ae0b 	.word	0x3e54ae0b
 800fc30:	55555555 	.word	0x55555555
 800fc34:	3fd55555 	.word	0x3fd55555
 800fc38:	652b82fe 	.word	0x652b82fe
 800fc3c:	3ff71547 	.word	0x3ff71547
 800fc40:	00000000 	.word	0x00000000
 800fc44:	bff00000 	.word	0xbff00000
 800fc48:	3ff00000 	.word	0x3ff00000
 800fc4c:	3fd00000 	.word	0x3fd00000
 800fc50:	3fe00000 	.word	0x3fe00000
 800fc54:	408fffff 	.word	0x408fffff
 800fc58:	4bd5      	ldr	r3, [pc, #852]	; (800ffb0 <__ieee754_pow+0x758>)
 800fc5a:	402b      	ands	r3, r5
 800fc5c:	2200      	movs	r2, #0
 800fc5e:	b92b      	cbnz	r3, 800fc6c <__ieee754_pow+0x414>
 800fc60:	4bd4      	ldr	r3, [pc, #848]	; (800ffb4 <__ieee754_pow+0x75c>)
 800fc62:	f7f0 fcc9 	bl	80005f8 <__aeabi_dmul>
 800fc66:	f06f 0234 	mvn.w	r2, #52	; 0x34
 800fc6a:	460c      	mov	r4, r1
 800fc6c:	1523      	asrs	r3, r4, #20
 800fc6e:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 800fc72:	4413      	add	r3, r2
 800fc74:	9305      	str	r3, [sp, #20]
 800fc76:	4bd0      	ldr	r3, [pc, #832]	; (800ffb8 <__ieee754_pow+0x760>)
 800fc78:	f3c4 0413 	ubfx	r4, r4, #0, #20
 800fc7c:	f044 557f 	orr.w	r5, r4, #1069547520	; 0x3fc00000
 800fc80:	429c      	cmp	r4, r3
 800fc82:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 800fc86:	dd08      	ble.n	800fc9a <__ieee754_pow+0x442>
 800fc88:	4bcc      	ldr	r3, [pc, #816]	; (800ffbc <__ieee754_pow+0x764>)
 800fc8a:	429c      	cmp	r4, r3
 800fc8c:	f340 8162 	ble.w	800ff54 <__ieee754_pow+0x6fc>
 800fc90:	9b05      	ldr	r3, [sp, #20]
 800fc92:	3301      	adds	r3, #1
 800fc94:	9305      	str	r3, [sp, #20]
 800fc96:	f5a5 1580 	sub.w	r5, r5, #1048576	; 0x100000
 800fc9a:	2400      	movs	r4, #0
 800fc9c:	00e3      	lsls	r3, r4, #3
 800fc9e:	9307      	str	r3, [sp, #28]
 800fca0:	4bc7      	ldr	r3, [pc, #796]	; (800ffc0 <__ieee754_pow+0x768>)
 800fca2:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 800fca6:	ed93 7b00 	vldr	d7, [r3]
 800fcaa:	4629      	mov	r1, r5
 800fcac:	ec53 2b17 	vmov	r2, r3, d7
 800fcb0:	eeb0 9a47 	vmov.f32	s18, s14
 800fcb4:	eef0 9a67 	vmov.f32	s19, s15
 800fcb8:	4682      	mov	sl, r0
 800fcba:	f7f0 fae5 	bl	8000288 <__aeabi_dsub>
 800fcbe:	4652      	mov	r2, sl
 800fcc0:	4606      	mov	r6, r0
 800fcc2:	460f      	mov	r7, r1
 800fcc4:	462b      	mov	r3, r5
 800fcc6:	ec51 0b19 	vmov	r0, r1, d9
 800fcca:	f7f0 fadf 	bl	800028c <__adddf3>
 800fcce:	4602      	mov	r2, r0
 800fcd0:	460b      	mov	r3, r1
 800fcd2:	2000      	movs	r0, #0
 800fcd4:	49bb      	ldr	r1, [pc, #748]	; (800ffc4 <__ieee754_pow+0x76c>)
 800fcd6:	f7f0 fdb9 	bl	800084c <__aeabi_ddiv>
 800fcda:	ec41 0b1a 	vmov	d10, r0, r1
 800fcde:	4602      	mov	r2, r0
 800fce0:	460b      	mov	r3, r1
 800fce2:	4630      	mov	r0, r6
 800fce4:	4639      	mov	r1, r7
 800fce6:	f7f0 fc87 	bl	80005f8 <__aeabi_dmul>
 800fcea:	2300      	movs	r3, #0
 800fcec:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800fcf0:	9302      	str	r3, [sp, #8]
 800fcf2:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 800fcf6:	46ab      	mov	fp, r5
 800fcf8:	106d      	asrs	r5, r5, #1
 800fcfa:	f045 5500 	orr.w	r5, r5, #536870912	; 0x20000000
 800fcfe:	f505 2500 	add.w	r5, r5, #524288	; 0x80000
 800fd02:	ec41 0b18 	vmov	d8, r0, r1
 800fd06:	eb05 4384 	add.w	r3, r5, r4, lsl #18
 800fd0a:	2200      	movs	r2, #0
 800fd0c:	4640      	mov	r0, r8
 800fd0e:	4649      	mov	r1, r9
 800fd10:	4614      	mov	r4, r2
 800fd12:	461d      	mov	r5, r3
 800fd14:	f7f0 fc70 	bl	80005f8 <__aeabi_dmul>
 800fd18:	4602      	mov	r2, r0
 800fd1a:	460b      	mov	r3, r1
 800fd1c:	4630      	mov	r0, r6
 800fd1e:	4639      	mov	r1, r7
 800fd20:	f7f0 fab2 	bl	8000288 <__aeabi_dsub>
 800fd24:	ec53 2b19 	vmov	r2, r3, d9
 800fd28:	4606      	mov	r6, r0
 800fd2a:	460f      	mov	r7, r1
 800fd2c:	4620      	mov	r0, r4
 800fd2e:	4629      	mov	r1, r5
 800fd30:	f7f0 faaa 	bl	8000288 <__aeabi_dsub>
 800fd34:	4602      	mov	r2, r0
 800fd36:	460b      	mov	r3, r1
 800fd38:	4650      	mov	r0, sl
 800fd3a:	4659      	mov	r1, fp
 800fd3c:	f7f0 faa4 	bl	8000288 <__aeabi_dsub>
 800fd40:	4642      	mov	r2, r8
 800fd42:	464b      	mov	r3, r9
 800fd44:	f7f0 fc58 	bl	80005f8 <__aeabi_dmul>
 800fd48:	4602      	mov	r2, r0
 800fd4a:	460b      	mov	r3, r1
 800fd4c:	4630      	mov	r0, r6
 800fd4e:	4639      	mov	r1, r7
 800fd50:	f7f0 fa9a 	bl	8000288 <__aeabi_dsub>
 800fd54:	ec53 2b1a 	vmov	r2, r3, d10
 800fd58:	f7f0 fc4e 	bl	80005f8 <__aeabi_dmul>
 800fd5c:	ec53 2b18 	vmov	r2, r3, d8
 800fd60:	ec41 0b19 	vmov	d9, r0, r1
 800fd64:	ec51 0b18 	vmov	r0, r1, d8
 800fd68:	f7f0 fc46 	bl	80005f8 <__aeabi_dmul>
 800fd6c:	a37c      	add	r3, pc, #496	; (adr r3, 800ff60 <__ieee754_pow+0x708>)
 800fd6e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fd72:	4604      	mov	r4, r0
 800fd74:	460d      	mov	r5, r1
 800fd76:	f7f0 fc3f 	bl	80005f8 <__aeabi_dmul>
 800fd7a:	a37b      	add	r3, pc, #492	; (adr r3, 800ff68 <__ieee754_pow+0x710>)
 800fd7c:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fd80:	f7f0 fa84 	bl	800028c <__adddf3>
 800fd84:	4622      	mov	r2, r4
 800fd86:	462b      	mov	r3, r5
 800fd88:	f7f0 fc36 	bl	80005f8 <__aeabi_dmul>
 800fd8c:	a378      	add	r3, pc, #480	; (adr r3, 800ff70 <__ieee754_pow+0x718>)
 800fd8e:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fd92:	f7f0 fa7b 	bl	800028c <__adddf3>
 800fd96:	4622      	mov	r2, r4
 800fd98:	462b      	mov	r3, r5
 800fd9a:	f7f0 fc2d 	bl	80005f8 <__aeabi_dmul>
 800fd9e:	a376      	add	r3, pc, #472	; (adr r3, 800ff78 <__ieee754_pow+0x720>)
 800fda0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fda4:	f7f0 fa72 	bl	800028c <__adddf3>
 800fda8:	4622      	mov	r2, r4
 800fdaa:	462b      	mov	r3, r5
 800fdac:	f7f0 fc24 	bl	80005f8 <__aeabi_dmul>
 800fdb0:	a373      	add	r3, pc, #460	; (adr r3, 800ff80 <__ieee754_pow+0x728>)
 800fdb2:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fdb6:	f7f0 fa69 	bl	800028c <__adddf3>
 800fdba:	4622      	mov	r2, r4
 800fdbc:	462b      	mov	r3, r5
 800fdbe:	f7f0 fc1b 	bl	80005f8 <__aeabi_dmul>
 800fdc2:	a371      	add	r3, pc, #452	; (adr r3, 800ff88 <__ieee754_pow+0x730>)
 800fdc4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fdc8:	f7f0 fa60 	bl	800028c <__adddf3>
 800fdcc:	4622      	mov	r2, r4
 800fdce:	4606      	mov	r6, r0
 800fdd0:	460f      	mov	r7, r1
 800fdd2:	462b      	mov	r3, r5
 800fdd4:	4620      	mov	r0, r4
 800fdd6:	4629      	mov	r1, r5
 800fdd8:	f7f0 fc0e 	bl	80005f8 <__aeabi_dmul>
 800fddc:	4602      	mov	r2, r0
 800fdde:	460b      	mov	r3, r1
 800fde0:	4630      	mov	r0, r6
 800fde2:	4639      	mov	r1, r7
 800fde4:	f7f0 fc08 	bl	80005f8 <__aeabi_dmul>
 800fde8:	4642      	mov	r2, r8
 800fdea:	4604      	mov	r4, r0
 800fdec:	460d      	mov	r5, r1
 800fdee:	464b      	mov	r3, r9
 800fdf0:	ec51 0b18 	vmov	r0, r1, d8
 800fdf4:	f7f0 fa4a 	bl	800028c <__adddf3>
 800fdf8:	ec53 2b19 	vmov	r2, r3, d9
 800fdfc:	f7f0 fbfc 	bl	80005f8 <__aeabi_dmul>
 800fe00:	4622      	mov	r2, r4
 800fe02:	462b      	mov	r3, r5
 800fe04:	f7f0 fa42 	bl	800028c <__adddf3>
 800fe08:	4642      	mov	r2, r8
 800fe0a:	4682      	mov	sl, r0
 800fe0c:	468b      	mov	fp, r1
 800fe0e:	464b      	mov	r3, r9
 800fe10:	4640      	mov	r0, r8
 800fe12:	4649      	mov	r1, r9
 800fe14:	f7f0 fbf0 	bl	80005f8 <__aeabi_dmul>
 800fe18:	4b6b      	ldr	r3, [pc, #428]	; (800ffc8 <__ieee754_pow+0x770>)
 800fe1a:	2200      	movs	r2, #0
 800fe1c:	4606      	mov	r6, r0
 800fe1e:	460f      	mov	r7, r1
 800fe20:	f7f0 fa34 	bl	800028c <__adddf3>
 800fe24:	4652      	mov	r2, sl
 800fe26:	465b      	mov	r3, fp
 800fe28:	f7f0 fa30 	bl	800028c <__adddf3>
 800fe2c:	2000      	movs	r0, #0
 800fe2e:	4604      	mov	r4, r0
 800fe30:	460d      	mov	r5, r1
 800fe32:	4602      	mov	r2, r0
 800fe34:	460b      	mov	r3, r1
 800fe36:	4640      	mov	r0, r8
 800fe38:	4649      	mov	r1, r9
 800fe3a:	f7f0 fbdd 	bl	80005f8 <__aeabi_dmul>
 800fe3e:	4b62      	ldr	r3, [pc, #392]	; (800ffc8 <__ieee754_pow+0x770>)
 800fe40:	4680      	mov	r8, r0
 800fe42:	4689      	mov	r9, r1
 800fe44:	2200      	movs	r2, #0
 800fe46:	4620      	mov	r0, r4
 800fe48:	4629      	mov	r1, r5
 800fe4a:	f7f0 fa1d 	bl	8000288 <__aeabi_dsub>
 800fe4e:	4632      	mov	r2, r6
 800fe50:	463b      	mov	r3, r7
 800fe52:	f7f0 fa19 	bl	8000288 <__aeabi_dsub>
 800fe56:	4602      	mov	r2, r0
 800fe58:	460b      	mov	r3, r1
 800fe5a:	4650      	mov	r0, sl
 800fe5c:	4659      	mov	r1, fp
 800fe5e:	f7f0 fa13 	bl	8000288 <__aeabi_dsub>
 800fe62:	ec53 2b18 	vmov	r2, r3, d8
 800fe66:	f7f0 fbc7 	bl	80005f8 <__aeabi_dmul>
 800fe6a:	4622      	mov	r2, r4
 800fe6c:	4606      	mov	r6, r0
 800fe6e:	460f      	mov	r7, r1
 800fe70:	462b      	mov	r3, r5
 800fe72:	ec51 0b19 	vmov	r0, r1, d9
 800fe76:	f7f0 fbbf 	bl	80005f8 <__aeabi_dmul>
 800fe7a:	4602      	mov	r2, r0
 800fe7c:	460b      	mov	r3, r1
 800fe7e:	4630      	mov	r0, r6
 800fe80:	4639      	mov	r1, r7
 800fe82:	f7f0 fa03 	bl	800028c <__adddf3>
 800fe86:	4606      	mov	r6, r0
 800fe88:	460f      	mov	r7, r1
 800fe8a:	4602      	mov	r2, r0
 800fe8c:	460b      	mov	r3, r1
 800fe8e:	4640      	mov	r0, r8
 800fe90:	4649      	mov	r1, r9
 800fe92:	f7f0 f9fb 	bl	800028c <__adddf3>
 800fe96:	a33e      	add	r3, pc, #248	; (adr r3, 800ff90 <__ieee754_pow+0x738>)
 800fe98:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fe9c:	2000      	movs	r0, #0
 800fe9e:	4604      	mov	r4, r0
 800fea0:	460d      	mov	r5, r1
 800fea2:	f7f0 fba9 	bl	80005f8 <__aeabi_dmul>
 800fea6:	4642      	mov	r2, r8
 800fea8:	ec41 0b18 	vmov	d8, r0, r1
 800feac:	464b      	mov	r3, r9
 800feae:	4620      	mov	r0, r4
 800feb0:	4629      	mov	r1, r5
 800feb2:	f7f0 f9e9 	bl	8000288 <__aeabi_dsub>
 800feb6:	4602      	mov	r2, r0
 800feb8:	460b      	mov	r3, r1
 800feba:	4630      	mov	r0, r6
 800febc:	4639      	mov	r1, r7
 800febe:	f7f0 f9e3 	bl	8000288 <__aeabi_dsub>
 800fec2:	a335      	add	r3, pc, #212	; (adr r3, 800ff98 <__ieee754_pow+0x740>)
 800fec4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fec8:	f7f0 fb96 	bl	80005f8 <__aeabi_dmul>
 800fecc:	a334      	add	r3, pc, #208	; (adr r3, 800ffa0 <__ieee754_pow+0x748>)
 800fece:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fed2:	4606      	mov	r6, r0
 800fed4:	460f      	mov	r7, r1
 800fed6:	4620      	mov	r0, r4
 800fed8:	4629      	mov	r1, r5
 800feda:	f7f0 fb8d 	bl	80005f8 <__aeabi_dmul>
 800fede:	4602      	mov	r2, r0
 800fee0:	460b      	mov	r3, r1
 800fee2:	4630      	mov	r0, r6
 800fee4:	4639      	mov	r1, r7
 800fee6:	f7f0 f9d1 	bl	800028c <__adddf3>
 800feea:	9a07      	ldr	r2, [sp, #28]
 800feec:	4b37      	ldr	r3, [pc, #220]	; (800ffcc <__ieee754_pow+0x774>)
 800feee:	4413      	add	r3, r2
 800fef0:	e9d3 2300 	ldrd	r2, r3, [r3]
 800fef4:	f7f0 f9ca 	bl	800028c <__adddf3>
 800fef8:	4682      	mov	sl, r0
 800fefa:	9805      	ldr	r0, [sp, #20]
 800fefc:	468b      	mov	fp, r1
 800fefe:	f7f0 fb11 	bl	8000524 <__aeabi_i2d>
 800ff02:	9a07      	ldr	r2, [sp, #28]
 800ff04:	4b32      	ldr	r3, [pc, #200]	; (800ffd0 <__ieee754_pow+0x778>)
 800ff06:	4413      	add	r3, r2
 800ff08:	e9d3 8900 	ldrd	r8, r9, [r3]
 800ff0c:	4606      	mov	r6, r0
 800ff0e:	460f      	mov	r7, r1
 800ff10:	4652      	mov	r2, sl
 800ff12:	465b      	mov	r3, fp
 800ff14:	ec51 0b18 	vmov	r0, r1, d8
 800ff18:	f7f0 f9b8 	bl	800028c <__adddf3>
 800ff1c:	4642      	mov	r2, r8
 800ff1e:	464b      	mov	r3, r9
 800ff20:	f7f0 f9b4 	bl	800028c <__adddf3>
 800ff24:	4632      	mov	r2, r6
 800ff26:	463b      	mov	r3, r7
 800ff28:	f7f0 f9b0 	bl	800028c <__adddf3>
 800ff2c:	2000      	movs	r0, #0
 800ff2e:	4632      	mov	r2, r6
 800ff30:	463b      	mov	r3, r7
 800ff32:	4604      	mov	r4, r0
 800ff34:	460d      	mov	r5, r1
 800ff36:	f7f0 f9a7 	bl	8000288 <__aeabi_dsub>
 800ff3a:	4642      	mov	r2, r8
 800ff3c:	464b      	mov	r3, r9
 800ff3e:	f7f0 f9a3 	bl	8000288 <__aeabi_dsub>
 800ff42:	ec53 2b18 	vmov	r2, r3, d8
 800ff46:	f7f0 f99f 	bl	8000288 <__aeabi_dsub>
 800ff4a:	4602      	mov	r2, r0
 800ff4c:	460b      	mov	r3, r1
 800ff4e:	4650      	mov	r0, sl
 800ff50:	4659      	mov	r1, fp
 800ff52:	e610      	b.n	800fb76 <__ieee754_pow+0x31e>
 800ff54:	2401      	movs	r4, #1
 800ff56:	e6a1      	b.n	800fc9c <__ieee754_pow+0x444>
 800ff58:	ed9f 7b13 	vldr	d7, [pc, #76]	; 800ffa8 <__ieee754_pow+0x750>
 800ff5c:	e617      	b.n	800fb8e <__ieee754_pow+0x336>
 800ff5e:	bf00      	nop
 800ff60:	4a454eef 	.word	0x4a454eef
 800ff64:	3fca7e28 	.word	0x3fca7e28
 800ff68:	93c9db65 	.word	0x93c9db65
 800ff6c:	3fcd864a 	.word	0x3fcd864a
 800ff70:	a91d4101 	.word	0xa91d4101
 800ff74:	3fd17460 	.word	0x3fd17460
 800ff78:	518f264d 	.word	0x518f264d
 800ff7c:	3fd55555 	.word	0x3fd55555
 800ff80:	db6fabff 	.word	0xdb6fabff
 800ff84:	3fdb6db6 	.word	0x3fdb6db6
 800ff88:	33333303 	.word	0x33333303
 800ff8c:	3fe33333 	.word	0x3fe33333
 800ff90:	e0000000 	.word	0xe0000000
 800ff94:	3feec709 	.word	0x3feec709
 800ff98:	dc3a03fd 	.word	0xdc3a03fd
 800ff9c:	3feec709 	.word	0x3feec709
 800ffa0:	145b01f5 	.word	0x145b01f5
 800ffa4:	be3e2fe0 	.word	0xbe3e2fe0
 800ffa8:	00000000 	.word	0x00000000
 800ffac:	3ff00000 	.word	0x3ff00000
 800ffb0:	7ff00000 	.word	0x7ff00000
 800ffb4:	43400000 	.word	0x43400000
 800ffb8:	0003988e 	.word	0x0003988e
 800ffbc:	000bb679 	.word	0x000bb679
 800ffc0:	08012248 	.word	0x08012248
 800ffc4:	3ff00000 	.word	0x3ff00000
 800ffc8:	40080000 	.word	0x40080000
 800ffcc:	08012268 	.word	0x08012268
 800ffd0:	08012258 	.word	0x08012258
 800ffd4:	a3b3      	add	r3, pc, #716	; (adr r3, 80102a4 <__ieee754_pow+0xa4c>)
 800ffd6:	e9d3 2300 	ldrd	r2, r3, [r3]
 800ffda:	4640      	mov	r0, r8
 800ffdc:	4649      	mov	r1, r9
 800ffde:	f7f0 f955 	bl	800028c <__adddf3>
 800ffe2:	4622      	mov	r2, r4
 800ffe4:	ec41 0b1a 	vmov	d10, r0, r1
 800ffe8:	462b      	mov	r3, r5
 800ffea:	4630      	mov	r0, r6
 800ffec:	4639      	mov	r1, r7
 800ffee:	f7f0 f94b 	bl	8000288 <__aeabi_dsub>
 800fff2:	4602      	mov	r2, r0
 800fff4:	460b      	mov	r3, r1
 800fff6:	ec51 0b1a 	vmov	r0, r1, d10
 800fffa:	f7f0 fd8d 	bl	8000b18 <__aeabi_dcmpgt>
 800fffe:	2800      	cmp	r0, #0
 8010000:	f47f ae04 	bne.w	800fc0c <__ieee754_pow+0x3b4>
 8010004:	4aa2      	ldr	r2, [pc, #648]	; (8010290 <__ieee754_pow+0xa38>)
 8010006:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 801000a:	4293      	cmp	r3, r2
 801000c:	f340 8107 	ble.w	801021e <__ieee754_pow+0x9c6>
 8010010:	151b      	asrs	r3, r3, #20
 8010012:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
 8010016:	f44f 1a80 	mov.w	sl, #1048576	; 0x100000
 801001a:	fa4a fa03 	asr.w	sl, sl, r3
 801001e:	44da      	add	sl, fp
 8010020:	f3ca 510a 	ubfx	r1, sl, #20, #11
 8010024:	489b      	ldr	r0, [pc, #620]	; (8010294 <__ieee754_pow+0xa3c>)
 8010026:	f2a1 31ff 	subw	r1, r1, #1023	; 0x3ff
 801002a:	4108      	asrs	r0, r1
 801002c:	ea00 030a 	and.w	r3, r0, sl
 8010030:	f3ca 0a13 	ubfx	sl, sl, #0, #20
 8010034:	f1c1 0114 	rsb	r1, r1, #20
 8010038:	f44a 1a80 	orr.w	sl, sl, #1048576	; 0x100000
 801003c:	fa4a fa01 	asr.w	sl, sl, r1
 8010040:	f1bb 0f00 	cmp.w	fp, #0
 8010044:	f04f 0200 	mov.w	r2, #0
 8010048:	4620      	mov	r0, r4
 801004a:	4629      	mov	r1, r5
 801004c:	bfb8      	it	lt
 801004e:	f1ca 0a00 	rsblt	sl, sl, #0
 8010052:	f7f0 f919 	bl	8000288 <__aeabi_dsub>
 8010056:	ec41 0b19 	vmov	d9, r0, r1
 801005a:	4642      	mov	r2, r8
 801005c:	464b      	mov	r3, r9
 801005e:	ec51 0b19 	vmov	r0, r1, d9
 8010062:	f7f0 f913 	bl	800028c <__adddf3>
 8010066:	a37a      	add	r3, pc, #488	; (adr r3, 8010250 <__ieee754_pow+0x9f8>)
 8010068:	e9d3 2300 	ldrd	r2, r3, [r3]
 801006c:	2000      	movs	r0, #0
 801006e:	4604      	mov	r4, r0
 8010070:	460d      	mov	r5, r1
 8010072:	f7f0 fac1 	bl	80005f8 <__aeabi_dmul>
 8010076:	ec53 2b19 	vmov	r2, r3, d9
 801007a:	4606      	mov	r6, r0
 801007c:	460f      	mov	r7, r1
 801007e:	4620      	mov	r0, r4
 8010080:	4629      	mov	r1, r5
 8010082:	f7f0 f901 	bl	8000288 <__aeabi_dsub>
 8010086:	4602      	mov	r2, r0
 8010088:	460b      	mov	r3, r1
 801008a:	4640      	mov	r0, r8
 801008c:	4649      	mov	r1, r9
 801008e:	f7f0 f8fb 	bl	8000288 <__aeabi_dsub>
 8010092:	a371      	add	r3, pc, #452	; (adr r3, 8010258 <__ieee754_pow+0xa00>)
 8010094:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010098:	f7f0 faae 	bl	80005f8 <__aeabi_dmul>
 801009c:	a370      	add	r3, pc, #448	; (adr r3, 8010260 <__ieee754_pow+0xa08>)
 801009e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80100a2:	4680      	mov	r8, r0
 80100a4:	4689      	mov	r9, r1
 80100a6:	4620      	mov	r0, r4
 80100a8:	4629      	mov	r1, r5
 80100aa:	f7f0 faa5 	bl	80005f8 <__aeabi_dmul>
 80100ae:	4602      	mov	r2, r0
 80100b0:	460b      	mov	r3, r1
 80100b2:	4640      	mov	r0, r8
 80100b4:	4649      	mov	r1, r9
 80100b6:	f7f0 f8e9 	bl	800028c <__adddf3>
 80100ba:	4604      	mov	r4, r0
 80100bc:	460d      	mov	r5, r1
 80100be:	4602      	mov	r2, r0
 80100c0:	460b      	mov	r3, r1
 80100c2:	4630      	mov	r0, r6
 80100c4:	4639      	mov	r1, r7
 80100c6:	f7f0 f8e1 	bl	800028c <__adddf3>
 80100ca:	4632      	mov	r2, r6
 80100cc:	463b      	mov	r3, r7
 80100ce:	4680      	mov	r8, r0
 80100d0:	4689      	mov	r9, r1
 80100d2:	f7f0 f8d9 	bl	8000288 <__aeabi_dsub>
 80100d6:	4602      	mov	r2, r0
 80100d8:	460b      	mov	r3, r1
 80100da:	4620      	mov	r0, r4
 80100dc:	4629      	mov	r1, r5
 80100de:	f7f0 f8d3 	bl	8000288 <__aeabi_dsub>
 80100e2:	4642      	mov	r2, r8
 80100e4:	4606      	mov	r6, r0
 80100e6:	460f      	mov	r7, r1
 80100e8:	464b      	mov	r3, r9
 80100ea:	4640      	mov	r0, r8
 80100ec:	4649      	mov	r1, r9
 80100ee:	f7f0 fa83 	bl	80005f8 <__aeabi_dmul>
 80100f2:	a35d      	add	r3, pc, #372	; (adr r3, 8010268 <__ieee754_pow+0xa10>)
 80100f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80100f8:	4604      	mov	r4, r0
 80100fa:	460d      	mov	r5, r1
 80100fc:	f7f0 fa7c 	bl	80005f8 <__aeabi_dmul>
 8010100:	a35b      	add	r3, pc, #364	; (adr r3, 8010270 <__ieee754_pow+0xa18>)
 8010102:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010106:	f7f0 f8bf 	bl	8000288 <__aeabi_dsub>
 801010a:	4622      	mov	r2, r4
 801010c:	462b      	mov	r3, r5
 801010e:	f7f0 fa73 	bl	80005f8 <__aeabi_dmul>
 8010112:	a359      	add	r3, pc, #356	; (adr r3, 8010278 <__ieee754_pow+0xa20>)
 8010114:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010118:	f7f0 f8b8 	bl	800028c <__adddf3>
 801011c:	4622      	mov	r2, r4
 801011e:	462b      	mov	r3, r5
 8010120:	f7f0 fa6a 	bl	80005f8 <__aeabi_dmul>
 8010124:	a356      	add	r3, pc, #344	; (adr r3, 8010280 <__ieee754_pow+0xa28>)
 8010126:	e9d3 2300 	ldrd	r2, r3, [r3]
 801012a:	f7f0 f8ad 	bl	8000288 <__aeabi_dsub>
 801012e:	4622      	mov	r2, r4
 8010130:	462b      	mov	r3, r5
 8010132:	f7f0 fa61 	bl	80005f8 <__aeabi_dmul>
 8010136:	a354      	add	r3, pc, #336	; (adr r3, 8010288 <__ieee754_pow+0xa30>)
 8010138:	e9d3 2300 	ldrd	r2, r3, [r3]
 801013c:	f7f0 f8a6 	bl	800028c <__adddf3>
 8010140:	4622      	mov	r2, r4
 8010142:	462b      	mov	r3, r5
 8010144:	f7f0 fa58 	bl	80005f8 <__aeabi_dmul>
 8010148:	4602      	mov	r2, r0
 801014a:	460b      	mov	r3, r1
 801014c:	4640      	mov	r0, r8
 801014e:	4649      	mov	r1, r9
 8010150:	f7f0 f89a 	bl	8000288 <__aeabi_dsub>
 8010154:	4604      	mov	r4, r0
 8010156:	460d      	mov	r5, r1
 8010158:	4602      	mov	r2, r0
 801015a:	460b      	mov	r3, r1
 801015c:	4640      	mov	r0, r8
 801015e:	4649      	mov	r1, r9
 8010160:	f7f0 fa4a 	bl	80005f8 <__aeabi_dmul>
 8010164:	2200      	movs	r2, #0
 8010166:	ec41 0b19 	vmov	d9, r0, r1
 801016a:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 801016e:	4620      	mov	r0, r4
 8010170:	4629      	mov	r1, r5
 8010172:	f7f0 f889 	bl	8000288 <__aeabi_dsub>
 8010176:	4602      	mov	r2, r0
 8010178:	460b      	mov	r3, r1
 801017a:	ec51 0b19 	vmov	r0, r1, d9
 801017e:	f7f0 fb65 	bl	800084c <__aeabi_ddiv>
 8010182:	4632      	mov	r2, r6
 8010184:	4604      	mov	r4, r0
 8010186:	460d      	mov	r5, r1
 8010188:	463b      	mov	r3, r7
 801018a:	4640      	mov	r0, r8
 801018c:	4649      	mov	r1, r9
 801018e:	f7f0 fa33 	bl	80005f8 <__aeabi_dmul>
 8010192:	4632      	mov	r2, r6
 8010194:	463b      	mov	r3, r7
 8010196:	f7f0 f879 	bl	800028c <__adddf3>
 801019a:	4602      	mov	r2, r0
 801019c:	460b      	mov	r3, r1
 801019e:	4620      	mov	r0, r4
 80101a0:	4629      	mov	r1, r5
 80101a2:	f7f0 f871 	bl	8000288 <__aeabi_dsub>
 80101a6:	4642      	mov	r2, r8
 80101a8:	464b      	mov	r3, r9
 80101aa:	f7f0 f86d 	bl	8000288 <__aeabi_dsub>
 80101ae:	460b      	mov	r3, r1
 80101b0:	4602      	mov	r2, r0
 80101b2:	4939      	ldr	r1, [pc, #228]	; (8010298 <__ieee754_pow+0xa40>)
 80101b4:	2000      	movs	r0, #0
 80101b6:	f7f0 f867 	bl	8000288 <__aeabi_dsub>
 80101ba:	ec41 0b10 	vmov	d0, r0, r1
 80101be:	ee10 3a90 	vmov	r3, s1
 80101c2:	eb03 530a 	add.w	r3, r3, sl, lsl #20
 80101c6:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80101ca:	da2b      	bge.n	8010224 <__ieee754_pow+0x9cc>
 80101cc:	4650      	mov	r0, sl
 80101ce:	f000 fc23 	bl	8010a18 <scalbn>
 80101d2:	ec51 0b10 	vmov	r0, r1, d0
 80101d6:	ec53 2b18 	vmov	r2, r3, d8
 80101da:	f7ff bbee 	b.w	800f9ba <__ieee754_pow+0x162>
 80101de:	4b2f      	ldr	r3, [pc, #188]	; (801029c <__ieee754_pow+0xa44>)
 80101e0:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
 80101e4:	429e      	cmp	r6, r3
 80101e6:	f77f af0d 	ble.w	8010004 <__ieee754_pow+0x7ac>
 80101ea:	4b2d      	ldr	r3, [pc, #180]	; (80102a0 <__ieee754_pow+0xa48>)
 80101ec:	440b      	add	r3, r1
 80101ee:	4303      	orrs	r3, r0
 80101f0:	d009      	beq.n	8010206 <__ieee754_pow+0x9ae>
 80101f2:	ec51 0b18 	vmov	r0, r1, d8
 80101f6:	2200      	movs	r2, #0
 80101f8:	2300      	movs	r3, #0
 80101fa:	f7f0 fc6f 	bl	8000adc <__aeabi_dcmplt>
 80101fe:	3800      	subs	r0, #0
 8010200:	bf18      	it	ne
 8010202:	2001      	movne	r0, #1
 8010204:	e448      	b.n	800fa98 <__ieee754_pow+0x240>
 8010206:	4622      	mov	r2, r4
 8010208:	462b      	mov	r3, r5
 801020a:	f7f0 f83d 	bl	8000288 <__aeabi_dsub>
 801020e:	4642      	mov	r2, r8
 8010210:	464b      	mov	r3, r9
 8010212:	f7f0 fc77 	bl	8000b04 <__aeabi_dcmpge>
 8010216:	2800      	cmp	r0, #0
 8010218:	f43f aef4 	beq.w	8010004 <__ieee754_pow+0x7ac>
 801021c:	e7e9      	b.n	80101f2 <__ieee754_pow+0x99a>
 801021e:	f04f 0a00 	mov.w	sl, #0
 8010222:	e71a      	b.n	801005a <__ieee754_pow+0x802>
 8010224:	ec51 0b10 	vmov	r0, r1, d0
 8010228:	4619      	mov	r1, r3
 801022a:	e7d4      	b.n	80101d6 <__ieee754_pow+0x97e>
 801022c:	491a      	ldr	r1, [pc, #104]	; (8010298 <__ieee754_pow+0xa40>)
 801022e:	2000      	movs	r0, #0
 8010230:	f7ff bb31 	b.w	800f896 <__ieee754_pow+0x3e>
 8010234:	2000      	movs	r0, #0
 8010236:	2100      	movs	r1, #0
 8010238:	f7ff bb2d 	b.w	800f896 <__ieee754_pow+0x3e>
 801023c:	4630      	mov	r0, r6
 801023e:	4639      	mov	r1, r7
 8010240:	f7ff bb29 	b.w	800f896 <__ieee754_pow+0x3e>
 8010244:	9204      	str	r2, [sp, #16]
 8010246:	f7ff bb7b 	b.w	800f940 <__ieee754_pow+0xe8>
 801024a:	2300      	movs	r3, #0
 801024c:	f7ff bb65 	b.w	800f91a <__ieee754_pow+0xc2>
 8010250:	00000000 	.word	0x00000000
 8010254:	3fe62e43 	.word	0x3fe62e43
 8010258:	fefa39ef 	.word	0xfefa39ef
 801025c:	3fe62e42 	.word	0x3fe62e42
 8010260:	0ca86c39 	.word	0x0ca86c39
 8010264:	be205c61 	.word	0xbe205c61
 8010268:	72bea4d0 	.word	0x72bea4d0
 801026c:	3e663769 	.word	0x3e663769
 8010270:	c5d26bf1 	.word	0xc5d26bf1
 8010274:	3ebbbd41 	.word	0x3ebbbd41
 8010278:	af25de2c 	.word	0xaf25de2c
 801027c:	3f11566a 	.word	0x3f11566a
 8010280:	16bebd93 	.word	0x16bebd93
 8010284:	3f66c16c 	.word	0x3f66c16c
 8010288:	5555553e 	.word	0x5555553e
 801028c:	3fc55555 	.word	0x3fc55555
 8010290:	3fe00000 	.word	0x3fe00000
 8010294:	fff00000 	.word	0xfff00000
 8010298:	3ff00000 	.word	0x3ff00000
 801029c:	4090cbff 	.word	0x4090cbff
 80102a0:	3f6f3400 	.word	0x3f6f3400
 80102a4:	652b82fe 	.word	0x652b82fe
 80102a8:	3c971547 	.word	0x3c971547
 80102ac:	00000000 	.word	0x00000000

080102b0 <__ieee754_rem_pio2>:
 80102b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80102b4:	ed2d 8b02 	vpush	{d8}
 80102b8:	ec55 4b10 	vmov	r4, r5, d0
 80102bc:	4bca      	ldr	r3, [pc, #808]	; (80105e8 <__ieee754_rem_pio2+0x338>)
 80102be:	b08b      	sub	sp, #44	; 0x2c
 80102c0:	f025 4800 	bic.w	r8, r5, #2147483648	; 0x80000000
 80102c4:	4598      	cmp	r8, r3
 80102c6:	4682      	mov	sl, r0
 80102c8:	9502      	str	r5, [sp, #8]
 80102ca:	dc08      	bgt.n	80102de <__ieee754_rem_pio2+0x2e>
 80102cc:	2200      	movs	r2, #0
 80102ce:	2300      	movs	r3, #0
 80102d0:	ed80 0b00 	vstr	d0, [r0]
 80102d4:	e9c0 2302 	strd	r2, r3, [r0, #8]
 80102d8:	f04f 0b00 	mov.w	fp, #0
 80102dc:	e028      	b.n	8010330 <__ieee754_rem_pio2+0x80>
 80102de:	4bc3      	ldr	r3, [pc, #780]	; (80105ec <__ieee754_rem_pio2+0x33c>)
 80102e0:	4598      	cmp	r8, r3
 80102e2:	dc78      	bgt.n	80103d6 <__ieee754_rem_pio2+0x126>
 80102e4:	9b02      	ldr	r3, [sp, #8]
 80102e6:	4ec2      	ldr	r6, [pc, #776]	; (80105f0 <__ieee754_rem_pio2+0x340>)
 80102e8:	2b00      	cmp	r3, #0
 80102ea:	ee10 0a10 	vmov	r0, s0
 80102ee:	a3b0      	add	r3, pc, #704	; (adr r3, 80105b0 <__ieee754_rem_pio2+0x300>)
 80102f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80102f4:	4629      	mov	r1, r5
 80102f6:	dd39      	ble.n	801036c <__ieee754_rem_pio2+0xbc>
 80102f8:	f7ef ffc6 	bl	8000288 <__aeabi_dsub>
 80102fc:	45b0      	cmp	r8, r6
 80102fe:	4604      	mov	r4, r0
 8010300:	460d      	mov	r5, r1
 8010302:	d01b      	beq.n	801033c <__ieee754_rem_pio2+0x8c>
 8010304:	a3ac      	add	r3, pc, #688	; (adr r3, 80105b8 <__ieee754_rem_pio2+0x308>)
 8010306:	e9d3 2300 	ldrd	r2, r3, [r3]
 801030a:	f7ef ffbd 	bl	8000288 <__aeabi_dsub>
 801030e:	4602      	mov	r2, r0
 8010310:	460b      	mov	r3, r1
 8010312:	e9ca 2300 	strd	r2, r3, [sl]
 8010316:	4620      	mov	r0, r4
 8010318:	4629      	mov	r1, r5
 801031a:	f7ef ffb5 	bl	8000288 <__aeabi_dsub>
 801031e:	a3a6      	add	r3, pc, #664	; (adr r3, 80105b8 <__ieee754_rem_pio2+0x308>)
 8010320:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010324:	f7ef ffb0 	bl	8000288 <__aeabi_dsub>
 8010328:	e9ca 0102 	strd	r0, r1, [sl, #8]
 801032c:	f04f 0b01 	mov.w	fp, #1
 8010330:	4658      	mov	r0, fp
 8010332:	b00b      	add	sp, #44	; 0x2c
 8010334:	ecbd 8b02 	vpop	{d8}
 8010338:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801033c:	a3a0      	add	r3, pc, #640	; (adr r3, 80105c0 <__ieee754_rem_pio2+0x310>)
 801033e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010342:	f7ef ffa1 	bl	8000288 <__aeabi_dsub>
 8010346:	a3a0      	add	r3, pc, #640	; (adr r3, 80105c8 <__ieee754_rem_pio2+0x318>)
 8010348:	e9d3 2300 	ldrd	r2, r3, [r3]
 801034c:	4604      	mov	r4, r0
 801034e:	460d      	mov	r5, r1
 8010350:	f7ef ff9a 	bl	8000288 <__aeabi_dsub>
 8010354:	4602      	mov	r2, r0
 8010356:	460b      	mov	r3, r1
 8010358:	e9ca 2300 	strd	r2, r3, [sl]
 801035c:	4620      	mov	r0, r4
 801035e:	4629      	mov	r1, r5
 8010360:	f7ef ff92 	bl	8000288 <__aeabi_dsub>
 8010364:	a398      	add	r3, pc, #608	; (adr r3, 80105c8 <__ieee754_rem_pio2+0x318>)
 8010366:	e9d3 2300 	ldrd	r2, r3, [r3]
 801036a:	e7db      	b.n	8010324 <__ieee754_rem_pio2+0x74>
 801036c:	f7ef ff8e 	bl	800028c <__adddf3>
 8010370:	45b0      	cmp	r8, r6
 8010372:	4604      	mov	r4, r0
 8010374:	460d      	mov	r5, r1
 8010376:	d016      	beq.n	80103a6 <__ieee754_rem_pio2+0xf6>
 8010378:	a38f      	add	r3, pc, #572	; (adr r3, 80105b8 <__ieee754_rem_pio2+0x308>)
 801037a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801037e:	f7ef ff85 	bl	800028c <__adddf3>
 8010382:	4602      	mov	r2, r0
 8010384:	460b      	mov	r3, r1
 8010386:	e9ca 2300 	strd	r2, r3, [sl]
 801038a:	4620      	mov	r0, r4
 801038c:	4629      	mov	r1, r5
 801038e:	f7ef ff7b 	bl	8000288 <__aeabi_dsub>
 8010392:	a389      	add	r3, pc, #548	; (adr r3, 80105b8 <__ieee754_rem_pio2+0x308>)
 8010394:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010398:	f7ef ff78 	bl	800028c <__adddf3>
 801039c:	f04f 3bff 	mov.w	fp, #4294967295
 80103a0:	e9ca 0102 	strd	r0, r1, [sl, #8]
 80103a4:	e7c4      	b.n	8010330 <__ieee754_rem_pio2+0x80>
 80103a6:	a386      	add	r3, pc, #536	; (adr r3, 80105c0 <__ieee754_rem_pio2+0x310>)
 80103a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80103ac:	f7ef ff6e 	bl	800028c <__adddf3>
 80103b0:	a385      	add	r3, pc, #532	; (adr r3, 80105c8 <__ieee754_rem_pio2+0x318>)
 80103b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80103b6:	4604      	mov	r4, r0
 80103b8:	460d      	mov	r5, r1
 80103ba:	f7ef ff67 	bl	800028c <__adddf3>
 80103be:	4602      	mov	r2, r0
 80103c0:	460b      	mov	r3, r1
 80103c2:	e9ca 2300 	strd	r2, r3, [sl]
 80103c6:	4620      	mov	r0, r4
 80103c8:	4629      	mov	r1, r5
 80103ca:	f7ef ff5d 	bl	8000288 <__aeabi_dsub>
 80103ce:	a37e      	add	r3, pc, #504	; (adr r3, 80105c8 <__ieee754_rem_pio2+0x318>)
 80103d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80103d4:	e7e0      	b.n	8010398 <__ieee754_rem_pio2+0xe8>
 80103d6:	4b87      	ldr	r3, [pc, #540]	; (80105f4 <__ieee754_rem_pio2+0x344>)
 80103d8:	4598      	cmp	r8, r3
 80103da:	f300 80d8 	bgt.w	801058e <__ieee754_rem_pio2+0x2de>
 80103de:	f000 fb0f 	bl	8010a00 <fabs>
 80103e2:	ec55 4b10 	vmov	r4, r5, d0
 80103e6:	ee10 0a10 	vmov	r0, s0
 80103ea:	a379      	add	r3, pc, #484	; (adr r3, 80105d0 <__ieee754_rem_pio2+0x320>)
 80103ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 80103f0:	4629      	mov	r1, r5
 80103f2:	f7f0 f901 	bl	80005f8 <__aeabi_dmul>
 80103f6:	4b80      	ldr	r3, [pc, #512]	; (80105f8 <__ieee754_rem_pio2+0x348>)
 80103f8:	2200      	movs	r2, #0
 80103fa:	f7ef ff47 	bl	800028c <__adddf3>
 80103fe:	f7f0 fbab 	bl	8000b58 <__aeabi_d2iz>
 8010402:	4683      	mov	fp, r0
 8010404:	f7f0 f88e 	bl	8000524 <__aeabi_i2d>
 8010408:	4602      	mov	r2, r0
 801040a:	460b      	mov	r3, r1
 801040c:	ec43 2b18 	vmov	d8, r2, r3
 8010410:	a367      	add	r3, pc, #412	; (adr r3, 80105b0 <__ieee754_rem_pio2+0x300>)
 8010412:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010416:	f7f0 f8ef 	bl	80005f8 <__aeabi_dmul>
 801041a:	4602      	mov	r2, r0
 801041c:	460b      	mov	r3, r1
 801041e:	4620      	mov	r0, r4
 8010420:	4629      	mov	r1, r5
 8010422:	f7ef ff31 	bl	8000288 <__aeabi_dsub>
 8010426:	a364      	add	r3, pc, #400	; (adr r3, 80105b8 <__ieee754_rem_pio2+0x308>)
 8010428:	e9d3 2300 	ldrd	r2, r3, [r3]
 801042c:	4606      	mov	r6, r0
 801042e:	460f      	mov	r7, r1
 8010430:	ec51 0b18 	vmov	r0, r1, d8
 8010434:	f7f0 f8e0 	bl	80005f8 <__aeabi_dmul>
 8010438:	f1bb 0f1f 	cmp.w	fp, #31
 801043c:	4604      	mov	r4, r0
 801043e:	460d      	mov	r5, r1
 8010440:	dc0d      	bgt.n	801045e <__ieee754_rem_pio2+0x1ae>
 8010442:	4b6e      	ldr	r3, [pc, #440]	; (80105fc <__ieee754_rem_pio2+0x34c>)
 8010444:	f10b 32ff 	add.w	r2, fp, #4294967295
 8010448:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801044c:	4543      	cmp	r3, r8
 801044e:	d006      	beq.n	801045e <__ieee754_rem_pio2+0x1ae>
 8010450:	4622      	mov	r2, r4
 8010452:	462b      	mov	r3, r5
 8010454:	4630      	mov	r0, r6
 8010456:	4639      	mov	r1, r7
 8010458:	f7ef ff16 	bl	8000288 <__aeabi_dsub>
 801045c:	e00e      	b.n	801047c <__ieee754_rem_pio2+0x1cc>
 801045e:	462b      	mov	r3, r5
 8010460:	4622      	mov	r2, r4
 8010462:	4630      	mov	r0, r6
 8010464:	4639      	mov	r1, r7
 8010466:	f7ef ff0f 	bl	8000288 <__aeabi_dsub>
 801046a:	ea4f 5328 	mov.w	r3, r8, asr #20
 801046e:	9303      	str	r3, [sp, #12]
 8010470:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8010474:	ebc3 5318 	rsb	r3, r3, r8, lsr #20
 8010478:	2b10      	cmp	r3, #16
 801047a:	dc02      	bgt.n	8010482 <__ieee754_rem_pio2+0x1d2>
 801047c:	e9ca 0100 	strd	r0, r1, [sl]
 8010480:	e039      	b.n	80104f6 <__ieee754_rem_pio2+0x246>
 8010482:	a34f      	add	r3, pc, #316	; (adr r3, 80105c0 <__ieee754_rem_pio2+0x310>)
 8010484:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010488:	ec51 0b18 	vmov	r0, r1, d8
 801048c:	f7f0 f8b4 	bl	80005f8 <__aeabi_dmul>
 8010490:	4604      	mov	r4, r0
 8010492:	460d      	mov	r5, r1
 8010494:	4602      	mov	r2, r0
 8010496:	460b      	mov	r3, r1
 8010498:	4630      	mov	r0, r6
 801049a:	4639      	mov	r1, r7
 801049c:	f7ef fef4 	bl	8000288 <__aeabi_dsub>
 80104a0:	4602      	mov	r2, r0
 80104a2:	460b      	mov	r3, r1
 80104a4:	4680      	mov	r8, r0
 80104a6:	4689      	mov	r9, r1
 80104a8:	4630      	mov	r0, r6
 80104aa:	4639      	mov	r1, r7
 80104ac:	f7ef feec 	bl	8000288 <__aeabi_dsub>
 80104b0:	4622      	mov	r2, r4
 80104b2:	462b      	mov	r3, r5
 80104b4:	f7ef fee8 	bl	8000288 <__aeabi_dsub>
 80104b8:	a343      	add	r3, pc, #268	; (adr r3, 80105c8 <__ieee754_rem_pio2+0x318>)
 80104ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80104be:	4604      	mov	r4, r0
 80104c0:	460d      	mov	r5, r1
 80104c2:	ec51 0b18 	vmov	r0, r1, d8
 80104c6:	f7f0 f897 	bl	80005f8 <__aeabi_dmul>
 80104ca:	4622      	mov	r2, r4
 80104cc:	462b      	mov	r3, r5
 80104ce:	f7ef fedb 	bl	8000288 <__aeabi_dsub>
 80104d2:	4602      	mov	r2, r0
 80104d4:	460b      	mov	r3, r1
 80104d6:	4604      	mov	r4, r0
 80104d8:	460d      	mov	r5, r1
 80104da:	4640      	mov	r0, r8
 80104dc:	4649      	mov	r1, r9
 80104de:	f7ef fed3 	bl	8000288 <__aeabi_dsub>
 80104e2:	9a03      	ldr	r2, [sp, #12]
 80104e4:	f3c1 530a 	ubfx	r3, r1, #20, #11
 80104e8:	1ad3      	subs	r3, r2, r3
 80104ea:	2b31      	cmp	r3, #49	; 0x31
 80104ec:	dc24      	bgt.n	8010538 <__ieee754_rem_pio2+0x288>
 80104ee:	e9ca 0100 	strd	r0, r1, [sl]
 80104f2:	4646      	mov	r6, r8
 80104f4:	464f      	mov	r7, r9
 80104f6:	e9da 8900 	ldrd	r8, r9, [sl]
 80104fa:	4630      	mov	r0, r6
 80104fc:	4642      	mov	r2, r8
 80104fe:	464b      	mov	r3, r9
 8010500:	4639      	mov	r1, r7
 8010502:	f7ef fec1 	bl	8000288 <__aeabi_dsub>
 8010506:	462b      	mov	r3, r5
 8010508:	4622      	mov	r2, r4
 801050a:	f7ef febd 	bl	8000288 <__aeabi_dsub>
 801050e:	9b02      	ldr	r3, [sp, #8]
 8010510:	2b00      	cmp	r3, #0
 8010512:	e9ca 0102 	strd	r0, r1, [sl, #8]
 8010516:	f6bf af0b 	bge.w	8010330 <__ieee754_rem_pio2+0x80>
 801051a:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 801051e:	f8ca 3004 	str.w	r3, [sl, #4]
 8010522:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8010526:	f8ca 8000 	str.w	r8, [sl]
 801052a:	f8ca 0008 	str.w	r0, [sl, #8]
 801052e:	f8ca 300c 	str.w	r3, [sl, #12]
 8010532:	f1cb 0b00 	rsb	fp, fp, #0
 8010536:	e6fb      	b.n	8010330 <__ieee754_rem_pio2+0x80>
 8010538:	a327      	add	r3, pc, #156	; (adr r3, 80105d8 <__ieee754_rem_pio2+0x328>)
 801053a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801053e:	ec51 0b18 	vmov	r0, r1, d8
 8010542:	f7f0 f859 	bl	80005f8 <__aeabi_dmul>
 8010546:	4604      	mov	r4, r0
 8010548:	460d      	mov	r5, r1
 801054a:	4602      	mov	r2, r0
 801054c:	460b      	mov	r3, r1
 801054e:	4640      	mov	r0, r8
 8010550:	4649      	mov	r1, r9
 8010552:	f7ef fe99 	bl	8000288 <__aeabi_dsub>
 8010556:	4602      	mov	r2, r0
 8010558:	460b      	mov	r3, r1
 801055a:	4606      	mov	r6, r0
 801055c:	460f      	mov	r7, r1
 801055e:	4640      	mov	r0, r8
 8010560:	4649      	mov	r1, r9
 8010562:	f7ef fe91 	bl	8000288 <__aeabi_dsub>
 8010566:	4622      	mov	r2, r4
 8010568:	462b      	mov	r3, r5
 801056a:	f7ef fe8d 	bl	8000288 <__aeabi_dsub>
 801056e:	a31c      	add	r3, pc, #112	; (adr r3, 80105e0 <__ieee754_rem_pio2+0x330>)
 8010570:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010574:	4604      	mov	r4, r0
 8010576:	460d      	mov	r5, r1
 8010578:	ec51 0b18 	vmov	r0, r1, d8
 801057c:	f7f0 f83c 	bl	80005f8 <__aeabi_dmul>
 8010580:	4622      	mov	r2, r4
 8010582:	462b      	mov	r3, r5
 8010584:	f7ef fe80 	bl	8000288 <__aeabi_dsub>
 8010588:	4604      	mov	r4, r0
 801058a:	460d      	mov	r5, r1
 801058c:	e760      	b.n	8010450 <__ieee754_rem_pio2+0x1a0>
 801058e:	4b1c      	ldr	r3, [pc, #112]	; (8010600 <__ieee754_rem_pio2+0x350>)
 8010590:	4598      	cmp	r8, r3
 8010592:	dd37      	ble.n	8010604 <__ieee754_rem_pio2+0x354>
 8010594:	ee10 2a10 	vmov	r2, s0
 8010598:	462b      	mov	r3, r5
 801059a:	4620      	mov	r0, r4
 801059c:	4629      	mov	r1, r5
 801059e:	f7ef fe73 	bl	8000288 <__aeabi_dsub>
 80105a2:	e9ca 0102 	strd	r0, r1, [sl, #8]
 80105a6:	e9ca 0100 	strd	r0, r1, [sl]
 80105aa:	e695      	b.n	80102d8 <__ieee754_rem_pio2+0x28>
 80105ac:	f3af 8000 	nop.w
 80105b0:	54400000 	.word	0x54400000
 80105b4:	3ff921fb 	.word	0x3ff921fb
 80105b8:	1a626331 	.word	0x1a626331
 80105bc:	3dd0b461 	.word	0x3dd0b461
 80105c0:	1a600000 	.word	0x1a600000
 80105c4:	3dd0b461 	.word	0x3dd0b461
 80105c8:	2e037073 	.word	0x2e037073
 80105cc:	3ba3198a 	.word	0x3ba3198a
 80105d0:	6dc9c883 	.word	0x6dc9c883
 80105d4:	3fe45f30 	.word	0x3fe45f30
 80105d8:	2e000000 	.word	0x2e000000
 80105dc:	3ba3198a 	.word	0x3ba3198a
 80105e0:	252049c1 	.word	0x252049c1
 80105e4:	397b839a 	.word	0x397b839a
 80105e8:	3fe921fb 	.word	0x3fe921fb
 80105ec:	4002d97b 	.word	0x4002d97b
 80105f0:	3ff921fb 	.word	0x3ff921fb
 80105f4:	413921fb 	.word	0x413921fb
 80105f8:	3fe00000 	.word	0x3fe00000
 80105fc:	08012278 	.word	0x08012278
 8010600:	7fefffff 	.word	0x7fefffff
 8010604:	ea4f 5628 	mov.w	r6, r8, asr #20
 8010608:	f2a6 4616 	subw	r6, r6, #1046	; 0x416
 801060c:	eba8 5106 	sub.w	r1, r8, r6, lsl #20
 8010610:	4620      	mov	r0, r4
 8010612:	460d      	mov	r5, r1
 8010614:	f7f0 faa0 	bl	8000b58 <__aeabi_d2iz>
 8010618:	f7ef ff84 	bl	8000524 <__aeabi_i2d>
 801061c:	4602      	mov	r2, r0
 801061e:	460b      	mov	r3, r1
 8010620:	4620      	mov	r0, r4
 8010622:	4629      	mov	r1, r5
 8010624:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8010628:	f7ef fe2e 	bl	8000288 <__aeabi_dsub>
 801062c:	4b21      	ldr	r3, [pc, #132]	; (80106b4 <__ieee754_rem_pio2+0x404>)
 801062e:	2200      	movs	r2, #0
 8010630:	f7ef ffe2 	bl	80005f8 <__aeabi_dmul>
 8010634:	460d      	mov	r5, r1
 8010636:	4604      	mov	r4, r0
 8010638:	f7f0 fa8e 	bl	8000b58 <__aeabi_d2iz>
 801063c:	f7ef ff72 	bl	8000524 <__aeabi_i2d>
 8010640:	4602      	mov	r2, r0
 8010642:	460b      	mov	r3, r1
 8010644:	4620      	mov	r0, r4
 8010646:	4629      	mov	r1, r5
 8010648:	e9cd 2306 	strd	r2, r3, [sp, #24]
 801064c:	f7ef fe1c 	bl	8000288 <__aeabi_dsub>
 8010650:	4b18      	ldr	r3, [pc, #96]	; (80106b4 <__ieee754_rem_pio2+0x404>)
 8010652:	2200      	movs	r2, #0
 8010654:	f7ef ffd0 	bl	80005f8 <__aeabi_dmul>
 8010658:	e9cd 0108 	strd	r0, r1, [sp, #32]
 801065c:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 8010660:	2703      	movs	r7, #3
 8010662:	2400      	movs	r4, #0
 8010664:	2500      	movs	r5, #0
 8010666:	e978 0102 	ldrd	r0, r1, [r8, #-8]!
 801066a:	4622      	mov	r2, r4
 801066c:	462b      	mov	r3, r5
 801066e:	46b9      	mov	r9, r7
 8010670:	3f01      	subs	r7, #1
 8010672:	f7f0 fa29 	bl	8000ac8 <__aeabi_dcmpeq>
 8010676:	2800      	cmp	r0, #0
 8010678:	d1f5      	bne.n	8010666 <__ieee754_rem_pio2+0x3b6>
 801067a:	4b0f      	ldr	r3, [pc, #60]	; (80106b8 <__ieee754_rem_pio2+0x408>)
 801067c:	9301      	str	r3, [sp, #4]
 801067e:	2302      	movs	r3, #2
 8010680:	9300      	str	r3, [sp, #0]
 8010682:	4632      	mov	r2, r6
 8010684:	464b      	mov	r3, r9
 8010686:	4651      	mov	r1, sl
 8010688:	a804      	add	r0, sp, #16
 801068a:	f000 fa75 	bl	8010b78 <__kernel_rem_pio2>
 801068e:	9b02      	ldr	r3, [sp, #8]
 8010690:	2b00      	cmp	r3, #0
 8010692:	4683      	mov	fp, r0
 8010694:	f6bf ae4c 	bge.w	8010330 <__ieee754_rem_pio2+0x80>
 8010698:	e9da 2100 	ldrd	r2, r1, [sl]
 801069c:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80106a0:	e9ca 2300 	strd	r2, r3, [sl]
 80106a4:	e9da 2102 	ldrd	r2, r1, [sl, #8]
 80106a8:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80106ac:	e9ca 2302 	strd	r2, r3, [sl, #8]
 80106b0:	e73f      	b.n	8010532 <__ieee754_rem_pio2+0x282>
 80106b2:	bf00      	nop
 80106b4:	41700000 	.word	0x41700000
 80106b8:	080122f8 	.word	0x080122f8
 80106bc:	00000000 	.word	0x00000000

080106c0 <atan>:
 80106c0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80106c4:	ec55 4b10 	vmov	r4, r5, d0
 80106c8:	4bc3      	ldr	r3, [pc, #780]	; (80109d8 <atan+0x318>)
 80106ca:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 80106ce:	429e      	cmp	r6, r3
 80106d0:	46ab      	mov	fp, r5
 80106d2:	dd18      	ble.n	8010706 <atan+0x46>
 80106d4:	4bc1      	ldr	r3, [pc, #772]	; (80109dc <atan+0x31c>)
 80106d6:	429e      	cmp	r6, r3
 80106d8:	dc01      	bgt.n	80106de <atan+0x1e>
 80106da:	d109      	bne.n	80106f0 <atan+0x30>
 80106dc:	b144      	cbz	r4, 80106f0 <atan+0x30>
 80106de:	4622      	mov	r2, r4
 80106e0:	462b      	mov	r3, r5
 80106e2:	4620      	mov	r0, r4
 80106e4:	4629      	mov	r1, r5
 80106e6:	f7ef fdd1 	bl	800028c <__adddf3>
 80106ea:	4604      	mov	r4, r0
 80106ec:	460d      	mov	r5, r1
 80106ee:	e006      	b.n	80106fe <atan+0x3e>
 80106f0:	f1bb 0f00 	cmp.w	fp, #0
 80106f4:	f300 8131 	bgt.w	801095a <atan+0x29a>
 80106f8:	a59b      	add	r5, pc, #620	; (adr r5, 8010968 <atan+0x2a8>)
 80106fa:	e9d5 4500 	ldrd	r4, r5, [r5]
 80106fe:	ec45 4b10 	vmov	d0, r4, r5
 8010702:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010706:	4bb6      	ldr	r3, [pc, #728]	; (80109e0 <atan+0x320>)
 8010708:	429e      	cmp	r6, r3
 801070a:	dc14      	bgt.n	8010736 <atan+0x76>
 801070c:	f1a3 73de 	sub.w	r3, r3, #29097984	; 0x1bc0000
 8010710:	429e      	cmp	r6, r3
 8010712:	dc0d      	bgt.n	8010730 <atan+0x70>
 8010714:	a396      	add	r3, pc, #600	; (adr r3, 8010970 <atan+0x2b0>)
 8010716:	e9d3 2300 	ldrd	r2, r3, [r3]
 801071a:	ee10 0a10 	vmov	r0, s0
 801071e:	4629      	mov	r1, r5
 8010720:	f7ef fdb4 	bl	800028c <__adddf3>
 8010724:	4baf      	ldr	r3, [pc, #700]	; (80109e4 <atan+0x324>)
 8010726:	2200      	movs	r2, #0
 8010728:	f7f0 f9f6 	bl	8000b18 <__aeabi_dcmpgt>
 801072c:	2800      	cmp	r0, #0
 801072e:	d1e6      	bne.n	80106fe <atan+0x3e>
 8010730:	f04f 3aff 	mov.w	sl, #4294967295
 8010734:	e02b      	b.n	801078e <atan+0xce>
 8010736:	f000 f963 	bl	8010a00 <fabs>
 801073a:	4bab      	ldr	r3, [pc, #684]	; (80109e8 <atan+0x328>)
 801073c:	429e      	cmp	r6, r3
 801073e:	ec55 4b10 	vmov	r4, r5, d0
 8010742:	f300 80bf 	bgt.w	80108c4 <atan+0x204>
 8010746:	f5a3 2350 	sub.w	r3, r3, #851968	; 0xd0000
 801074a:	429e      	cmp	r6, r3
 801074c:	f300 80a0 	bgt.w	8010890 <atan+0x1d0>
 8010750:	ee10 2a10 	vmov	r2, s0
 8010754:	ee10 0a10 	vmov	r0, s0
 8010758:	462b      	mov	r3, r5
 801075a:	4629      	mov	r1, r5
 801075c:	f7ef fd96 	bl	800028c <__adddf3>
 8010760:	4ba0      	ldr	r3, [pc, #640]	; (80109e4 <atan+0x324>)
 8010762:	2200      	movs	r2, #0
 8010764:	f7ef fd90 	bl	8000288 <__aeabi_dsub>
 8010768:	2200      	movs	r2, #0
 801076a:	4606      	mov	r6, r0
 801076c:	460f      	mov	r7, r1
 801076e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8010772:	4620      	mov	r0, r4
 8010774:	4629      	mov	r1, r5
 8010776:	f7ef fd89 	bl	800028c <__adddf3>
 801077a:	4602      	mov	r2, r0
 801077c:	460b      	mov	r3, r1
 801077e:	4630      	mov	r0, r6
 8010780:	4639      	mov	r1, r7
 8010782:	f7f0 f863 	bl	800084c <__aeabi_ddiv>
 8010786:	f04f 0a00 	mov.w	sl, #0
 801078a:	4604      	mov	r4, r0
 801078c:	460d      	mov	r5, r1
 801078e:	4622      	mov	r2, r4
 8010790:	462b      	mov	r3, r5
 8010792:	4620      	mov	r0, r4
 8010794:	4629      	mov	r1, r5
 8010796:	f7ef ff2f 	bl	80005f8 <__aeabi_dmul>
 801079a:	4602      	mov	r2, r0
 801079c:	460b      	mov	r3, r1
 801079e:	4680      	mov	r8, r0
 80107a0:	4689      	mov	r9, r1
 80107a2:	f7ef ff29 	bl	80005f8 <__aeabi_dmul>
 80107a6:	a374      	add	r3, pc, #464	; (adr r3, 8010978 <atan+0x2b8>)
 80107a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80107ac:	4606      	mov	r6, r0
 80107ae:	460f      	mov	r7, r1
 80107b0:	f7ef ff22 	bl	80005f8 <__aeabi_dmul>
 80107b4:	a372      	add	r3, pc, #456	; (adr r3, 8010980 <atan+0x2c0>)
 80107b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80107ba:	f7ef fd67 	bl	800028c <__adddf3>
 80107be:	4632      	mov	r2, r6
 80107c0:	463b      	mov	r3, r7
 80107c2:	f7ef ff19 	bl	80005f8 <__aeabi_dmul>
 80107c6:	a370      	add	r3, pc, #448	; (adr r3, 8010988 <atan+0x2c8>)
 80107c8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80107cc:	f7ef fd5e 	bl	800028c <__adddf3>
 80107d0:	4632      	mov	r2, r6
 80107d2:	463b      	mov	r3, r7
 80107d4:	f7ef ff10 	bl	80005f8 <__aeabi_dmul>
 80107d8:	a36d      	add	r3, pc, #436	; (adr r3, 8010990 <atan+0x2d0>)
 80107da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80107de:	f7ef fd55 	bl	800028c <__adddf3>
 80107e2:	4632      	mov	r2, r6
 80107e4:	463b      	mov	r3, r7
 80107e6:	f7ef ff07 	bl	80005f8 <__aeabi_dmul>
 80107ea:	a36b      	add	r3, pc, #428	; (adr r3, 8010998 <atan+0x2d8>)
 80107ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 80107f0:	f7ef fd4c 	bl	800028c <__adddf3>
 80107f4:	4632      	mov	r2, r6
 80107f6:	463b      	mov	r3, r7
 80107f8:	f7ef fefe 	bl	80005f8 <__aeabi_dmul>
 80107fc:	a368      	add	r3, pc, #416	; (adr r3, 80109a0 <atan+0x2e0>)
 80107fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010802:	f7ef fd43 	bl	800028c <__adddf3>
 8010806:	4642      	mov	r2, r8
 8010808:	464b      	mov	r3, r9
 801080a:	f7ef fef5 	bl	80005f8 <__aeabi_dmul>
 801080e:	a366      	add	r3, pc, #408	; (adr r3, 80109a8 <atan+0x2e8>)
 8010810:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010814:	4680      	mov	r8, r0
 8010816:	4689      	mov	r9, r1
 8010818:	4630      	mov	r0, r6
 801081a:	4639      	mov	r1, r7
 801081c:	f7ef feec 	bl	80005f8 <__aeabi_dmul>
 8010820:	a363      	add	r3, pc, #396	; (adr r3, 80109b0 <atan+0x2f0>)
 8010822:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010826:	f7ef fd2f 	bl	8000288 <__aeabi_dsub>
 801082a:	4632      	mov	r2, r6
 801082c:	463b      	mov	r3, r7
 801082e:	f7ef fee3 	bl	80005f8 <__aeabi_dmul>
 8010832:	a361      	add	r3, pc, #388	; (adr r3, 80109b8 <atan+0x2f8>)
 8010834:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010838:	f7ef fd26 	bl	8000288 <__aeabi_dsub>
 801083c:	4632      	mov	r2, r6
 801083e:	463b      	mov	r3, r7
 8010840:	f7ef feda 	bl	80005f8 <__aeabi_dmul>
 8010844:	a35e      	add	r3, pc, #376	; (adr r3, 80109c0 <atan+0x300>)
 8010846:	e9d3 2300 	ldrd	r2, r3, [r3]
 801084a:	f7ef fd1d 	bl	8000288 <__aeabi_dsub>
 801084e:	4632      	mov	r2, r6
 8010850:	463b      	mov	r3, r7
 8010852:	f7ef fed1 	bl	80005f8 <__aeabi_dmul>
 8010856:	a35c      	add	r3, pc, #368	; (adr r3, 80109c8 <atan+0x308>)
 8010858:	e9d3 2300 	ldrd	r2, r3, [r3]
 801085c:	f7ef fd14 	bl	8000288 <__aeabi_dsub>
 8010860:	4632      	mov	r2, r6
 8010862:	463b      	mov	r3, r7
 8010864:	f7ef fec8 	bl	80005f8 <__aeabi_dmul>
 8010868:	4602      	mov	r2, r0
 801086a:	460b      	mov	r3, r1
 801086c:	4640      	mov	r0, r8
 801086e:	4649      	mov	r1, r9
 8010870:	f7ef fd0c 	bl	800028c <__adddf3>
 8010874:	4622      	mov	r2, r4
 8010876:	462b      	mov	r3, r5
 8010878:	f7ef febe 	bl	80005f8 <__aeabi_dmul>
 801087c:	f1ba 3fff 	cmp.w	sl, #4294967295
 8010880:	4602      	mov	r2, r0
 8010882:	460b      	mov	r3, r1
 8010884:	d14b      	bne.n	801091e <atan+0x25e>
 8010886:	4620      	mov	r0, r4
 8010888:	4629      	mov	r1, r5
 801088a:	f7ef fcfd 	bl	8000288 <__aeabi_dsub>
 801088e:	e72c      	b.n	80106ea <atan+0x2a>
 8010890:	ee10 0a10 	vmov	r0, s0
 8010894:	4b53      	ldr	r3, [pc, #332]	; (80109e4 <atan+0x324>)
 8010896:	2200      	movs	r2, #0
 8010898:	4629      	mov	r1, r5
 801089a:	f7ef fcf5 	bl	8000288 <__aeabi_dsub>
 801089e:	4b51      	ldr	r3, [pc, #324]	; (80109e4 <atan+0x324>)
 80108a0:	4606      	mov	r6, r0
 80108a2:	460f      	mov	r7, r1
 80108a4:	2200      	movs	r2, #0
 80108a6:	4620      	mov	r0, r4
 80108a8:	4629      	mov	r1, r5
 80108aa:	f7ef fcef 	bl	800028c <__adddf3>
 80108ae:	4602      	mov	r2, r0
 80108b0:	460b      	mov	r3, r1
 80108b2:	4630      	mov	r0, r6
 80108b4:	4639      	mov	r1, r7
 80108b6:	f7ef ffc9 	bl	800084c <__aeabi_ddiv>
 80108ba:	f04f 0a01 	mov.w	sl, #1
 80108be:	4604      	mov	r4, r0
 80108c0:	460d      	mov	r5, r1
 80108c2:	e764      	b.n	801078e <atan+0xce>
 80108c4:	4b49      	ldr	r3, [pc, #292]	; (80109ec <atan+0x32c>)
 80108c6:	429e      	cmp	r6, r3
 80108c8:	da1d      	bge.n	8010906 <atan+0x246>
 80108ca:	ee10 0a10 	vmov	r0, s0
 80108ce:	4b48      	ldr	r3, [pc, #288]	; (80109f0 <atan+0x330>)
 80108d0:	2200      	movs	r2, #0
 80108d2:	4629      	mov	r1, r5
 80108d4:	f7ef fcd8 	bl	8000288 <__aeabi_dsub>
 80108d8:	4b45      	ldr	r3, [pc, #276]	; (80109f0 <atan+0x330>)
 80108da:	4606      	mov	r6, r0
 80108dc:	460f      	mov	r7, r1
 80108de:	2200      	movs	r2, #0
 80108e0:	4620      	mov	r0, r4
 80108e2:	4629      	mov	r1, r5
 80108e4:	f7ef fe88 	bl	80005f8 <__aeabi_dmul>
 80108e8:	4b3e      	ldr	r3, [pc, #248]	; (80109e4 <atan+0x324>)
 80108ea:	2200      	movs	r2, #0
 80108ec:	f7ef fcce 	bl	800028c <__adddf3>
 80108f0:	4602      	mov	r2, r0
 80108f2:	460b      	mov	r3, r1
 80108f4:	4630      	mov	r0, r6
 80108f6:	4639      	mov	r1, r7
 80108f8:	f7ef ffa8 	bl	800084c <__aeabi_ddiv>
 80108fc:	f04f 0a02 	mov.w	sl, #2
 8010900:	4604      	mov	r4, r0
 8010902:	460d      	mov	r5, r1
 8010904:	e743      	b.n	801078e <atan+0xce>
 8010906:	462b      	mov	r3, r5
 8010908:	ee10 2a10 	vmov	r2, s0
 801090c:	4939      	ldr	r1, [pc, #228]	; (80109f4 <atan+0x334>)
 801090e:	2000      	movs	r0, #0
 8010910:	f7ef ff9c 	bl	800084c <__aeabi_ddiv>
 8010914:	f04f 0a03 	mov.w	sl, #3
 8010918:	4604      	mov	r4, r0
 801091a:	460d      	mov	r5, r1
 801091c:	e737      	b.n	801078e <atan+0xce>
 801091e:	4b36      	ldr	r3, [pc, #216]	; (80109f8 <atan+0x338>)
 8010920:	4e36      	ldr	r6, [pc, #216]	; (80109fc <atan+0x33c>)
 8010922:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 8010926:	e9d3 2300 	ldrd	r2, r3, [r3]
 801092a:	f7ef fcad 	bl	8000288 <__aeabi_dsub>
 801092e:	4622      	mov	r2, r4
 8010930:	462b      	mov	r3, r5
 8010932:	f7ef fca9 	bl	8000288 <__aeabi_dsub>
 8010936:	eb06 06ca 	add.w	r6, r6, sl, lsl #3
 801093a:	4602      	mov	r2, r0
 801093c:	460b      	mov	r3, r1
 801093e:	e9d6 0100 	ldrd	r0, r1, [r6]
 8010942:	f7ef fca1 	bl	8000288 <__aeabi_dsub>
 8010946:	f1bb 0f00 	cmp.w	fp, #0
 801094a:	4604      	mov	r4, r0
 801094c:	460d      	mov	r5, r1
 801094e:	f6bf aed6 	bge.w	80106fe <atan+0x3e>
 8010952:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8010956:	461d      	mov	r5, r3
 8010958:	e6d1      	b.n	80106fe <atan+0x3e>
 801095a:	a51d      	add	r5, pc, #116	; (adr r5, 80109d0 <atan+0x310>)
 801095c:	e9d5 4500 	ldrd	r4, r5, [r5]
 8010960:	e6cd      	b.n	80106fe <atan+0x3e>
 8010962:	bf00      	nop
 8010964:	f3af 8000 	nop.w
 8010968:	54442d18 	.word	0x54442d18
 801096c:	bff921fb 	.word	0xbff921fb
 8010970:	8800759c 	.word	0x8800759c
 8010974:	7e37e43c 	.word	0x7e37e43c
 8010978:	e322da11 	.word	0xe322da11
 801097c:	3f90ad3a 	.word	0x3f90ad3a
 8010980:	24760deb 	.word	0x24760deb
 8010984:	3fa97b4b 	.word	0x3fa97b4b
 8010988:	a0d03d51 	.word	0xa0d03d51
 801098c:	3fb10d66 	.word	0x3fb10d66
 8010990:	c54c206e 	.word	0xc54c206e
 8010994:	3fb745cd 	.word	0x3fb745cd
 8010998:	920083ff 	.word	0x920083ff
 801099c:	3fc24924 	.word	0x3fc24924
 80109a0:	5555550d 	.word	0x5555550d
 80109a4:	3fd55555 	.word	0x3fd55555
 80109a8:	2c6a6c2f 	.word	0x2c6a6c2f
 80109ac:	bfa2b444 	.word	0xbfa2b444
 80109b0:	52defd9a 	.word	0x52defd9a
 80109b4:	3fadde2d 	.word	0x3fadde2d
 80109b8:	af749a6d 	.word	0xaf749a6d
 80109bc:	3fb3b0f2 	.word	0x3fb3b0f2
 80109c0:	fe231671 	.word	0xfe231671
 80109c4:	3fbc71c6 	.word	0x3fbc71c6
 80109c8:	9998ebc4 	.word	0x9998ebc4
 80109cc:	3fc99999 	.word	0x3fc99999
 80109d0:	54442d18 	.word	0x54442d18
 80109d4:	3ff921fb 	.word	0x3ff921fb
 80109d8:	440fffff 	.word	0x440fffff
 80109dc:	7ff00000 	.word	0x7ff00000
 80109e0:	3fdbffff 	.word	0x3fdbffff
 80109e4:	3ff00000 	.word	0x3ff00000
 80109e8:	3ff2ffff 	.word	0x3ff2ffff
 80109ec:	40038000 	.word	0x40038000
 80109f0:	3ff80000 	.word	0x3ff80000
 80109f4:	bff00000 	.word	0xbff00000
 80109f8:	08012420 	.word	0x08012420
 80109fc:	08012400 	.word	0x08012400

08010a00 <fabs>:
 8010a00:	ec51 0b10 	vmov	r0, r1, d0
 8010a04:	ee10 2a10 	vmov	r2, s0
 8010a08:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8010a0c:	ec43 2b10 	vmov	d0, r2, r3
 8010a10:	4770      	bx	lr
 8010a12:	0000      	movs	r0, r0
 8010a14:	0000      	movs	r0, r0
	...

08010a18 <scalbn>:
 8010a18:	b570      	push	{r4, r5, r6, lr}
 8010a1a:	ec55 4b10 	vmov	r4, r5, d0
 8010a1e:	f3c5 510a 	ubfx	r1, r5, #20, #11
 8010a22:	4606      	mov	r6, r0
 8010a24:	462b      	mov	r3, r5
 8010a26:	b999      	cbnz	r1, 8010a50 <scalbn+0x38>
 8010a28:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 8010a2c:	4323      	orrs	r3, r4
 8010a2e:	d03f      	beq.n	8010ab0 <scalbn+0x98>
 8010a30:	4b35      	ldr	r3, [pc, #212]	; (8010b08 <scalbn+0xf0>)
 8010a32:	4629      	mov	r1, r5
 8010a34:	ee10 0a10 	vmov	r0, s0
 8010a38:	2200      	movs	r2, #0
 8010a3a:	f7ef fddd 	bl	80005f8 <__aeabi_dmul>
 8010a3e:	4b33      	ldr	r3, [pc, #204]	; (8010b0c <scalbn+0xf4>)
 8010a40:	429e      	cmp	r6, r3
 8010a42:	4604      	mov	r4, r0
 8010a44:	460d      	mov	r5, r1
 8010a46:	da10      	bge.n	8010a6a <scalbn+0x52>
 8010a48:	a327      	add	r3, pc, #156	; (adr r3, 8010ae8 <scalbn+0xd0>)
 8010a4a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010a4e:	e01f      	b.n	8010a90 <scalbn+0x78>
 8010a50:	f240 72ff 	movw	r2, #2047	; 0x7ff
 8010a54:	4291      	cmp	r1, r2
 8010a56:	d10c      	bne.n	8010a72 <scalbn+0x5a>
 8010a58:	ee10 2a10 	vmov	r2, s0
 8010a5c:	4620      	mov	r0, r4
 8010a5e:	4629      	mov	r1, r5
 8010a60:	f7ef fc14 	bl	800028c <__adddf3>
 8010a64:	4604      	mov	r4, r0
 8010a66:	460d      	mov	r5, r1
 8010a68:	e022      	b.n	8010ab0 <scalbn+0x98>
 8010a6a:	460b      	mov	r3, r1
 8010a6c:	f3c1 510a 	ubfx	r1, r1, #20, #11
 8010a70:	3936      	subs	r1, #54	; 0x36
 8010a72:	f24c 3250 	movw	r2, #50000	; 0xc350
 8010a76:	4296      	cmp	r6, r2
 8010a78:	dd0d      	ble.n	8010a96 <scalbn+0x7e>
 8010a7a:	2d00      	cmp	r5, #0
 8010a7c:	a11c      	add	r1, pc, #112	; (adr r1, 8010af0 <scalbn+0xd8>)
 8010a7e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8010a82:	da02      	bge.n	8010a8a <scalbn+0x72>
 8010a84:	a11c      	add	r1, pc, #112	; (adr r1, 8010af8 <scalbn+0xe0>)
 8010a86:	e9d1 0100 	ldrd	r0, r1, [r1]
 8010a8a:	a319      	add	r3, pc, #100	; (adr r3, 8010af0 <scalbn+0xd8>)
 8010a8c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010a90:	f7ef fdb2 	bl	80005f8 <__aeabi_dmul>
 8010a94:	e7e6      	b.n	8010a64 <scalbn+0x4c>
 8010a96:	1872      	adds	r2, r6, r1
 8010a98:	f240 71fe 	movw	r1, #2046	; 0x7fe
 8010a9c:	428a      	cmp	r2, r1
 8010a9e:	dcec      	bgt.n	8010a7a <scalbn+0x62>
 8010aa0:	2a00      	cmp	r2, #0
 8010aa2:	dd08      	ble.n	8010ab6 <scalbn+0x9e>
 8010aa4:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8010aa8:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8010aac:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8010ab0:	ec45 4b10 	vmov	d0, r4, r5
 8010ab4:	bd70      	pop	{r4, r5, r6, pc}
 8010ab6:	f112 0f35 	cmn.w	r2, #53	; 0x35
 8010aba:	da08      	bge.n	8010ace <scalbn+0xb6>
 8010abc:	2d00      	cmp	r5, #0
 8010abe:	a10a      	add	r1, pc, #40	; (adr r1, 8010ae8 <scalbn+0xd0>)
 8010ac0:	e9d1 0100 	ldrd	r0, r1, [r1]
 8010ac4:	dac0      	bge.n	8010a48 <scalbn+0x30>
 8010ac6:	a10e      	add	r1, pc, #56	; (adr r1, 8010b00 <scalbn+0xe8>)
 8010ac8:	e9d1 0100 	ldrd	r0, r1, [r1]
 8010acc:	e7bc      	b.n	8010a48 <scalbn+0x30>
 8010ace:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8010ad2:	3236      	adds	r2, #54	; 0x36
 8010ad4:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8010ad8:	ea43 5102 	orr.w	r1, r3, r2, lsl #20
 8010adc:	4620      	mov	r0, r4
 8010ade:	4b0c      	ldr	r3, [pc, #48]	; (8010b10 <scalbn+0xf8>)
 8010ae0:	2200      	movs	r2, #0
 8010ae2:	e7d5      	b.n	8010a90 <scalbn+0x78>
 8010ae4:	f3af 8000 	nop.w
 8010ae8:	c2f8f359 	.word	0xc2f8f359
 8010aec:	01a56e1f 	.word	0x01a56e1f
 8010af0:	8800759c 	.word	0x8800759c
 8010af4:	7e37e43c 	.word	0x7e37e43c
 8010af8:	8800759c 	.word	0x8800759c
 8010afc:	fe37e43c 	.word	0xfe37e43c
 8010b00:	c2f8f359 	.word	0xc2f8f359
 8010b04:	81a56e1f 	.word	0x81a56e1f
 8010b08:	43500000 	.word	0x43500000
 8010b0c:	ffff3cb0 	.word	0xffff3cb0
 8010b10:	3c900000 	.word	0x3c900000

08010b14 <with_errno>:
 8010b14:	b570      	push	{r4, r5, r6, lr}
 8010b16:	4604      	mov	r4, r0
 8010b18:	460d      	mov	r5, r1
 8010b1a:	4616      	mov	r6, r2
 8010b1c:	f7fa fd08 	bl	800b530 <__errno>
 8010b20:	4629      	mov	r1, r5
 8010b22:	6006      	str	r6, [r0, #0]
 8010b24:	4620      	mov	r0, r4
 8010b26:	bd70      	pop	{r4, r5, r6, pc}

08010b28 <xflow>:
 8010b28:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8010b2a:	4614      	mov	r4, r2
 8010b2c:	461d      	mov	r5, r3
 8010b2e:	b108      	cbz	r0, 8010b34 <xflow+0xc>
 8010b30:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8010b34:	e9cd 2300 	strd	r2, r3, [sp]
 8010b38:	e9dd 2300 	ldrd	r2, r3, [sp]
 8010b3c:	4620      	mov	r0, r4
 8010b3e:	4629      	mov	r1, r5
 8010b40:	f7ef fd5a 	bl	80005f8 <__aeabi_dmul>
 8010b44:	2222      	movs	r2, #34	; 0x22
 8010b46:	b003      	add	sp, #12
 8010b48:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8010b4c:	f7ff bfe2 	b.w	8010b14 <with_errno>

08010b50 <__math_uflow>:
 8010b50:	b508      	push	{r3, lr}
 8010b52:	2200      	movs	r2, #0
 8010b54:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8010b58:	f7ff ffe6 	bl	8010b28 <xflow>
 8010b5c:	ec41 0b10 	vmov	d0, r0, r1
 8010b60:	bd08      	pop	{r3, pc}

08010b62 <__math_oflow>:
 8010b62:	b508      	push	{r3, lr}
 8010b64:	2200      	movs	r2, #0
 8010b66:	f04f 43e0 	mov.w	r3, #1879048192	; 0x70000000
 8010b6a:	f7ff ffdd 	bl	8010b28 <xflow>
 8010b6e:	ec41 0b10 	vmov	d0, r0, r1
 8010b72:	bd08      	pop	{r3, pc}
 8010b74:	0000      	movs	r0, r0
	...

08010b78 <__kernel_rem_pio2>:
 8010b78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010b7c:	ed2d 8b02 	vpush	{d8}
 8010b80:	f5ad 7d19 	sub.w	sp, sp, #612	; 0x264
 8010b84:	f112 0f14 	cmn.w	r2, #20
 8010b88:	9306      	str	r3, [sp, #24]
 8010b8a:	9104      	str	r1, [sp, #16]
 8010b8c:	4bc2      	ldr	r3, [pc, #776]	; (8010e98 <__kernel_rem_pio2+0x320>)
 8010b8e:	99a4      	ldr	r1, [sp, #656]	; 0x290
 8010b90:	9009      	str	r0, [sp, #36]	; 0x24
 8010b92:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8010b96:	9300      	str	r3, [sp, #0]
 8010b98:	9b06      	ldr	r3, [sp, #24]
 8010b9a:	f103 33ff 	add.w	r3, r3, #4294967295
 8010b9e:	bfa8      	it	ge
 8010ba0:	1ed4      	subge	r4, r2, #3
 8010ba2:	9305      	str	r3, [sp, #20]
 8010ba4:	bfb2      	itee	lt
 8010ba6:	2400      	movlt	r4, #0
 8010ba8:	2318      	movge	r3, #24
 8010baa:	fb94 f4f3 	sdivge	r4, r4, r3
 8010bae:	f06f 0317 	mvn.w	r3, #23
 8010bb2:	fb04 3303 	mla	r3, r4, r3, r3
 8010bb6:	eb03 0a02 	add.w	sl, r3, r2
 8010bba:	9b00      	ldr	r3, [sp, #0]
 8010bbc:	9a05      	ldr	r2, [sp, #20]
 8010bbe:	ed9f 8bb2 	vldr	d8, [pc, #712]	; 8010e88 <__kernel_rem_pio2+0x310>
 8010bc2:	eb03 0802 	add.w	r8, r3, r2
 8010bc6:	9ba5      	ldr	r3, [sp, #660]	; 0x294
 8010bc8:	1aa7      	subs	r7, r4, r2
 8010bca:	ae20      	add	r6, sp, #128	; 0x80
 8010bcc:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 8010bd0:	2500      	movs	r5, #0
 8010bd2:	4545      	cmp	r5, r8
 8010bd4:	dd13      	ble.n	8010bfe <__kernel_rem_pio2+0x86>
 8010bd6:	9b06      	ldr	r3, [sp, #24]
 8010bd8:	aa20      	add	r2, sp, #128	; 0x80
 8010bda:	eb02 05c3 	add.w	r5, r2, r3, lsl #3
 8010bde:	f50d 7be0 	add.w	fp, sp, #448	; 0x1c0
 8010be2:	f04f 0800 	mov.w	r8, #0
 8010be6:	9b00      	ldr	r3, [sp, #0]
 8010be8:	4598      	cmp	r8, r3
 8010bea:	dc31      	bgt.n	8010c50 <__kernel_rem_pio2+0xd8>
 8010bec:	ed9f 7ba6 	vldr	d7, [pc, #664]	; 8010e88 <__kernel_rem_pio2+0x310>
 8010bf0:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 8010bf4:	ed8d 7b02 	vstr	d7, [sp, #8]
 8010bf8:	462f      	mov	r7, r5
 8010bfa:	2600      	movs	r6, #0
 8010bfc:	e01b      	b.n	8010c36 <__kernel_rem_pio2+0xbe>
 8010bfe:	42ef      	cmn	r7, r5
 8010c00:	d407      	bmi.n	8010c12 <__kernel_rem_pio2+0x9a>
 8010c02:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 8010c06:	f7ef fc8d 	bl	8000524 <__aeabi_i2d>
 8010c0a:	e8e6 0102 	strd	r0, r1, [r6], #8
 8010c0e:	3501      	adds	r5, #1
 8010c10:	e7df      	b.n	8010bd2 <__kernel_rem_pio2+0x5a>
 8010c12:	ec51 0b18 	vmov	r0, r1, d8
 8010c16:	e7f8      	b.n	8010c0a <__kernel_rem_pio2+0x92>
 8010c18:	e9d7 2300 	ldrd	r2, r3, [r7]
 8010c1c:	e8f9 0102 	ldrd	r0, r1, [r9], #8
 8010c20:	f7ef fcea 	bl	80005f8 <__aeabi_dmul>
 8010c24:	4602      	mov	r2, r0
 8010c26:	460b      	mov	r3, r1
 8010c28:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8010c2c:	f7ef fb2e 	bl	800028c <__adddf3>
 8010c30:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8010c34:	3601      	adds	r6, #1
 8010c36:	9b05      	ldr	r3, [sp, #20]
 8010c38:	429e      	cmp	r6, r3
 8010c3a:	f1a7 0708 	sub.w	r7, r7, #8
 8010c3e:	ddeb      	ble.n	8010c18 <__kernel_rem_pio2+0xa0>
 8010c40:	ed9d 7b02 	vldr	d7, [sp, #8]
 8010c44:	f108 0801 	add.w	r8, r8, #1
 8010c48:	ecab 7b02 	vstmia	fp!, {d7}
 8010c4c:	3508      	adds	r5, #8
 8010c4e:	e7ca      	b.n	8010be6 <__kernel_rem_pio2+0x6e>
 8010c50:	9b00      	ldr	r3, [sp, #0]
 8010c52:	aa0c      	add	r2, sp, #48	; 0x30
 8010c54:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8010c58:	930b      	str	r3, [sp, #44]	; 0x2c
 8010c5a:	9ba5      	ldr	r3, [sp, #660]	; 0x294
 8010c5c:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8010c60:	9c00      	ldr	r4, [sp, #0]
 8010c62:	930a      	str	r3, [sp, #40]	; 0x28
 8010c64:	00e3      	lsls	r3, r4, #3
 8010c66:	9308      	str	r3, [sp, #32]
 8010c68:	ab98      	add	r3, sp, #608	; 0x260
 8010c6a:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8010c6e:	e953 6728 	ldrd	r6, r7, [r3, #-160]	; 0xa0
 8010c72:	f10d 0830 	add.w	r8, sp, #48	; 0x30
 8010c76:	ab70      	add	r3, sp, #448	; 0x1c0
 8010c78:	eb03 05c4 	add.w	r5, r3, r4, lsl #3
 8010c7c:	46c3      	mov	fp, r8
 8010c7e:	46a1      	mov	r9, r4
 8010c80:	f1b9 0f00 	cmp.w	r9, #0
 8010c84:	f1a5 0508 	sub.w	r5, r5, #8
 8010c88:	dc77      	bgt.n	8010d7a <__kernel_rem_pio2+0x202>
 8010c8a:	ec47 6b10 	vmov	d0, r6, r7
 8010c8e:	4650      	mov	r0, sl
 8010c90:	f7ff fec2 	bl	8010a18 <scalbn>
 8010c94:	ec57 6b10 	vmov	r6, r7, d0
 8010c98:	2200      	movs	r2, #0
 8010c9a:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 8010c9e:	ee10 0a10 	vmov	r0, s0
 8010ca2:	4639      	mov	r1, r7
 8010ca4:	f7ef fca8 	bl	80005f8 <__aeabi_dmul>
 8010ca8:	ec41 0b10 	vmov	d0, r0, r1
 8010cac:	f000 fab4 	bl	8011218 <floor>
 8010cb0:	4b7a      	ldr	r3, [pc, #488]	; (8010e9c <__kernel_rem_pio2+0x324>)
 8010cb2:	ec51 0b10 	vmov	r0, r1, d0
 8010cb6:	2200      	movs	r2, #0
 8010cb8:	f7ef fc9e 	bl	80005f8 <__aeabi_dmul>
 8010cbc:	4602      	mov	r2, r0
 8010cbe:	460b      	mov	r3, r1
 8010cc0:	4630      	mov	r0, r6
 8010cc2:	4639      	mov	r1, r7
 8010cc4:	f7ef fae0 	bl	8000288 <__aeabi_dsub>
 8010cc8:	460f      	mov	r7, r1
 8010cca:	4606      	mov	r6, r0
 8010ccc:	f7ef ff44 	bl	8000b58 <__aeabi_d2iz>
 8010cd0:	9002      	str	r0, [sp, #8]
 8010cd2:	f7ef fc27 	bl	8000524 <__aeabi_i2d>
 8010cd6:	4602      	mov	r2, r0
 8010cd8:	460b      	mov	r3, r1
 8010cda:	4630      	mov	r0, r6
 8010cdc:	4639      	mov	r1, r7
 8010cde:	f7ef fad3 	bl	8000288 <__aeabi_dsub>
 8010ce2:	f1ba 0f00 	cmp.w	sl, #0
 8010ce6:	4606      	mov	r6, r0
 8010ce8:	460f      	mov	r7, r1
 8010cea:	dd6d      	ble.n	8010dc8 <__kernel_rem_pio2+0x250>
 8010cec:	1e61      	subs	r1, r4, #1
 8010cee:	ab0c      	add	r3, sp, #48	; 0x30
 8010cf0:	9d02      	ldr	r5, [sp, #8]
 8010cf2:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8010cf6:	f1ca 0018 	rsb	r0, sl, #24
 8010cfa:	fa43 f200 	asr.w	r2, r3, r0
 8010cfe:	4415      	add	r5, r2
 8010d00:	4082      	lsls	r2, r0
 8010d02:	1a9b      	subs	r3, r3, r2
 8010d04:	aa0c      	add	r2, sp, #48	; 0x30
 8010d06:	9502      	str	r5, [sp, #8]
 8010d08:	f842 3021 	str.w	r3, [r2, r1, lsl #2]
 8010d0c:	f1ca 0217 	rsb	r2, sl, #23
 8010d10:	fa43 fb02 	asr.w	fp, r3, r2
 8010d14:	f1bb 0f00 	cmp.w	fp, #0
 8010d18:	dd65      	ble.n	8010de6 <__kernel_rem_pio2+0x26e>
 8010d1a:	9b02      	ldr	r3, [sp, #8]
 8010d1c:	2200      	movs	r2, #0
 8010d1e:	3301      	adds	r3, #1
 8010d20:	9302      	str	r3, [sp, #8]
 8010d22:	4615      	mov	r5, r2
 8010d24:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
 8010d28:	4294      	cmp	r4, r2
 8010d2a:	f300 809f 	bgt.w	8010e6c <__kernel_rem_pio2+0x2f4>
 8010d2e:	f1ba 0f00 	cmp.w	sl, #0
 8010d32:	dd07      	ble.n	8010d44 <__kernel_rem_pio2+0x1cc>
 8010d34:	f1ba 0f01 	cmp.w	sl, #1
 8010d38:	f000 80c1 	beq.w	8010ebe <__kernel_rem_pio2+0x346>
 8010d3c:	f1ba 0f02 	cmp.w	sl, #2
 8010d40:	f000 80c7 	beq.w	8010ed2 <__kernel_rem_pio2+0x35a>
 8010d44:	f1bb 0f02 	cmp.w	fp, #2
 8010d48:	d14d      	bne.n	8010de6 <__kernel_rem_pio2+0x26e>
 8010d4a:	4632      	mov	r2, r6
 8010d4c:	463b      	mov	r3, r7
 8010d4e:	4954      	ldr	r1, [pc, #336]	; (8010ea0 <__kernel_rem_pio2+0x328>)
 8010d50:	2000      	movs	r0, #0
 8010d52:	f7ef fa99 	bl	8000288 <__aeabi_dsub>
 8010d56:	4606      	mov	r6, r0
 8010d58:	460f      	mov	r7, r1
 8010d5a:	2d00      	cmp	r5, #0
 8010d5c:	d043      	beq.n	8010de6 <__kernel_rem_pio2+0x26e>
 8010d5e:	4650      	mov	r0, sl
 8010d60:	ed9f 0b4b 	vldr	d0, [pc, #300]	; 8010e90 <__kernel_rem_pio2+0x318>
 8010d64:	f7ff fe58 	bl	8010a18 <scalbn>
 8010d68:	4630      	mov	r0, r6
 8010d6a:	4639      	mov	r1, r7
 8010d6c:	ec53 2b10 	vmov	r2, r3, d0
 8010d70:	f7ef fa8a 	bl	8000288 <__aeabi_dsub>
 8010d74:	4606      	mov	r6, r0
 8010d76:	460f      	mov	r7, r1
 8010d78:	e035      	b.n	8010de6 <__kernel_rem_pio2+0x26e>
 8010d7a:	4b4a      	ldr	r3, [pc, #296]	; (8010ea4 <__kernel_rem_pio2+0x32c>)
 8010d7c:	2200      	movs	r2, #0
 8010d7e:	4630      	mov	r0, r6
 8010d80:	4639      	mov	r1, r7
 8010d82:	f7ef fc39 	bl	80005f8 <__aeabi_dmul>
 8010d86:	f7ef fee7 	bl	8000b58 <__aeabi_d2iz>
 8010d8a:	f7ef fbcb 	bl	8000524 <__aeabi_i2d>
 8010d8e:	4602      	mov	r2, r0
 8010d90:	460b      	mov	r3, r1
 8010d92:	ec43 2b18 	vmov	d8, r2, r3
 8010d96:	4b44      	ldr	r3, [pc, #272]	; (8010ea8 <__kernel_rem_pio2+0x330>)
 8010d98:	2200      	movs	r2, #0
 8010d9a:	f7ef fc2d 	bl	80005f8 <__aeabi_dmul>
 8010d9e:	4602      	mov	r2, r0
 8010da0:	460b      	mov	r3, r1
 8010da2:	4630      	mov	r0, r6
 8010da4:	4639      	mov	r1, r7
 8010da6:	f7ef fa6f 	bl	8000288 <__aeabi_dsub>
 8010daa:	f7ef fed5 	bl	8000b58 <__aeabi_d2iz>
 8010dae:	e9d5 2300 	ldrd	r2, r3, [r5]
 8010db2:	f84b 0b04 	str.w	r0, [fp], #4
 8010db6:	ec51 0b18 	vmov	r0, r1, d8
 8010dba:	f7ef fa67 	bl	800028c <__adddf3>
 8010dbe:	f109 39ff 	add.w	r9, r9, #4294967295
 8010dc2:	4606      	mov	r6, r0
 8010dc4:	460f      	mov	r7, r1
 8010dc6:	e75b      	b.n	8010c80 <__kernel_rem_pio2+0x108>
 8010dc8:	d106      	bne.n	8010dd8 <__kernel_rem_pio2+0x260>
 8010dca:	1e63      	subs	r3, r4, #1
 8010dcc:	aa0c      	add	r2, sp, #48	; 0x30
 8010dce:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8010dd2:	ea4f 5be3 	mov.w	fp, r3, asr #23
 8010dd6:	e79d      	b.n	8010d14 <__kernel_rem_pio2+0x19c>
 8010dd8:	4b34      	ldr	r3, [pc, #208]	; (8010eac <__kernel_rem_pio2+0x334>)
 8010dda:	2200      	movs	r2, #0
 8010ddc:	f7ef fe92 	bl	8000b04 <__aeabi_dcmpge>
 8010de0:	2800      	cmp	r0, #0
 8010de2:	d140      	bne.n	8010e66 <__kernel_rem_pio2+0x2ee>
 8010de4:	4683      	mov	fp, r0
 8010de6:	2200      	movs	r2, #0
 8010de8:	2300      	movs	r3, #0
 8010dea:	4630      	mov	r0, r6
 8010dec:	4639      	mov	r1, r7
 8010dee:	f7ef fe6b 	bl	8000ac8 <__aeabi_dcmpeq>
 8010df2:	2800      	cmp	r0, #0
 8010df4:	f000 80c1 	beq.w	8010f7a <__kernel_rem_pio2+0x402>
 8010df8:	1e65      	subs	r5, r4, #1
 8010dfa:	462b      	mov	r3, r5
 8010dfc:	2200      	movs	r2, #0
 8010dfe:	9900      	ldr	r1, [sp, #0]
 8010e00:	428b      	cmp	r3, r1
 8010e02:	da6d      	bge.n	8010ee0 <__kernel_rem_pio2+0x368>
 8010e04:	2a00      	cmp	r2, #0
 8010e06:	f000 808a 	beq.w	8010f1e <__kernel_rem_pio2+0x3a6>
 8010e0a:	ab0c      	add	r3, sp, #48	; 0x30
 8010e0c:	f1aa 0a18 	sub.w	sl, sl, #24
 8010e10:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8010e14:	2b00      	cmp	r3, #0
 8010e16:	f000 80ae 	beq.w	8010f76 <__kernel_rem_pio2+0x3fe>
 8010e1a:	4650      	mov	r0, sl
 8010e1c:	ed9f 0b1c 	vldr	d0, [pc, #112]	; 8010e90 <__kernel_rem_pio2+0x318>
 8010e20:	f7ff fdfa 	bl	8010a18 <scalbn>
 8010e24:	1c6b      	adds	r3, r5, #1
 8010e26:	00da      	lsls	r2, r3, #3
 8010e28:	9205      	str	r2, [sp, #20]
 8010e2a:	ec57 6b10 	vmov	r6, r7, d0
 8010e2e:	aa70      	add	r2, sp, #448	; 0x1c0
 8010e30:	f8df 9070 	ldr.w	r9, [pc, #112]	; 8010ea4 <__kernel_rem_pio2+0x32c>
 8010e34:	eb02 0ac3 	add.w	sl, r2, r3, lsl #3
 8010e38:	462c      	mov	r4, r5
 8010e3a:	f04f 0800 	mov.w	r8, #0
 8010e3e:	2c00      	cmp	r4, #0
 8010e40:	f280 80d4 	bge.w	8010fec <__kernel_rem_pio2+0x474>
 8010e44:	462c      	mov	r4, r5
 8010e46:	2c00      	cmp	r4, #0
 8010e48:	f2c0 8102 	blt.w	8011050 <__kernel_rem_pio2+0x4d8>
 8010e4c:	4b18      	ldr	r3, [pc, #96]	; (8010eb0 <__kernel_rem_pio2+0x338>)
 8010e4e:	461e      	mov	r6, r3
 8010e50:	ab70      	add	r3, sp, #448	; 0x1c0
 8010e52:	eb03 08c4 	add.w	r8, r3, r4, lsl #3
 8010e56:	1b2b      	subs	r3, r5, r4
 8010e58:	f04f 0900 	mov.w	r9, #0
 8010e5c:	f04f 0a00 	mov.w	sl, #0
 8010e60:	2700      	movs	r7, #0
 8010e62:	9306      	str	r3, [sp, #24]
 8010e64:	e0e6      	b.n	8011034 <__kernel_rem_pio2+0x4bc>
 8010e66:	f04f 0b02 	mov.w	fp, #2
 8010e6a:	e756      	b.n	8010d1a <__kernel_rem_pio2+0x1a2>
 8010e6c:	f8d8 3000 	ldr.w	r3, [r8]
 8010e70:	bb05      	cbnz	r5, 8010eb4 <__kernel_rem_pio2+0x33c>
 8010e72:	b123      	cbz	r3, 8010e7e <__kernel_rem_pio2+0x306>
 8010e74:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
 8010e78:	f8c8 3000 	str.w	r3, [r8]
 8010e7c:	2301      	movs	r3, #1
 8010e7e:	3201      	adds	r2, #1
 8010e80:	f108 0804 	add.w	r8, r8, #4
 8010e84:	461d      	mov	r5, r3
 8010e86:	e74f      	b.n	8010d28 <__kernel_rem_pio2+0x1b0>
	...
 8010e94:	3ff00000 	.word	0x3ff00000
 8010e98:	08012480 	.word	0x08012480
 8010e9c:	40200000 	.word	0x40200000
 8010ea0:	3ff00000 	.word	0x3ff00000
 8010ea4:	3e700000 	.word	0x3e700000
 8010ea8:	41700000 	.word	0x41700000
 8010eac:	3fe00000 	.word	0x3fe00000
 8010eb0:	08012440 	.word	0x08012440
 8010eb4:	1acb      	subs	r3, r1, r3
 8010eb6:	f8c8 3000 	str.w	r3, [r8]
 8010eba:	462b      	mov	r3, r5
 8010ebc:	e7df      	b.n	8010e7e <__kernel_rem_pio2+0x306>
 8010ebe:	1e62      	subs	r2, r4, #1
 8010ec0:	ab0c      	add	r3, sp, #48	; 0x30
 8010ec2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8010ec6:	f3c3 0316 	ubfx	r3, r3, #0, #23
 8010eca:	a90c      	add	r1, sp, #48	; 0x30
 8010ecc:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 8010ed0:	e738      	b.n	8010d44 <__kernel_rem_pio2+0x1cc>
 8010ed2:	1e62      	subs	r2, r4, #1
 8010ed4:	ab0c      	add	r3, sp, #48	; 0x30
 8010ed6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8010eda:	f3c3 0315 	ubfx	r3, r3, #0, #22
 8010ede:	e7f4      	b.n	8010eca <__kernel_rem_pio2+0x352>
 8010ee0:	a90c      	add	r1, sp, #48	; 0x30
 8010ee2:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 8010ee6:	3b01      	subs	r3, #1
 8010ee8:	430a      	orrs	r2, r1
 8010eea:	e788      	b.n	8010dfe <__kernel_rem_pio2+0x286>
 8010eec:	3301      	adds	r3, #1
 8010eee:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 8010ef2:	2900      	cmp	r1, #0
 8010ef4:	d0fa      	beq.n	8010eec <__kernel_rem_pio2+0x374>
 8010ef6:	9a08      	ldr	r2, [sp, #32]
 8010ef8:	f502 7218 	add.w	r2, r2, #608	; 0x260
 8010efc:	446a      	add	r2, sp
 8010efe:	3a98      	subs	r2, #152	; 0x98
 8010f00:	9208      	str	r2, [sp, #32]
 8010f02:	9a06      	ldr	r2, [sp, #24]
 8010f04:	a920      	add	r1, sp, #128	; 0x80
 8010f06:	18a2      	adds	r2, r4, r2
 8010f08:	18e3      	adds	r3, r4, r3
 8010f0a:	f104 0801 	add.w	r8, r4, #1
 8010f0e:	eb01 05c2 	add.w	r5, r1, r2, lsl #3
 8010f12:	9302      	str	r3, [sp, #8]
 8010f14:	9b02      	ldr	r3, [sp, #8]
 8010f16:	4543      	cmp	r3, r8
 8010f18:	da04      	bge.n	8010f24 <__kernel_rem_pio2+0x3ac>
 8010f1a:	461c      	mov	r4, r3
 8010f1c:	e6a2      	b.n	8010c64 <__kernel_rem_pio2+0xec>
 8010f1e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8010f20:	2301      	movs	r3, #1
 8010f22:	e7e4      	b.n	8010eee <__kernel_rem_pio2+0x376>
 8010f24:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010f26:	f853 0028 	ldr.w	r0, [r3, r8, lsl #2]
 8010f2a:	f7ef fafb 	bl	8000524 <__aeabi_i2d>
 8010f2e:	e8e5 0102 	strd	r0, r1, [r5], #8
 8010f32:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010f34:	46ab      	mov	fp, r5
 8010f36:	461c      	mov	r4, r3
 8010f38:	f04f 0900 	mov.w	r9, #0
 8010f3c:	2600      	movs	r6, #0
 8010f3e:	2700      	movs	r7, #0
 8010f40:	9b05      	ldr	r3, [sp, #20]
 8010f42:	4599      	cmp	r9, r3
 8010f44:	dd06      	ble.n	8010f54 <__kernel_rem_pio2+0x3dc>
 8010f46:	9b08      	ldr	r3, [sp, #32]
 8010f48:	e8e3 6702 	strd	r6, r7, [r3], #8
 8010f4c:	f108 0801 	add.w	r8, r8, #1
 8010f50:	9308      	str	r3, [sp, #32]
 8010f52:	e7df      	b.n	8010f14 <__kernel_rem_pio2+0x39c>
 8010f54:	e97b 2302 	ldrd	r2, r3, [fp, #-8]!
 8010f58:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 8010f5c:	f7ef fb4c 	bl	80005f8 <__aeabi_dmul>
 8010f60:	4602      	mov	r2, r0
 8010f62:	460b      	mov	r3, r1
 8010f64:	4630      	mov	r0, r6
 8010f66:	4639      	mov	r1, r7
 8010f68:	f7ef f990 	bl	800028c <__adddf3>
 8010f6c:	f109 0901 	add.w	r9, r9, #1
 8010f70:	4606      	mov	r6, r0
 8010f72:	460f      	mov	r7, r1
 8010f74:	e7e4      	b.n	8010f40 <__kernel_rem_pio2+0x3c8>
 8010f76:	3d01      	subs	r5, #1
 8010f78:	e747      	b.n	8010e0a <__kernel_rem_pio2+0x292>
 8010f7a:	ec47 6b10 	vmov	d0, r6, r7
 8010f7e:	f1ca 0000 	rsb	r0, sl, #0
 8010f82:	f7ff fd49 	bl	8010a18 <scalbn>
 8010f86:	ec57 6b10 	vmov	r6, r7, d0
 8010f8a:	4ba0      	ldr	r3, [pc, #640]	; (801120c <__kernel_rem_pio2+0x694>)
 8010f8c:	ee10 0a10 	vmov	r0, s0
 8010f90:	2200      	movs	r2, #0
 8010f92:	4639      	mov	r1, r7
 8010f94:	f7ef fdb6 	bl	8000b04 <__aeabi_dcmpge>
 8010f98:	b1f8      	cbz	r0, 8010fda <__kernel_rem_pio2+0x462>
 8010f9a:	4b9d      	ldr	r3, [pc, #628]	; (8011210 <__kernel_rem_pio2+0x698>)
 8010f9c:	2200      	movs	r2, #0
 8010f9e:	4630      	mov	r0, r6
 8010fa0:	4639      	mov	r1, r7
 8010fa2:	f7ef fb29 	bl	80005f8 <__aeabi_dmul>
 8010fa6:	f7ef fdd7 	bl	8000b58 <__aeabi_d2iz>
 8010faa:	4680      	mov	r8, r0
 8010fac:	f7ef faba 	bl	8000524 <__aeabi_i2d>
 8010fb0:	4b96      	ldr	r3, [pc, #600]	; (801120c <__kernel_rem_pio2+0x694>)
 8010fb2:	2200      	movs	r2, #0
 8010fb4:	f7ef fb20 	bl	80005f8 <__aeabi_dmul>
 8010fb8:	460b      	mov	r3, r1
 8010fba:	4602      	mov	r2, r0
 8010fbc:	4639      	mov	r1, r7
 8010fbe:	4630      	mov	r0, r6
 8010fc0:	f7ef f962 	bl	8000288 <__aeabi_dsub>
 8010fc4:	f7ef fdc8 	bl	8000b58 <__aeabi_d2iz>
 8010fc8:	1c65      	adds	r5, r4, #1
 8010fca:	ab0c      	add	r3, sp, #48	; 0x30
 8010fcc:	f10a 0a18 	add.w	sl, sl, #24
 8010fd0:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8010fd4:	f843 8025 	str.w	r8, [r3, r5, lsl #2]
 8010fd8:	e71f      	b.n	8010e1a <__kernel_rem_pio2+0x2a2>
 8010fda:	4630      	mov	r0, r6
 8010fdc:	4639      	mov	r1, r7
 8010fde:	f7ef fdbb 	bl	8000b58 <__aeabi_d2iz>
 8010fe2:	ab0c      	add	r3, sp, #48	; 0x30
 8010fe4:	4625      	mov	r5, r4
 8010fe6:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8010fea:	e716      	b.n	8010e1a <__kernel_rem_pio2+0x2a2>
 8010fec:	ab0c      	add	r3, sp, #48	; 0x30
 8010fee:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8010ff2:	f7ef fa97 	bl	8000524 <__aeabi_i2d>
 8010ff6:	4632      	mov	r2, r6
 8010ff8:	463b      	mov	r3, r7
 8010ffa:	f7ef fafd 	bl	80005f8 <__aeabi_dmul>
 8010ffe:	4642      	mov	r2, r8
 8011000:	e96a 0102 	strd	r0, r1, [sl, #-8]!
 8011004:	464b      	mov	r3, r9
 8011006:	4630      	mov	r0, r6
 8011008:	4639      	mov	r1, r7
 801100a:	f7ef faf5 	bl	80005f8 <__aeabi_dmul>
 801100e:	3c01      	subs	r4, #1
 8011010:	4606      	mov	r6, r0
 8011012:	460f      	mov	r7, r1
 8011014:	e713      	b.n	8010e3e <__kernel_rem_pio2+0x2c6>
 8011016:	e8f8 2302 	ldrd	r2, r3, [r8], #8
 801101a:	e8f6 0102 	ldrd	r0, r1, [r6], #8
 801101e:	f7ef faeb 	bl	80005f8 <__aeabi_dmul>
 8011022:	4602      	mov	r2, r0
 8011024:	460b      	mov	r3, r1
 8011026:	4648      	mov	r0, r9
 8011028:	4651      	mov	r1, sl
 801102a:	f7ef f92f 	bl	800028c <__adddf3>
 801102e:	3701      	adds	r7, #1
 8011030:	4681      	mov	r9, r0
 8011032:	468a      	mov	sl, r1
 8011034:	9b00      	ldr	r3, [sp, #0]
 8011036:	429f      	cmp	r7, r3
 8011038:	dc02      	bgt.n	8011040 <__kernel_rem_pio2+0x4c8>
 801103a:	9b06      	ldr	r3, [sp, #24]
 801103c:	429f      	cmp	r7, r3
 801103e:	ddea      	ble.n	8011016 <__kernel_rem_pio2+0x49e>
 8011040:	9a06      	ldr	r2, [sp, #24]
 8011042:	ab48      	add	r3, sp, #288	; 0x120
 8011044:	eb03 06c2 	add.w	r6, r3, r2, lsl #3
 8011048:	e9c6 9a00 	strd	r9, sl, [r6]
 801104c:	3c01      	subs	r4, #1
 801104e:	e6fa      	b.n	8010e46 <__kernel_rem_pio2+0x2ce>
 8011050:	9ba4      	ldr	r3, [sp, #656]	; 0x290
 8011052:	2b02      	cmp	r3, #2
 8011054:	dc0b      	bgt.n	801106e <__kernel_rem_pio2+0x4f6>
 8011056:	2b00      	cmp	r3, #0
 8011058:	dc39      	bgt.n	80110ce <__kernel_rem_pio2+0x556>
 801105a:	d05d      	beq.n	8011118 <__kernel_rem_pio2+0x5a0>
 801105c:	9b02      	ldr	r3, [sp, #8]
 801105e:	f003 0007 	and.w	r0, r3, #7
 8011062:	f50d 7d19 	add.w	sp, sp, #612	; 0x264
 8011066:	ecbd 8b02 	vpop	{d8}
 801106a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801106e:	9ba4      	ldr	r3, [sp, #656]	; 0x290
 8011070:	2b03      	cmp	r3, #3
 8011072:	d1f3      	bne.n	801105c <__kernel_rem_pio2+0x4e4>
 8011074:	9b05      	ldr	r3, [sp, #20]
 8011076:	9500      	str	r5, [sp, #0]
 8011078:	f503 7318 	add.w	r3, r3, #608	; 0x260
 801107c:	eb0d 0403 	add.w	r4, sp, r3
 8011080:	f5a4 74a4 	sub.w	r4, r4, #328	; 0x148
 8011084:	46a2      	mov	sl, r4
 8011086:	9b00      	ldr	r3, [sp, #0]
 8011088:	2b00      	cmp	r3, #0
 801108a:	f1aa 0a08 	sub.w	sl, sl, #8
 801108e:	dc69      	bgt.n	8011164 <__kernel_rem_pio2+0x5ec>
 8011090:	46aa      	mov	sl, r5
 8011092:	f1ba 0f01 	cmp.w	sl, #1
 8011096:	f1a4 0408 	sub.w	r4, r4, #8
 801109a:	f300 8083 	bgt.w	80111a4 <__kernel_rem_pio2+0x62c>
 801109e:	9c05      	ldr	r4, [sp, #20]
 80110a0:	ab48      	add	r3, sp, #288	; 0x120
 80110a2:	441c      	add	r4, r3
 80110a4:	2000      	movs	r0, #0
 80110a6:	2100      	movs	r1, #0
 80110a8:	2d01      	cmp	r5, #1
 80110aa:	f300 809a 	bgt.w	80111e2 <__kernel_rem_pio2+0x66a>
 80110ae:	e9dd 7848 	ldrd	r7, r8, [sp, #288]	; 0x120
 80110b2:	e9dd 564a 	ldrd	r5, r6, [sp, #296]	; 0x128
 80110b6:	f1bb 0f00 	cmp.w	fp, #0
 80110ba:	f040 8098 	bne.w	80111ee <__kernel_rem_pio2+0x676>
 80110be:	9b04      	ldr	r3, [sp, #16]
 80110c0:	e9c3 7800 	strd	r7, r8, [r3]
 80110c4:	e9c3 5602 	strd	r5, r6, [r3, #8]
 80110c8:	e9c3 0104 	strd	r0, r1, [r3, #16]
 80110cc:	e7c6      	b.n	801105c <__kernel_rem_pio2+0x4e4>
 80110ce:	9e05      	ldr	r6, [sp, #20]
 80110d0:	ab48      	add	r3, sp, #288	; 0x120
 80110d2:	441e      	add	r6, r3
 80110d4:	462c      	mov	r4, r5
 80110d6:	2000      	movs	r0, #0
 80110d8:	2100      	movs	r1, #0
 80110da:	2c00      	cmp	r4, #0
 80110dc:	da33      	bge.n	8011146 <__kernel_rem_pio2+0x5ce>
 80110de:	f1bb 0f00 	cmp.w	fp, #0
 80110e2:	d036      	beq.n	8011152 <__kernel_rem_pio2+0x5da>
 80110e4:	4602      	mov	r2, r0
 80110e6:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80110ea:	9c04      	ldr	r4, [sp, #16]
 80110ec:	e9c4 2300 	strd	r2, r3, [r4]
 80110f0:	4602      	mov	r2, r0
 80110f2:	460b      	mov	r3, r1
 80110f4:	e9dd 0148 	ldrd	r0, r1, [sp, #288]	; 0x120
 80110f8:	f7ef f8c6 	bl	8000288 <__aeabi_dsub>
 80110fc:	ae4a      	add	r6, sp, #296	; 0x128
 80110fe:	2401      	movs	r4, #1
 8011100:	42a5      	cmp	r5, r4
 8011102:	da29      	bge.n	8011158 <__kernel_rem_pio2+0x5e0>
 8011104:	f1bb 0f00 	cmp.w	fp, #0
 8011108:	d002      	beq.n	8011110 <__kernel_rem_pio2+0x598>
 801110a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 801110e:	4619      	mov	r1, r3
 8011110:	9b04      	ldr	r3, [sp, #16]
 8011112:	e9c3 0102 	strd	r0, r1, [r3, #8]
 8011116:	e7a1      	b.n	801105c <__kernel_rem_pio2+0x4e4>
 8011118:	9c05      	ldr	r4, [sp, #20]
 801111a:	ab48      	add	r3, sp, #288	; 0x120
 801111c:	441c      	add	r4, r3
 801111e:	2000      	movs	r0, #0
 8011120:	2100      	movs	r1, #0
 8011122:	2d00      	cmp	r5, #0
 8011124:	da09      	bge.n	801113a <__kernel_rem_pio2+0x5c2>
 8011126:	f1bb 0f00 	cmp.w	fp, #0
 801112a:	d002      	beq.n	8011132 <__kernel_rem_pio2+0x5ba>
 801112c:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8011130:	4619      	mov	r1, r3
 8011132:	9b04      	ldr	r3, [sp, #16]
 8011134:	e9c3 0100 	strd	r0, r1, [r3]
 8011138:	e790      	b.n	801105c <__kernel_rem_pio2+0x4e4>
 801113a:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 801113e:	f7ef f8a5 	bl	800028c <__adddf3>
 8011142:	3d01      	subs	r5, #1
 8011144:	e7ed      	b.n	8011122 <__kernel_rem_pio2+0x5aa>
 8011146:	e976 2302 	ldrd	r2, r3, [r6, #-8]!
 801114a:	f7ef f89f 	bl	800028c <__adddf3>
 801114e:	3c01      	subs	r4, #1
 8011150:	e7c3      	b.n	80110da <__kernel_rem_pio2+0x562>
 8011152:	4602      	mov	r2, r0
 8011154:	460b      	mov	r3, r1
 8011156:	e7c8      	b.n	80110ea <__kernel_rem_pio2+0x572>
 8011158:	e8f6 2302 	ldrd	r2, r3, [r6], #8
 801115c:	f7ef f896 	bl	800028c <__adddf3>
 8011160:	3401      	adds	r4, #1
 8011162:	e7cd      	b.n	8011100 <__kernel_rem_pio2+0x588>
 8011164:	e9da 8900 	ldrd	r8, r9, [sl]
 8011168:	e9da 6702 	ldrd	r6, r7, [sl, #8]
 801116c:	9b00      	ldr	r3, [sp, #0]
 801116e:	3b01      	subs	r3, #1
 8011170:	9300      	str	r3, [sp, #0]
 8011172:	4632      	mov	r2, r6
 8011174:	463b      	mov	r3, r7
 8011176:	4640      	mov	r0, r8
 8011178:	4649      	mov	r1, r9
 801117a:	f7ef f887 	bl	800028c <__adddf3>
 801117e:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8011182:	4602      	mov	r2, r0
 8011184:	460b      	mov	r3, r1
 8011186:	4640      	mov	r0, r8
 8011188:	4649      	mov	r1, r9
 801118a:	f7ef f87d 	bl	8000288 <__aeabi_dsub>
 801118e:	4632      	mov	r2, r6
 8011190:	463b      	mov	r3, r7
 8011192:	f7ef f87b 	bl	800028c <__adddf3>
 8011196:	ed9d 7b06 	vldr	d7, [sp, #24]
 801119a:	e9ca 0102 	strd	r0, r1, [sl, #8]
 801119e:	ed8a 7b00 	vstr	d7, [sl]
 80111a2:	e770      	b.n	8011086 <__kernel_rem_pio2+0x50e>
 80111a4:	e9d4 8900 	ldrd	r8, r9, [r4]
 80111a8:	e9d4 6702 	ldrd	r6, r7, [r4, #8]
 80111ac:	4640      	mov	r0, r8
 80111ae:	4632      	mov	r2, r6
 80111b0:	463b      	mov	r3, r7
 80111b2:	4649      	mov	r1, r9
 80111b4:	f7ef f86a 	bl	800028c <__adddf3>
 80111b8:	e9cd 0100 	strd	r0, r1, [sp]
 80111bc:	4602      	mov	r2, r0
 80111be:	460b      	mov	r3, r1
 80111c0:	4640      	mov	r0, r8
 80111c2:	4649      	mov	r1, r9
 80111c4:	f7ef f860 	bl	8000288 <__aeabi_dsub>
 80111c8:	4632      	mov	r2, r6
 80111ca:	463b      	mov	r3, r7
 80111cc:	f7ef f85e 	bl	800028c <__adddf3>
 80111d0:	ed9d 7b00 	vldr	d7, [sp]
 80111d4:	e9c4 0102 	strd	r0, r1, [r4, #8]
 80111d8:	ed84 7b00 	vstr	d7, [r4]
 80111dc:	f10a 3aff 	add.w	sl, sl, #4294967295
 80111e0:	e757      	b.n	8011092 <__kernel_rem_pio2+0x51a>
 80111e2:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 80111e6:	f7ef f851 	bl	800028c <__adddf3>
 80111ea:	3d01      	subs	r5, #1
 80111ec:	e75c      	b.n	80110a8 <__kernel_rem_pio2+0x530>
 80111ee:	9b04      	ldr	r3, [sp, #16]
 80111f0:	9a04      	ldr	r2, [sp, #16]
 80111f2:	601f      	str	r7, [r3, #0]
 80111f4:	f108 4400 	add.w	r4, r8, #2147483648	; 0x80000000
 80111f8:	605c      	str	r4, [r3, #4]
 80111fa:	609d      	str	r5, [r3, #8]
 80111fc:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 8011200:	60d3      	str	r3, [r2, #12]
 8011202:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8011206:	6110      	str	r0, [r2, #16]
 8011208:	6153      	str	r3, [r2, #20]
 801120a:	e727      	b.n	801105c <__kernel_rem_pio2+0x4e4>
 801120c:	41700000 	.word	0x41700000
 8011210:	3e700000 	.word	0x3e700000
 8011214:	00000000 	.word	0x00000000

08011218 <floor>:
 8011218:	ec51 0b10 	vmov	r0, r1, d0
 801121c:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8011220:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011224:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
 8011228:	2e13      	cmp	r6, #19
 801122a:	ee10 5a10 	vmov	r5, s0
 801122e:	ee10 8a10 	vmov	r8, s0
 8011232:	460c      	mov	r4, r1
 8011234:	dc31      	bgt.n	801129a <floor+0x82>
 8011236:	2e00      	cmp	r6, #0
 8011238:	da14      	bge.n	8011264 <floor+0x4c>
 801123a:	a333      	add	r3, pc, #204	; (adr r3, 8011308 <floor+0xf0>)
 801123c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8011240:	f7ef f824 	bl	800028c <__adddf3>
 8011244:	2200      	movs	r2, #0
 8011246:	2300      	movs	r3, #0
 8011248:	f7ef fc66 	bl	8000b18 <__aeabi_dcmpgt>
 801124c:	b138      	cbz	r0, 801125e <floor+0x46>
 801124e:	2c00      	cmp	r4, #0
 8011250:	da53      	bge.n	80112fa <floor+0xe2>
 8011252:	f024 4400 	bic.w	r4, r4, #2147483648	; 0x80000000
 8011256:	4325      	orrs	r5, r4
 8011258:	d052      	beq.n	8011300 <floor+0xe8>
 801125a:	4c2d      	ldr	r4, [pc, #180]	; (8011310 <floor+0xf8>)
 801125c:	2500      	movs	r5, #0
 801125e:	4621      	mov	r1, r4
 8011260:	4628      	mov	r0, r5
 8011262:	e024      	b.n	80112ae <floor+0x96>
 8011264:	4f2b      	ldr	r7, [pc, #172]	; (8011314 <floor+0xfc>)
 8011266:	4137      	asrs	r7, r6
 8011268:	ea01 0307 	and.w	r3, r1, r7
 801126c:	4303      	orrs	r3, r0
 801126e:	d01e      	beq.n	80112ae <floor+0x96>
 8011270:	a325      	add	r3, pc, #148	; (adr r3, 8011308 <floor+0xf0>)
 8011272:	e9d3 2300 	ldrd	r2, r3, [r3]
 8011276:	f7ef f809 	bl	800028c <__adddf3>
 801127a:	2200      	movs	r2, #0
 801127c:	2300      	movs	r3, #0
 801127e:	f7ef fc4b 	bl	8000b18 <__aeabi_dcmpgt>
 8011282:	2800      	cmp	r0, #0
 8011284:	d0eb      	beq.n	801125e <floor+0x46>
 8011286:	2c00      	cmp	r4, #0
 8011288:	bfbe      	ittt	lt
 801128a:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 801128e:	4133      	asrlt	r3, r6
 8011290:	18e4      	addlt	r4, r4, r3
 8011292:	ea24 0407 	bic.w	r4, r4, r7
 8011296:	2500      	movs	r5, #0
 8011298:	e7e1      	b.n	801125e <floor+0x46>
 801129a:	2e33      	cmp	r6, #51	; 0x33
 801129c:	dd0b      	ble.n	80112b6 <floor+0x9e>
 801129e:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 80112a2:	d104      	bne.n	80112ae <floor+0x96>
 80112a4:	ee10 2a10 	vmov	r2, s0
 80112a8:	460b      	mov	r3, r1
 80112aa:	f7ee ffef 	bl	800028c <__adddf3>
 80112ae:	ec41 0b10 	vmov	d0, r0, r1
 80112b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80112b6:	f2a3 4313 	subw	r3, r3, #1043	; 0x413
 80112ba:	f04f 37ff 	mov.w	r7, #4294967295
 80112be:	40df      	lsrs	r7, r3
 80112c0:	4238      	tst	r0, r7
 80112c2:	d0f4      	beq.n	80112ae <floor+0x96>
 80112c4:	a310      	add	r3, pc, #64	; (adr r3, 8011308 <floor+0xf0>)
 80112c6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80112ca:	f7ee ffdf 	bl	800028c <__adddf3>
 80112ce:	2200      	movs	r2, #0
 80112d0:	2300      	movs	r3, #0
 80112d2:	f7ef fc21 	bl	8000b18 <__aeabi_dcmpgt>
 80112d6:	2800      	cmp	r0, #0
 80112d8:	d0c1      	beq.n	801125e <floor+0x46>
 80112da:	2c00      	cmp	r4, #0
 80112dc:	da0a      	bge.n	80112f4 <floor+0xdc>
 80112de:	2e14      	cmp	r6, #20
 80112e0:	d101      	bne.n	80112e6 <floor+0xce>
 80112e2:	3401      	adds	r4, #1
 80112e4:	e006      	b.n	80112f4 <floor+0xdc>
 80112e6:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 80112ea:	2301      	movs	r3, #1
 80112ec:	40b3      	lsls	r3, r6
 80112ee:	441d      	add	r5, r3
 80112f0:	45a8      	cmp	r8, r5
 80112f2:	d8f6      	bhi.n	80112e2 <floor+0xca>
 80112f4:	ea25 0507 	bic.w	r5, r5, r7
 80112f8:	e7b1      	b.n	801125e <floor+0x46>
 80112fa:	2500      	movs	r5, #0
 80112fc:	462c      	mov	r4, r5
 80112fe:	e7ae      	b.n	801125e <floor+0x46>
 8011300:	f04f 4400 	mov.w	r4, #2147483648	; 0x80000000
 8011304:	e7ab      	b.n	801125e <floor+0x46>
 8011306:	bf00      	nop
 8011308:	8800759c 	.word	0x8800759c
 801130c:	7e37e43c 	.word	0x7e37e43c
 8011310:	bff00000 	.word	0xbff00000
 8011314:	000fffff 	.word	0x000fffff

08011318 <_init>:
 8011318:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801131a:	bf00      	nop
 801131c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801131e:	bc08      	pop	{r3}
 8011320:	469e      	mov	lr, r3
 8011322:	4770      	bx	lr

08011324 <_fini>:
 8011324:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011326:	bf00      	nop
 8011328:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801132a:	bc08      	pop	{r3}
 801132c:	469e      	mov	lr, r3
 801132e:	4770      	bx	lr
