/**
 * MDP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ImagePredictionResponse model module.
 * @module model/ImagePredictionResponse
 * @version 1.0.0
 */
class ImagePredictionResponse {
    /**
     * Constructs a new <code>ImagePredictionResponse</code>.
     * @alias module:model/ImagePredictionResponse
     * @param imageId {Number} 
     * @param obstacleId {Number} 
     */
    constructor(imageId, obstacleId) { 
        
        ImagePredictionResponse.initialize(this, imageId, obstacleId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, imageId, obstacleId) { 
        obj['image_id'] = imageId;
        obj['obstacle_id'] = obstacleId;
    }

    /**
     * Constructs a <code>ImagePredictionResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ImagePredictionResponse} obj Optional instance to populate.
     * @return {module:model/ImagePredictionResponse} The populated <code>ImagePredictionResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ImagePredictionResponse();

            if (data.hasOwnProperty('image_id')) {
                obj['image_id'] = ApiClient.convertToType(data['image_id'], 'Number');
            }
            if (data.hasOwnProperty('obstacle_id')) {
                obj['obstacle_id'] = ApiClient.convertToType(data['obstacle_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ImagePredictionResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ImagePredictionResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ImagePredictionResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

ImagePredictionResponse.RequiredProperties = ["image_id", "obstacle_id"];

/**
 * @member {Number} image_id
 */
ImagePredictionResponse.prototype['image_id'] = undefined;

/**
 * @member {Number} obstacle_id
 */
ImagePredictionResponse.prototype['obstacle_id'] = undefined;






export default ImagePredictionResponse;

