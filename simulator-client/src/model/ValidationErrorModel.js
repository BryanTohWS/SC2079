/**
 * MDP API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ErrorContext from './ErrorContext';
import ErrorType from './ErrorType';
import Location from './Location';
import Message from './Message';

/**
 * The ValidationErrorModel model module.
 * @module model/ValidationErrorModel
 * @version 1.0.0
 */
class ValidationErrorModel {
    /**
     * Constructs a new <code>ValidationErrorModel</code>.
     * @alias module:model/ValidationErrorModel
     */
    constructor() { 
        
        ValidationErrorModel.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ValidationErrorModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ValidationErrorModel} obj Optional instance to populate.
     * @return {module:model/ValidationErrorModel} The populated <code>ValidationErrorModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ValidationErrorModel();

            if (data.hasOwnProperty('ctx')) {
                obj['ctx'] = ErrorContext.constructFromObject(data['ctx']);
            }
            if (data.hasOwnProperty('loc')) {
                obj['loc'] = Location.constructFromObject(data['loc']);
            }
            if (data.hasOwnProperty('msg')) {
                obj['msg'] = Message.constructFromObject(data['msg']);
            }
            if (data.hasOwnProperty('type_')) {
                obj['type_'] = ErrorType.constructFromObject(data['type_']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ValidationErrorModel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ValidationErrorModel</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ctx`
        if (data['ctx']) { // data not null
          ErrorContext.validateJSON(data['ctx']);
        }
        // validate the optional field `loc`
        if (data['loc']) { // data not null
          Location.validateJSON(data['loc']);
        }
        // validate the optional field `msg`
        if (data['msg']) { // data not null
          Message.validateJSON(data['msg']);
        }
        // validate the optional field `type_`
        if (data['type_']) { // data not null
          ErrorType.validateJSON(data['type_']);
        }

        return true;
    }


}



/**
 * @member {module:model/ErrorContext} ctx
 */
ValidationErrorModel.prototype['ctx'] = undefined;

/**
 * @member {module:model/Location} loc
 */
ValidationErrorModel.prototype['loc'] = undefined;

/**
 * @member {module:model/Message} msg
 */
ValidationErrorModel.prototype['msg'] = undefined;

/**
 * @member {module:model/ErrorType} type_
 */
ValidationErrorModel.prototype['type_'] = undefined;






export default ValidationErrorModel;

